{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Ansible Meta Runtime Schema",
  "description": "See https://docs.ansible.com/ansible/devel/dev_guide/developing_collections_structure.html#meta-directory",
  "type": "object",
  "additionalProperties": false,
  "examples": [
    "**/meta/runtime.yml"
  ],
  "definitions": {
      "Redirect": {
         "type": "object",
         "properties": {
             "redirect": {
                 "type": "string"
             }
         }
      },
      "Metadata": {
          "type": "object",
          "properties": {
              "metadata": {
                  "type": "object",
                  "properties": {
                      "extend_group": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              }
          }
      },
      "ActionGroup": {
        "type": "array",
        "items": {
            "oneOf" : [
                {"type": "string"},
                {"$ref": "#/definitions/Metadata"}
            ]
        }
     }
  },
  "properties": {
    "requires_ansible": {
      "type": "string",
      "title": "The version of Ansible Core (ansible-core) required to use the collection. Multiple versions can be separated with a comma.",
      "examples": [">=2.10,<2.11"]
    },
    "plugin_routing": {
      "title": "Plugin Routing",
      "markdownDescription": "Content in a collection that Ansible needs to load from another location or that has been deprecated/removed. The top level keys of plugin_routing are types of plugins, with individual plugin names as subkeys. To define a new location for a plugin, set the redirect field to another name. To deprecate a plugin, use the deprecation field to provide a custom warning message and the removal version or date. If the plugin has been renamed or moved to a new location, the redirect field should also be provided. If a plugin is being removed entirely, tombstone can be used for the fatal error message and removal version or date.",
      "type": "object",
      "properties": {
          "inventory": {},
          "modules": {},
          "module_utils": {}
      }
    },
    "import_redirection": {
      "title": "Import Redirection",
      "description": "A mapping of names for Python import statements and their redirected locations.",
      "type": "object",
      "additionalProperties" : {
        "$ref" : "#/definitions/Redirect"
      }
    },
    "action_groups": {
        "type": "object",
        "title": "Action Groups",
        "description": "A mapping of groups and the list of action plugin and module names they contain. They may also have a special ‘metadata’ dictionary in the list, which can be used to include actions from other groups.",
        "additionalProperties" : {
            "$ref" : "#/definitions/ActionGroup"
        }
    }
  }
}
