name: tox

on:
  create:  # is used for publishing to PyPI and TestPyPI
    tags:  # any tag regardless of its name, no branches
    - "**"
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
    - "master"
  pull_request:
  release:
    types:
    - published  # It seems that you can publish directly without creating
    - prereleased
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC
  # Run every Friday at 18:02 UTC
  # https://crontab.guru/#2_18_*_*_5
  # - cron: 2 18 * * 5

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run validate-yaml-schema action
      # forked from nwisbeta/validate-yaml-schema@v1.0.3
      uses: ssbarnea/validate-yaml-schema@v1.0.4
      id: validate
    - name: Display invalid files
      run: echo "${{ steps.validate.invalidFiles }}"
      if: ${{ always() }}
  npm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  tox:
    name: >-
      ${{ matrix.env.TOXENV }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.8
        os:
        - ubuntu-20.04
        env:
        - TOXENV: py,lint
    env:
      TOX_PARALLEL_NO_SPINNER: 1
      FORCE_COLOR: 1

    steps:
    - name: Check out src from Git
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # needed by setuptools-scm

    # https://github.com/actions/cache
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install test deps
      run: |
        npm install
        python3 -m pip install --upgrade tox

    - name: Log installed dists
      run: >-
        python3 -m pip freeze --all

    - name: >-
        Initialize tox envs
      run: >-
        python3 -m tox --notest --skip-missing-interpreters false -vv
      env: ${{ matrix.env }}

    - name: Test with tox
      run: |
        python3 -m tox
      env: ${{ matrix.env }}
