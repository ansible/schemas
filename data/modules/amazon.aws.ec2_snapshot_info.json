{
    "amazon.aws.ec2_snapshot_info": {
        "doc": {
            "author": "Rob White (@wimnat)",
            "collection": "amazon.aws",
            "description": [
                "Gather information about ec2 volume snapshots in AWS.",
                "This module was called C(ec2_snapshot_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/amazon/aws/plugins/modules/ec2_snapshot_info.py",
            "has_action": false,
            "module": "ec2_snapshot_info",
            "notes": [
                "By default, the module will return all snapshots, including public ones. To limit results to snapshots owned by the account use the filter 'owner-id'.",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "filters": {
                    "default": {},
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html) for possible filters. Filter names and values are case sensitive."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "owner_ids": {
                    "default": [],
                    "description": [
                        "If you specify one or more snapshot owners, only snapshots from the specified owners and for which you have access are returned."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "restorable_by_user_ids": {
                    "default": [],
                    "description": [
                        "If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "snapshot_ids": {
                    "default": [],
                    "description": [
                        "If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Gather information about ec2 volume snapshots in AWS"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all snapshots, including public ones\n- ec2_snapshot_info:\n\n# Gather information about all snapshots owned by the account 0123456789\n- ec2_snapshot_info:\n    filters:\n      owner-id: 0123456789\n\n# Or alternatively...\n- ec2_snapshot_info:\n    owner_ids:\n      - 0123456789\n\n# Gather information about a particular snapshot using ID\n- ec2_snapshot_info:\n    filters:\n      snapshot-id: snap-00112233\n\n# Or alternatively...\n- ec2_snapshot_info:\n    snapshot_ids:\n      - snap-00112233\n\n# Gather information about any snapshot with a tag key Name and value Example\n- ec2_snapshot_info:\n    filters:\n      \"tag:Name\": Example\n\n# Gather information about any snapshot with an error status\n- ec2_snapshot_info:\n    filters:\n      status: error\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data_encryption_key_id": {
                "description": "The data encryption key identifier for the snapshot. This value is a unique identifier that     corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy.",
                "returned": "always",
                "sample": "arn:aws:kms:ap-southeast-2:012345678900:key/74c9742a-a1b2-45cb-b3fe-abcdef123456",
                "type": "str"
            },
            "description": {
                "description": "The description for the snapshot.",
                "returned": "always",
                "sample": "My important backup",
                "type": "str"
            },
            "encrypted": {
                "description": "Indicates whether the snapshot is encrypted.",
                "returned": "always",
                "sample": "True",
                "type": "bool"
            },
            "kms_key_id": {
                "description": "The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to     protect the volume encryption key for the parent volume.",
                "returned": "always",
                "sample": "74c9742a-a1b2-45cb-b3fe-abcdef123456",
                "type": "str"
            },
            "owner_alias": {
                "description": "The AWS account alias (for example, amazon, self) or AWS account ID that owns the snapshot.",
                "returned": "always",
                "sample": "033440102211",
                "type": "str"
            },
            "owner_id": {
                "description": "The AWS account ID of the EBS snapshot owner.",
                "returned": "always",
                "sample": "099720109477",
                "type": "str"
            },
            "progress": {
                "description": "The progress of the snapshot, as a percentage.",
                "returned": "always",
                "sample": "100%",
                "type": "str"
            },
            "snapshot_id": {
                "description": "The ID of the snapshot. Each snapshot receives a unique identifier when it is created.",
                "returned": "always",
                "sample": "snap-01234567",
                "type": "str"
            },
            "start_time": {
                "description": "The time stamp when the snapshot was initiated.",
                "returned": "always",
                "sample": "2015-02-12T02:14:02+00:00",
                "type": "str"
            },
            "state": {
                "description": "The snapshot state (completed, pending or error).",
                "returned": "always",
                "sample": "completed",
                "type": "str"
            },
            "state_message": {
                "description": "Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred.",
                "returned": "always",
                "sample": null,
                "type": "str"
            },
            "tags": {
                "description": "Any tags assigned to the snapshot.",
                "returned": "always",
                "sample": "{ 'my_tag_key': 'my_tag_value' }",
                "type": "dict"
            },
            "volume_id": {
                "description": "The ID of the volume that was used to create the snapshot.",
                "returned": "always",
                "sample": "vol-01234567",
                "type": "str"
            },
            "volume_size": {
                "description": "The size of the volume, in GiB.",
                "returned": "always",
                "sample": 8,
                "type": "int"
            }
        }
    }
}
