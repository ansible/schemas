{
    "community.aws.route53_facts": {
        "doc": {
            "author": "Karen Cheng (@Etherdaemon)",
            "collection": "community.aws",
            "description": [
                "Gets various details related to Route53 zone, record set or health check details.",
                "This module was called C(route53_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/route53_facts.py",
            "has_action": false,
            "module": "route53_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "change_id": {
                    "description": [
                        "The ID of the change batch request.",
                        "The value that you specify here is the value that ChangeResourceRecordSets returned in the Id element when you submitted the request.",
                        "Required if I(query=change)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "delegation_set_id": {
                    "description": [
                        "The DNS Zone delegation set ID."
                    ],
                    "required": false,
                    "type": "str"
                },
                "dns_name": {
                    "description": [
                        "The first name in the lexicographic ordering of domain names that you want the list_command to start listing from."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "health_check_id": {
                    "description": [
                        "The ID of the health check.",
                        "Required if C(query) is set to C(health_check) and C(health_check_method) is set to C(details) or C(status) or C(failure_reason)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "health_check_method": {
                    "choices": [
                        "list",
                        "details",
                        "status",
                        "failure_reason",
                        "count",
                        "tags"
                    ],
                    "default": "list",
                    "description": [
                        "This is used in conjunction with query: health_check. It allows for listing details, counts or tags of various health check details."
                    ],
                    "required": false,
                    "type": "str"
                },
                "hosted_zone_id": {
                    "description": [
                        "The Hosted Zone ID of the DNS zone.",
                        "Required if I(query) is set to I(hosted_zone) and I(hosted_zone_method) is set to I(details).",
                        "Required if I(query) is set to I(record_sets)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "hosted_zone_method": {
                    "choices": [
                        "details",
                        "list",
                        "list_by_name",
                        "count",
                        "tags"
                    ],
                    "default": "list",
                    "description": [
                        "This is used in conjunction with query: hosted_zone. It allows for listing details, counts or tags of various hosted zone details."
                    ],
                    "required": false,
                    "type": "str"
                },
                "max_items": {
                    "description": [
                        "Maximum number of items to return for various get/list requests."
                    ],
                    "required": false,
                    "type": "str"
                },
                "next_marker": {
                    "description": [
                        "Some requests such as list_command: hosted_zones will return a maximum number of entries - EG 100 or the number specified by I(max_items). If the number of entries exceeds this maximum another request can be sent using the NextMarker entry from the first response to get the next page of results."
                    ],
                    "required": false,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "query": {
                    "choices": [
                        "change",
                        "checker_ip_range",
                        "health_check",
                        "hosted_zone",
                        "record_sets",
                        "reusable_delegation_set"
                    ],
                    "description": [
                        "Specifies the query action to take."
                    ],
                    "required": true,
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "resource_id": {
                    "aliases": [
                        "resource_ids"
                    ],
                    "description": [
                        "The ID/s of the specified resource/s.",
                        "Required if I(query=health_check) and I(health_check_method=tags).",
                        "Required if I(query=hosted_zone) and I(hosted_zone_method=tags)."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "start_record_name": {
                    "description": [
                        "The first name in the lexicographic ordering of domain names that you want the list_command: record_sets to start listing from."
                    ],
                    "required": false,
                    "type": "str"
                },
                "type": {
                    "choices": [
                        "A",
                        "CNAME",
                        "MX",
                        "AAAA",
                        "TXT",
                        "PTR",
                        "SRV",
                        "SPF",
                        "CAA",
                        "NS"
                    ],
                    "description": [
                        "The type of DNS record."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "boto"
            ],
            "short_description": "Retrieves route53 details using AWS methods",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Simple example of listing all hosted zones\n- name: List all hosted zones\n  community.aws.route53_info:\n    query: hosted_zone\n  register: hosted_zones\n\n# Getting a count of hosted zones\n- name: Return a count of all hosted zones\n  community.aws.route53_info:\n    query: hosted_zone\n    hosted_zone_method: count\n  register: hosted_zone_count\n\n- name: List the first 20 resource record sets in a given hosted zone\n  community.aws.route53_info:\n    profile: account_name\n    query: record_sets\n    hosted_zone_id: ZZZ1111112222\n    max_items: 20\n  register: record_sets\n\n- name: List first 20 health checks\n  community.aws.route53_info:\n    query: health_check\n    health_check_method: list\n    max_items: 20\n  register: health_checks\n\n- name: Get health check last failure_reason\n  community.aws.route53_info:\n    query: health_check\n    health_check_method: failure_reason\n    health_check_id: 00000000-1111-2222-3333-12345678abcd\n  register: health_check_failure_reason\n\n- name: Retrieve reusable delegation set details\n  community.aws.route53_info:\n    query: reusable_delegation_set\n    delegation_set_id: delegation id\n  register: delegation_sets\n\n- name: setup of example for using next_marker\n  community.aws.route53_info:\n    query: hosted_zone\n    max_items: 1\n  register: first_info\n\n- name: example for using next_marker\n  community.aws.route53_info:\n    query: hosted_zone\n    next_marker: \"{{ first_info.NextMarker }}\"\n    max_items: 1\n  when: \"{{ 'NextMarker' in first_info }}\"\n\n- name: retrieve host entries starting with host1.workshop.test.io\n  block:\n    - name: grab zone id\n      community.aws.route53_zone:\n        zone: \"test.io\"\n      register: AWSINFO\n\n    - name: grab Route53 record information\n      community.aws.route53_info:\n        type: A\n        query: record_sets\n        hosted_zone_id: \"{{ AWSINFO.zone_id }}\"\n        start_record_name: \"host1.workshop.test.io\"\n      register: RECORDS\n",
        "metadata": null,
        "return": null
    }
}
