{
    "cisco.meraki.meraki_switch_access_list": {
        "doc": {
            "author": "Kevin Breit (@kbreit)",
            "collection": "cisco.meraki",
            "description": [
                "Configure and query information about access lists on Meraki switches within the Meraki cloud."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_switch_access_list.py",
            "has_action": false,
            "module": "meraki_ms_access_list",
            "notes": [
                "Some of the options are likely only used for developers within Meraki.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "net_id": {
                    "description": [
                        "ID of network which configuration is applied to."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "aliases": [
                        "network"
                    ],
                    "description": [
                        "Name of network which configuration is applied to."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "rules": {
                    "description": [
                        "List of access control rules."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "comment": {
                            "description": [
                                "Description of the rule."
                            ],
                            "type": "str"
                        },
                        "dst_cidr": {
                            "description": [
                                "CIDR notation of source IP address to match."
                            ],
                            "type": "str"
                        },
                        "dst_port": {
                            "description": [
                                "Port number of destination port to match.",
                                "May be a port number or 'any'."
                            ],
                            "type": "str"
                        },
                        "ip_version": {
                            "choices": [
                                "any",
                                "ipv4",
                                "ipv6"
                            ],
                            "description": [
                                "Type of IP packets to match."
                            ],
                            "type": "str"
                        },
                        "policy": {
                            "choices": [
                                "allow",
                                "deny"
                            ],
                            "description": [
                                "Action to take on matching traffic."
                            ],
                            "type": "str"
                        },
                        "protocol": {
                            "choices": [
                                "any",
                                "tcp",
                                "udp"
                            ],
                            "description": [
                                "Type of protocol to match."
                            ],
                            "type": "str"
                        },
                        "src_cidr": {
                            "description": [
                                "CIDR notation of source IP address to match."
                            ],
                            "type": "str"
                        },
                        "src_port": {
                            "description": [
                                "Port number of source port to match.",
                                "May be a port number or 'any'."
                            ],
                            "type": "str"
                        },
                        "vlan": {
                            "description": [
                                "Incoming traffic VLAN.",
                                "May be any port between 1-4095 or 'any'."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "query",
                    "description": [
                        "Specifies whether object should be queried, created/modified, or removed."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage access lists for Meraki switches in the Meraki cloud",
            "version_added": "0.1.0",
            "version_added_collection": "cisco.meraki"
        },
        "examples": "\n- name: Set access list\n  meraki_switch_access_list:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_name: YourNet\n    rules:\n      - comment: Fake rule\n        policy: allow\n        ip_version: ipv4\n        protocol: udp\n        src_cidr: 192.0.1.0/24\n        src_port: \"4242\"\n        dst_cidr: 1.2.3.4/32\n        dst_port: \"80\"\n        vlan: \"100\"\n  delegate_to: localhost\n\n- name: Query access lists\n  meraki_switch_access_list:\n    auth_key: abc123\n    state: query\n    org_name: YourOrg\n    net_name: YourNet\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "rules": {
                        "contains": {
                            "comment": {
                                "description": [
                                    "Description of the rule."
                                ],
                                "returned": "success",
                                "sample": "User rule",
                                "type": "str"
                            },
                            "dst_cidr": {
                                "description": [
                                    "CIDR notation of source IP address to match."
                                ],
                                "returned": "success",
                                "sample": "1.2.3.4/32",
                                "type": "str"
                            },
                            "dst_port": {
                                "description": [
                                    "Port number of destination port to match."
                                ],
                                "returned": "success",
                                "sample": 80,
                                "type": "str"
                            },
                            "ip_version": {
                                "description": [
                                    "Type of IP packets to match."
                                ],
                                "returned": "success",
                                "sample": "ipv4",
                                "type": "str"
                            },
                            "policy": {
                                "description": [
                                    "Action to take on matching traffic."
                                ],
                                "returned": "success",
                                "sample": "allow",
                                "type": "str"
                            },
                            "protocol": {
                                "description": [
                                    "Type of protocol to match."
                                ],
                                "returned": "success",
                                "sample": "udp",
                                "type": "str"
                            },
                            "src_cidr": {
                                "description": [
                                    "CIDR notation of source IP address to match."
                                ],
                                "returned": "success",
                                "sample": "192.0.1.0/24",
                                "type": "str"
                            },
                            "src_port": {
                                "description": [
                                    "Port number of source port to match."
                                ],
                                "returned": "success",
                                "sample": 1234,
                                "type": "str"
                            },
                            "vlan": {
                                "description": [
                                    "Incoming traffic VLAN."
                                ],
                                "returned": "success",
                                "sample": 100,
                                "type": "str"
                            }
                        },
                        "description": [
                            "List of access control rules."
                        ],
                        "type": "list"
                    }
                },
                "description": "List of administrators.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
