{
    "community.general.telegram": {
        "doc": {
            "author": [
                "Artem Feofanov (@tyouxa)",
                "Nikolai Lomov (@lomserman)"
            ],
            "collection": "community.general",
            "description": [
                "Send notifications via telegram bot, to a verified group or user.",
                "Also, the user may try to use any other telegram bot API method, if you specify I(api_method) argument."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/telegram.py",
            "has_action": false,
            "module": "telegram",
            "notes": [
                "You will require a telegram account and create telegram bot to use this module.",
                "The options I(msg), I(msg_format) and I(chat_id) have been deprecated and will be removed in community.general 4.0.0. Use the corresponding variables in I(api_args) instead. See the examples for how that works."
            ],
            "options": {
                "api_args": {
                    "description": [
                        "Any parameters for the method.",
                        "For reference to default method, C(SendMessage), see U(https://core.telegram.org/bots/api#sendmessage)."
                    ],
                    "type": "dict",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "api_method": {
                    "default": "SendMessage",
                    "description": [
                        "Bot API method.",
                        "For reference, see U(https://core.telegram.org/bots/api)."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "chat_id": {
                    "description": [
                        "(Deprecated) Telegram group or user chat_id."
                    ],
                    "type": "str"
                },
                "msg": {
                    "description": [
                        "(Deprecated) What message you wish to send."
                    ],
                    "type": "str"
                },
                "msg_format": {
                    "choices": [
                        "plain",
                        "markdown",
                        "MarkdownV2",
                        "html"
                    ],
                    "default": "plain",
                    "description": [
                        "(Deprecated) Message format. Formatting options C(markdown), C(MarkdownV2), and C(html) described in Telegram API docs (https://core.telegram.org/bots/api#formatting-options). If option C(plain) set, message will not be formatted."
                    ],
                    "type": "str"
                },
                "token": {
                    "description": [
                        "Token identifying your telegram bot."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "short_description": "module for sending notifications via telegram"
        },
        "examples": "\n\n- name: Send notify to Telegram\n  community.general.telegram:\n    token: '9999999:XXXXXXXXXXXXXXXXXXXXXXX'\n    api_args:\n      chat_id: 000000\n      parse_mode: \"markdown\"\n      text: \"Your precious application has been deployed: https://example.com\"\n      disable_web_page_preview: True\n      disable_notification: True\n\n- name: Forward message to someone\n  community.general.telegram:\n    token: '9999999:XXXXXXXXXXXXXXXXXXXXXXX'\n    api_method: forwardMessage\n    api_args:\n      chat_id: 000000\n      from_chat_id: 111111\n      disable_notification: True\n      message_id: '{{ saved_msg_id }}'\n\n- name: Send a message to chat in playbook (deprecated old style)\n  community.general.telegram:\n    token: '9999999:XXXXXXXXXXXXXXXXXXXXXXX'\n    chat_id: 000000\n    msg: Ansible task finished\n",
        "metadata": null,
        "return": {
            "msg": {
                "description": "The message you attempted to send",
                "returned": "success",
                "sample": "Ansible task finished",
                "type": "str"
            },
            "telegram_error": {
                "description": "Error message gotten from Telegram API",
                "returned": "failure",
                "sample": "Bad Request: message text is empty",
                "type": "str"
            }
        }
    }
}
