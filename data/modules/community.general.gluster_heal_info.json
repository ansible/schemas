{
    "community.general.gluster_heal_info": {
        "doc": {
            "author": "Devyani Kota (@devyanikota)",
            "collection": "community.general",
            "deprecated": {
                "alternative": "Use M(gluster.gluster.gluster_heal_info) instead.",
                "removed_from_collection": "community.general",
                "removed_in": "3.0.0",
                "why": "The gluster modules have migrated to the gluster.gluster collection."
            },
            "description": [
                "Gather facts about either self-heal or rebalance status.",
                "This module was called C(gluster_heal_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.general.gluster_heal_info) module no longer returns C(ansible_facts)!"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/gluster_heal_info.py",
            "has_action": false,
            "module": "gluster_heal_info",
            "options": {
                "name": {
                    "aliases": [
                        "volume"
                    ],
                    "description": [
                        "The volume name."
                    ],
                    "required": true
                },
                "status_filter": {
                    "choices": [
                        "self-heal",
                        "rebalance"
                    ],
                    "default": "self-heal",
                    "description": [
                        "Determines which facts are to be returned.",
                        "If the C(status_filter) is C(self-heal), status of self-heal, along with the number of files still in process are returned.",
                        "If the C(status_filter) is C(rebalance), rebalance status is returned."
                    ]
                }
            },
            "requirements": [
                "GlusterFS > 3.2"
            ],
            "short_description": "Gather information on self-heal or rebalance status"
        },
        "examples": "\n- name: Gather self-heal facts about all gluster hosts in the cluster\n  community.general.gluster_heal_info:\n    name: test_volume\n    status_filter: self-heal\n  register: self_heal_status\n- ansible.builtin.debug:\n    var: self_heal_status\n\n- name: Gather rebalance facts about all gluster hosts in the cluster\n  community.general.gluster_heal_info:\n    name: test_volume\n    status_filter: rebalance\n  register: rebalance_status\n- ansible.builtin.debug:\n    var: rebalance_status\n",
        "metadata": null,
        "return": {
            "heal_info": {
                "description": "List of files that still need healing process",
                "returned": "On success",
                "type": "list"
            },
            "name": {
                "description": "GlusterFS volume name",
                "returned": "always",
                "type": "str"
            },
            "rebalance_status": {
                "description": "Status of rebalance operation",
                "returned": "On success",
                "type": "list"
            },
            "status_filter": {
                "description": "Whether self-heal or rebalance status is to be returned",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
