{
    "community.general.manageiq_tenant": {
        "doc": {
            "author": "Evert Mulder (@evertmulder)",
            "collection": "community.general",
            "description": [
                "The manageiq_tenant module supports adding, updating and deleting tenants in ManageIQ."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/manageiq_tenant.py",
            "has_action": false,
            "module": "manageiq_tenant",
            "options": {
                "description": {
                    "default": null,
                    "description": [
                        "The tenant description."
                    ],
                    "required": true,
                    "type": "str"
                },
                "manageiq_connection": {
                    "description": [
                        "ManageIQ connection configuration information."
                    ],
                    "required": false,
                    "suboptions": {
                        "ca_cert": {
                            "aliases": [
                                "ca_bundle_path"
                            ],
                            "description": [
                                "The path to a CA bundle file or directory with certificates. defaults to None."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "ManageIQ password. C(MIQ_PASSWORD) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "token": {
                            "description": [
                                "ManageIQ token. C(MIQ_TOKEN) env var if set. otherwise, required if no username or password is passed in."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "ManageIQ environment url. C(MIQ_URL) env var if set. otherwise, it is required to pass it."
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "ManageIQ username. C(MIQ_USERNAME) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "verify_ssl"
                            ],
                            "default": true,
                            "description": [
                                "Whether SSL certificates should be verified for HTTPS requests. defaults to True."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "name": {
                    "default": null,
                    "description": [
                        "The tenant name."
                    ],
                    "required": true,
                    "type": "str"
                },
                "parent": {
                    "default": null,
                    "description": [
                        "The name of the parent tenant. If not supplied and no C(parent_id) is supplied the root tenant is used."
                    ],
                    "required": false,
                    "type": "str"
                },
                "parent_id": {
                    "default": null,
                    "description": [
                        "The id of the parent tenant. If not supplied the root tenant is used.",
                        "The C(parent_id) takes president over C(parent) when supplied"
                    ],
                    "required": false,
                    "type": "int"
                },
                "quotas": {
                    "default": null,
                    "description": [
                        "The tenant quotas.",
                        "All parameters case sensitive.",
                        "Valid attributes are:",
                        " - C(cpu_allocated) (int): use null to remove the quota.",
                        " - C(mem_allocated) (GB): use null to remove the quota.",
                        " - C(storage_allocated) (GB): use null to remove the quota.",
                        " - C(vms_allocated) (int): use null to remove the quota.",
                        " - C(templates_allocated) (int): use null to remove the quota."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "absent - tenant should not exist, present - tenant should be."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "manageiq-client",
                "manageiq-client U(https://github.com/ManageIQ/manageiq-api-client-python/)"
            ],
            "short_description": "Management of tenants in ManageIQ."
        },
        "examples": "\n- name: Update the root tenant in ManageIQ\n  community.general.manageiq_tenant:\n    name: 'My Company'\n    description: 'My company name'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Create a tenant in ManageIQ\n  community.general.manageiq_tenant:\n    name: 'Dep1'\n    description: 'Manufacturing department'\n    parent_id: 1\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Delete a tenant in ManageIQ\n  community.general.manageiq_tenant:\n    state: 'absent'\n    name: 'Dep1'\n    parent_id: 1\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Set tenant quota for cpu_allocated, mem_allocated, remove quota for vms_allocated\n  community.general.manageiq_tenant:\n    name: 'Dep1'\n    parent_id: 1\n    quotas:\n      - cpu_allocated: 100\n      - mem_allocated: 50\n      - vms_allocated: null\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n\n- name: Delete a tenant in ManageIQ using a token\n  community.general.manageiq_tenant:\n    state: 'absent'\n    name: 'Dep1'\n    parent_id: 1\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      token: 'sometoken'\n      validate_certs: False\n",
        "metadata": null,
        "return": {
            "tenant": {
                "contains": {
                    "description": {
                        "description": "The tenant description",
                        "returned": "success",
                        "type": "str"
                    },
                    "id": {
                        "description": "The tenant id",
                        "returned": "success",
                        "type": "int"
                    },
                    "name": {
                        "description": "The tenant name",
                        "returned": "success",
                        "type": "str"
                    },
                    "parent_id": {
                        "description": "The id of the parent tenant",
                        "returned": "success",
                        "type": "int"
                    },
                    "quotas": {
                        "description": "List of tenant quotas",
                        "returned": "success",
                        "sample": {
                            "cpu_allocated": 100,
                            "mem_allocated": 50
                        },
                        "type": "list"
                    }
                },
                "description": "The tenant.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
