{
    "community.aws.aws_config_rule": {
        "doc": {
            "author": [
                "Aaron Smith (@slapula)"
            ],
            "collection": "community.aws",
            "description": [
                "Module manages AWS Config rules"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/aws_config_rule.py",
            "has_action": false,
            "module": "aws_config_rule",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "description": {
                    "description": [
                        "The description that you provide for the AWS Config rule."
                    ],
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "execution_frequency": {
                    "choices": [
                        "One_Hour",
                        "Three_Hours",
                        "Six_Hours",
                        "Twelve_Hours",
                        "TwentyFour_Hours"
                    ],
                    "description": [
                        "The maximum frequency with which AWS Config runs evaluations for a rule."
                    ],
                    "type": "str"
                },
                "input_parameters": {
                    "description": [
                        "A string, in JSON format, that is passed to the AWS Config rule Lambda function."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the AWS Config resource."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "scope": {
                    "description": [
                        "Defines which resources can trigger an evaluation for the rule."
                    ],
                    "suboptions": {
                        "compliance_id": {
                            "description": [
                                "The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for I(compliance_types)."
                            ]
                        },
                        "compliance_types": {
                            "description": [
                                "The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for I(compliance_id)."
                            ]
                        },
                        "tag_key": {
                            "description": [
                                "The tag key that is applied to only those AWS resources that you want to trigger an evaluation for the rule."
                            ]
                        },
                        "tag_value": {
                            "description": [
                                "The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule. If you specify a value for I(tag_value), you must also specify a value for I(tag_key)."
                            ]
                        }
                    },
                    "type": "dict"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "source": {
                    "description": [
                        "Provides the rule owner (AWS or customer), the rule identifier, and the notifications that cause the function to evaluate your AWS resources."
                    ],
                    "required": true,
                    "suboptions": {
                        "details": {
                            "description": [
                                "Provides the source and type of the event that causes AWS Config to evaluate your AWS resources.",
                                "This parameter expects a list of dictionaries.  Each dictionary expects the following key/value pairs.",
                                "Key `EventSource` The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWS resources.",
                                "Key `MessageType` The type of notification that triggers AWS Config to run an evaluation for a rule.",
                                "Key `MaximumExecutionFrequency` The frequency at which you want AWS Config to run evaluations for a custom rule with a periodic trigger."
                            ]
                        },
                        "identifier": {
                            "description": [
                                "The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for I(compliance_types)."
                            ]
                        },
                        "owner": {
                            "description": [
                                "The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for I(compliance_id)."
                            ]
                        }
                    },
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the Config rule should be present or absent."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore",
                "python >= 2.6"
            ],
            "short_description": "Manage AWS Config resources",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Create Config Rule for AWS Config\n  community.aws.aws_config_rule:\n    name: test_config_rule\n    state: present\n    description: 'This AWS Config rule checks for public write access on S3 buckets'\n    scope:\n        compliance_types:\n            - 'AWS::S3::Bucket'\n    source:\n        owner: AWS\n        identifier: 'S3_BUCKET_PUBLIC_WRITE_PROHIBITED'\n\n",
        "metadata": null,
        "return": null
    }
}
