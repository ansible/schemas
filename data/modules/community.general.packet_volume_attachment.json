{
    "community.general.packet_volume_attachment": {
        "doc": {
            "author": [
                "Tomas Karasek (@t0mk) <tom.to.the.k@gmail.com>",
                "Nurfet Becirevic (@nurfet-becirevic) <nurfet.becirevic@gmail.com>"
            ],
            "collection": "community.general",
            "description": [
                "Attach/detach a volume to a device in the Packet host.",
                "API is documented at U(https://www.packet.com/developers/api/volumes/).",
                "This module creates the attachment route in the Packet API. In order to discover the block devices on the server, you have to run the Attach Scripts, as documented at U(https://help.packet.net/technical/storage/packet-block-storage-linux)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/packet_volume_attachment.py",
            "has_action": false,
            "module": "packet_volume_attachment",
            "options": {
                "auth_token": {
                    "description": [
                        "Packet API token. You can also supply it in env var C(PACKET_API_TOKEN)."
                    ],
                    "type": "str"
                },
                "device": {
                    "description": [
                        "Selector for the device.",
                        "It can be a UUID of the device, or a hostname.",
                        "Example values: 98a14f7a-3d27-4478-b7cf-35b5670523f3, \"my device\""
                    ],
                    "type": "str"
                },
                "project_id": {
                    "description": [
                        "UUID of the project to which the device and volume belong."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the attachment."
                    ],
                    "type": "str"
                },
                "volume": {
                    "description": [
                        "Selector for the volume.",
                        "It can be a UUID, an API-generated volume name, or user-defined description string.",
                        "Example values: 4a347482-b546-4f67-8300-fb5018ef0c5, volume-4a347482, \"my volume\""
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "packet-python >= 1.35"
            ],
            "short_description": "Attach/detach a volume to a device in the Packet host.",
            "version_added": "0.2.0",
            "version_added_collection": "community.general"
        },
        "examples": "\n# All the examples assume that you have your Packet API token in env var PACKET_API_TOKEN.\n# You can also pass the api token in module param auth_token.\n\n- hosts: localhost\n\n  vars:\n    volname: testvol\n    devname: testdev\n    project_id: 52000fb2-ee46-4673-93a8-de2c2bdba33b\n\n  tasks:\n    - name: Create volume\n      packet_volume:\n        description: \"{{ volname }}\"\n        project_id: \"{{ project_id }}\"\n        facility: ewr1\n        plan: storage_1\n        state: present\n        size: 10\n        snapshot_policy:\n          snapshot_count: 10\n          snapshot_frequency: 1day\n\n    - name: Create a device\n      packet_device:\n        project_id: \"{{ project_id }}\"\n        hostnames: \"{{ devname }}\"\n        operating_system: ubuntu_16_04\n        plan: baremetal_0\n        facility: ewr1\n        state: present\n\n    - name: Attach testvol to testdev\n      community.general.packet_volume_attachment:\n        project_id: \"{{ project_id }}\"\n        volume: \"{{ volname }}\"\n        device: \"{{ devname }}\"\n\n    - name: Detach testvol from testdev\n      community.general.packet_volume_attachment:\n        project_id: \"{{ project_id }}\"\n        volume: \"{{ volname }}\"\n        device: \"{{ devname }}\"\n        state: absent\n",
        "metadata": null,
        "return": {
            "device_id": {
                "description": "UUID of device addressed by the module call.",
                "returned": "success",
                "type": "str"
            },
            "volume_id": {
                "description": "UUID of volume addressed by the module call.",
                "returned": "success",
                "type": "str"
            }
        }
    }
}
