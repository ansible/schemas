{
    "servicenow.servicenow.snow_record": {
        "doc": {
            "author": [
                "Tim Rightnour (@garbled1)"
            ],
            "collection": "servicenow.servicenow",
            "description": [
                "Creates, deletes and updates a single record in ServiceNow."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/servicenow/servicenow/plugins/modules/snow_record.py",
            "has_action": false,
            "module": "snow_record",
            "options": {
                "attachment": {
                    "description": [
                        "Attach a file to the record."
                    ],
                    "required": false,
                    "type": "str"
                },
                "client_id": {
                    "description": [
                        "Client ID generated by ServiceNow."
                    ],
                    "required": false,
                    "type": "str"
                },
                "client_secret": {
                    "description": [
                        "Client Secret associated with client id."
                    ],
                    "required": false,
                    "type": "str"
                },
                "data": {
                    "description": [
                        "key, value pairs of data to load into the record. See Examples.",
                        "Required for C(state:present)."
                    ],
                    "type": "dict"
                },
                "display_value": {
                    "default": false,
                    "description": [
                        "sysparm_display_value"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "exclude_reference_link": {
                    "default": false,
                    "description": [
                        "sysparm_exclude_reference_link"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "host": {
                    "description": [
                        "The ServiceNow hostname.",
                        "This value is FQDN for ServiceNow host.",
                        "If the value is not specified in the task, the value of environment variable C(SN_HOST) will be used instead.",
                        "Mutually exclusive with C(instance)."
                    ],
                    "type": "str"
                },
                "instance": {
                    "description": [
                        "The ServiceNow instance name, without the domain, service-now.com.",
                        "If the value is not specified in the task, the value of environment variable C(SN_INSTANCE) will be used instead."
                    ],
                    "required": false,
                    "type": "str"
                },
                "lookup_field": {
                    "default": "number",
                    "description": [
                        "Changes the field that C(number) uses to find records."
                    ],
                    "required": false,
                    "type": "str"
                },
                "number": {
                    "description": [
                        "Record number to update.",
                        "Required for C(state:absent)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Password for username.",
                        "Required whether using Basic or OAuth authentication.",
                        "If the value is not specified in the task, the value of environment variable C(SN_PASSWORD) will be used instead."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "If C(present) is supplied with a C(number) argument, the module will attempt to update the record with the supplied data.",
                        "If no such record exists, a new one will be created.",
                        "C(absent) will delete a record."
                    ],
                    "required": true,
                    "type": "str"
                },
                "suppress_pagination_header": {
                    "default": false,
                    "description": [
                        "sysparm_suppress_pagination_header"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "table": {
                    "default": "incident",
                    "description": [
                        "Table to query for records."
                    ],
                    "required": false,
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Name of user for connection to ServiceNow.",
                        "Required whether using Basic or OAuth authentication.",
                        "If the value is not specified in the task, the value of environment variable C(SN_USERNAME) will be used instead."
                    ],
                    "required": false,
                    "type": "str"
                }
            },
            "requirements": [
                "python pysnow (pysnow)"
            ],
            "short_description": "Manage records in ServiceNow"
        },
        "examples": "\n- name: Grab a user record\n  servicenow.servicenow.snow_record:\n    username: ansible_test\n    password: my_password\n    instance: dev99999\n    state: present\n    number: 62826bf03710200044e0bfc8bcbe5df1\n    table: sys_user\n    lookup_field: sys_id\n\n- name: Grab a user record using OAuth\n  servicenow.servicenow.snow_record:\n    username: ansible_test\n    password: my_password\n    client_id: \"1234567890abcdef1234567890abcdef\"\n    client_secret: \"Password1!\"\n    instance: dev99999\n    state: present\n    number: 62826bf03710200044e0bfc8bcbe5df1\n    table: sys_user\n    lookup_field: sys_id\n\n- name: Create an incident\n  servicenow.servicenow.snow_record:\n    username: ansible_test\n    password: my_password\n    instance: dev99999\n    state: present\n    data:\n      short_description: \"This is a test incident opened by Ansible\"\n      severity: 3\n      priority: 2\n  register: new_incident\n\n- name: Create an incident using host instead of instance\n  servicenow.servicenow.snow_record:\n    username: ansible_test\n    password: my_password\n    host: dev99999.mycustom.domain.com\n    state: present\n    data:\n      short_description: \"This is a test incident opened by Ansible\"\n      priority: 2\n\n- name: Delete the record we just made\n  servicenow.servicenow.snow_record:\n    username: admin\n    password: xxxxxxx\n    instance: dev99999\n    state: absent\n    number: \"{{new_incident['record']['number']}}\"\n\n- name: Delete a non-existant record\n  servicenow.servicenow.snow_record:\n    username: ansible_test\n    password: my_password\n    instance: dev99999\n    state: absent\n    number: 9872354\n  failed_when: false\n\n- name: Update an incident\n  servicenow.servicenow.snow_record:\n    username: ansible_test\n    password: my_password\n    instance: dev99999\n    state: present\n    number: INC0000055\n    data:\n      work_notes : \"Been working all day on this thing.\"\n\n- name: Attach a file to an incident\n  servicenow.servicenow.snow_record:\n    username: ansible_test\n    password: my_password\n    instance: dev99999\n    state: present\n    number: INC0000055\n    attachment: README.md\n  tags: attach\n",
        "metadata": null,
        "return": {
            "attached_file": {
                "description": "Details of the file that was attached via C(attachment)",
                "returned": "when supported",
                "type": "dict"
            },
            "record": {
                "description": "Record data from Service Now",
                "returned": "when supported",
                "type": "dict"
            }
        }
    }
}
