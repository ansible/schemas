{
    "google.cloud.gcp_compute_target_tcp_proxy": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "Represents a TargetTcpProxy resource, which is used by one or more global forwarding rule to route incoming TCP requests to a Backend service."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_tcp_proxy.py",
            "has_action": false,
            "module": "gcp_compute_target_tcp_proxy",
            "notes": [
                "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/targetTcpProxies)",
                "Setting Up TCP proxy for Google Cloud Load Balancing: U(https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/tcp-proxy)",
                "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.",
                "for authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.",
                "For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.",
                "For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.",
                "For authentication, you can set scopes using the C(GCP_SCOPES) env variable.",
                "Environment variables values will only be used if the playbook values are not set.",
                "The I(service_account_email) and I(service_account_file) options are mutually exclusive."
            ],
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "description": {
                    "description": [
                        "An optional description of this resource."
                    ],
                    "required": false,
                    "type": "str"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
                    ],
                    "required": true,
                    "type": "str"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "proxy_header": {
                    "description": [
                        "Specifies the type of proxy header to append before sending data to the backend.",
                        "Some valid choices include: \"NONE\", \"PROXY_V1\""
                    ],
                    "required": false,
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service": {
                    "description": [
                        "A reference to the BackendService resource.",
                        "This field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this service field to \"{{ name-of-resource }}\""
                    ],
                    "required": true,
                    "type": "dict"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the given object should exist in GCP"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Creates a GCP TargetTcpProxy"
        },
        "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-targettcpproxy\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a health check\n  google.cloud.gcp_compute_health_check:\n    name: healthcheck-targettcpproxy\n    type: TCP\n    tcp_health_check:\n      port_name: service-health\n      request: ping\n      response: pong\n    healthy_threshold: 10\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-targettcpproxy\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    protocol: TCP\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a target TCP proxy\n  google.cloud.gcp_compute_target_tcp_proxy:\n    name: test_object\n    proxy_header: PROXY_V1\n    service: \"{{ backendservice }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "creationTimestamp": {
                "description": [
                    "Creation timestamp in RFC3339 text format."
                ],
                "returned": "success",
                "type": "str"
            },
            "description": {
                "description": [
                    "An optional description of this resource."
                ],
                "returned": "success",
                "type": "str"
            },
            "id": {
                "description": [
                    "The unique identifier for the resource."
                ],
                "returned": "success",
                "type": "int"
            },
            "name": {
                "description": [
                    "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
                ],
                "returned": "success",
                "type": "str"
            },
            "proxyHeader": {
                "description": [
                    "Specifies the type of proxy header to append before sending data to the backend."
                ],
                "returned": "success",
                "type": "str"
            },
            "service": {
                "description": [
                    "A reference to the BackendService resource."
                ],
                "returned": "success",
                "type": "dict"
            }
        }
    }
}
