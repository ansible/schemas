{
    "community.skydive.skydive_capture": {
        "doc": {
            "author": [
                "Sumit Jaiswal (@sjaiswal)"
            ],
            "collection": "community.skydive",
            "description": [
                "This module manages flow capture on interfaces. The Gremlin expression is continuously evaluated which means that it is possible to define a capture on nodes that do not exist yet.",
                "It is useful when you want to start a capture on all OpenvSwitch whatever the number of Skydive agents you will start.",
                "While starting the capture, user can specify the capture name, capture description and capture type optionally."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/skydive/plugins/modules/skydive_capture.py",
            "has_action": false,
            "module": "skydive_capture",
            "notes": [
                "This module must be run locally, which can be achieved by specifying C(connection: local)."
            ],
            "options": {
                "capture_name": {
                    "default": "",
                    "description": [
                        "To define flow capture name."
                    ],
                    "required": false
                },
                "description": {
                    "default": "",
                    "description": [
                        "Configures a text string to be associated with the instance of this object."
                    ]
                },
                "extra_tcp_metric": {
                    "default": false,
                    "description": [
                        "To define flow capture ExtraTCPMetric."
                    ],
                    "type": "bool"
                },
                "interface_name": {
                    "description": [
                        "To define flow capture interface name."
                    ],
                    "required": false
                },
                "ip_defrag": {
                    "default": false,
                    "description": [
                        "To define flow capture IPDefrag."
                    ],
                    "type": "bool"
                },
                "layer_key_mode": {
                    "default": "L2",
                    "description": [
                        "To define flow capture Layer KeyMode."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "endpoint": {
                            "description": [
                                "Specifies the hostname/address along with the port as C(localhost:8082)for connecting to the remote instance of SKYDIVE client over the REST API."
                            ],
                            "required": true
                        },
                        "insecure": {
                            "default": false,
                            "description": [
                                "Ignore SSL certification verification."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote instance of SKYDIVE client."
                            ]
                        },
                        "ssl": {
                            "default": false,
                            "description": [
                                "Specifies the ssl parameter that decides if the connection type shall be http or https."
                            ],
                            "type": "bool"
                        },
                        "user": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote instance of SKYDIVE client."
                            ]
                        }
                    }
                },
                "query": {
                    "description": [
                        "It's the complete gremlin query which the users can input, I(G.V().Has('Name', 'eth0', 'Type', 'device')), to create the capture. And, if the user directly inputs the gremlin query then user is not required to input any other module parameter as gremlin query takes care of creating the flow capture."
                    ],
                    "required": false
                },
                "reassemble_tcp": {
                    "default": false,
                    "description": [
                        "To define flow capture ReassembleTCP."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the flow capture. If value is I(present) flow capture will be created else if it is I(absent) it will be deleted."
                    ]
                },
                "type": {
                    "description": [
                        "To define flow capture interface type."
                    ],
                    "required": false
                }
            },
            "requirements": [
                "skydive-client"
            ],
            "short_description": "Module which manages flow capture on interfaces"
        },
        "examples": "\n- name: start a new flow capture directly from gremlin query\n  community.skydive.skydive_capture:\n    query: G.V().Has('Name', 'eth0', 'Type', 'device')\n    state: present\n    provider:\n      endpoint: localhost:8082\n      username: admin\n      password: admin\n\n- name: stop the flow capture directly from gremlin query\n  community.skydive.skydive_capture:\n    query: G.V().Has('Name', 'eth0', 'Type', 'device')\n    state: absent\n    provider:\n      endpoint: localhost:8082\n      username: admin\n      password: admin\n\n- name: start a new flow capture from user's input\n  community.skydive.skydive_capture:\n    interface_name: Node1\n    type: myhost\n    capture_name: test_capture\n    description: test description\n    extra_tcp_metric: true\n    ip_defrag: true\n    reassemble_tcp: true\n    state: present\n    provider:\n      endpoint: localhost:8082\n      username: admin\n      password: admin\n\n- name: stop the flow capture\n  community.skydive.skydive_capture:\n    interface_name: Node1\n    type: myhost\n    capture_name: test_capture\n    description: test description\n    extra_tcp_metric: true\n    ip_defrag: true\n    reassemble_tcp: true\n    state: absent\n    provider:\n      endpoint: localhost:8082\n      username: admin\n      password: admin\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "network"
        },
        "return": null
    }
}
