{
    "fortinet.fortimanager.fmgr_dlp_sensor_filter": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_dlp_sensor_filter.py",
            "has_action": false,
            "module": "fmgr_dlp_sensor_filter",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "dlp_sensor_filter": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "action": {
                            "choices": [
                                "log-only",
                                "block",
                                "exempt",
                                "ban",
                                "ban-sender",
                                "quarantine-ip",
                                "quarantine-port",
                                "none",
                                "allow"
                            ],
                            "description": "Action to take with content that this DLP sensor matches.",
                            "type": "str"
                        },
                        "archive": {
                            "choices": [
                                "disable",
                                "enable",
                                "summary-only"
                            ],
                            "description": "Enable/disable DLP archiving.",
                            "type": "str"
                        },
                        "company-identifier": {
                            "description": "Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.",
                            "type": "str"
                        },
                        "expiry": {
                            "description": "Quarantine duration in days, hours, minutes format (dddhhmm).",
                            "type": "str"
                        },
                        "file-size": {
                            "description": "Match files this size or larger (0 - 4294967295 kbytes).",
                            "type": "int"
                        },
                        "file-type": {
                            "description": "Select the number of a DLP file pattern table to match.",
                            "type": "str"
                        },
                        "filter-by": {
                            "choices": [
                                "credit-card",
                                "ssn",
                                "regexp",
                                "file-type",
                                "file-size",
                                "fingerprint",
                                "watermark",
                                "encrypted"
                            ],
                            "description": "Select the type of content to match.",
                            "type": "str"
                        },
                        "fp-sensitivity": {
                            "description": "Select a DLP file pattern sensitivity to match.",
                            "type": "str"
                        },
                        "id": {
                            "description": "ID.",
                            "type": "int"
                        },
                        "match-percentage": {
                            "description": "Percentage of fingerprints in the fingerprint databases designated with the selected fp-sensitivity to match.",
                            "type": "int"
                        },
                        "name": {
                            "description": "Filter name.",
                            "type": "str"
                        },
                        "proto": {
                            "choices": [
                                "imap",
                                "smtp",
                                "pop3",
                                "ftp",
                                "nntp",
                                "mm1",
                                "mm3",
                                "mm4",
                                "mm7",
                                "mapi",
                                "aim",
                                "icq",
                                "msn",
                                "yahoo",
                                "http-get",
                                "http-post"
                            ],
                            "description": "no description",
                            "type": "list"
                        },
                        "regexp": {
                            "description": "Enter a regular expression to match (max. 255 characters).",
                            "type": "str"
                        },
                        "severity": {
                            "choices": [
                                "info",
                                "low",
                                "medium",
                                "high",
                                "critical"
                            ],
                            "description": "Select the severity or threat level that matches this filter.",
                            "type": "str"
                        },
                        "type": {
                            "choices": [
                                "file",
                                "message"
                            ],
                            "description": "Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "sensor": {
                    "description": "the parameter (sensor) in requested url",
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "Set up DLP filters for this sensor.",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: Set up DLP filters for this sensor.\n      fmgr_dlp_sensor_filter:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         sensor: <your own value>\n         state: <value in [present, absent]>\n         dlp_sensor_filter:\n            action: <value in [log-only, block, exempt, ...]>\n            archive: <value in [disable, enable, summary-only]>\n            company-identifier: <value of string>\n            expiry: <value of string>\n            file-size: <value of integer>\n            file-type: <value of string>\n            filter-by: <value in [credit-card, ssn, regexp, ...]>\n            fp-sensitivity: <value of string>\n            id: <value of integer>\n            match-percentage: <value of integer>\n            name: <value of string>\n            proto:\n              - imap\n              - smtp\n              - pop3\n              - ftp\n              - nntp\n              - mm1\n              - mm3\n              - mm4\n              - mm7\n              - mapi\n              - aim\n              - icq\n              - msn\n              - yahoo\n              - http-get\n              - http-post\n            regexp: <value of string>\n            severity: <value in [info, low, medium, ...]>\n            type: <value in [file, message]>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
