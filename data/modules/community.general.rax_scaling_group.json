{
    "community.general.rax_scaling_group": {
        "doc": {
            "author": "Matt Martz (@sivel)",
            "collection": "community.general",
            "description": [
                "Manipulate Rackspace Cloud Autoscale Groups"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/rax_scaling_group.py",
            "has_action": false,
            "module": "rax_scaling_group",
            "notes": [
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)",
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)"
            ],
            "options": {
                "api_key": {
                    "aliases": [
                        "password"
                    ],
                    "description": [
                        "Rackspace API key, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "auth_endpoint": {
                    "description": [
                        "The URI of the authentication service.",
                        "If not specified will be set to U(https://identity.api.rackspacecloud.com/v2.0/)"
                    ],
                    "type": "str"
                },
                "config_drive": {
                    "default": "no",
                    "description": [
                        "Attach read-only configuration drive to server as label config-2"
                    ],
                    "type": "bool"
                },
                "cooldown": {
                    "default": 300,
                    "description": [
                        "The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer between 0 and 86400 (24 hrs)."
                    ],
                    "type": "int"
                },
                "credentials": {
                    "aliases": [
                        "creds_file"
                    ],
                    "description": [
                        "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
                    ],
                    "type": "path"
                },
                "disk_config": {
                    "choices": [
                        "auto",
                        "manual"
                    ],
                    "description": [
                        "Disk partitioning strategy",
                        "If not specified, it will fallback to C(auto)."
                    ],
                    "type": "str"
                },
                "env": {
                    "description": [
                        "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
                    ],
                    "type": "str"
                },
                "files": {
                    "description": [
                        "Files to insert into the instance. Hash of C(remotepath: localpath)"
                    ],
                    "type": "dict"
                },
                "flavor": {
                    "description": [
                        "flavor to use for the instance"
                    ],
                    "required": true,
                    "type": "str"
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication mechanism to use, such as rackspace or keystone."
                    ],
                    "type": "str"
                },
                "image": {
                    "description": [
                        "image to use for the instance. Can be an C(id), C(human_id) or C(name)"
                    ],
                    "required": true,
                    "type": "str"
                },
                "key_name": {
                    "description": [
                        "key pair to use on the instance"
                    ],
                    "type": "str"
                },
                "loadbalancers": {
                    "description": [
                        "List of load balancer C(id) and C(port) hashes"
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "max_entities": {
                    "description": [
                        "The maximum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000."
                    ],
                    "required": true,
                    "type": "int"
                },
                "meta": {
                    "description": [
                        "A hash of metadata to associate with the instance"
                    ],
                    "type": "dict"
                },
                "min_entities": {
                    "description": [
                        "The minimum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000."
                    ],
                    "required": true,
                    "type": "int"
                },
                "name": {
                    "description": [
                        "Name to give the scaling group"
                    ],
                    "required": true,
                    "type": "str"
                },
                "networks": {
                    "default": [
                        "public",
                        "private"
                    ],
                    "description": [
                        "The network to attach to the instances. If specified, you must include ALL networks including the public and private interfaces. Can be C(id) or C(label)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "region": {
                    "description": [
                        "Region to create an instance in."
                    ],
                    "type": "str"
                },
                "server_name": {
                    "description": [
                        "The base name for servers created by Autoscale"
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "type": "str"
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication."
                    ],
                    "type": "str"
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication."
                    ],
                    "type": "str"
                },
                "user_data": {
                    "description": [
                        "Data to be uploaded to the servers config drive. This option implies I(config_drive). Can be a file path or a string"
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Rackspace username, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify_ssl"
                    ],
                    "description": [
                        "Whether or not to require SSL validation of API endpoints."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the scaling group to finish provisioning the minimum amount of servers"
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "pyrax",
                "python >= 2.6"
            ],
            "short_description": "Manipulate Rackspace Cloud Autoscale Groups"
        },
        "examples": "\n---\n- hosts: localhost\n  gather_facts: false\n  connection: local\n  tasks:\n    - community.general.rax_scaling_group:\n        credentials: ~/.raxpub\n        region: ORD\n        cooldown: 300\n        flavor: performance1-1\n        image: bb02b1a3-bc77-4d17-ab5b-421d89850fca\n        min_entities: 5\n        max_entities: 10\n        name: ASG Test\n        server_name: asgtest\n        loadbalancers:\n            - id: 228385\n              port: 80\n      register: asg\n",
        "metadata": null,
        "return": null
    }
}
