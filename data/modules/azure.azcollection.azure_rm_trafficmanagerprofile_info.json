{
    "azure.azcollection.azure_rm_trafficmanagerprofile_info": {
        "doc": {
            "author": [
                "Hai Cao (@caohai)",
                "Yunge Zhu (@yungezz)"
            ],
            "collection": "azure.azcollection",
            "description": [
                "Get facts for a Azure specific Traffic Manager profile or all Traffic Manager profiles."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/azure/azcollection/plugins/modules/azure_rm_trafficmanagerprofile_info.py",
            "has_action": false,
            "module": "azure_rm_trafficmanagerprofile_info",
            "notes": [
                "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).",
                "Authentication is also possible using a service principal or Active Directory user.",
                "To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.",
                "To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.",
                "Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment."
            ],
            "options": {
                "ad_user": {
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "adfs_authority_url": {
                    "description": [
                        "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "api_profile": {
                    "default": "latest",
                    "description": [
                        "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "auth_source": {
                    "choices": [
                        "auto",
                        "cli",
                        "credential_file",
                        "env",
                        "msi"
                    ],
                    "default": "auto",
                    "description": [
                        "Controls the source of the credentials to use for authentication.",
                        "Can also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.",
                        "When set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).",
                        "When set to C(env), the credentials will be read from the environment variables",
                        "When set to C(credential_file), it will read the profile from C(~/.azure/credentials).",
                        "When set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.",
                        "When set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.",
                        "The C(msi) was added in Ansible 2.6."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "cert_validation_mode": {
                    "choices": [
                        "ignore",
                        "validate"
                    ],
                    "description": [
                        "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "client_id": {
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "cloud_environment": {
                    "default": "AzureCloud",
                    "description": [
                        "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "name": {
                    "description": [
                        "Limit results to a specific Traffic Manager profile."
                    ]
                },
                "password": {
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ],
                    "type": "str"
                },
                "resource_group": {
                    "description": [
                        "The resource group to search for the desired Traffic Manager profile."
                    ]
                },
                "secret": {
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "subscription_id": {
                    "description": [
                        "Your Azure subscription Id."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'."
                    ]
                },
                "tenant": {
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7",
                "azure >= 2.0.0"
            ],
            "seealso": [
                {
                    "description": "How to authenticate using the C(az login) command.",
                    "link": "https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest",
                    "name": "Sign in with Azure CLI"
                }
            ],
            "short_description": "Get Azure Traffic Manager profile facts",
            "version_added": "0.1.2",
            "version_added_collection": "azure.azcollection"
        },
        "examples": "\n    - name: Get facts for one Traffic Manager profile\n      azure_rm_trafficmanager_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Traffic Manager profiles\n      azure_rm_trafficmanager_info:\n\n    - name: Get facts by tags\n      azure_rm_trafficmanager_info:\n        tags:\n          - Environment:Test\n",
        "metadata": null,
        "return": {
            "tms": {
                "contains": {
                    "dns_config": {
                        "contains": {
                            "fqdn": {
                                "description": [
                                    "The fully-qualified domain name(FQDN) of the Traffic Manager profile."
                                ],
                                "returned": "always",
                                "sample": "testTm.trafficmanager.net",
                                "type": "str"
                            },
                            "relative_name": {
                                "description": [
                                    "The relative DNS name provided by the Traffic Manager profile."
                                ],
                                "returned": "always",
                                "sample": "testTm",
                                "type": "str"
                            },
                            "ttl": {
                                "description": [
                                    "The DNS Time-To-Live(TTL), in seconds."
                                ],
                                "returned": "always",
                                "sample": 60,
                                "type": "int"
                            }
                        },
                        "description": [
                            "The DNS settings of the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "type": "complex"
                    },
                    "endpoints": {
                        "contains": {
                            "geo_mapping": {
                                "description": [
                                    "The list of countries/regions mapped to this endpoint when the profile has routing_method C(geographic)."
                                ],
                                "returned": "always",
                                "sample": [
                                    "GEO-NA",
                                    "GEO-AS"
                                ],
                                "type": "list"
                            },
                            "id": {
                                "description": [
                                    "Fully qualified resource ID for the resource."
                                ],
                                "returned": "always",
                                "sample": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/trafficMan agerProfiles/tmtest/externalEndpoints/e1",
                                "type": "str"
                            },
                            "location": {
                                "description": [
                                    "The location of endpoints when I(type=external_endpoints) or I(type=nested_endpoints), and profile I(routing_method=performance)."
                                ],
                                "returned": "always",
                                "sample": "East US",
                                "type": "str"
                            },
                            "min_child_endpoints": {
                                "description": [
                                    "The minimum number of endpoints that must be available in the child profile to make the parent profile available."
                                ],
                                "returned": "always",
                                "sample": 3,
                                "type": "int"
                            },
                            "name": {
                                "description": [
                                    "The name of the endpoint."
                                ],
                                "returned": "always",
                                "sample": "e1",
                                "type": "str"
                            },
                            "priority": {
                                "description": [
                                    "The priority of this endpoint when the profile has I(routing_method=priority)."
                                ],
                                "returned": "always",
                                "sample": 3,
                                "type": "str"
                            },
                            "status": {
                                "description": [
                                    "The status of the endpoint."
                                ],
                                "returned": "always",
                                "sample": "Enabled",
                                "type": "str"
                            },
                            "target": {
                                "description": [
                                    "The fully-qualified DNS name of the endpoint."
                                ],
                                "returned": "always",
                                "sample": "8.8.8.8",
                                "type": "str"
                            },
                            "target_resource_id": {
                                "description": [
                                    "The Azure Resource URI of the of the endpoint."
                                ],
                                "returned": "always",
                                "sample": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.ClassicCompute/dom ainNames/vscjavaci",
                                "type": "str"
                            },
                            "type": {
                                "description": [
                                    "The type of the endpoint."
                                ],
                                "returned": "always",
                                "sample": "external_endpoints",
                                "type": "str"
                            },
                            "weight": {
                                "description": [
                                    "The weight of this endpoint when the profile has I(routing_method=weighted)."
                                ],
                                "returned": "always",
                                "sample": 10,
                                "type": "int"
                            }
                        },
                        "description": [
                            "The list of endpoints in the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "type": "complex"
                    },
                    "location": {
                        "description": [
                            "Location of the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "sample": "global",
                        "type": "str"
                    },
                    "monitor_config": {
                        "contains": {
                            "interval": {
                                "description": [
                                    "The monitor interval for endpoints in this profile in seconds."
                                ],
                                "returned": "always",
                                "sample": 10,
                                "type": "int"
                            },
                            "path": {
                                "description": [
                                    "The path relative to the endpoint domain name used to probe for endpoint health."
                                ],
                                "returned": "always",
                                "sample": "/",
                                "type": "str"
                            },
                            "port": {
                                "description": [
                                    "The TCP port used to probe for endpoint health."
                                ],
                                "returned": "always",
                                "sample": 80,
                                "type": "int"
                            },
                            "protocol": {
                                "description": [
                                    "The protocol C(HTTP), C(HTTPS) or C(TCP) used to probe for endpoint health."
                                ],
                                "returned": "always",
                                "sample": "HTTP",
                                "type": "str"
                            },
                            "timeout": {
                                "description": [
                                    "The monitor timeout for endpoints in this profile in seconds."
                                ],
                                "returned": "always",
                                "sample": 30,
                                "type": "int"
                            },
                            "tolerated_failures": {
                                "description": [
                                    "The number of consecutive failed health check before declaring an endpoint Degraded after the next failed health check."
                                ],
                                "returned": "always",
                                "sample": 3,
                                "type": "int"
                            }
                        },
                        "description": [
                            "The endpoint monitoring settings of the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "type": "complex"
                    },
                    "name": {
                        "description": [
                            "Name of the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "sample": "testTm",
                        "type": "str"
                    },
                    "profile_status": {
                        "description": [
                            "The status of the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "sample": "Enabled",
                        "type": "str"
                    },
                    "resource_group": {
                        "description": [
                            "Name of a resource group where the Traffic Manager profile exists."
                        ],
                        "returned": "always",
                        "sample": "testGroup",
                        "type": "str"
                    },
                    "routing_method": {
                        "description": [
                            "The traffic routing method of the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "sample": "performance",
                        "type": "str"
                    },
                    "state": {
                        "description": [
                            "The state of the Traffic Manager profile."
                        ],
                        "returned": "always",
                        "sample": "present",
                        "type": "str"
                    }
                },
                "description": [
                    "List of Traffic Manager profiles."
                ],
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
