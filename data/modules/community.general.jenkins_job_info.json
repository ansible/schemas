{
    "community.general.jenkins_job_info": {
        "doc": {
            "author": [
                "Chris St. Pierre (@stpierre)"
            ],
            "collection": "community.general",
            "description": [
                "This module can be used to query information about which Jenkins jobs which already exists.",
                "This module was called C(jenkins_job_info) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/jenkins_job_info.py",
            "has_action": false,
            "module": "jenkins_job_info",
            "options": {
                "color": {
                    "description": [
                        "Only fetch jobs with the given status color."
                    ],
                    "type": "str"
                },
                "glob": {
                    "description": [
                        "A shell glob of Jenkins job names to fetch information about."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Exact name of the Jenkins job to fetch information about."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Password to authenticate with the Jenkins server.",
                        "This is a required parameter, if C(token) is not provided."
                    ],
                    "type": "str"
                },
                "token": {
                    "description": [
                        "API token used to authenticate with the Jenkins server.",
                        "This is a required parameter, if C(password) is not provided."
                    ],
                    "type": "str"
                },
                "url": {
                    "default": "http://localhost:8080",
                    "description": [
                        "URL where the Jenkins server is accessible."
                    ],
                    "type": "str"
                },
                "user": {
                    "description": [
                        "User to authenticate with the Jenkins server."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(False), the SSL certificates will not be validated.",
                        "This should only set to C(False) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python-jenkins >= 0.4.12"
            ],
            "short_description": "Get information about Jenkins jobs"
        },
        "examples": "\n# Get all Jenkins jobs using basic auth\n- community.general.jenkins_job_info:\n    user: admin\n    password: hunter2\n  register: my_jenkins_job_info\n\n# Get all Jenkins jobs using the token\n- community.general.jenkins_job_info:\n    user: admin\n    token: abcdefghijklmnop\n  register: my_jenkins_job_info\n\n# Get info about a single job using basic auth\n- community.general.jenkins_job_info:\n    name: some-job-name\n    user: admin\n    password: hunter2\n  register: my_jenkins_job_info\n\n# Get info about a single job in a folder using basic auth\n- community.general.jenkins_job_info:\n    name: some-folder-name/some-job-name\n    user: admin\n    password: hunter2\n  register: my_jenkins_job_info\n\n# Get info about jobs matching a shell glob using basic auth\n- community.general.jenkins_job_info:\n    glob: some-job-*\n    user: admin\n    password: hunter2\n  register: my_jenkins_job_info\n\n# Get info about all failing jobs using basic auth\n- community.general.jenkins_job_info:\n    color: red\n    user: admin\n    password: hunter2\n  register: my_jenkins_job_info\n\n# Get info about passing jobs matching a shell glob using basic auth\n- community.general.jenkins_job_info:\n    name: some-job-*\n    color: blue\n    user: admin\n    password: hunter2\n  register: my_jenkins_job_info\n\n- name: Get the info from custom URL with token and validate_certs=False\n  community.general.jenkins_job_info:\n    user: admin\n    token: 126df5c60d66c66e3b75b11104a16a8a\n    url: https://jenkins.example.com\n    validate_certs: False\n  register: my_jenkins_job_info\n",
        "metadata": null,
        "return": {
            "jobs": {
                "description": "All jobs found matching the specified criteria",
                "returned": "success",
                "sample": [
                    {
                        "color": "blue",
                        "fullname": "test-folder/test-job",
                        "name": "test-job",
                        "url": "http://localhost:8080/job/test-job/"
                    }
                ],
                "type": "list"
            }
        }
    }
}
