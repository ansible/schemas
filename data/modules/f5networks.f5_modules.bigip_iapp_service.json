{
    "f5networks.f5_modules.bigip_iapp_service": {
        "doc": {
            "author": [
                "Tim Rupp (@caphrim007)",
                "Wojciech Wypior (@wojtek0806)"
            ],
            "collection": "f5networks.f5_modules",
            "description": [
                "Manages TCL iApp services on a BIG-IP.",
                "The API that the system uses to communicate with on the BIG-IP is C(/mgmt/tm/sys/application/service/)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/f5networks/f5_modules/plugins/modules/bigip_iapp_service.py",
            "has_action": false,
            "module": "bigip_iapp_service",
            "notes": [
                "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).",
                "Requires BIG-IP software version >= 12.",
                "The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration."
            ],
            "options": {
                "description": {
                    "description": [
                        "Description of the iApp service.",
                        "If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field."
                    ],
                    "type": "str"
                },
                "device_group": {
                    "description": [
                        "The device group for the iApp service.",
                        "If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field."
                    ],
                    "type": "str"
                },
                "force": {
                    "default": false,
                    "description": [
                        "Forces the updating of an iApp service, even if the parameters to the service have not changed. This option is of particular importance if the iApp template that underlies the service has been updated in-place. This option is equivalent to re-configuring the iApp if that template has changed."
                    ],
                    "type": "bool"
                },
                "metadata": {
                    "description": [
                        "Metadata associated with the iApp service.",
                        "If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field."
                    ],
                    "elements": "raw",
                    "type": "list"
                },
                "name": {
                    "description": [
                        "The name of the iApp service you want to deploy."
                    ],
                    "required": true,
                    "type": "str"
                },
                "parameters": {
                    "description": [
                        "A hash of all the required template variables for the iApp template. If your parameters are stored in a file (the more common scenario) we recommend you use either the C(file) or C(template) lookups to supply the expected parameters.",
                        "These parameters typically consist of the C(lists), C(tables), and C(variables) fields."
                    ],
                    "type": "dict"
                },
                "partition": {
                    "default": "Common",
                    "description": [
                        "Device partition to manage resources on."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_provider": {
                            "description": [
                                "Configures the auth provider for to obtain authentication tokens from the remote device.",
                                "This option is really used when working with BIG-IQ devices."
                            ],
                            "type": "str"
                        },
                        "no_f5_teem": {
                            "default": false,
                            "description": [
                                "If C(yes), TEEM telemetry data is not sent to F5.",
                                "You may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).",
                                "Previously used variable C(F5_TEEM) is deprecated as its name was confusing."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "aliases": [
                                "pass",
                                "pwd"
                            ],
                            "description": [
                                "The password for the user account used to connect to the BIG-IP.",
                                "You may omit this option by setting the environment variable C(F5_PASSWORD)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server": {
                            "description": [
                                "The BIG-IP host.",
                                "You may omit this option by setting the environment variable C(F5_SERVER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server_port": {
                            "default": 443,
                            "description": [
                                "The BIG-IP server port.",
                                "You may omit this option by setting the environment variable C(F5_SERVER_PORT)."
                            ],
                            "type": "int"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "rest"
                            ],
                            "default": "rest",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "description": [
                                "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.",
                                "You may omit this option by setting the environment variable C(F5_USER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": true,
                            "description": [
                                "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.",
                                "You may omit this option by setting the environment variable C(F5_VALIDATE_CERTS)."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict",
                    "version_added": "1.0.0",
                    "version_added_collection": "f5networks.f5_modules"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "When C(present), ensures the iApp service is created and running. When C(absent), ensures the iApp service has been removed."
                    ],
                    "type": "str"
                },
                "strict_updates": {
                    "description": [
                        "Indicates whether the application service is tied to the template, so when the template is updated, the application service changes to reflect the updates.",
                        "When C(yes), disallows any updates to the resources that the iApp service has created, if they are not updated directly through the iApp.",
                        "When C(no), allows updates outside of the iApp.",
                        "If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field."
                    ],
                    "type": "bool"
                },
                "template": {
                    "description": [
                        "The iApp template from which to instantiate a new service. This template must exist on your BIG-IP before you can successfully create a service.",
                        "When creating a new service, this parameter is required."
                    ],
                    "type": "str"
                },
                "traffic_group": {
                    "description": [
                        "The traffic group for the iApp service. When creating a new service, if this value is not specified, the default of C(/Common/traffic-group-1) will be used.",
                        "If this option is specified in the Ansible task, it will take precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages TCL iApp services on a BIG-IP",
            "version_added": "1.0.0",
            "version_added_collection": "f5networks.f5_modules"
        },
        "examples": "\n- name: Create HTTP iApp service from iApp template\n  bigip_iapp_service:\n    name: foo-service\n    template: f5.http\n    parameters: \"{{ lookup('file', 'f5.http.parameters.json') }}\"\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Upgrade foo-service to v1.2.0rc4 of the f5.http template\n  bigip_iapp_service:\n    name: foo-service\n    template: f5.http.v1.2.0rc4\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Configure a service using parameters in YAML\n  bigip_iapp_service:\n    name: tests\n    template: web_frontends\n    state: present\n    parameters:\n      variables:\n        - name: var__vs_address\n          value: 1.1.1.1\n        - name: pm__apache_servers_for_http\n          value: 2.2.2.1:80\n        - name: pm__apache_servers_for_https\n          value: 2.2.2.2:80\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Re-configure a service whose underlying iApp was updated in place\n  bigip_iapp_service:\n    name: tests\n    template: web_frontends\n    force: yes\n    state: present\n    parameters:\n      variables:\n        - name: var__vs_address\n          value: 1.1.1.1\n        - name: pm__apache_servers_for_http\n          value: 2.2.2.1:80\n        - name: pm__apache_servers_for_https\n          value: 2.2.2.2:80\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Try to remove the iApp template before the associated Service is removed\n  bigip_iapp_template:\n    name: web_frontends\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  register: result\n  failed_when:\n    - result is not success\n    - \"'referenced by one or more applications' not in result.msg\"\n\n- name: Configure a service using more complicated parameters\n  bigip_iapp_service:\n    name: tests\n    template: web_frontends\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n    parameters:\n      variables:\n        - name: var__vs_address\n          value: 1.1.1.1\n        - name: pm__apache_servers_for_http\n          value: 2.2.2.1:80\n        - name: pm__apache_servers_for_https\n          value: 2.2.2.2:80\n      lists:\n        - name: irules__irules\n          value:\n            - foo\n            - bar\n      tables:\n        - name: basic__snatpool_members\n        - name: net__snatpool_members\n        - name: optimizations__hosts\n        - name: pool__hosts\n          columnNames:\n            - name\n          rows:\n            - row:\n                - internal.company.bar\n        - name: pool__members\n          columnNames:\n            - addr\n            - port\n            - connection_limit\n          rows:\n            - row:\n                - \"none\"\n                - 80\n                - 0\n        - name: server_pools__servers\n  delegate_to: localhost\n\n- name: Override metadata that may or may not exist in parameters\n  bigip_iapp_service:\n    name: foo-service\n    template: f5.http\n    parameters: \"{{ lookup('file', 'f5.http.parameters.json') }}\"\n    metadata:\n      - persist: yes\n        name: data 1\n      - persist: yes\n        name: data 2\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n",
        "metadata": null,
        "return": null
    }
}
