{
    "netapp_eseries.santricity.netapp_e_flashcache": {
        "doc": {
            "author": "Kevin Hulquest (@hulquest)",
            "collection": "netapp_eseries.santricity",
            "description": [
                "Create or remove SSD caches on a NetApp E-Series storage array."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netapp_eseries/santricity/plugins/modules/netapp_e_flashcache.py",
            "has_action": false,
            "module": "netapp_e_flashcache",
            "options": {
                "api_password": {
                    "description": [
                        "The password to authenticate with the SANtricity WebServices Proxy or embedded REST API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_url": {
                    "description": [
                        "The url to the SANtricity WebServices Proxy or embedded REST API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_username": {
                    "description": [
                        "The username to authenticate with the SANtricity WebServices Proxy or embedded REST API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "cache_size_min": {
                    "description": [
                        "The minimum size (in size_units) of the ssd cache. The cache will be expanded if this exceeds the current size of the cache."
                    ],
                    "type": "int"
                },
                "criteria_disk_phy_type": {
                    "choices": [
                        "sas",
                        "sas4k",
                        "fibre",
                        "fibre520b",
                        "scsi",
                        "sata",
                        "pata"
                    ],
                    "description": [
                        "Type of physical disk"
                    ],
                    "type": "str"
                },
                "disk_count": {
                    "description": [
                        "The minimum number of disks to use for building the cache. The cache will be expanded if this number exceeds the number of disks already in place"
                    ],
                    "type": "int"
                },
                "disk_refs": {
                    "description": [
                        "List of disk references"
                    ],
                    "type": "list"
                },
                "io_type": {
                    "choices": [
                        "filesystem",
                        "database",
                        "media"
                    ],
                    "default": "filesystem",
                    "description": [
                        "The type of workload to optimize the cache for."
                    ],
                    "type": "str"
                },
                "log_mode": {
                    "description": [
                        "Log mode"
                    ],
                    "type": "str"
                },
                "log_path": {
                    "description": [
                        "Log path"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the SSD cache to manage"
                    ],
                    "required": true,
                    "type": "str"
                },
                "size_unit": {
                    "choices": [
                        "bytes",
                        "b",
                        "kb",
                        "mb",
                        "gb",
                        "tb",
                        "pb",
                        "eb",
                        "zb",
                        "yb"
                    ],
                    "default": "gb",
                    "description": [
                        "The unit to be applied to size arguments"
                    ],
                    "type": "str"
                },
                "ssid": {
                    "description": [
                        "The ID of the array to manage (as configured on the web services proxy)."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the specified SSD cache should exist or not."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Should https certificates be validated?"
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "short_description": "NetApp E-Series manage SSD caches",
            "version_added": "2.2",
            "version_added_collection": "netapp_eseries.santricity"
        },
        "examples": "\n    - name: Flash Cache\n      netapp_e_flashcache:\n        ssid: \"{{ ssid }}\"\n        api_url: \"{{ netapp_api_url }}\"\n        api_username: \"{{ netapp_api_username }}\"\n        api_password: \"{{ netapp_api_password }}\"\n        validate_certs: \"{{ netapp_api_validate_certs }}\"\n        name: SSDCacheBuiltByAnsible\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "deprecated"
            ],
            "supported_by": "community"
        },
        "return": {
            "msg": {
                "description": "Success message",
                "returned": "success",
                "sample": "json for newly created flash cache",
                "type": "str"
            }
        }
    }
}
