{
    "cisco.mso.mso_dhcp_relay_policy_provider": {
        "doc": {
            "author": [
                "Jorge Gomez (@jorgegome2307)"
            ],
            "collection": "cisco.mso",
            "description": [
                "Manage DHCP providers in a DHCP Relay policy on Cisco Multi-Site Orchestrator."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/mso/plugins/modules/mso_dhcp_relay_policy_provider.py",
            "has_action": false,
            "module": "mso_dhcp_relay_policy_provider",
            "notes": [
                "Please read the :ref:`aci_guide` for more detailed information on how to manage your ACI infrastructure using Ansible.",
                "This module was written to support ACI Multi Site Orchestrator v2.1 or newer. Some or all functionality may not work on earlier versions."
            ],
            "options": {
                "application_profile": {
                    "aliases": [
                        "anp"
                    ],
                    "description": [
                        "Application Profile where the DHCP provider is configured"
                    ],
                    "type": "str"
                },
                "dhcp_relay_policy": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Name of the DHCP Relay Policy"
                    ],
                    "required": true,
                    "type": "str"
                },
                "endpoint_group": {
                    "aliases": [
                        "epg"
                    ],
                    "description": [
                        "EPG where the DHCP provider is configured"
                    ],
                    "type": "str"
                },
                "external_endpoint_group": {
                    "aliases": [
                        "ext_epg",
                        "external_epg"
                    ],
                    "description": [
                        "External EPG where the DHCP provider is configured"
                    ],
                    "type": "str"
                },
                "host": {
                    "aliases": [
                        "hostname"
                    ],
                    "description": [
                        "IP Address or hostname of the ACI Multi Site Orchestrator host.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_HOST) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "ip": {
                    "description": [
                        "IP address of the DHCP Server"
                    ],
                    "type": "str"
                },
                "login_domain": {
                    "description": [
                        "The login domain name to use for authentication.",
                        "The default value is Local.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_LOGIN_DOMAIN) will be used instead."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "info",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Influence the output of this ACI module.",
                        "C(normal) means the standard output, incl. C(current) dict",
                        "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
                        "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
                        "If the value is not specified in the task, the value of environment variable C(MSO_OUTPUT_LEVEL) will be used instead."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password to use for authentication.",
                        "If the value is not specified in the task, the value of environment variables C(MSO_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "port": {
                    "description": [
                        "Port number to be used for the REST connection.",
                        "The default value depends on parameter `use_ssl`.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_PORT) will be used instead."
                    ],
                    "type": "int"
                },
                "schema": {
                    "description": [
                        "Schema where the DHCP provider is configured"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Use C(present) or C(absent) for adding or removing.",
                        "Use C(query) for listing an object or multiple objects."
                    ],
                    "type": "str"
                },
                "template": {
                    "description": [
                        "template where the DHCP provider is configured"
                    ],
                    "type": "str"
                },
                "tenant": {
                    "description": [
                        "Tenant where the DHCP provider is located."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "The socket level timeout in seconds.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_TIMEOUT) will be used instead."
                    ],
                    "type": "int"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_USE_PROXY) will be used instead."
                    ],
                    "type": "bool"
                },
                "use_ssl": {
                    "default": true,
                    "description": [
                        "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_USE_SSL) will be used instead."
                    ],
                    "type": "bool"
                },
                "username": {
                    "default": "admin",
                    "description": [
                        "The username to use for authentication.",
                        "If the value is not specified in the task, the value of environment variables C(MSO_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "Multi Site Orchestrator v2.1 or newer"
            ],
            "short_description": "Manage DHCP providers in a DHCP Relay policy."
        },
        "examples": "\n- name: Add a new provider to a DHCP Relay Policy\n  cisco.mso.mso_dhcp_relay_policy_provider:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    dhcp_relay_policy: my_test_dhcp_policy\n    tenant: ansible_test\n    schema: ansible_test\n    template: Template 1\n    application_profile: ansible_test\n    endpoint_group: ansible_test\n    state: present\n  delegate_to: localhost\n\n- name: Remove a provider to a DHCP Relay Policy\n  cisco.mso.mso_dhcp_relay_policy_provider:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    dhcp_relay_policy: my_test_dhcp_policy\n    tenant: ansible_test\n    schema: ansible_test\n    template: Template 1\n    application_profile: ansible_test\n    endpoint_group: ansible_test\n    state: absent\n  delegate_to: localhost\n\n- name: Query a provider to a DHCP Relay Policy\n  cisco.mso.mso_dhcp_relay_policy_provider:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    dhcp_relay_policy: my_test_dhcp_policy\n    tenant: ansible_test\n    schema: ansible_test\n    template: Template 1\n    application_profile: ansible_test\n    endpoint_group: ansible_test\n    state: query\n  delegate_to: localhost\n\n- name: Query all provider of a DHCP Relay Policy\n  cisco.mso.mso_dhcp_relay_policy_provider:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    dhcp_relay_policy: my_test_dhcp_policy\n    state: query\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
