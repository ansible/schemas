{
    "community.general.manageiq_user": {
        "doc": {
            "author": "Daniel Korn (@dkorn)",
            "collection": "community.general",
            "description": [
                "The manageiq_user module supports adding, updating and deleting users in ManageIQ."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/manageiq_user.py",
            "has_action": false,
            "module": "manageiq_user",
            "options": {
                "email": {
                    "description": [
                        "The users' E-mail address."
                    ],
                    "type": "str"
                },
                "group": {
                    "description": [
                        "The name of the group to which the user belongs."
                    ],
                    "type": "str"
                },
                "manageiq_connection": {
                    "description": [
                        "ManageIQ connection configuration information."
                    ],
                    "required": false,
                    "suboptions": {
                        "ca_cert": {
                            "aliases": [
                                "ca_bundle_path"
                            ],
                            "description": [
                                "The path to a CA bundle file or directory with certificates. defaults to None."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "ManageIQ password. C(MIQ_PASSWORD) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "token": {
                            "description": [
                                "ManageIQ token. C(MIQ_TOKEN) env var if set. otherwise, required if no username or password is passed in."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "ManageIQ environment url. C(MIQ_URL) env var if set. otherwise, it is required to pass it."
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "ManageIQ username. C(MIQ_USERNAME) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "verify_ssl"
                            ],
                            "default": true,
                            "description": [
                                "Whether SSL certificates should be verified for HTTPS requests. defaults to True."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "name": {
                    "description": [
                        "The users' full name."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The users' password."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "absent - user should not exist, present - user should be."
                    ],
                    "type": "str"
                },
                "update_password": {
                    "choices": [
                        "always",
                        "on_create"
                    ],
                    "default": "always",
                    "description": [
                        "C(always) will update passwords unconditionally.  C(on_create) will only set the password for a newly created user."
                    ],
                    "type": "str"
                },
                "userid": {
                    "description": [
                        "The unique userid in manageiq, often mentioned as username."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "manageiq-client U(https://github.com/ManageIQ/manageiq-api-client-python/)"
            ],
            "short_description": "Management of users in ManageIQ."
        },
        "examples": "\n- name: Create a new user in ManageIQ\n  community.general.manageiq_user:\n    userid: 'jdoe'\n    name: 'Jane Doe'\n    password: 'VerySecret'\n    group: 'EvmGroup-user'\n    email: 'jdoe@example.com'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Create a new user in ManageIQ using a token\n  community.general.manageiq_user:\n    userid: 'jdoe'\n    name: 'Jane Doe'\n    password: 'VerySecret'\n    group: 'EvmGroup-user'\n    email: 'jdoe@example.com'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      token: 'sometoken'\n      validate_certs: False\n\n- name: Delete a user in ManageIQ\n  community.general.manageiq_user:\n    state: 'absent'\n    userid: 'jdoe'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Delete a user in ManageIQ using a token\n  community.general.manageiq_user:\n    state: 'absent'\n    userid: 'jdoe'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      token: 'sometoken'\n      validate_certs: False\n\n- name: Update email of user in ManageIQ\n  community.general.manageiq_user:\n    userid: 'jdoe'\n    email: 'jaustine@example.com'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Update email of user in ManageIQ using a token\n  community.general.manageiq_user:\n    userid: 'jdoe'\n    email: 'jaustine@example.com'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      token: 'sometoken'\n      validate_certs: False\n",
        "metadata": null,
        "return": null
    }
}
