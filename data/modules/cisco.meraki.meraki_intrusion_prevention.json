{
    "cisco.meraki.meraki_intrusion_prevention": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Allows for management of intrusion prevention rules networks within Meraki MX networks."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_intrusion_prevention.py",
            "has_action": false,
            "module": "meraki_mx_intrusion_prevention",
            "notes": [
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "allowed_rules": {
                    "description": [
                        "List of IDs related to rules which are allowed for the organization."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "message": {
                            "description": [
                                "Description of rule.",
                                "This is overwritten by the API."
                            ],
                            "type": "str"
                        },
                        "rule_id": {
                            "description": [
                                "ID of rule as defined by Snort."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "ids_rulesets": {
                    "choices": [
                        "connectivity",
                        "balanced",
                        "security"
                    ],
                    "description": [
                        "Ruleset complexity setting."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "mode": {
                    "choices": [
                        "detection",
                        "disabled",
                        "prevention"
                    ],
                    "description": [
                        "Operational mode of Intrusion Prevention system."
                    ],
                    "type": "str"
                },
                "net_id": {
                    "description": [
                        "ID number of a network."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "aliases": [
                        "name",
                        "network"
                    ],
                    "description": [
                        "Name of a network."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "protected_networks": {
                    "description": [
                        "Set included/excluded networks for Intrusion Prevention."
                    ],
                    "suboptions": {
                        "excluded_cidr": {
                            "description": [
                                "List of network IP ranges to exclude from scanning."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "included_cidr": {
                            "description": [
                                "List of network IP ranges to include in scanning."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "use_default": {
                            "description": [
                                "Whether to use special IPv4 addresses per RFC 5735."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Create or modify an organization."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage intrustion prevention in the Meraki cloud"
        },
        "examples": "\n- name: Set whitelist for organization\n  meraki_intrusion_prevention:\n    auth_key: '{{auth_key}}'\n    state: present\n    org_id: '{{test_org_id}}'\n    allowed_rules:\n      - rule_id: \"meraki:intrusion/snort/GID/01/SID/5805\"\n        message: Test rule\n  delegate_to: localhost\n\n- name: Query IPS info for organization\n  meraki_intrusion_prevention:\n    auth_key: '{{auth_key}}'\n    state: query\n    org_name: '{{test_org_name}}'\n  delegate_to: localhost\n  register: query_org\n\n- name: Set full ruleset with check mode\n  meraki_intrusion_prevention:\n    auth_key: '{{auth_key}}'\n    state: present\n    org_name: '{{test_org_name}}'\n    net_name: '{{test_net_name}} - IPS'\n    mode: prevention\n    ids_rulesets: security\n    protected_networks:\n      use_default: true\n      included_cidr:\n        - 192.0.1.0/24\n      excluded_cidr:\n        - 10.0.1.0/24\n  delegate_to: localhost\n\n- name: Clear rules from organization\n  meraki_intrusion_prevention:\n    auth_key: '{{auth_key}}'\n    state: absent\n    org_name: '{{test_org_name}}'\n    allowed_rules: []\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "idsRulesets": {
                        "description": "Setting of selected ruleset.",
                        "returned": "success, when network is queried or modified",
                        "sample": "balanced",
                        "type": "str"
                    },
                    "mode": {
                        "description": "Enabled setting of intrusion prevention.",
                        "returned": "success, when network is queried or modified",
                        "sample": "enabled",
                        "type": "str"
                    },
                    "protectedNetworks": {
                        "contains": {
                            "excludedCidr": {
                                "description": "List of CIDR notiation networks to exclude from protection.",
                                "returned": "success, when network is queried or modified",
                                "sample": "192.0.1.0/24",
                                "type": "str"
                            },
                            "includedCidr": {
                                "description": "List of CIDR notiation networks to protect.",
                                "returned": "success, when network is queried or modified",
                                "sample": "192.0.1.0/24",
                                "type": "str"
                            },
                            "useDefault": {
                                "description": "Whether to use special IPv4 addresses.",
                                "returned": "success, when network is queried or modified",
                                "sample": true,
                                "type": "bool"
                            }
                        },
                        "description": "Networks protected by IPS.",
                        "returned": "success, when network is queried or modified",
                        "type": "complex"
                    },
                    "whitelistedRules": {
                        "contains": {
                            "message": {
                                "description": "Description of rule.",
                                "returned": "success, when organization is queried or modified",
                                "sample": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines",
                                "type": "str"
                            },
                            "ruleId": {
                                "description": "A rule identifier for an IPS rule.",
                                "returned": "success, when organization is queried or modified",
                                "sample": "meraki:intrusion/snort/GID/01/SID/5805",
                                "type": "str"
                            }
                        },
                        "description": "List of whitelisted IPS rules.",
                        "returned": "success, when organization is queried or modified",
                        "type": "complex"
                    }
                },
                "description": "Information about the Threat Protection settings.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
