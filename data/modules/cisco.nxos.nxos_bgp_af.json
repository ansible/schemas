{
    "cisco.nxos.nxos_bgp_af": {
        "doc": {
            "author": "Gabriele Gerbino (@GGabriele)",
            "collection": "cisco.nxos",
            "description": [
                "Manages BGP Address-family configurations on NX-OS switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nxos/plugins/modules/nxos_bgp_af.py",
            "has_action": true,
            "module": "nxos_bgp_af",
            "notes": [
                "Tested against NXOSv 7.3.(0)D1(1) on VIRL",
                "C(state=absent) removes the whole BGP ASN configuration",
                "Default, where supported, restores params default value.",
                "For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "additional_paths_install": {
                    "description": [
                        "Install a backup path into the forwarding table and provide prefix independent convergence (PIC) in case of a PE-CE link failure."
                    ],
                    "type": "bool"
                },
                "additional_paths_receive": {
                    "description": [
                        "Enables the receive capability of additional paths for all of the neighbors under this address family for which the capability has not been disabled."
                    ],
                    "type": "bool"
                },
                "additional_paths_selection": {
                    "description": [
                        "Configures the capability of selecting additional paths for a prefix. Valid values are a string defining the name of the route-map."
                    ],
                    "type": "str"
                },
                "additional_paths_send": {
                    "description": [
                        "Enables the send capability of additional paths for all of the neighbors under this address family for which the capability has not been disabled."
                    ],
                    "type": "bool"
                },
                "advertise_l2vpn_evpn": {
                    "description": [
                        "Advertise evpn routes."
                    ],
                    "type": "bool"
                },
                "afi": {
                    "choices": [
                        "ipv4",
                        "ipv6",
                        "vpnv4",
                        "vpnv6",
                        "l2vpn"
                    ],
                    "description": [
                        "Address Family Identifier."
                    ],
                    "required": true,
                    "type": "str"
                },
                "asn": {
                    "description": [
                        "BGP autonomous system number. Valid values are String, Integer in ASPLAIN or ASDOT notation."
                    ],
                    "required": true,
                    "type": "str"
                },
                "client_to_client": {
                    "description": [
                        "Configure client-to-client route reflection."
                    ],
                    "type": "bool"
                },
                "dampen_igp_metric": {
                    "description": [
                        "Specify dampen value for IGP metric-related changes, in seconds. Valid values are integer and keyword 'default'."
                    ],
                    "type": "str"
                },
                "dampening_half_time": {
                    "description": [
                        "Specify decay half-life in minutes for route-flap dampening. Valid values are integer and keyword 'default'."
                    ],
                    "type": "str"
                },
                "dampening_max_suppress_time": {
                    "description": [
                        "Specify max suppress time for route-flap dampening stable route. Valid values are integer and keyword 'default'."
                    ],
                    "type": "str"
                },
                "dampening_reuse_time": {
                    "description": [
                        "Specify route reuse time for route-flap dampening. Valid values are integer and keyword 'default'."
                    ],
                    "type": "str"
                },
                "dampening_routemap": {
                    "description": [
                        "Specify route-map for route-flap dampening. Valid values are a string defining the name of the route-map."
                    ],
                    "type": "str"
                },
                "dampening_state": {
                    "description": [
                        "Enable/disable route-flap dampening."
                    ],
                    "type": "bool"
                },
                "dampening_suppress_time": {
                    "description": [
                        "Specify route suppress time for route-flap dampening. Valid values are integer and keyword 'default'."
                    ],
                    "type": "str"
                },
                "default_information_originate": {
                    "description": [
                        "Default information originate."
                    ],
                    "type": "bool"
                },
                "default_metric": {
                    "description": [
                        "Sets default metrics for routes redistributed into BGP. Valid values are Integer or keyword 'default'"
                    ],
                    "type": "str"
                },
                "distance_ebgp": {
                    "description": [
                        "Sets the administrative distance for eBGP routes. Valid values are Integer or keyword 'default'."
                    ],
                    "type": "str"
                },
                "distance_ibgp": {
                    "description": [
                        "Sets the administrative distance for iBGP routes. Valid values are Integer or keyword 'default'."
                    ],
                    "type": "str"
                },
                "distance_local": {
                    "description": [
                        "Sets the administrative distance for local BGP routes. Valid values are Integer or keyword 'default'."
                    ],
                    "type": "str"
                },
                "inject_map": {
                    "description": [
                        "An array of route-map names which will specify prefixes to inject. Each array entry must first specify the inject-map name, secondly an exist-map name, and optionally the copy-attributes keyword which indicates that attributes should be copied from the aggregate. For example [['lax_inject_map', 'lax_exist_map'], ['nyc_inject_map', 'nyc_exist_map', 'copy-attributes'], ['fsd_inject_map', 'fsd_exist_map']]."
                    ],
                    "elements": "list",
                    "type": "list"
                },
                "maximum_paths": {
                    "description": [
                        "Configures the maximum number of equal-cost paths for load sharing. Valid value is an integer in the range 1-64."
                    ],
                    "type": "str"
                },
                "maximum_paths_ibgp": {
                    "description": [
                        "Configures the maximum number of ibgp equal-cost paths for load sharing. Valid value is an integer in the range 1-64."
                    ],
                    "type": "str"
                },
                "networks": {
                    "description": [
                        "Networks to configure. Valid value is a list of network prefixes to advertise. The list must be in the form of an array. Each entry in the array must include a prefix address and an optional route-map. For example [['10.0.0.0/16', 'routemap_LA'], ['192.168.1.1', 'Chicago'], ['192.168.2.0/24'], ['192.168.3.0/24', 'routemap_NYC']]."
                    ],
                    "elements": "list",
                    "type": "list"
                },
                "next_hop_route_map": {
                    "description": [
                        "Configure a route-map for valid nexthops. Valid values are a string defining the name of the route-map."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "Starting with Ansible 2.6 we recommend using C(connection: httpapi) for NX-API.",
                        "This option will be removed in a release after 2022-06-01.",
                        "For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "str"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "cli",
                                "nxapi"
                            ],
                            "default": "cli",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                            ],
                            "type": "str"
                        },
                        "use_proxy": {
                            "default": true,
                            "description": [
                                "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored."
                            ],
                            "type": "bool"
                        },
                        "use_ssl": {
                            "default": false,
                            "description": [
                                "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=nxapi), otherwise this value is ignored."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": false,
                            "description": [
                                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "redistribute": {
                    "description": [
                        "A list of redistribute directives. Multiple redistribute entries are allowed. The list must be in the form of a nested array. the first entry of each array defines the source-protocol to redistribute from; the second entry defines a route-map name. A route-map is highly advised but may be optional on some platforms, in which case it may be omitted from the array list. For example [['direct', 'rm_direct'], ['lisp', 'rm_lisp']]."
                    ],
                    "elements": "list",
                    "type": "list"
                },
                "retain_route_target": {
                    "description": [
                        "Retains all of the routes or the routes which are part of configured route-map. Valid values are route-map names or keyword C(all) or keyword C(default).  C(all) retains all the routes regardless of Target-VPN community. C(default) will disable the retain route target option. If you are using route-map name please ensure that the name is not same as C(all) and C(default)."
                    ],
                    "type": "str",
                    "version_added": "1.1.0",
                    "version_added_collection": "cisco.nxos"
                },
                "safi": {
                    "choices": [
                        "unicast",
                        "multicast",
                        "evpn"
                    ],
                    "description": [
                        "Sub Address Family Identifier."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Determines whether the config should be present or not on the device."
                    ],
                    "type": "str"
                },
                "suppress_inactive": {
                    "description": [
                        "Advertises only active routes to peers."
                    ],
                    "type": "bool"
                },
                "table_map": {
                    "description": [
                        "Apply table-map to filter routes downloaded into URIB. Valid values are a string."
                    ],
                    "type": "str"
                },
                "table_map_filter": {
                    "description": [
                        "Filters routes rejected by the route-map and does not download them to the RIB."
                    ],
                    "type": "bool"
                },
                "vrf": {
                    "default": "default",
                    "description": [
                        "Name of the VRF. The name 'default' is a valid VRF representing the global bgp."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages BGP Address-family configuration.",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.nxos"
        },
        "examples": "\n# configure a simple address-family\n- cisco.nxos.nxos_bgp_af:\n    asn: 65535\n    vrf: TESTING\n    afi: ipv4\n    safi: unicast\n    advertise_l2vpn_evpn: true\n    state: present\n    retain_route_target: all\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "commands sent to the device",
                "returned": "always",
                "sample": [
                    "router bgp 65535",
                    "vrf TESTING",
                    "address-family ipv4 unicast",
                    "advertise l2vpn evpn",
                    "retain route-target all"
                ],
                "type": "list"
            }
        }
    }
}
