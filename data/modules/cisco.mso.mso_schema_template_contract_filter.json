{
    "cisco.mso.mso_schema_template_contract_filter": {
        "doc": {
            "author": [
                "Dag Wieers (@dagwieers)"
            ],
            "collection": "cisco.mso",
            "description": [
                "Manage contract filters in schema templates on Cisco ACI Multi-Site."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/mso/plugins/modules/mso_schema_template_contract_filter.py",
            "has_action": false,
            "module": "mso_schema_template_contract_filter",
            "notes": [
                "Due to restrictions of the MSO REST API this module creates contracts when needed, and removes them when the last filter has been removed.",
                "Due to restrictions of the MSO REST API concurrent modifications to contract filters can be dangerous and corrupt data.",
                "Please read the :ref:`aci_guide` for more detailed information on how to manage your ACI infrastructure using Ansible.",
                "This module was written to support ACI Multi Site Orchestrator v2.1 or newer. Some or all functionality may not work on earlier versions."
            ],
            "options": {
                "contract": {
                    "description": [
                        "The name of the contract to manage."
                    ],
                    "required": true,
                    "type": "str"
                },
                "contract_display_name": {
                    "description": [
                        "The name as displayed on the MSO web interface.",
                        "This defaults to the contract name when unset on creation."
                    ],
                    "type": "str"
                },
                "contract_filter_type": {
                    "choices": [
                        "both-way",
                        "one-way"
                    ],
                    "default": "both-way",
                    "description": [
                        "The type of filters defined in this contract.",
                        "This defaults to C(both-way) when unset on creation."
                    ],
                    "type": "str"
                },
                "contract_scope": {
                    "choices": [
                        "application-profile",
                        "global",
                        "tenant",
                        "vrf"
                    ],
                    "description": [
                        "The scope of the contract.",
                        "This defaults to C(vrf) when unset on creation."
                    ],
                    "type": "str"
                },
                "filter": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "The filter to associate with this contract."
                    ],
                    "type": "str"
                },
                "filter_directives": {
                    "choices": [
                        "log",
                        "none",
                        "policy_compression"
                    ],
                    "description": [
                        "A list of filter directives."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "filter_schema": {
                    "description": [
                        "The schema name in which the filter is located."
                    ],
                    "type": "str"
                },
                "filter_template": {
                    "description": [
                        "The template name in which the filter is located."
                    ],
                    "type": "str"
                },
                "filter_type": {
                    "aliases": [
                        "type"
                    ],
                    "choices": [
                        "both-way",
                        "consumer-to-provider",
                        "provider-to-consumer"
                    ],
                    "default": "both-way",
                    "description": [
                        "The type of filter to manage."
                    ],
                    "type": "str"
                },
                "host": {
                    "aliases": [
                        "hostname"
                    ],
                    "description": [
                        "IP Address or hostname of the ACI Multi Site Orchestrator host.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_HOST) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "login_domain": {
                    "description": [
                        "The login domain name to use for authentication.",
                        "The default value is Local.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_LOGIN_DOMAIN) will be used instead."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "info",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Influence the output of this ACI module.",
                        "C(normal) means the standard output, incl. C(current) dict",
                        "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
                        "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
                        "If the value is not specified in the task, the value of environment variable C(MSO_OUTPUT_LEVEL) will be used instead."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password to use for authentication.",
                        "If the value is not specified in the task, the value of environment variables C(MSO_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "port": {
                    "description": [
                        "Port number to be used for the REST connection.",
                        "The default value depends on parameter `use_ssl`.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_PORT) will be used instead."
                    ],
                    "type": "int"
                },
                "schema": {
                    "description": [
                        "The name of the schema."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Use C(present) or C(absent) for adding or removing.",
                        "Use C(query) for listing an object or multiple objects."
                    ],
                    "type": "str"
                },
                "template": {
                    "description": [
                        "The name of the template."
                    ],
                    "required": true,
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "The socket level timeout in seconds.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_TIMEOUT) will be used instead."
                    ],
                    "type": "int"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_USE_PROXY) will be used instead."
                    ],
                    "type": "bool"
                },
                "use_ssl": {
                    "default": true,
                    "description": [
                        "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_USE_SSL) will be used instead."
                    ],
                    "type": "bool"
                },
                "username": {
                    "default": "admin",
                    "description": [
                        "The username to use for authentication.",
                        "If the value is not specified in the task, the value of environment variables C(MSO_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
                        "If the value is not specified in the task, the value of environment variable C(MSO_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "Multi Site Orchestrator v2.1 or newer"
            ],
            "seealso": [
                {
                    "module": "cisco.mso.mso_schema_template_filter_entry"
                }
            ],
            "short_description": "Manage contract filters in schema templates"
        },
        "examples": "\n- name: Add a new contract filter\n  cisco.mso.mso_schema_template_contract_filter:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    schema: Schema 1\n    template: Template 1\n    contract: Contract 1\n    contract_scope: global\n    filter: Filter 1\n    state: present\n  delegate_to: localhost\n\n- name: Remove a contract filter\n  cisco.mso.mso_schema_template_contract_filter:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    schema: Schema 1\n    template: Template 1\n    contract: Contract 1\n    filter: Filter 1\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific contract filter\n  cisco.mso.mso_schema_template_contract_filter:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    schema: Schema 1\n    template: Template 1\n    contract: Contract 1\n    filter: Filter 1\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all contract filters\n  cisco.mso.mso_schema_template_contract_filter:\n    host: mso_host\n    username: admin\n    password: SomeSecretPassword\n    schema: Schema 1\n    template: Template 1\n    contract: Contract 1\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
