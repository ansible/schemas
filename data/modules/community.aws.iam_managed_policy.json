{
    "community.aws.iam_managed_policy": {
        "doc": {
            "author": "Dan Kozlowski (@dkhenry)",
            "collection": "community.aws",
            "description": [
                "Allows creating and removing managed IAM policies"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/iam_managed_policy.py",
            "has_action": false,
            "module": "iam_managed_policy",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "fail_on_delete": {
                    "description": [
                        "The I(fail_on_delete) option does nothing and will be removed after 2022-06-01"
                    ],
                    "type": "bool"
                },
                "make_default": {
                    "default": true,
                    "description": [
                        "Make this revision the default revision."
                    ],
                    "type": "bool"
                },
                "only_version": {
                    "default": false,
                    "description": [
                        "Remove all other non default revisions, if this is used with C(make_default) it will result in all other versions of this policy being deleted."
                    ],
                    "type": "bool"
                },
                "policy": {
                    "description": [
                        "A properly json formatted policy"
                    ],
                    "type": "json"
                },
                "policy_description": {
                    "default": "",
                    "description": [
                        "A helpful description of this policy, this value is immutable and only set when creating a new policy."
                    ],
                    "type": "str"
                },
                "policy_name": {
                    "description": [
                        "The name of the managed policy."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Should this managed policy be present or absent. Set to absent to detach all entities from this policy and remove it if found."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore",
                "python >= 2.6"
            ],
            "short_description": "Manage User Managed IAM policies",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Create Policy ex nihilo\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy_description: \"A Helpful managed policy\"\n    policy: \"{{ lookup('template', 'managed_policy.json.j2') }}\"\n    state: present\n\n# Update a policy with a new default version\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy: \"{{ lookup('file', 'managed_policy_update.json') }}\"\n    state: present\n\n# Update a policy with a new non default version\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy:\n      Version: \"2012-10-17\"\n      Statement:\n      - Effect: \"Allow\"\n        Action: \"logs:CreateLogGroup\"\n        Resource: \"*\"\n    make_default: false\n    state: present\n\n# Update a policy and make it the only version and the default version\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    policy: |\n      {\n        \"Version\": \"2012-10-17\",\n        \"Statement\":[{\n          \"Effect\": \"Allow\",\n          \"Action\": \"logs:PutRetentionPolicy\",\n          \"Resource\": \"*\"\n        }]\n      }\n    only_version: true\n    state: present\n\n# Remove a policy\n- name: Create IAM Managed Policy\n  community.aws.iam_managed_policy:\n    policy_name: \"ManagedPolicy\"\n    state: absent\n",
        "metadata": null,
        "return": {
            "policy": {
                "description": "Returns the policy json structure, when state == absent this will return the value of the removed policy.",
                "returned": "success",
                "sample": "{ \"arn\": \"arn:aws:iam::aws:policy/AdministratorAccess \" \"attachment_count\": 0, \"create_date\": \"2017-03-01T15:42:55.981000+00:00\", \"default_version_id\": \"v1\", \"is_attachable\": true, \"path\": \"/\", \"policy_id\": \"ANPALM4KLDMTFXGOOJIHL\", \"policy_name\": \"AdministratorAccess\", \"update_date\": \"2017-03-01T15:42:55.981000+00:00\" }",
                "type": "str"
            }
        }
    }
}
