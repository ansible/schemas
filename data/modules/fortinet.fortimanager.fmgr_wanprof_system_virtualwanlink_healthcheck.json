{
    "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_healthcheck": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_wanprof_system_virtualwanlink_healthcheck.py",
            "has_action": false,
            "module": "fmgr_wanprof_system_virtualwanlink_healthcheck",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "wanprof": {
                    "description": "the parameter (wanprof) in requested url",
                    "required": true,
                    "type": "str"
                },
                "wanprof_system_virtualwanlink_healthcheck": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "_dynamic-server": {
                            "description": "no description",
                            "type": "str"
                        },
                        "addr-mode": {
                            "choices": [
                                "ipv4",
                                "ipv6"
                            ],
                            "description": "Address mode (IPv4 or IPv6).",
                            "type": "str"
                        },
                        "failtime": {
                            "description": "Number of failures before server is considered lost (1 - 3600, default = 5).",
                            "type": "int"
                        },
                        "http-agent": {
                            "description": "String in the http-agent field in the HTTP header.",
                            "type": "str"
                        },
                        "http-get": {
                            "description": "URL used to communicate with the server if the protocol if the protocol is HTTP.",
                            "type": "str"
                        },
                        "http-match": {
                            "description": "Response string expected from the server if the protocol is HTTP.",
                            "type": "str"
                        },
                        "interval": {
                            "description": "Status check interval, or the time between attempting to connect to the server (1 - 3600 sec, default = 5).",
                            "type": "int"
                        },
                        "members": {
                            "description": "Member sequence number list.",
                            "type": "str"
                        },
                        "name": {
                            "description": "Status check or health check name.",
                            "type": "str"
                        },
                        "packet-size": {
                            "description": "Packet size of a twamp test session,",
                            "type": "int"
                        },
                        "password": {
                            "description": "no description",
                            "type": "str"
                        },
                        "port": {
                            "description": "Port number used to communicate with the server over the selected protocol.",
                            "type": "int"
                        },
                        "protocol": {
                            "choices": [
                                "ping",
                                "tcp-echo",
                                "udp-echo",
                                "http",
                                "twamp",
                                "ping6"
                            ],
                            "description": "Protocol used to determine if the FortiGate can communicate with the server.",
                            "type": "str"
                        },
                        "recoverytime": {
                            "description": "Number of successful responses received before server is considered recovered (1 - 3600, default = 5).",
                            "type": "int"
                        },
                        "security-mode": {
                            "choices": [
                                "none",
                                "authentication"
                            ],
                            "description": "Twamp controller security mode.",
                            "type": "str"
                        },
                        "server": {
                            "description": "no description",
                            "type": "str"
                        },
                        "sla": {
                            "description": "no description",
                            "suboptions": {
                                "id": {
                                    "description": "SLA ID.",
                                    "type": "int"
                                },
                                "jitter-threshold": {
                                    "description": "Jitter for SLA to make decision in milliseconds. (0 - 10000000, default = 5).",
                                    "type": "int"
                                },
                                "latency-threshold": {
                                    "description": "Latency for SLA to make decision in milliseconds. (0 - 10000000, default = 5).",
                                    "type": "int"
                                },
                                "link-cost-factor": {
                                    "choices": [
                                        "latency",
                                        "jitter",
                                        "packet-loss"
                                    ],
                                    "description": "no description",
                                    "type": "list"
                                },
                                "packetloss-threshold": {
                                    "description": "Packet loss for SLA to make decision in percentage. (0 - 100, default = 0).",
                                    "type": "int"
                                }
                            },
                            "type": "list"
                        },
                        "threshold-alert-jitter": {
                            "description": "Alert threshold for jitter (ms, default = 0).",
                            "type": "int"
                        },
                        "threshold-alert-latency": {
                            "description": "Alert threshold for latency (ms, default = 0).",
                            "type": "int"
                        },
                        "threshold-alert-packetloss": {
                            "description": "Alert threshold for packet loss (percentage, default = 0).",
                            "type": "int"
                        },
                        "threshold-warning-jitter": {
                            "description": "Warning threshold for jitter (ms, default = 0).",
                            "type": "int"
                        },
                        "threshold-warning-latency": {
                            "description": "Warning threshold for latency (ms, default = 0).",
                            "type": "int"
                        },
                        "threshold-warning-packetloss": {
                            "description": "Warning threshold for packet loss (percentage, default = 0).",
                            "type": "int"
                        },
                        "update-cascade-interface": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable update cascade interface.",
                            "type": "str"
                        },
                        "update-static-route": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable updating the static route.",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can co...",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: SD-WAN status checking or health checking. Identify a server on the Internet and determine how SD-WAN verifies that the FortiGate can co...\n      fmgr_wanprof_system_virtualwanlink_healthcheck:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         wanprof: <your own value>\n         state: <value in [present, absent]>\n         wanprof_system_virtualwanlink_healthcheck:\n            _dynamic-server: <value of string>\n            addr-mode: <value in [ipv4, ipv6]>\n            failtime: <value of integer>\n            http-agent: <value of string>\n            http-get: <value of string>\n            http-match: <value of string>\n            interval: <value of integer>\n            members: <value of string>\n            name: <value of string>\n            packet-size: <value of integer>\n            password: <value of string>\n            port: <value of integer>\n            protocol: <value in [ping, tcp-echo, udp-echo, ...]>\n            recoverytime: <value of integer>\n            security-mode: <value in [none, authentication]>\n            server: <value of string>\n            sla:\n              -\n                  id: <value of integer>\n                  jitter-threshold: <value of integer>\n                  latency-threshold: <value of integer>\n                  link-cost-factor:\n                    - latency\n                    - jitter\n                    - packet-loss\n                  packetloss-threshold: <value of integer>\n            threshold-alert-jitter: <value of integer>\n            threshold-alert-latency: <value of integer>\n            threshold-alert-packetloss: <value of integer>\n            threshold-warning-jitter: <value of integer>\n            threshold-warning-latency: <value of integer>\n            threshold-warning-packetloss: <value of integer>\n            update-cascade-interface: <value in [disable, enable]>\n            update-static-route: <value in [disable, enable]>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
