{
    "community.windows.win_defrag": {
        "doc": {
            "author": [
                "Dag Wieers (@dagwieers)"
            ],
            "collection": "community.windows",
            "description": [
                "Locates and consolidates fragmented files on local volumes to improve system performance.",
                "More information regarding C(win_defrag) is available from: U(https://technet.microsoft.com/en-us/library/cc731650(v=ws.11).aspx)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/windows/plugins/modules/win_defrag.py",
            "has_action": false,
            "module": "win_defrag",
            "options": {
                "exclude_volumes": {
                    "description": [
                        "A list of drive letters or mount point paths to exclude from defragmentation."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "freespace_consolidation": {
                    "default": false,
                    "description": [
                        "Perform free space consolidation on the specified volumes."
                    ],
                    "type": "bool"
                },
                "include_volumes": {
                    "description": [
                        "A list of drive letters or mount point paths of the volumes to be defragmented.",
                        "If this parameter is omitted, all volumes (not excluded) will be fragmented."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "parallel": {
                    "default": false,
                    "description": [
                        "Run the operation on each volume in parallel in the background."
                    ],
                    "type": "bool"
                },
                "priority": {
                    "choices": [
                        "low",
                        "normal"
                    ],
                    "default": "low",
                    "description": [
                        "Run the operation at low or normal priority."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "defrag.exe"
            ],
            "short_description": "Consolidate fragmented files on local volumes"
        },
        "examples": "\n- name: Defragment all local volumes (in parallel)\n  community.windows.win_defrag:\n    parallel: yes\n\n- name: 'Defragment all local volumes, except C: and D:'\n  community.windows.win_defrag:\n    exclude_volumes: [ C, D ]\n\n- name: 'Defragment volume D: with normal priority'\n  community.windows.win_defrag:\n    include_volumes: D\n    priority: normal\n\n- name: Consolidate free space (useful when reducing volumes)\n  community.windows.win_defrag:\n    freespace_consolidation: yes\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "Whether or not any changes were made.",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "cmd": {
                "description": "The complete command line used by the module.",
                "returned": "always",
                "sample": "defrag.exe /C /V",
                "type": "str"
            },
            "msg": {
                "description": "Possible error message on failure.",
                "returned": "failed",
                "sample": "Command 'defrag.exe' not found in $env:PATH.",
                "type": "str"
            },
            "rc": {
                "description": "The return code for the command.",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "stderr": {
                "description": "The error output from the command.",
                "returned": "always",
                "sample": null,
                "type": "str"
            },
            "stdout": {
                "description": "The standard output from the command.",
                "returned": "always",
                "sample": "Success.",
                "type": "str"
            }
        }
    }
}
