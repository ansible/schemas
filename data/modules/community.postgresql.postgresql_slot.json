{
    "community.postgresql.postgresql_slot": {
        "doc": {
            "author": [
                "John Scalia (@jscalia)",
                "Andrew Klychkov (@Andersson007)",
                "Thomas O'Donnell (@andytom)"
            ],
            "collection": "community.postgresql",
            "description": [
                "Add or remove physical or logical replication slots from a PostgreSQL database."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/postgresql/plugins/modules/postgresql_slot.py",
            "has_action": false,
            "module": "postgresql_slot",
            "notes": [
                "Physical replication slots were introduced to PostgreSQL with version 9.4, while logical replication slots were added beginning with version 10.0.",
                "Supports C(check_mode).",
                "The default authentication assumes that you are either logging in as or sudo'ing to the C(postgres) account on the host.",
                "To avoid \"Peer authentication failed for user postgres\" error, use postgres user as a I(become_user).",
                "This module uses psycopg2, a Python PostgreSQL database adapter. You must ensure that psycopg2 is installed on the host before using this module.",
                "If the remote host is the PostgreSQL server (which is the default case), then PostgreSQL must also be installed on the remote host.",
                "For Ubuntu-based systems, install the postgresql, libpq-dev, and python-psycopg2 packages on the remote host before using this module.",
                "The ca_cert parameter requires at least Postgres version 8.4 and I(psycopg2) version 2.4.3."
            ],
            "options": {
                "ca_cert": {
                    "aliases": [
                        "ssl_rootcert"
                    ],
                    "description": [
                        "Specifies the name of a file containing SSL certificate authority (CA) certificate(s).",
                        "If the file exists, the server's certificate will be verified to be signed by one of these authorities."
                    ],
                    "type": "str"
                },
                "db": {
                    "aliases": [
                        "login_db"
                    ],
                    "description": [
                        "Name of database to connect to."
                    ],
                    "type": "str"
                },
                "immediately_reserve": {
                    "default": false,
                    "description": [
                        "Optional parameter that when C(yes) specifies that the LSN for this replication slot be reserved immediately, otherwise the default, C(no), specifies that the LSN is reserved on the first connection from a streaming replication client.",
                        "Is available from PostgreSQL version 9.6.",
                        "Uses only with I(slot_type=physical).",
                        "Mutually exclusive with I(slot_type=logical)."
                    ],
                    "type": "bool"
                },
                "login_host": {
                    "description": [
                        "Host running the database."
                    ],
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate with."
                    ],
                    "type": "str"
                },
                "login_unix_socket": {
                    "description": [
                        "Path to a Unix domain socket for local connections."
                    ],
                    "type": "str"
                },
                "login_user": {
                    "default": "postgres",
                    "description": [
                        "The username used to authenticate with."
                    ],
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "slot_name"
                    ],
                    "description": [
                        "Name of the replication slot to add or remove."
                    ],
                    "required": true,
                    "type": "str"
                },
                "output_plugin": {
                    "default": "test_decoding",
                    "description": [
                        "All logical slots must indicate which output plugin decoder they're using.",
                        "This parameter does not apply to physical slots.",
                        "It will be ignored with I(slot_type=physical)."
                    ],
                    "type": "str"
                },
                "port": {
                    "aliases": [
                        "login_port"
                    ],
                    "default": 5432,
                    "description": [
                        "Database port to connect to."
                    ],
                    "type": "int"
                },
                "session_role": {
                    "description": [
                        "Switch to session_role after connecting. The specified session_role must be a role that the current login_user is a member of.",
                        "Permissions checking for SQL commands is carried out as though the session_role were the one that had logged in originally."
                    ],
                    "type": "str"
                },
                "slot_type": {
                    "choices": [
                        "logical",
                        "physical"
                    ],
                    "default": "physical",
                    "description": [
                        "Slot type."
                    ],
                    "type": "str"
                },
                "ssl_mode": {
                    "choices": [
                        "allow",
                        "disable",
                        "prefer",
                        "require",
                        "verify-ca",
                        "verify-full"
                    ],
                    "default": "prefer",
                    "description": [
                        "Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.",
                        "See U(https://www.postgresql.org/docs/current/static/libpq-ssl.html) for more information on the modes.",
                        "Default of C(prefer) matches libpq default."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "The slot state.",
                        "I(state=present) implies the slot must be present in the system.",
                        "I(state=absent) implies the I(groups) must be revoked from I(target_roles)."
                    ],
                    "type": "str"
                },
                "trust_input": {
                    "default": true,
                    "description": [
                        "If C(no), check the value of I(session_role) is potentially dangerous.",
                        "It makes sense to use C(no) only when SQL injections via I(session_role) are possible."
                    ],
                    "type": "bool",
                    "version_added": "0.2.0",
                    "version_added_collection": "community.postgresql"
                }
            },
            "requirements": [
                "psycopg2"
            ],
            "seealso": [
                {
                    "description": "Complete reference of the PostgreSQL pg_replication_slots view.",
                    "link": "https://www.postgresql.org/docs/current/view-pg-replication-slots.html",
                    "name": "PostgreSQL pg_replication_slots view reference"
                },
                {
                    "description": "Complete reference of the PostgreSQL streaming replication protocol documentation.",
                    "link": "https://www.postgresql.org/docs/current/protocol-replication.html",
                    "name": "PostgreSQL streaming replication protocol reference"
                },
                {
                    "description": "Complete reference of the PostgreSQL logical replication protocol documentation.",
                    "link": "https://www.postgresql.org/docs/current/protocol-logical-replication.html",
                    "name": "PostgreSQL logical replication protocol reference"
                }
            ],
            "short_description": "Add or remove replication slots from a PostgreSQL database"
        },
        "examples": "\n- name: Create physical_one physical slot if doesn't exist\n  become_user: postgres\n  community.postgresql.postgresql_slot:\n    slot_name: physical_one\n    db: ansible\n\n- name: Remove physical_one slot if exists\n  become_user: postgres\n  community.postgresql.postgresql_slot:\n    slot_name: physical_one\n    db: ansible\n    state: absent\n\n- name: Create logical_one logical slot to the database acme if doesn't exist\n  community.postgresql.postgresql_slot:\n    name: logical_slot_one\n    slot_type: logical\n    state: present\n    output_plugin: custom_decoder_one\n    db: \"acme\"\n\n- name: Remove logical_one slot if exists from the cluster running on another host and non-standard port\n  community.postgresql.postgresql_slot:\n    name: logical_one\n    login_host: mydatabase.example.org\n    port: 5433\n    login_user: ourSuperuser\n    login_password: thePassword\n    state: absent\n",
        "metadata": null,
        "return": {
            "name": {
                "description": "Name of the slot.",
                "returned": "always",
                "sample": "physical_one",
                "type": "str"
            },
            "queries": {
                "description": "List of executed queries.",
                "returned": "always",
                "sample": [
                    "SELECT pg_create_physical_replication_slot('physical_one', False, False)"
                ],
                "type": "str"
            }
        }
    }
}
