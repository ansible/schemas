{
    "openstack.cloud.os_pool": {
        "doc": {
            "author": "OpenStack Ansible SIG",
            "collection": "openstack.cloud",
            "description": [
                "Add or Remove a pool from the OpenStack load-balancer service."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/openstack/cloud/plugins/modules/lb_pool.py",
            "has_action": false,
            "module": "lb_pool",
            "notes": [
                "The standard OpenStack environment variables, such as C(OS_USERNAME) may be used instead of providing explicit values.",
                "Auth information is driven by openstacksdk, which means that values can come from a yaml config file in /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment variables, then finally by explicit parameters in plays. More information can be found at U(https://docs.openstack.org/openstacksdk/)"
            ],
            "options": {
                "api_timeout": {
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ],
                    "type": "int"
                },
                "auth": {
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains (for example, I(user_domain_name) or I(project_domain_name)) if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ],
                    "type": "dict"
                },
                "auth_type": {
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ],
                    "type": "str"
                },
                "availability_zone": {
                    "description": [
                        "Ignored. Present for backwards compatibility"
                    ],
                    "type": "str"
                },
                "ca_cert": {
                    "aliases": [
                        "cacert"
                    ],
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ],
                    "type": "str"
                },
                "client_cert": {
                    "aliases": [
                        "cert"
                    ],
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "client_key": {
                    "aliases": [
                        "key"
                    ],
                    "description": [
                        "A path to a client key to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "cloud": {
                    "description": [
                        "Named cloud or cloud config to operate against. If I(cloud) is a string, it references a named cloud config as defined in an OpenStack clouds.yaml file. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present. If I(cloud) is a dict, it contains a complete cloud configuration like would be in a section of clouds.yaml."
                    ],
                    "type": "raw"
                },
                "interface": {
                    "aliases": [
                        "endpoint_type"
                    ],
                    "choices": [
                        "admin",
                        "internal",
                        "public"
                    ],
                    "default": "public",
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "type": "str"
                },
                "lb_algorithm": {
                    "choices": [
                        "LEAST_CONNECTIONS",
                        "ROUND_ROBIN",
                        "SOURCE_IP"
                    ],
                    "default": "ROUND_ROBIN",
                    "description": [
                        "The load balancing algorithm for the pool."
                    ],
                    "type": "str"
                },
                "listener": {
                    "description": [
                        "The name or id of the listener that this pool belongs to. Either loadbalancer or listener must be specified for pool creation."
                    ],
                    "type": "str"
                },
                "loadbalancer": {
                    "description": [
                        "The name or id of the load balancer that this pool belongs to. Either loadbalancer or listener must be specified for pool creation."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name that has to be given to the pool"
                    ],
                    "required": true,
                    "type": "str"
                },
                "protocol": {
                    "choices": [
                        "HTTP",
                        "HTTPS",
                        "PROXY",
                        "TCP",
                        "UDP"
                    ],
                    "default": "HTTP",
                    "description": [
                        "The protocol for the pool."
                    ],
                    "type": "str"
                },
                "region_name": {
                    "description": [
                        "Name of the region."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "The amount of time the module should wait for the pool to get into ACTIVE state."
                    ],
                    "type": "int"
                },
                "validate_certs": {
                    "aliases": [
                        "verify"
                    ],
                    "default": false,
                    "description": [
                        "Whether or not SSL API requests should be verified.",
                        "Before Ansible 2.3 this defaulted to C(yes)."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": "yes",
                    "description": [
                        "If the module should wait for the pool to be ACTIVE."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "openstacksdk",
                "openstacksdk >= 0.12.0",
                "python >= 3.6"
            ],
            "short_description": "Add/Delete a pool in the load balancing service from OpenStack Cloud"
        },
        "examples": "\n# Create a pool, wait for the pool to be active.\n- openstack.cloud.lb_pool:\n    cloud: mycloud\n    endpoint_type: admin\n    state: present\n    name: test-pool\n    loadbalancer: test-loadbalancer\n    protocol: HTTP\n    lb_algorithm: ROUND_ROBIN\n\n# Delete a pool\n- openstack.cloud.lb_pool:\n    cloud: mycloud\n    endpoint_type: admin\n    state: absent\n    name: test-pool\n",
        "metadata": null,
        "return": {
            "id": {
                "description": "The pool UUID.",
                "returned": "On success when I(state) is 'present'",
                "sample": "39007a7e-ee4f-4d13-8283-b4da2e037c69",
                "type": "str"
            },
            "listener": {
                "contains": {
                    "description": {
                        "description": "The pool description.",
                        "sample": "description",
                        "type": "str"
                    },
                    "id": {
                        "description": "Unique UUID.",
                        "sample": "39007a7e-ee4f-4d13-8283-b4da2e037c69",
                        "type": "str"
                    },
                    "is_admin_state_up": {
                        "description": "The administrative state of the pool.",
                        "sample": true,
                        "type": "bool"
                    },
                    "lb_algorithm": {
                        "description": "The load balancing algorithm for the pool.",
                        "sample": "ROUND_ROBIN",
                        "type": "str"
                    },
                    "listener_id": {
                        "description": "The listener ID the pool belongs to.",
                        "sample": "956aa716-9c2f-11e8-83b3-44a8422643a4",
                        "type": "str"
                    },
                    "listeners": {
                        "description": "A list of listener IDs.",
                        "sample": [
                            {
                                "id": "b32eef7e-d2a6-4ea4-a301-60a873f89b3b"
                            }
                        ],
                        "type": "list"
                    },
                    "loadbalancer_id": {
                        "description": "The load balancer ID the pool belongs to. This field is set when the pool doesn't belong to any listener in the load balancer.",
                        "sample": "7c4be3f8-9c2f-11e8-83b3-44a8422643a4",
                        "type": "str"
                    },
                    "loadbalancers": {
                        "description": "A list of load balancer IDs.",
                        "sample": [
                            {
                                "id": "b32eef7e-d2a6-4ea4-a301-60a873f89b3b"
                            }
                        ],
                        "type": "list"
                    },
                    "members": {
                        "description": "A list of member IDs.",
                        "sample": [
                            {
                                "id": "b32eef7e-d2a6-4ea4-a301-60a873f89b3b"
                            }
                        ],
                        "type": "list"
                    },
                    "name": {
                        "description": "Name given to the pool.",
                        "sample": "test",
                        "type": "str"
                    },
                    "operating_status": {
                        "description": "The operating status of the pool.",
                        "sample": "ONLINE",
                        "type": "str"
                    },
                    "protocol": {
                        "description": "The protocol for the pool.",
                        "sample": "HTTP",
                        "type": "str"
                    },
                    "provisioning_status": {
                        "description": "The provisioning status of the pool.",
                        "sample": "ACTIVE",
                        "type": "str"
                    }
                },
                "description": "Dictionary describing the pool.",
                "returned": "On success when I(state) is 'present'",
                "type": "complex"
            }
        }
    }
}
