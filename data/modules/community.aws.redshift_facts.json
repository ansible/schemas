{
    "community.aws.redshift_facts": {
        "doc": {
            "author": "Jens Carl (@j-carl)",
            "collection": "community.aws",
            "description": [
                "Gather information about Redshift cluster(s).",
                "This module was called C(redshift_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/redshift_facts.py",
            "has_action": false,
            "module": "redshift_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "cluster_identifier": {
                    "aliases": [
                        "name",
                        "identifier"
                    ],
                    "description": [
                        "The prefix of cluster identifier of the Redshift cluster you are searching for.",
                        "This is a regular expression match with implicit '^'. Append '$' for a complete match."
                    ],
                    "required": false,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "A dictionary/hash of tags in the format { tag1_name: 'tag1_value', tag2_name: 'tag2_value' } to match against the security group(s) you are searching for."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Gather information about Redshift cluster(s)",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do net set authentication details, see the AWS guide for details.\n\n- name: Find all clusters\n  community.aws.redshift_info:\n  register: redshift\n\n- name: Find cluster(s) with matching tags\n  community.aws.redshift_info:\n    tags:\n      env: prd\n      stack: monitoring\n  register: redshift_tags\n\n- name: Find cluster(s) with matching name/prefix and tags\n  community.aws.redshift_info:\n    tags:\n      env: dev\n      stack: web\n    name: user-\n  register: redshift_web\n\n- name: Fail if no cluster(s) is/are found\n  community.aws.redshift_info:\n    tags:\n      env: stg\n      stack: db\n  register: redshift_user\n  failed_when: \"{{ redshift_user.results | length == 0 }}\"\n",
        "metadata": null,
        "return": {
            "allow_version_upgrade": {
                "description": "A Boolean value that, if true, indicates that major version upgrades will be applied automatically to the cluster during the maintenance window.\n",
                "returned": "success",
                "sample": "true|false",
                "type": "bool"
            },
            "automated_snapshot_retention_period": {
                "description": "The number of days that automatic cluster snapshots are retained.",
                "returned": "success",
                "sample": 1,
                "type": "int"
            },
            "availability_zone": {
                "description": "The name of the Availability Zone in which the cluster is located.",
                "returned": "success",
                "sample": "us-east-1b",
                "type": "str"
            },
            "cluster_create_time": {
                "description": "The date and time that the cluster was created.",
                "returned": "success",
                "sample": "2016-05-10T08:33:16.629000+00:00",
                "type": "str"
            },
            "cluster_identifier": {
                "description": "Unique key to identify the cluster.",
                "returned": "success",
                "sample": "redshift-identifier",
                "type": "str"
            },
            "cluster_nodes": {
                "description": "The nodes in the cluster.",
                "returned": "success",
                "sample": [
                    {
                        "node_role": "LEADER",
                        "private_ip_address": "10.0.0.1",
                        "public_ip_address": "x.x.x.x"
                    },
                    {
                        "node_role": "COMPUTE-1",
                        "private_ip_address": "10.0.0.3",
                        "public_ip_address": "x.x.x.x"
                    }
                ],
                "type": "list"
            },
            "cluster_paramater_groups": {
                "description": "The list of cluster parameters that are associated with this cluster.",
                "returned": "success",
                "sample": [
                    {
                        "cluster_parameter_status_list": [
                            {
                                "parameter_apply_status": "in-sync",
                                "parameter_name": "statement_timeout"
                            },
                            {
                                "parameter_apply_status": "in-sync",
                                "parameter_name": "require_ssl"
                            }
                        ],
                        "parameter_apply_status": "in-sync",
                        "parameter_group_name": "tuba"
                    }
                ],
                "type": "list"
            },
            "cluster_public_keys": {
                "description": "The public key for the cluster.",
                "returned": "success",
                "sample": "ssh-rsa anjigfam Amazon-Redshift ",
                "type": "str"
            },
            "cluster_revision_number": {
                "description": "The specific revision number of the database in the cluster.",
                "returned": "success",
                "sample": "1231",
                "type": "str"
            },
            "cluster_security_groups": {
                "description": "A list of cluster security groups that are associated with the cluster.",
                "returned": "success",
                "sample": [],
                "type": "list"
            },
            "cluster_snapshot_copy_status": {
                "description": "A value that returns the destination region and retention period that are configured for cross-region snapshot copy.",
                "returned": "success",
                "sample": {},
                "type": "dict"
            },
            "cluster_status": {
                "description": "Current state of the cluster.",
                "returned": "success",
                "sample": "available",
                "type": "str"
            },
            "cluster_subnet_group_name": {
                "description": "The name of the subnet group that is associated with the cluster.",
                "returned": "success",
                "sample": "redshift-subnet",
                "type": "str"
            },
            "cluster_version": {
                "description": "The version ID of the Amazon Redshift engine that is running on the cluster.",
                "returned": "success",
                "sample": "1.0",
                "type": "str"
            },
            "db_name": {
                "description": "The name of the initial database that was created when the cluster was created.",
                "returned": "success",
                "sample": "dev",
                "type": "str"
            },
            "elastic_ip_status": {
                "description": "The status of the elastic IP (EIP) address.",
                "returned": "success",
                "sample": {},
                "type": "dict"
            },
            "encrypted": {
                "description": "Boolean value that, if true , indicates that data in the cluster is encrypted at rest.",
                "returned": "success",
                "sample": "true|false",
                "type": "bool"
            },
            "endpoint": {
                "description": "The connection endpoint.",
                "returned": "success",
                "sample": {
                    "address": "cluster-ds2.ocmugla0rf.us-east-1.redshift.amazonaws.com",
                    "port": 5439
                },
                "type": "str"
            },
            "enhanced_vpc_routing": {
                "description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled.",
                "returned": "success",
                "sample": "true|false",
                "type": "bool"
            },
            "hsm_status": {
                "description": "A value that reports whether the Amazon Redshift cluster has finished applying any hardware security module (HSM) settings changes specified in a modify cluster command.\n",
                "returned": "success",
                "sample": {},
                "type": "dict"
            },
            "iam_roles": {
                "description": "List of IAM roles attached to the cluster.",
                "returned": "success",
                "sample": [],
                "type": "list"
            },
            "kms_key_id": {
                "description": "The AWS Key Management Service (AWS KMS) key ID of the encryption key used to encrypt data in the cluster.",
                "returned": "success",
                "sample": "",
                "type": "str"
            },
            "master_username": {
                "description": "The master user name for the cluster.",
                "returned": "success",
                "sample": "admin",
                "type": "str"
            },
            "modify_status": {
                "description": "The status of a modify operation.",
                "returned": "optional",
                "sample": "",
                "type": "str"
            },
            "node_type": {
                "description": "The node type for nodes in the cluster.",
                "returned": "success",
                "sample": "ds2.xlarge",
                "type": "str"
            },
            "number_of_nodes": {
                "description": "The number of compute nodes in the cluster.",
                "returned": "success",
                "sample": 12,
                "type": "int"
            },
            "pending_modified_values": {
                "description": "A value that, if present, indicates that changes to the cluster are pending.",
                "returned": "success",
                "sample": {},
                "type": "dict"
            },
            "preferred_maintenance_window": {
                "description": "The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance can occur.",
                "returned": "success",
                "sample": "tue:07:30-tue:08:00",
                "type": "str"
            },
            "publicly_accessible": {
                "description": "A Boolean value that, if true , indicates that the cluster can be accessed from a public network.",
                "returned": "success",
                "sample": "true|false",
                "type": "bool"
            },
            "restore_status": {
                "description": "A value that describes the status of a cluster restore action.",
                "returned": "success",
                "sample": {},
                "type": "dict"
            },
            "tags": {
                "description": "The list of tags for the cluster.",
                "returned": "success",
                "sample": [],
                "type": "list"
            },
            "vpc_id": {
                "description": "The identifier of the VPC the cluster is in, if the cluster is in a VPC.",
                "returned": "success",
                "sample": "vpc-1234567",
                "type": "str"
            },
            "vpc_security_groups": {
                "description": "A list of VPC security groups the are associated with the cluster.",
                "returned": "success",
                "sample": [
                    {
                        "status": "active",
                        "vpc_security_group_id": "sg-12cghhg"
                    }
                ],
                "type": "list"
            }
        }
    }
}
