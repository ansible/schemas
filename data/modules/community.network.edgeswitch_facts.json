{
    "community.network.edgeswitch_facts": {
        "doc": {
            "author": "Frederic Bor (@f-bor)",
            "collection": "community.network",
            "description": [
                "Collects a base set of device facts from a remote device that is running Ubiquiti Edgeswitch.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/edgeswitch_facts.py",
            "has_action": false,
            "module": "edgeswitch_facts",
            "notes": [
                "Tested against Edgeswitch 1.7.4"
            ],
            "options": {
                "gather_subset": {
                    "default": "!config",
                    "description": [
                        "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, config, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(!) to specify that a specific subset should not be collected."
                    ],
                    "required": false
                }
            },
            "short_description": "Collect facts from remote devices running Edgeswitch"
        },
        "examples": "\n- name: Collect all facts from the device\n  community.network.edgeswitch_facts:\n    gather_subset: all\n\n- name: Collect only the running config and default facts\n  community.network.edgeswitch_facts:\n    gather_subset:\n      - config\n\n",
        "metadata": null,
        "return": {
            "ansible_net_config": {
                "description": "The current active config from the device",
                "returned": "when config is configured",
                "type": "str"
            },
            "ansible_net_gather_subset": {
                "description": "The list of fact subsets collected from the device",
                "returned": "always",
                "type": "list"
            },
            "ansible_net_hostname": {
                "description": "The configured hostname of the device",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_interfaces": {
                "description": "A hash of all interfaces running on the system",
                "returned": "when interfaces is configured",
                "type": "dict"
            },
            "ansible_net_model": {
                "description": "The model name returned from the device",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_serialnum": {
                "description": "The serial number of the remote device",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_startupconfig": {
                "description": "The startup config from the device",
                "returned": "when config is configured",
                "type": "str",
                "version_added": "1.2.0",
                "version_added_collection": "community.network"
            },
            "ansible_net_version": {
                "description": "The operating system version running on the remote device",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
