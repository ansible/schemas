{
    "community.general.ldap_passwd": {
        "doc": {
            "author": [
                "Keller Fuchs (@KellerFuchs)"
            ],
            "collection": "community.general",
            "description": [
                "Set a password for an LDAP entry.  This module only asserts that a given password is valid for a given entry.  To assert the existence of an entry, see M(community.general.ldap_entry)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/ldap_passwd.py",
            "has_action": false,
            "module": "ldap_passwd",
            "notes": [
                "The default authentication settings will attempt to use a SASL EXTERNAL bind over a UNIX domain socket. This works well with the default Ubuntu install for example, which includes a cn=peercred,cn=external,cn=auth ACL rule allowing root to modify the server configuration. If you need to use a simple bind to access your server, pass the credentials in I(bind_dn) and I(bind_pw)."
            ],
            "options": {
                "bind_dn": {
                    "description": [
                        "A DN to bind with. If this is omitted, we'll try a SASL bind with the EXTERNAL mechanism as default.",
                        "If this is blank, we'll use an anonymous bind."
                    ],
                    "type": "str"
                },
                "bind_pw": {
                    "description": [
                        "The password to use with I(bind_dn)."
                    ],
                    "type": "str"
                },
                "dn": {
                    "description": [
                        "The DN of the entry to add or remove."
                    ],
                    "required": true,
                    "type": "str"
                },
                "passwd": {
                    "description": [
                        "The (plaintext) password to be set for I(dn)."
                    ],
                    "type": "str"
                },
                "referrals_chasing": {
                    "choices": [
                        "disabled",
                        "anonymous"
                    ],
                    "default": "anonymous",
                    "description": [
                        "Set the referrals chasing behavior.",
                        "C(anonymous) follow referrals anonymously. This is the default behavior.",
                        "C(disabled) disable referrals chasing. This sets C(OPT_REFERRALS) to off."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "sasl_class": {
                    "choices": [
                        "external",
                        "gssapi"
                    ],
                    "default": "external",
                    "description": [
                        "The class to use for SASL authentication.",
                        "possible choices are C(external), C(gssapi)."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "server_uri": {
                    "default": "ldapi:///",
                    "description": [
                        "A URI to the LDAP server.",
                        "The default value lets the underlying LDAP client library look for a UNIX domain socket in its default location."
                    ],
                    "type": "str"
                },
                "start_tls": {
                    "default": false,
                    "description": [
                        "If true, we'll use the START_TLS LDAP extension."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), SSL certificates will not be validated.",
                        "This should only be used on sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python-ldap"
            ],
            "short_description": "Set passwords in LDAP."
        },
        "examples": "\n- name: Set a password for the admin user\n  community.general.ldap_passwd:\n    dn: cn=admin,dc=example,dc=com\n    passwd: \"{{ vault_secret }}\"\n\n- name: Setting passwords in bulk\n  community.general.ldap_passwd:\n    dn: \"{{ item.key }}\"\n    passwd: \"{{ item.value }}\"\n  with_dict:\n    alice: alice123123\n    bob:   \"|30b!\"\n    admin: \"{{ vault_secret }}\"\n",
        "metadata": null,
        "return": {
            "modlist": {
                "description": "list of modified parameters",
                "returned": "success",
                "sample": "[[2, \"olcRootDN\", [\"cn=root,dc=example,dc=com\"]]]",
                "type": "list"
            }
        }
    }
}
