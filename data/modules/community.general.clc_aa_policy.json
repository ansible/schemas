{
    "community.general.clc_aa_policy": {
        "doc": {
            "author": "CLC Runner (@clc-runner)",
            "collection": "community.general",
            "description": [
                "An Ansible module to Create or Delete Anti Affinity Policies at CenturyLink Cloud."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/clc_aa_policy.py",
            "has_action": false,
            "module": "clc_aa_policy",
            "notes": [
                "To use this module, it is required to set the below environment variables which enables access to the Centurylink Cloud - CLC_V2_API_USERNAME, the account login id for the centurylink cloud - CLC_V2_API_PASSWORD, the account password for the centurylink cloud",
                "Alternatively, the module accepts the API token and account alias. The API token can be generated using the CLC account login and password via the HTTP api call @ https://api.ctl.io/v2/authentication/login - CLC_V2_API_TOKEN, the API token generated from https://api.ctl.io/v2/authentication/login - CLC_ACCT_ALIAS, the account alias associated with the centurylink cloud",
                "Users can set CLC_V2_API_URL to specify an endpoint for pointing to a different CLC environment."
            ],
            "options": {
                "location": {
                    "description": [
                        "Datacenter in which the policy lives/should live."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the Anti Affinity Policy."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to create or delete the policy."
                    ],
                    "required": false,
                    "type": "str"
                },
                "wait": {
                    "description": [
                        "This option does nothing and will be removed in community.general 3.0.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python = 2.7",
                "requests >= 2.5.0",
                "clc-sdk"
            ],
            "short_description": "Create or Delete Anti Affinity Policies at CenturyLink Cloud."
        },
        "examples": "\n# Note - You must set the CLC_V2_API_USERNAME And CLC_V2_API_PASSWD Environment variables before running these examples\n\n---\n- name: Create AA Policy\n  hosts: localhost\n  gather_facts: False\n  connection: local\n  tasks:\n    - name: Create an Anti Affinity Policy\n      community.general.clc_aa_policy:\n        name: Hammer Time\n        location: UK3\n        state: present\n      register: policy\n\n    - name: Debug\n      ansible.builtin.debug:\n        var: policy\n\n- name: Delete AA Policy\n  hosts: localhost\n  gather_facts: False\n  connection: local\n  tasks:\n    - name: Delete an Anti Affinity Policy\n      community.general.clc_aa_policy:\n        name: Hammer Time\n        location: UK3\n        state: absent\n      register: policy\n\n    - name: Debug\n      ansible.builtin.debug:\n        var: policy\n",
        "metadata": null,
        "return": {
            "policy": {
                "description": "The anti affinity policy information",
                "returned": "success",
                "sample": {
                    "id": "1a28dd0988984d87b9cd61fa8da15424",
                    "links": [
                        {
                            "href": "/v2/antiAffinityPolicies/wfad/1a28dd0988984d87b9cd61fa8da15424",
                            "rel": "self",
                            "verbs": [
                                "GET",
                                "DELETE",
                                "PUT"
                            ]
                        },
                        {
                            "href": "/v2/datacenters/wfad/UC1",
                            "id": "uc1",
                            "name": "UC1 - US West (Santa Clara)",
                            "rel": "location"
                        }
                    ],
                    "location": "UC1",
                    "name": "test_aa_policy"
                },
                "type": "dict"
            }
        }
    }
}
