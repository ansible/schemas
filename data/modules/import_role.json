{
    "import_role": {
        "doc": {
            "author": "Ansible Core Team (@ansible)",
            "collection": "ansible.builtin",
            "description": [
                "Much like the C(roles:) keyword, this task loads a role, but it allows you to control when the role tasks run in between other tasks of the play.",
                "Most keywords, loops and conditionals will only be applied to the imported tasks, not to this statement itself. If you want the opposite behavior, use M(ansible.builtin.include_role) instead."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/import_role.py",
            "has_action": false,
            "module": "import_role",
            "notes": [
                "Handlers are made available to the whole play.",
                "Since Ansible 2.7 variables defined in C(vars) and C(defaults) for the role are exposed at playbook parsing time. Due to this, these variables will be accessible to roles and tasks executed before the location of the M(ansible.builtin.import_role) task.",
                "Unlike M(ansible.builtin.include_role) variable exposure is not configurable, and will always be exposed."
            ],
            "options": {
                "allow_duplicates": {
                    "default": true,
                    "description": [
                        "Overrides the role's metadata setting to allow using a role more than once with the same parameters."
                    ],
                    "type": "bool"
                },
                "defaults_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(defaults/) directory."
                    ],
                    "type": "str"
                },
                "handlers_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(handlers/) directory."
                    ],
                    "type": "str",
                    "version_added": "2.8",
                    "version_added_collection": "ansible.builtin"
                },
                "name": {
                    "description": [
                        "The name of the role to be executed."
                    ],
                    "required": true,
                    "type": "str"
                },
                "tasks_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(tasks/) directory."
                    ],
                    "type": "str"
                },
                "vars_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(vars/) directory."
                    ],
                    "type": "str"
                }
            },
            "seealso": [
                {
                    "module": "ansible.builtin.import_playbook"
                },
                {
                    "module": "ansible.builtin.import_tasks"
                },
                {
                    "module": "ansible.builtin.include_role"
                },
                {
                    "module": "ansible.builtin.include_tasks"
                },
                {
                    "description": "More information related to including and importing playbooks, roles and tasks.",
                    "ref": "playbooks_reuse_includes"
                }
            ],
            "short_description": "Import a role into a play",
            "version_added": "2.4",
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- hosts: all\n  tasks:\n    - import_role:\n        name: myrole\n\n    - name: Run tasks/other.yaml instead of 'main'\n      import_role:\n        name: myrole\n        tasks_from: other\n\n    - name: Pass variables to role\n      import_role:\n        name: myrole\n      vars:\n        rolevar1: value from task\n\n    - name: Apply condition to each task in role\n      import_role:\n        name: myrole\n      when: not idontwanttorun\n",
        "metadata": null,
        "return": null
    }
}
