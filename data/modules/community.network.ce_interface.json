{
    "community.network.ce_interface": {
        "doc": {
            "author": "QijunPan (@QijunPan)",
            "collection": "community.network",
            "description": [
                "Manages physical attributes of interfaces on HUAWEI CloudEngine switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_interface.py",
            "has_action": false,
            "module": "ce_interface",
            "notes": [
                "This module is also used to create logical interfaces such as vlanif and loopbacks.",
                "This module requires the netconf system service be enabled on the remote device being managed.",
                "Recommended connection is C(netconf).",
                "This module also works with C(local) connections for legacy playbooks."
            ],
            "options": {
                "admin_state": {
                    "choices": [
                        "up",
                        "down"
                    ],
                    "description": [
                        "Specifies the interface management status. The value is an enumerated type. up, An interface is in the administrative Up state. down, An interface is in the administrative Down state."
                    ]
                },
                "description": {
                    "description": [
                        "Specifies an interface description. The value is a string of 1 to 242 case-sensitive characters, spaces supported but question marks (?) not supported."
                    ]
                },
                "interface": {
                    "description": [
                        "Full name of interface, i.e. 40GE1/0/10, Tunnel1."
                    ]
                },
                "interface_type": {
                    "choices": [
                        "ge",
                        "10ge",
                        "25ge",
                        "4x10ge",
                        "40ge",
                        "100ge",
                        "vlanif",
                        "loopback",
                        "meth",
                        "eth-trunk",
                        "nve",
                        "tunnel",
                        "ethernet",
                        "fcoe-port",
                        "fabric-port",
                        "stack-port",
                        "null"
                    ],
                    "description": [
                        "Interface type to be configured from the device."
                    ]
                },
                "l2sub": {
                    "default": "no",
                    "description": [
                        "Specifies whether the interface is a Layer 2 sub-interface."
                    ],
                    "type": "bool"
                },
                "mode": {
                    "choices": [
                        "layer2",
                        "layer3"
                    ],
                    "description": [
                        "Manage Layer 2 or Layer 3 state of the interface."
                    ]
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "default"
                    ],
                    "default": "present",
                    "description": [
                        "Specify desired state of the resource."
                    ]
                }
            },
            "short_description": "Manages physical attributes of interfaces on HUAWEI CloudEngine switches."
        },
        "examples": "\n- name: Interface module test\n  hosts: cloudengine\n  connection: local\n  gather_facts: no\n  vars:\n    cli:\n      host: \"{{ inventory_hostname }}\"\n      port: \"{{ ansible_ssh_port }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      transport: cli\n\n  tasks:\n  - name: Ensure an interface is a Layer 3 port and that it has the proper description\n    community.network.ce_interface:\n      interface: 10GE1/0/22\n      description: 'Configured by Ansible'\n      mode: layer3\n      provider: '{{ cli }}'\n\n  - name: Admin down an interface\n    community.network.ce_interface:\n      interface: 10GE1/0/22\n      admin_state: down\n      provider: '{{ cli }}'\n\n  - name: Remove all tunnel interfaces\n    community.network.ce_interface:\n      interface_type: tunnel\n      state: absent\n      provider: '{{ cli }}'\n\n  - name: Remove all logical interfaces\n    community.network.ce_interface:\n      interface_type: '{{ item }}'\n      state: absent\n      provider: '{{ cli }}'\n    with_items:\n      - loopback\n      - eth-trunk\n      - nve\n\n  - name: Admin up all 10GE interfaces\n    community.network.ce_interface:\n      interface_type: 10GE\n      admin_state: up\n      provider: '{{ cli }}'\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of switchport after module execution",
                "returned": "always",
                "sample": {
                    "admin_state": "down",
                    "description": "None",
                    "interface": "10GE1/0/10",
                    "mode": "layer2"
                },
                "type": "dict"
            },
            "existing": {
                "description": "k/v pairs of existing switchport",
                "returned": "always",
                "sample": {
                    "admin_state": "up",
                    "description": "None",
                    "interface": "10GE1/0/10",
                    "mode": "layer2"
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "admin_state": "down",
                    "interface": "10GE1/0/10"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command list sent to the device",
                "returned": "always",
                "sample": [
                    "interface 10GE1/0/10",
                    "shutdown"
                ],
                "type": "list"
            }
        }
    }
}
