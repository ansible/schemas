{
    "community.general.ipa_sudorule": {
        "doc": {
            "author": "Thomas Krahn (@Nosmoht)",
            "collection": "community.general",
            "description": [
                "Add, modify or delete sudo rule within IPA server using IPA API."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/ipa_sudorule.py",
            "has_action": false,
            "module": "ipa_sudorule",
            "options": {
                "cmd": {
                    "description": [
                        "List of commands assigned to the rule.",
                        "If an empty list is passed all commands will be removed from the rule.",
                        "If option is omitted commands will not be checked or changed."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "cmdcategory": {
                    "choices": [
                        "all"
                    ],
                    "description": [
                        "Command category the rule applies to."
                    ],
                    "type": "str"
                },
                "cmdgroup": {
                    "description": [
                        "List of command groups assigned to the rule.",
                        "If an empty list is passed all command groups will be removed from the rule.",
                        "If option is omitted command groups will not be checked or changed."
                    ],
                    "elements": "str",
                    "type": "list",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "cn": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Canonical name.",
                        "Can not be changed as it is the unique identifier."
                    ],
                    "required": true,
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Description of the sudo rule."
                    ],
                    "type": "str"
                },
                "host": {
                    "description": [
                        "List of hosts assigned to the rule.",
                        "If an empty list is passed all hosts will be removed from the rule.",
                        "If option is omitted hosts will not be checked or changed.",
                        "Option C(hostcategory) must be omitted to assign hosts."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "hostcategory": {
                    "choices": [
                        "all"
                    ],
                    "description": [
                        "Host category the rule applies to.",
                        "If 'all' is passed one must omit C(host) and C(hostgroup).",
                        "Option C(host) and C(hostgroup) must be omitted to assign 'all'."
                    ],
                    "type": "str"
                },
                "hostgroup": {
                    "description": [
                        "List of host groups assigned to the rule.",
                        "If an empty list is passed all host groups will be removed from the rule.",
                        "If option is omitted host groups will not be checked or changed.",
                        "Option C(hostcategory) must be omitted to assign host groups."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "ipa_host": {
                    "default": "ipa.example.com",
                    "description": [
                        "IP or hostname of IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_HOST) will be used instead.",
                        "If both the environment variable C(IPA_HOST) and the value are not specified in the task, then DNS will be used to try to discover the FreeIPA server.",
                        "The relevant entry needed in FreeIPA is the 'ipa-ca' entry.",
                        "If neither the DNS entry, nor the environment C(IPA_HOST), nor the value are available in the task, then the default value will be used.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_pass": {
                    "description": [
                        "Password of administrative user.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PASS) will be used instead.",
                        "Note that if the 'urllib_gssapi' library is available, it is possible to use GSSAPI to authenticate to FreeIPA.",
                        "If the environment variable C(KRB5CCNAME) is available, the module will use this kerberos credentials cache to authenticate to the FreeIPA server.",
                        "If the environment variable C(KRB5_CLIENT_KTNAME) is available, and C(KRB5CCNAME) is not; the module will use this kerberos keytab to authenticate.",
                        "If GSSAPI is not available, the usage of 'ipa_pass' is required.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_port": {
                    "default": 443,
                    "description": [
                        "Port of FreeIPA / IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PORT) will be used instead.",
                        "If both the environment variable C(IPA_PORT) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "int"
                },
                "ipa_prot": {
                    "choices": [
                        "http",
                        "https"
                    ],
                    "default": "https",
                    "description": [
                        "Protocol used by IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PROT) will be used instead.",
                        "If both the environment variable C(IPA_PROT) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_timeout": {
                    "default": 10,
                    "description": [
                        "Specifies idle timeout (in seconds) for the connection.",
                        "For bulk operations, you may want to increase this in order to avoid timeout from IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_TIMEOUT) will be used instead.",
                        "If both the environment variable C(IPA_TIMEOUT) and the value are not specified in the task, then default value is set."
                    ],
                    "type": "int"
                },
                "ipa_user": {
                    "default": "admin",
                    "description": [
                        "Administrative account used on IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_USER) will be used instead.",
                        "If both the environment variable C(IPA_USER) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "runasextusers": {
                    "description": [
                        "List of external RunAs users"
                    ],
                    "elements": "str",
                    "type": "list",
                    "version_added": "2.3.0",
                    "version_added_collection": "community.general"
                },
                "runasgroupcategory": {
                    "choices": [
                        "all"
                    ],
                    "description": [
                        "RunAs Group category the rule applies to."
                    ],
                    "type": "str"
                },
                "runasusercategory": {
                    "choices": [
                        "all"
                    ],
                    "description": [
                        "RunAs User category the rule applies to."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "disabled",
                        "enabled",
                        "present"
                    ],
                    "default": "present",
                    "description": "State to ensure.",
                    "type": "str"
                },
                "sudoopt": {
                    "description": [
                        "List of options to add to the sudo rule."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "user": {
                    "description": [
                        "List of users assigned to the rule.",
                        "If an empty list is passed all users will be removed from the rule.",
                        "If option is omitted users will not be checked or changed."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "usercategory": {
                    "choices": [
                        "all"
                    ],
                    "description": [
                        "User category the rule applies to."
                    ],
                    "type": "str"
                },
                "usergroup": {
                    "description": [
                        "List of user groups assigned to the rule.",
                        "If an empty list is passed all user groups will be removed from the rule.",
                        "If option is omitted user groups will not be checked or changed."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "This only applies if C(ipa_prot) is I(https).",
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage FreeIPA sudo rule"
        },
        "examples": "\n- name: Ensure sudo rule is present that's allows all every body to execute any command on any host without being asked for a password.\n  community.general.ipa_sudorule:\n    name: sudo_all_nopasswd\n    cmdcategory: all\n    description: Allow to run every command with sudo without password\n    hostcategory: all\n    sudoopt:\n    - '!authenticate'\n    usercategory: all\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n\n- name: Ensure user group developers can run every command on host group db-server as well as on host db01.example.com.\n  community.general.ipa_sudorule:\n    name: sudo_dev_dbserver\n    description: Allow developers to run every command with sudo on all database server\n    cmdcategory: all\n    host:\n    - db01.example.com\n    hostgroup:\n    - db-server\n    sudoopt:\n    - '!authenticate'\n    usergroup:\n    - developers\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n\n- name: Ensure user group operations can run any commands that is part of operations-cmdgroup on any host as user root.\n  community.general.ipa_sudorule:\n    name: sudo_operations_all\n    description: Allow operators to run any commands that is part of operations-cmdgroup on any host as user root.\n    cmdgroup:\n    - operations-cmdgroup\n    hostcategory: all\n    runasextusers:\n    - root\n    sudoopt:\n    - '!authenticate'\n    usergroup:\n    - operators\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n",
        "metadata": null,
        "return": {
            "sudorule": {
                "description": "Sudorule as returned by IPA",
                "returned": "always",
                "type": "dict"
            }
        }
    }
}
