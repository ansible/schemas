{
    "ansible.windows.win_user_right": {
        "doc": {
            "author": [
                "Jordan Borean (@jborean93)"
            ],
            "collection": "ansible.windows",
            "description": [
                "Add, remove or set User Rights for a group or users or groups.",
                "You can set user rights for both local and domain accounts."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ansible/windows/plugins/modules/win_user_right.py",
            "has_action": false,
            "module": "win_user_right",
            "notes": [
                "If the server is domain joined this module can change a right but if a GPO governs this right then the changes won't last."
            ],
            "options": {
                "action": {
                    "choices": [
                        "add",
                        "remove",
                        "set"
                    ],
                    "default": "set",
                    "description": [
                        "C(add) will add the users/groups to the existing right.",
                        "C(remove) will remove the users/groups from the existing right.",
                        "C(set) will replace the users/groups of the existing right."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the User Right as shown by the C(Constant Name) value from U(https://technet.microsoft.com/en-us/library/dd349804.aspx).",
                        "The module will return an error if the right is invalid."
                    ],
                    "required": true,
                    "type": "str"
                },
                "users": {
                    "description": [
                        "A list of users or groups to add/remove on the User Right.",
                        "These can be in the form DOMAIN\\user-group, user-group@DOMAIN.COM for domain users/groups.",
                        "For local users/groups it can be in the form user-group, .\\user-group, SERVERNAME\\user-group where SERVERNAME is the name of the remote server.",
                        "You can also add special local accounts like SYSTEM and others.",
                        "Can be set to an empty list with I(action=set) to remove all accounts from the right."
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                }
            },
            "seealso": [
                {
                    "module": "ansible.windows.win_group"
                },
                {
                    "module": "ansible.windows.win_group_membership"
                },
                {
                    "module": "ansible.windows.win_user"
                }
            ],
            "short_description": "Manage Windows User Rights"
        },
        "examples": "\n---\n- name: Replace the entries of Deny log on locally\n  ansible.windows.win_user_right:\n    name: SeDenyInteractiveLogonRight\n    users:\n    - Guest\n    - Users\n    action: set\n\n- name: Add account to Log on as a service\n  ansible.windows.win_user_right:\n    name: SeServiceLogonRight\n    users:\n    - .\\Administrator\n    - '{{ansible_hostname}}\\local-user'\n    action: add\n\n- name: Remove accounts who can create Symbolic links\n  ansible.windows.win_user_right:\n    name: SeCreateSymbolicLinkPrivilege\n    users:\n    - SYSTEM\n    - Administrators\n    - DOMAIN\\User\n    - group@DOMAIN.COM\n    action: remove\n\n- name: Remove all accounts who cannot log on remote interactively\n  ansible.windows.win_user_right:\n    name: SeDenyRemoteInteractiveLogonRight\n    users: []\n",
        "metadata": null,
        "return": {
            "added": {
                "description": "A list of accounts that were added to the right, this is empty if no accounts were added.",
                "returned": "success",
                "sample": [
                    "NT AUTHORITY\\SYSTEM",
                    "DOMAIN\\User"
                ],
                "type": "list"
            },
            "removed": {
                "description": "A list of accounts that were removed from the right, this is empty if no accounts were removed.",
                "returned": "success",
                "sample": [
                    "SERVERNAME\\Administrator",
                    "BUILTIN\\Administrators"
                ],
                "type": "list"
            }
        }
    }
}
