{
    "ansible.posix.acl": {
        "doc": {
            "author": [
                "Brian Coca (@bcoca)",
                "J\u00e9r\u00e9mie Astori (@astorije)"
            ],
            "collection": "ansible.posix",
            "description": [
                "Set and retrieve file ACL information."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/ansible/posix/plugins/modules/acl.py",
            "has_action": false,
            "module": "acl",
            "notes": [
                "The C(acl) module requires that ACLs are enabled on the target filesystem and that the C(setfacl) and C(getfacl) binaries are installed.",
                "As of Ansible 2.0, this module only supports Linux distributions.",
                "As of Ansible 2.3, the I(name) option has been changed to I(path) as default, but I(name) still works as well."
            ],
            "options": {
                "default": {
                    "default": false,
                    "description": [
                        "If the target is a directory, setting this to C(yes) will make it the default ACL for entities created inside the directory.",
                        "Setting C(default) to C(yes) causes an error if the path is a file."
                    ],
                    "type": "bool"
                },
                "entity": {
                    "description": [
                        "The actual user or group that the ACL applies to when matching entity types user or group are selected."
                    ]
                },
                "entry": {
                    "description": [
                        "DEPRECATED.",
                        "The ACL to set or remove.",
                        "This must always be quoted in the form of C(<etype>:<qualifier>:<perms>).",
                        "The qualifier may be empty for some types, but the type and perms are always required.",
                        "C(-) can be used as placeholder when you do not care about permissions.",
                        "This is now superseded by entity, type and permissions fields."
                    ]
                },
                "etype": {
                    "choices": [
                        "group",
                        "mask",
                        "other",
                        "user"
                    ],
                    "description": [
                        "The entity type of the ACL to apply, see C(setfacl) documentation for more info."
                    ]
                },
                "follow": {
                    "default": true,
                    "description": [
                        "Whether to follow symlinks on the path if a symlink is encountered."
                    ],
                    "type": "bool"
                },
                "path": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "The full path of the file or object."
                    ],
                    "required": true,
                    "type": "path"
                },
                "permissions": {
                    "description": [
                        "The permissions to apply/remove can be any combination of C(r), C(w) and C(x) (read, write and execute respectively)"
                    ]
                },
                "recalculate_mask": {
                    "choices": [
                        "default",
                        "mask",
                        "no_mask"
                    ],
                    "default": "default",
                    "description": [
                        "Select if and when to recalculate the effective right masks of the files.",
                        "See C(setfacl) documentation for more info.",
                        "Incompatible with C(state=query)."
                    ]
                },
                "recursive": {
                    "default": false,
                    "description": [
                        "Recursively sets the specified ACL.",
                        "Incompatible with C(state=query)."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "query",
                    "description": [
                        "Define whether the ACL should be present or not.",
                        "The C(query) state gets the current ACL without changing it, for use in C(register) operations."
                    ]
                },
                "use_nfsv4_acls": {
                    "default": false,
                    "description": [
                        "Use NFSv4 ACLs instead of POSIX ACLs."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Set and retrieve file ACL information.",
            "version_added": "1.0.0",
            "version_added_collection": "ansible.posix"
        },
        "examples": "\n- name: Grant user Joe read access to a file\n  ansible.posix.acl:\n    path: /etc/foo.conf\n    entity: joe\n    etype: user\n    permissions: r\n    state: present\n\n- name: Removes the ACL for Joe on a specific file\n  ansible.posix.acl:\n    path: /etc/foo.conf\n    entity: joe\n    etype: user\n    state: absent\n\n- name: Sets default ACL for joe on /etc/foo.d/\n  ansible.posix.acl:\n    path: /etc/foo.d/\n    entity: joe\n    etype: user\n    permissions: rw\n    default: yes\n    state: present\n\n- name: Same as previous but using entry shorthand\n  ansible.posix.acl:\n    path: /etc/foo.d/\n    entry: default:user:joe:rw-\n    state: present\n\n- name: Obtain the ACL for a specific file\n  ansible.posix.acl:\n    path: /etc/foo.conf\n  register: acl_info\n",
        "metadata": null,
        "return": {
            "acl": {
                "description": "Current ACL on provided path (after changes, if any)",
                "returned": "success",
                "sample": [
                    "user::rwx",
                    "group::rwx",
                    "other::rwx"
                ],
                "type": "list"
            }
        }
    }
}
