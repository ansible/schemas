{
    "awx.awx.tower_organization": {
        "doc": {
            "author": "Wayne Witzel III (@wwitzel3)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower organizations. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_organization.py",
            "has_action": false,
            "module": "tower_organization",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "custom_virtualenv": {
                    "default": "",
                    "description": [
                        "Local absolute file path containing a custom Python virtualenv to use."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "The description to use for the organization."
                    ],
                    "type": "str"
                },
                "galaxy_credentials": {
                    "description": [
                        "list of Ansible Galaxy credentials to associate to the organization"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "max_hosts": {
                    "default": "0",
                    "description": [
                        "The max hosts allowed in this organizations"
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "Name to use for the organization."
                    ],
                    "required": true,
                    "type": "str"
                },
                "notification_templates_approvals": {
                    "description": [
                        "list of notifications to send on start"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_error": {
                    "description": [
                        "list of notifications to send on error"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_started": {
                    "description": [
                        "list of notifications to send on start"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_success": {
                    "description": [
                        "list of notifications to send on success"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the resource."
                    ],
                    "type": "str"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower organizations"
        },
        "examples": "\n- name: Create tower organization\n  tower_organization:\n    name: \"Foo\"\n    description: \"Foo bar organization\"\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Create tower organization using 'foo-venv' as default Python virtualenv\n  tower_organization:\n    name: \"Foo\"\n    description: \"Foo bar organization using foo-venv\"\n    custom_virtualenv: \"/var/lib/awx/venv/foo-venv/\"\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Create tower organization that pulls content from galaxy.ansible.com\n  tower_organization:\n    name: \"Foo\"\n    state: present\n    galaxy_credentials:\n      - Ansible Galaxy\n    tower_config_file: \"~/tower_cli.cfg\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
