{
    "cisco.aci.aci_epg_to_domain": {
        "doc": {
            "author": [
                "Jacob McGill (@jmcgill298)",
                "Shreyas Srish (@shrsr)"
            ],
            "collection": "cisco.aci",
            "description": [
                "Bind EPGs to Physical and Virtual Domains on Cisco ACI fabrics."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/aci/plugins/modules/aci_epg_to_domain.py",
            "has_action": false,
            "module": "aci_epg_to_domain",
            "notes": [
                "The C(tenant), C(ap), C(epg), and C(domain) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) M(cisco.aci.aci_ap), M(cisco.aci.aci_epg) M(cisco.aci.aci_domain) modules can be used for this.",
                "OpenStack VMM domains must not be created using this module. The OpenStack VMM domain is created directly by the Cisco APIC Neutron plugin as part of the installation and configuration. This module can be used to query status of an OpenStack VMM domain."
            ],
            "options": {
                "allow_useg": {
                    "choices": [
                        "encap",
                        "useg"
                    ],
                    "description": [
                        "Allows micro-segmentation.",
                        "The APIC defaults to C(encap) when unset during creation."
                    ],
                    "type": "str"
                },
                "annotation": {
                    "description": [
                        "User-defined string for annotating an object.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
                    ],
                    "type": "str"
                },
                "ap": {
                    "aliases": [
                        "app_profile",
                        "app_profile_name"
                    ],
                    "description": [
                        "Name of an existing application network profile, that will contain the EPGs."
                    ],
                    "type": "str"
                },
                "certificate_name": {
                    "aliases": [
                        "cert_name"
                    ],
                    "description": [
                        "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
                        "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
                        "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
                    ],
                    "type": "str"
                },
                "deploy_immediacy": {
                    "choices": [
                        "immediate",
                        "lazy"
                    ],
                    "description": [
                        "Determines when the policy is pushed to hardware Policy CAM.",
                        "The APIC defaults to C(lazy) when unset during creation."
                    ],
                    "type": "str"
                },
                "domain": {
                    "aliases": [
                        "domain_name",
                        "domain_profile"
                    ],
                    "description": [
                        "Name of the physical or virtual domain being associated with the EPG."
                    ],
                    "type": "str"
                },
                "domain_type": {
                    "aliases": [
                        "type"
                    ],
                    "choices": [
                        "l2dom",
                        "phys",
                        "vmm"
                    ],
                    "description": [
                        "Specify whether the Domain is a physical (phys), a virtual (vmm) or an L2 external domain association (l2dom)."
                    ],
                    "type": "str"
                },
                "encap": {
                    "description": [
                        "The VLAN encapsulation for the EPG when binding a VMM Domain with static C(encap_mode).",
                        "This acts as the secondary encap when using useg.",
                        "Accepted values range between C(1) and C(4096)."
                    ],
                    "type": "int"
                },
                "encap_mode": {
                    "choices": [
                        "auto",
                        "vlan",
                        "vxlan"
                    ],
                    "description": [
                        "The encapsulation method to be used.",
                        "The APIC defaults to C(auto) when unset during creation.",
                        "If vxlan is selected, switching_mode must be \"AVE\"."
                    ],
                    "type": "str"
                },
                "epg": {
                    "aliases": [
                        "epg_name",
                        "name"
                    ],
                    "description": [
                        "Name of the end point group."
                    ],
                    "type": "str"
                },
                "host": {
                    "aliases": [
                        "hostname"
                    ],
                    "description": [
                        "IP Address or hostname of APIC resolvable by Ansible control host.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "netflow": {
                    "description": [
                        "Determines if netflow should be enabled.",
                        "The APIC defaults to C(no) when unset during creation."
                    ],
                    "type": "bool"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "info",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Influence the output of this ACI module.",
                        "C(normal) means the standard output, incl. C(current) dict",
                        "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
                        "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
                    ],
                    "type": "str"
                },
                "output_path": {
                    "description": [
                        "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
                    ],
                    "type": "str"
                },
                "owner_key": {
                    "description": [
                        "User-defined string for the ownerKey attribute of an ACI object.",
                        "This attribute represents a key for enabling clients to own their data for entity correlation.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
                    ],
                    "type": "str"
                },
                "owner_tag": {
                    "description": [
                        "User-defined string for the ownerTag attribute of an ACI object.",
                        "This attribute represents a tag for enabling clients to add their own data.",
                        "For example, to indicate who created this object.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password to use for authentication.",
                        "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
                        "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ],
                    "type": "str"
                },
                "port": {
                    "description": [
                        "Port number to be used for REST connection.",
                        "The default value depends on parameter C(use_ssl).",
                        "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
                    ],
                    "type": "int"
                },
                "primary_encap": {
                    "description": [
                        "Determines the primary VLAN ID when using useg.",
                        "Accepted values range between C(1) and C(4096)."
                    ],
                    "type": "int"
                },
                "private_key": {
                    "aliases": [
                        "cert_key"
                    ],
                    "description": [
                        "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
                        "This value also influences the default C(certificate_name) that is used.",
                        "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) will be used instead."
                    ],
                    "type": "str"
                },
                "promiscuous": {
                    "choices": [
                        "accept",
                        "reject"
                    ],
                    "default": "reject",
                    "description": [
                        "Allow/Disallow promiscuous mode in vmm domain"
                    ],
                    "type": "str"
                },
                "resolution_immediacy": {
                    "choices": [
                        "immediate",
                        "lazy",
                        "pre-provision"
                    ],
                    "description": [
                        "Determines when the policies should be resolved and available.",
                        "The APIC defaults to C(lazy) when unset during creation."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Use C(present) or C(absent) for adding or removing.",
                        "Use C(query) for listing an object or multiple objects."
                    ],
                    "type": "str"
                },
                "switching_mode": {
                    "choices": [
                        "AVE",
                        "native"
                    ],
                    "default": "native",
                    "description": [
                        "Switching Mode used by the switch"
                    ],
                    "type": "str"
                },
                "tenant": {
                    "aliases": [
                        "tenant_name"
                    ],
                    "description": [
                        "Name of an existing tenant."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "The socket level timeout in seconds.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
                    ],
                    "type": "int"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
                    ],
                    "type": "bool"
                },
                "use_ssl": {
                    "default": true,
                    "description": [
                        "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "user"
                    ],
                    "default": "admin",
                    "description": [
                        "The username to use for authentication.",
                        "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                },
                "vm_provider": {
                    "choices": [
                        "cloudfoundry",
                        "kubernetes",
                        "microsoft",
                        "openshift",
                        "openstack",
                        "redhat",
                        "vmware"
                    ],
                    "description": [
                        "The VM platform for VMM Domains.",
                        "Support for Kubernetes was added in ACI v3.0.",
                        "Support for CloudFoundry, OpenShift and Red Hat was added in ACI v3.1."
                    ],
                    "type": "str"
                }
            },
            "seealso": [
                {
                    "module": "cisco.aci.aci_ap"
                },
                {
                    "module": "cisco.aci.aci_epg"
                },
                {
                    "module": "cisco.aci.aci_domain"
                },
                {
                    "description": "More information about the internal APIC class B(fv:RsDomAtt).",
                    "link": "https://developer.cisco.com/docs/apic-mim-ref/",
                    "name": "APIC Management Information Model reference"
                },
                {
                    "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
                    "ref": "aci_guide"
                },
                {
                    "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
                    "ref": "aci_dev_guide"
                }
            ],
            "short_description": "Bind EPGs to Domains (fv:RsDomAtt)"
        },
        "examples": "\n- name: Add a new physical domain to EPG binding\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    domain: anstest\n    domain_type: phys\n    state: present\n  delegate_to: localhost\n\n- name: Remove an existing physical domain to EPG binding\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    domain: anstest\n    domain_type: phys\n    state: absent\n  delegate_to: localhost\n\n- name: Query a specific physical domain to EPG binding\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: anstest\n    ap: anstest\n    epg: anstest\n    domain: anstest\n    domain_type: phys\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query all domain to EPG bindings\n  cisco.aci.aci_epg_to_domain:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": {
            "current": {
                "description": "The existing configuration from the APIC after the module has finished",
                "returned": "success",
                "sample": [
                    {
                        "fvTenant": {
                            "attributes": {
                                "descr": "Production environment",
                                "dn": "uni/tn-production",
                                "name": "production",
                                "nameAlias": "",
                                "ownerKey": "",
                                "ownerTag": ""
                            }
                        }
                    }
                ],
                "type": "list"
            },
            "error": {
                "description": "The error information as returned from the APIC",
                "returned": "failure",
                "sample": {
                    "code": "122",
                    "text": "unknown managed object class foo"
                },
                "type": "dict"
            },
            "filter_string": {
                "description": "The filter string used for the request",
                "returned": "failure or debug",
                "sample": "?rsp-prop-include=config-only",
                "type": "str"
            },
            "method": {
                "description": "The HTTP method used for the request to the APIC",
                "returned": "failure or debug",
                "sample": "POST",
                "type": "str"
            },
            "previous": {
                "description": "The original configuration from the APIC before the module has started",
                "returned": "info",
                "sample": [
                    {
                        "fvTenant": {
                            "attributes": {
                                "descr": "Production",
                                "dn": "uni/tn-production",
                                "name": "production",
                                "nameAlias": "",
                                "ownerKey": "",
                                "ownerTag": ""
                            }
                        }
                    }
                ],
                "type": "list"
            },
            "proposed": {
                "description": "The assembled configuration from the user-provided parameters",
                "returned": "info",
                "sample": {
                    "fvTenant": {
                        "attributes": {
                            "descr": "Production environment",
                            "name": "production"
                        }
                    }
                },
                "type": "dict"
            },
            "raw": {
                "description": "The raw output returned by the APIC REST API (xml or json)",
                "returned": "parse error",
                "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
                "type": "str"
            },
            "response": {
                "description": "The HTTP response from the APIC",
                "returned": "failure or debug",
                "sample": "OK (30 bytes)",
                "type": "str"
            },
            "sent": {
                "description": "The actual/minimal configuration pushed to the APIC",
                "returned": "info",
                "sample": {
                    "fvTenant": {
                        "attributes": {
                            "descr": "Production environment"
                        }
                    }
                },
                "type": "list"
            },
            "status": {
                "description": "The HTTP status from the APIC",
                "returned": "failure or debug",
                "sample": 200,
                "type": "int"
            },
            "url": {
                "description": "The HTTP url used for the request to the APIC",
                "returned": "failure or debug",
                "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
                "type": "str"
            }
        }
    }
}
