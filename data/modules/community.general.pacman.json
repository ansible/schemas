{
    "community.general.pacman": {
        "doc": {
            "author": [
                "Indrajit Raychaudhuri (@indrajitr)",
                "Aaron Bull Schaefer (@elasticdog) <aaron@elasticdog.com>",
                "Maxime de Roucy (@tchernomax)"
            ],
            "collection": "community.general",
            "description": [
                "Manage packages with the I(pacman) package manager, which is used by Arch Linux and its variants."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/pacman.py",
            "has_action": false,
            "module": "pacman",
            "notes": [
                "When used with a `loop:` each package will be processed individually, it is much more efficient to pass the list directly to the `name` option."
            ],
            "options": {
                "extra_args": {
                    "default": null,
                    "description": [
                        "Additional option to pass to pacman when enforcing C(state)."
                    ],
                    "type": "str"
                },
                "force": {
                    "default": false,
                    "description": [
                        "When removing package, force remove package, without any checks. Same as `extra_args=\"--nodeps --nodeps\"`. When update_cache, force redownload repo databases. Same as `update_cache_extra_args=\"--refresh --refresh\"`."
                    ],
                    "type": "bool"
                },
                "name": {
                    "aliases": [
                        "package",
                        "pkg"
                    ],
                    "description": [
                        "Name or list of names of the package(s) or file(s) to install, upgrade, or remove. Can't be used in combination with C(upgrade)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "latest",
                        "present",
                        "installed",
                        "removed"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the package."
                    ],
                    "type": "str"
                },
                "update_cache": {
                    "aliases": [
                        "update-cache"
                    ],
                    "default": false,
                    "description": [
                        "Whether or not to refresh the master package lists.",
                        "This can be run as part of a package installation or as a separate step.",
                        "Alias C(update-cache) has been deprecated and will be removed in community.general 5.0.0."
                    ],
                    "type": "bool"
                },
                "update_cache_extra_args": {
                    "default": null,
                    "description": [
                        "Additional option to pass to pacman when enforcing C(update_cache)."
                    ],
                    "type": "str"
                },
                "upgrade": {
                    "default": false,
                    "description": [
                        "Whether or not to upgrade the whole system. Can't be used in combination with C(name)."
                    ],
                    "type": "bool"
                },
                "upgrade_extra_args": {
                    "default": null,
                    "description": [
                        "Additional option to pass to pacman when enforcing C(upgrade)."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage packages with I(pacman)"
        },
        "examples": "\n- name: Install package foo from repo\n  community.general.pacman:\n    name: foo\n    state: present\n\n- name: Install package bar from file\n  community.general.pacman:\n    name: ~/bar-1.0-1-any.pkg.tar.xz\n    state: present\n\n- name: Install package foo from repo and bar from file\n  community.general.pacman:\n    name:\n      - foo\n      - ~/bar-1.0-1-any.pkg.tar.xz\n    state: present\n\n- name: Upgrade package foo\n  community.general.pacman:\n    name: foo\n    state: latest\n    update_cache: yes\n\n- name: Remove packages foo and bar\n  community.general.pacman:\n    name:\n      - foo\n      - bar\n    state: absent\n\n- name: Recursively remove package baz\n  community.general.pacman:\n    name: baz\n    state: absent\n    extra_args: --recursive\n\n- name: Run the equivalent of \"pacman -Sy\" as a separate step\n  community.general.pacman:\n    update_cache: yes\n\n- name: Run the equivalent of \"pacman -Su\" as a separate step\n  community.general.pacman:\n    upgrade: yes\n\n- name: Run the equivalent of \"pacman -Syu\" as a separate step\n  community.general.pacman:\n    update_cache: yes\n    upgrade: yes\n\n- name: Run the equivalent of \"pacman -Rdd\", force remove package baz\n  community.general.pacman:\n    name: baz\n    state: absent\n    force: yes\n",
        "metadata": null,
        "return": {
            "packages": {
                "description": "a list of packages that have been changed",
                "returned": "when upgrade is set to yes",
                "sample": [
                    "package",
                    "other-package"
                ],
                "type": "list"
            }
        }
    }
}
