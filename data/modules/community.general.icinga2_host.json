{
    "community.general.icinga2_host": {
        "doc": {
            "author": "Jurgen Brand (@t794104)",
            "collection": "community.general",
            "description": [
                "Add or remove a host to Icinga2 through the API.",
                "See U(https://www.icinga.com/docs/icinga2/latest/doc/12-icinga2-api/)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/icinga2_host.py",
            "has_action": false,
            "module": "icinga2_host",
            "options": {
                "check_command": {
                    "default": "hostalive",
                    "description": [
                        "The command used to check if the host is alive."
                    ],
                    "type": "str"
                },
                "client_cert": {
                    "description": [
                        "PEM formatted certificate chain file to be used for SSL client authentication. This file can also include the key as well, and if the key is included, C(client_key) is not required."
                    ],
                    "type": "path"
                },
                "client_key": {
                    "description": [
                        "PEM formatted file that contains your private key to be used for SSL client authentication. If C(client_cert) contains both the certificate and key, this option is not required."
                    ],
                    "type": "path"
                },
                "display_name": {
                    "description": [
                        "The name used to display the host.",
                        "If not specified, it defaults to the value of the I(name) parameter."
                    ],
                    "type": "str"
                },
                "force": {
                    "aliases": [
                        "thirsty"
                    ],
                    "default": false,
                    "description": [
                        "If C(yes) do not get a cached copy.",
                        "Alias C(thirsty) has been deprecated and will be removed in 2.13."
                    ],
                    "type": "bool"
                },
                "force_basic_auth": {
                    "default": "no",
                    "description": [
                        "httplib2, the library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail. This option forces the sending of the Basic authentication header upon initial request."
                    ],
                    "type": "bool"
                },
                "http_agent": {
                    "default": "ansible-httpget",
                    "description": [
                        "Header to identify as, generally appears in web server logs."
                    ],
                    "type": "str"
                },
                "ip": {
                    "description": [
                        "The IP address of the host."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "host"
                    ],
                    "description": [
                        "Name used to create / delete the host. This does not need to be the FQDN, but does needs to be unique."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Apply feature state."
                    ],
                    "type": "str"
                },
                "template": {
                    "description": [
                        "The template used to define the host.",
                        "Template cannot be modified after object creation."
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path"
                    ],
                    "type": "str"
                },
                "url_password": {
                    "description": [
                        "The password for use in HTTP basic authentication.",
                        "If the C(url_username) parameter is not specified, the C(url_password) parameter will not be used."
                    ],
                    "type": "str"
                },
                "url_username": {
                    "description": [
                        "The username for use in HTTP basic authentication.",
                        "This parameter can be used without C(url_password) for sites that allow empty passwords."
                    ],
                    "type": "str"
                },
                "use_proxy": {
                    "default": "yes",
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": "yes",
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                },
                "variables": {
                    "description": [
                        "Dictionary of variables."
                    ],
                    "type": "dict"
                },
                "zone": {
                    "description": [
                        "The zone from where this host should be polled."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage a host in Icinga2"
        },
        "examples": "\n- name: Add host to icinga\n  community.general.icinga2_host:\n    url: \"https://icinga2.example.com\"\n    url_username: \"ansible\"\n    url_password: \"a_secret\"\n    state: present\n    name: \"{{ ansible_fqdn }}\"\n    ip: \"{{ ansible_default_ipv4.address }}\"\n    variables:\n      foo: \"bar\"\n  delegate_to: 127.0.0.1\n",
        "metadata": null,
        "return": {
            "data": {
                "description": "The data structure used for create, modify or delete of the host",
                "returned": "always",
                "type": "dict"
            },
            "name": {
                "description": "The name used to create, modify or delete the host",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
