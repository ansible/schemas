{
    "community.general.oneview_enclosure_info": {
        "doc": {
            "author": [
                "Felipe Bulsoni (@fgbulsoni)",
                "Thiago Miotto (@tmiotto)",
                "Adriane Cardozo (@adriane-cardozo)"
            ],
            "collection": "community.general",
            "description": [
                "Retrieve information about one or more of the Enclosures from OneView.",
                "This module was called C(oneview_enclosure_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.general.oneview_enclosure_info) module no longer returns C(ansible_facts)!"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/oneview_enclosure_info.py",
            "has_action": false,
            "module": "oneview_enclosure_info",
            "notes": [
                "A sample configuration file for the config parameter can be found at: U(https://github.com/HewlettPackard/oneview-ansible/blob/master/examples/oneview_config-rename.json)",
                "Check how to use environment variables for configuration at: U(https://github.com/HewlettPackard/oneview-ansible#environment-variables)",
                "Additional Playbooks for the HPE OneView Ansible modules can be found at: U(https://github.com/HewlettPackard/oneview-ansible/tree/master/examples)",
                "The OneView API version used will directly affect returned and expected fields in resources. Information on setting the desired API version and can be found at: U(https://github.com/HewlettPackard/oneview-ansible#setting-your-oneview-version)"
            ],
            "options": {
                "api_version": {
                    "description": [
                        "OneView API Version."
                    ],
                    "type": "int"
                },
                "config": {
                    "description": [
                        "Path to a .json configuration file containing the OneView client configuration. The configuration file is optional and when used should be present in the host running the ansible commands. If the file path is not provided, the configuration will be loaded from environment variables. For links to example configuration files or how to use the environment variables verify the notes section."
                    ],
                    "type": "path"
                },
                "hostname": {
                    "description": [
                        "IP address or hostname for the appliance."
                    ],
                    "type": "str"
                },
                "image_streamer_hostname": {
                    "description": [
                        "IP address or hostname for the HPE Image Streamer REST API."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Enclosure name."
                    ],
                    "type": "str"
                },
                "options": {
                    "description": [
                        "List with options to gather additional information about an Enclosure and related resources. Options allowed: C(script), C(environmentalConfiguration), and C(utilization). For the option C(utilization), you can provide specific parameters."
                    ],
                    "elements": "raw",
                    "type": "list"
                },
                "params": {
                    "description": [
                        "List of params to delimit, filter and sort the list of resources.",
                        "params allowed: - C(start): The first item to return, using 0-based indexing. - C(count): The number of resources to return. - C(filter): A general filter/query string to narrow the list of items returned. - C(sort): The sort order of the returned data set."
                    ],
                    "type": "dict"
                },
                "password": {
                    "description": [
                        "Password for API authentication."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Username for API authentication."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "hpOneView >= 2.0.1",
                "python >= 2.7.9"
            ],
            "short_description": "Retrieve information about one or more Enclosures"
        },
        "examples": "\n- name: Gather information about all Enclosures\n  community.general.oneview_enclosure_info:\n    hostname: 172.16.101.48\n    username: administrator\n    password: my_password\n    api_version: 500\n  no_log: true\n  delegate_to: localhost\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosures }}\"\n\n- name: Gather paginated, filtered and sorted information about Enclosures\n  community.general.oneview_enclosure_info:\n    params:\n      start: 0\n      count: 3\n      sort: name:descending\n      filter: status=OK\n    hostname: 172.16.101.48\n    username: administrator\n    password: my_password\n    api_version: 500\n  no_log: true\n  delegate_to: localhost\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosures }}\"\n\n- name: Gather information about an Enclosure by name\n  community.general.oneview_enclosure_info:\n    name: Enclosure-Name\n    hostname: 172.16.101.48\n    username: administrator\n    password: my_password\n    api_version: 500\n  no_log: true\n  delegate_to: localhost\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosures }}\"\n\n- name: Gather information about an Enclosure by name with options\n  community.general.oneview_enclosure_info:\n    name: Test-Enclosure\n    options:\n      - script                       # optional\n      - environmentalConfiguration   # optional\n      - utilization                  # optional\n    hostname: 172.16.101.48\n    username: administrator\n    password: my_password\n    api_version: 500\n  no_log: true\n  delegate_to: localhost\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosures }}\"\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosure_script }}\"\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosure_environmental_configuration }}\"\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosure_utilization }}\"\n\n- name: \"Gather information about an Enclosure with temperature data at a resolution of one sample per day, between two\n         specified dates\"\n  community.general.oneview_enclosure_info:\n    name: Test-Enclosure\n    options:\n      - utilization:                   # optional\n          fields: AmbientTemperature\n          filter:\n            - startDate=2016-07-01T14:29:42.000Z\n            - endDate=2017-07-01T03:29:42.000Z\n          view: day\n          refresh: false\n    hostname: 172.16.101.48\n    username: administrator\n    password: my_password\n    api_version: 500\n  no_log: true\n  delegate_to: localhost\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosures }}\"\n- ansible.builtin.debug:\n    msg: \"{{ result.enclosure_utilization }}\"\n",
        "metadata": null,
        "return": {
            "enclosure_environmental_configuration": {
                "description": "Has all the OneView information about the environmental configuration of an Enclosure.",
                "returned": "When requested, but can be null.",
                "type": "dict"
            },
            "enclosure_script": {
                "description": "Has all the OneView information about the script of an Enclosure.",
                "returned": "When requested, but can be null.",
                "type": "str"
            },
            "enclosure_utilization": {
                "description": "Has all the OneView information about the utilization of an Enclosure.",
                "returned": "When requested, but can be null.",
                "type": "dict"
            },
            "enclosures": {
                "description": "Has all the OneView information about the Enclosures.",
                "returned": "Always, but can be null.",
                "type": "dict"
            }
        }
    }
}
