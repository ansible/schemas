{
    "amazon.aws.ec2_vpc_net": {
        "doc": {
            "author": [
                "Jonathan Davila (@defionscode)",
                "Sloane Hertel (@s-hertel)"
            ],
            "collection": "amazon.aws",
            "description": [
                "Create, modify, and terminate AWS virtual private clouds."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/amazon/aws/plugins/modules/ec2_vpc_net.py",
            "has_action": false,
            "module": "ec2_vpc_net",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "cidr_block": {
                    "description": [
                        "The primary CIDR of the VPC. After 2.5 a list of CIDRs can be provided. The first in the list will be used as the primary CIDR and is used in conjunction with the C(name) to ensure idempotence."
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "dhcp_opts_id": {
                    "description": [
                        "The id of the DHCP options to use for this VPC."
                    ],
                    "type": "str"
                },
                "dns_hostnames": {
                    "default": true,
                    "description": [
                        "Whether to enable AWS hostname support."
                    ],
                    "type": "bool"
                },
                "dns_support": {
                    "default": true,
                    "description": [
                        "Whether to enable AWS DNS support."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "ipv6_cidr": {
                    "default": false,
                    "description": [
                        "Request an Amazon-provided IPv6 CIDR block with /56 prefix length.  You cannot specify the range of IPv6 addresses, or the size of the CIDR block."
                    ],
                    "type": "bool"
                },
                "multi_ok": {
                    "default": false,
                    "description": [
                        "By default the module will not create another VPC if there is another VPC with the same name and CIDR block. Specify this as true if you want duplicate VPCs created."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "The name to give your VPC. This is used in combination with C(cidr_block) to determine if a VPC already exists."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "purge_cidrs": {
                    "default": false,
                    "description": [
                        "Remove CIDRs that are associated with the VPC and are not specified in C(cidr_block)."
                    ],
                    "type": "bool"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "The state of the VPC. Either absent or present."
                    ],
                    "type": "str"
                },
                "tags": {
                    "aliases": [
                        "resource_tags"
                    ],
                    "description": [
                        "The tags you want attached to the VPC. This is independent of the name value, note if you pass a 'Name' key it would override the Name of the VPC if it's different."
                    ],
                    "type": "dict"
                },
                "tenancy": {
                    "choices": [
                        "default",
                        "dedicated"
                    ],
                    "default": "default",
                    "description": [
                        "Whether to be default or dedicated tenancy. This cannot be changed after the VPC has been created."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore",
                "python >= 2.6"
            ],
            "short_description": "Configure AWS virtual private clouds"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: create a VPC with dedicated tenancy and a couple of tags\n  ec2_vpc_net:\n    name: Module_dev2\n    cidr_block: 10.10.0.0/16\n    region: us-east-1\n    tags:\n      module: ec2_vpc_net\n      this: works\n    tenancy: dedicated\n\n- name: create a VPC with dedicated tenancy and request an IPv6 CIDR\n  ec2_vpc_net:\n    name: Module_dev2\n    cidr_block: 10.10.0.0/16\n    ipv6_cidr: True\n    region: us-east-1\n    tenancy: dedicated\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "stableinterface"
            ],
            "supported_by": "core"
        },
        "return": {
            "vpc": {
                "contains": {
                    "cidr_block": {
                        "description": "The CIDR of the VPC",
                        "returned": "always",
                        "sample": "10.0.0.0/16",
                        "type": "str"
                    },
                    "cidr_block_association_set": {
                        "description": "IPv4 CIDR blocks associated with the VPC",
                        "returned": "success",
                        "sample": {
                            "cidr_block_association_set": [
                                {
                                    "association_id": "vpc-cidr-assoc-97aeeefd",
                                    "cidr_block": "20.0.0.0/24",
                                    "cidr_block_state": {
                                        "state": "associated"
                                    }
                                }
                            ]
                        },
                        "type": "list"
                    },
                    "classic_link_enabled": {
                        "description": "indicates whether ClassicLink is enabled",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "dhcp_options_id": {
                        "description": "the id of the DHCP options associated with this VPC",
                        "returned": "always",
                        "sample": "dopt-0fb8bd6b",
                        "type": "str"
                    },
                    "id": {
                        "description": "VPC resource id",
                        "returned": "always",
                        "sample": "vpc-c2e00da5",
                        "type": "str"
                    },
                    "instance_tenancy": {
                        "description": "indicates whether VPC uses default or dedicated tenancy",
                        "returned": "always",
                        "sample": "default",
                        "type": "str"
                    },
                    "ipv6_cidr_block_association_set": {
                        "description": "IPv6 CIDR blocks associated with the VPC",
                        "returned": "success",
                        "sample": {
                            "ipv6_cidr_block_association_set": [
                                {
                                    "association_id": "vpc-cidr-assoc-97aeeefd",
                                    "ipv6_cidr_block": "2001:db8::/56",
                                    "ipv6_cidr_block_state": {
                                        "state": "associated"
                                    }
                                }
                            ]
                        },
                        "type": "list"
                    },
                    "is_default": {
                        "description": "indicates whether this is the default VPC",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "state": {
                        "description": "state of the VPC",
                        "returned": "always",
                        "sample": "available",
                        "type": "str"
                    },
                    "tags": {
                        "contains": {
                            "Name": {
                                "description": "name tag for the VPC",
                                "returned": "always",
                                "sample": "pk_vpc4",
                                "type": "str"
                            }
                        },
                        "description": "tags attached to the VPC, includes name",
                        "returned": "always",
                        "type": "complex"
                    }
                },
                "description": "info about the VPC that was created or deleted",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
