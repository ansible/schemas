{
    "servicenow.servicenow.snow_record_find": {
        "doc": {
            "author": [
                "Tim Rightnour (@garbled1)"
            ],
            "collection": "servicenow.servicenow",
            "description": [
                "Gets multiple records from a specified table from ServiceNow based on a query dictionary."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/servicenow/servicenow/plugins/modules/snow_record_find.py",
            "has_action": false,
            "module": "snow_record_find",
            "options": {
                "client_id": {
                    "description": [
                        "Client ID generated by ServiceNow."
                    ],
                    "required": false,
                    "type": "str"
                },
                "client_secret": {
                    "description": [
                        "Client Secret associated with client id."
                    ],
                    "required": false,
                    "type": "str"
                },
                "display_value": {
                    "default": false,
                    "description": [
                        "sysparm_display_value"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "exclude_reference_link": {
                    "default": false,
                    "description": [
                        "sysparm_exclude_reference_link"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "host": {
                    "description": [
                        "The ServiceNow hostname.",
                        "This value is FQDN for ServiceNow host.",
                        "If the value is not specified in the task, the value of environment variable C(SN_HOST) will be used instead.",
                        "Mutually exclusive with C(instance)."
                    ],
                    "type": "str"
                },
                "instance": {
                    "description": [
                        "The ServiceNow instance name, without the domain, service-now.com.",
                        "If the value is not specified in the task, the value of environment variable C(SN_INSTANCE) will be used instead."
                    ],
                    "required": false,
                    "type": "str"
                },
                "max_records": {
                    "default": 20,
                    "description": [
                        "Maximum number of records to return."
                    ],
                    "required": false,
                    "type": "int"
                },
                "order_by": {
                    "default": "-created_on",
                    "description": [
                        "Field to sort the results on.",
                        "Can prefix with \"-\" or \"+\" to change descending or ascending sort order."
                    ],
                    "required": false,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Password for username.",
                        "Required whether using Basic or OAuth authentication.",
                        "If the value is not specified in the task, the value of environment variable C(SN_PASSWORD) will be used instead."
                    ],
                    "required": false,
                    "type": "str"
                },
                "query": {
                    "description": [
                        "Dict to query for records."
                    ],
                    "required": true,
                    "type": "dict"
                },
                "return_fields": {
                    "description": [
                        "Fields of the record to return in the json.",
                        "By default, all fields will be returned."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "suppress_pagination_header": {
                    "default": false,
                    "description": [
                        "sysparm_suppress_pagination_header"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "table": {
                    "default": "incident",
                    "description": [
                        "Table to query for records."
                    ],
                    "required": false,
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Name of user for connection to ServiceNow.",
                        "Required whether using Basic or OAuth authentication.",
                        "If the value is not specified in the task, the value of environment variable C(SN_USERNAME) will be used instead."
                    ],
                    "required": false,
                    "type": "str"
                }
            },
            "requirements": [
                "python pysnow (pysnow)"
            ],
            "short_description": "Search for multiple records from ServiceNow"
        },
        "examples": "\n- name: Search for incident assigned to group, return specific fields\n  servicenow.servicenow.snow_record_find:\n    username: ansible_test\n    password: my_password\n    instance: dev99999\n    table: incident\n    query:\n      assignment_group: d625dccec0a8016700a222a0f7900d06\n    return_fields:\n      - number\n      - opened_at\n\n- name: Search for incident using host instead of instance\n  servicenow.servicenow.snow_record_find:\n    username: ansible_test\n    password: my_password\n    host: dev99999.mycustom.domain.com\n    table: incident\n    query:\n      assignment_group: d625dccec0a8016700a222a0f7900d06\n    return_fields:\n      - number\n      - opened_at\n\n- name: Using OAuth, search for incident assigned to group, return specific fields\n  servicenow.servicenow.snow_record_find:\n    username: ansible_test\n    password: my_password\n    client_id: \"1234567890abcdef1234567890abcdef\"\n    client_secret: \"Password1!\"\n    instance: dev99999\n    table: incident\n    query:\n      assignment_group: d625dccec0a8016700a222a0f7900d06\n    return_fields:\n      - number\n      - opened_at\n\n- name: Find open standard changes with my template\n  servicenow.servicenow.snow_record_find:\n    username: ansible_test\n    password: my_password\n    instance: dev99999\n    table: change_request\n    query:\n      AND:\n        equals:\n          active: \"True\"\n          type: \"standard\"\n          u_change_stage: \"80\"\n        contains:\n          u_template: \"MY-Template\"\n    return_fields:\n      - sys_id\n      - number\n      - sys_created_on\n      - sys_updated_on\n      - u_template\n      - active\n      - type\n      - u_change_stage\n      - sys_created_by\n      - description\n      - short_description\n",
        "metadata": null,
        "return": {
            "record": {
                "description": "The full contents of the matching ServiceNow records as a list of records.",
                "returned": "always",
                "type": "dict"
            }
        }
    }
}
