{
    "community.vmware.vmware_guest_boot_info": {
        "doc": {
            "author": [
                "Abhijeet Kasurde (@Akasurde)"
            ],
            "collection": "community.vmware",
            "description": [
                "Gather information about boot options for the given virtual machine."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_guest_boot_info.py",
            "has_action": false,
            "module": "vmware_guest_boot_info",
            "notes": [
                "Tested on vSphere 6.5"
            ],
            "options": {
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "moid": {
                    "description": [
                        "Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.",
                        "This is required if C(name) or C(uuid) is not supplied."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the VM to work with.",
                        "This is required if C(uuid) or C(moid) parameter is not supplied."
                    ],
                    "type": "str"
                },
                "name_match": {
                    "choices": [
                        "first",
                        "last"
                    ],
                    "default": "first",
                    "description": [
                        "If multiple virtual machines matching the name, use the first or last found."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "use_instance_uuid": {
                    "default": false,
                    "description": [
                        "Whether to use the VMware instance UUID rather than the BIOS UUID."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "uuid": {
                    "description": [
                        "UUID of the instance to manage if known, this is VMware's BIOS UUID by default.",
                        "This is required if C(name) or C(moid) parameter is not supplied."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Gather info about boot options for the given virtual machine"
        },
        "examples": "\n- name: Gather info about virtual machine's boot order and related parameters\n  community.vmware.vmware_guest_boot_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    name: \"{{ vm_name }}\"\n  register: vm_boot_order_info\n\n- name: Gather information about virtual machine's boot order using MoID\n  community.vmware.vmware_guest_boot_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    moid: \"vm-42\"\n  register: vm_moid_boot_order_info\n",
        "metadata": null,
        "return": {
            "vm_boot_info": {
                "description": "metadata about boot order of virtual machine",
                "returned": "always",
                "sample": {
                    "current_boot_delay": 2000,
                    "current_boot_firmware": "bios",
                    "current_boot_order": [
                        "floppy",
                        "disk",
                        "ethernet",
                        "cdrom"
                    ],
                    "current_boot_retry_delay": 22300,
                    "current_boot_retry_enabled": true,
                    "current_enter_bios_setup": true,
                    "current_secure_boot_enabled": false
                },
                "type": "dict"
            }
        }
    }
}
