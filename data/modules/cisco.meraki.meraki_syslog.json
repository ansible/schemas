{
    "cisco.meraki.meraki_syslog": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Allows for creation and management of Syslog servers within Meraki."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_syslog.py",
            "has_action": false,
            "module": "meraki_syslog",
            "notes": [
                "Changes to existing syslog servers replaces existing configuration. If you need to add to an existing configuration set state to query to gather the existing configuration and then modify or add.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable MERAKI_KEY is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "net_id": {
                    "description": [
                        "ID number of a network."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "aliases": [
                        "name",
                        "network"
                    ],
                    "description": [
                        "Name of a network."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "servers": {
                    "description": [
                        "List of syslog server settings"
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "host": {
                            "description": [
                                "IP address or hostname of Syslog server."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "default": "514",
                            "description": [
                                "Port number Syslog server is listening on."
                            ],
                            "type": "int"
                        },
                        "roles": {
                            "choices": [
                                "Wireless Event log",
                                "Appliance event log",
                                "Switch event log",
                                "Air Marshal events",
                                "Flows",
                                "URLs",
                                "IDS alerts",
                                "Security events"
                            ],
                            "description": [
                                "List of applicable Syslog server roles."
                            ],
                            "elements": "str",
                            "type": "list"
                        }
                    },
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Query or edit syslog servers",
                        "To delete a syslog server, do not include server in list of servers"
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage syslog server settings in the Meraki cloud."
        },
        "examples": "\n- name: Query syslog configurations on network named MyNet in the YourOrg organization\n  meraki_syslog:\n    auth_key: abc12345\n    status: query\n    org_name: YourOrg\n    net_name: MyNet\n  delegate_to: localhost\n\n- name: Add single syslog server with Appliance event log role\n  meraki_syslog:\n    auth_key: abc12345\n    status: query\n    org_name: YourOrg\n    net_name: MyNet\n    servers:\n      - host: 192.0.1.2\n        port: 514\n        roles:\n          - Appliance event log\n  delegate_to: localhost\n\n- name: Add multiple syslog servers\n  meraki_syslog:\n    auth_key: abc12345\n    status: query\n    org_name: YourOrg\n    net_name: MyNet\n    servers:\n      - host: 192.0.1.2\n        port: 514\n        roles:\n          - Appliance event log\n      - host: 192.0.1.3\n        port: 514\n        roles:\n          - Appliance event log\n          - Flows\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "servers": {
                        "contains": {
                            "host": {
                                "description": "Hostname or IP address of syslog server.",
                                "returned": "success",
                                "sample": "192.0.1.1",
                                "type": "str"
                            },
                            "port": {
                                "description": "Port number for syslog communication.",
                                "returned": "success",
                                "sample": 443,
                                "type": "str"
                            },
                            "roles": {
                                "description": "List of roles assigned to syslog server.",
                                "returned": "success",
                                "sample": "Wireless event log, URLs",
                                "type": "list"
                            }
                        },
                        "description": "List of syslog servers.",
                        "returned": "info",
                        "type": "complex"
                    }
                },
                "description": "Information about the created or manipulated object.",
                "returned": "info",
                "type": "complex"
            }
        }
    }
}
