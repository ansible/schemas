{
    "cisco.ios.ios_user": {
        "doc": {
            "author": "Trishna Guha (@trishnaguha)",
            "collection": "cisco.ios",
            "description": [
                "This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage either individual usernames or the aggregate of usernames in the current running config. It also supports purging usernames from the configuration that are not explicitly defined."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/ios/plugins/modules/ios_user.py",
            "has_action": true,
            "module": "ios_user",
            "notes": [
                "Tested against IOS 15.6",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "aggregate": {
                    "aliases": [
                        "users",
                        "collection"
                    ],
                    "description": [
                        "The set of username objects to be configured on the remote Cisco IOS device. The list entries can either be the username or a hash of username and properties. This argument is mutually exclusive with the C(name) argument."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "configured_password": {
                            "description": [
                                "The password to be configured on the Cisco IOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this option is not same as C(provider password)."
                            ],
                            "type": "str"
                        },
                        "hashed_password": {
                            "description": [
                                "This option allows configuring hashed passwords on Cisco IOS devices."
                            ],
                            "suboptions": {
                                "type": {
                                    "description": [
                                        "Specifies the type of hash (e.g., 5 for MD5, 8 for PBKDF2, etc.)",
                                        "For this to work, the device needs to support the desired hash type"
                                    ],
                                    "required": true,
                                    "type": "int"
                                },
                                "value": {
                                    "description": [
                                        "The actual hashed password to be configured on the device"
                                    ],
                                    "required": true,
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "name": {
                            "description": [
                                "The username to be configured on the Cisco IOS device. This argument accepts a string value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "nopassword": {
                            "description": [
                                "Defines the username without assigning a password. This will allow the user to login to the system without being authenticated by a password."
                            ],
                            "type": "bool"
                        },
                        "password_type": {
                            "choices": [
                                "secret",
                                "password"
                            ],
                            "description": [
                                "This argument determines whether a 'password' or 'secret' will be configured."
                            ],
                            "type": "str"
                        },
                        "privilege": {
                            "description": [
                                "The C(privilege) argument configures the privilege level of the user when logged into the system. This argument accepts integer values in the range of 1 to 15."
                            ],
                            "type": "int"
                        },
                        "sshkey": {
                            "description": [
                                "Specifies one or more SSH public key(s) to configure for the given username.",
                                "This argument accepts a valid SSH key value."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "state": {
                            "choices": [
                                "present",
                                "absent"
                            ],
                            "description": [
                                "Configures the state of the username definition as it relates to the device operational configuration. When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration"
                            ],
                            "type": "str"
                        },
                        "update_password": {
                            "choices": [
                                "on_create",
                                "always"
                            ],
                            "description": [
                                "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created."
                            ],
                            "type": "str"
                        },
                        "view": {
                            "aliases": [
                                "role"
                            ],
                            "description": [
                                "Configures the view for the username in the device running configuration. The argument accepts a string value defining the view name. This argument does not check if the view has been configured on the device."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "configured_password": {
                    "description": [
                        "The password to be configured on the Cisco IOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this option is not same as C(provider password)."
                    ],
                    "type": "str"
                },
                "hashed_password": {
                    "description": [
                        "This option allows configuring hashed passwords on Cisco IOS devices."
                    ],
                    "suboptions": {
                        "type": {
                            "description": [
                                "Specifies the type of hash (e.g., 5 for MD5, 8 for PBKDF2, etc.)",
                                "For this to work, the device needs to support the desired hash type"
                            ],
                            "required": true,
                            "type": "int"
                        },
                        "value": {
                            "description": [
                                "The actual hashed password to be configured on the device"
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "name": {
                    "description": [
                        "The username to be configured on the Cisco IOS device. This argument accepts a string value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username)."
                    ],
                    "type": "str"
                },
                "nopassword": {
                    "description": [
                        "Defines the username without assigning a password. This will allow the user to login to the system without being authenticated by a password."
                    ],
                    "type": "bool"
                },
                "password_type": {
                    "choices": [
                        "secret",
                        "password"
                    ],
                    "default": "secret",
                    "description": [
                        "This argument determines whether a 'password' or 'secret' will be configured."
                    ],
                    "type": "str"
                },
                "privilege": {
                    "description": [
                        "The C(privilege) argument configures the privilege level of the user when logged into the system. This argument accepts integer values in the range of 1 to 15."
                    ],
                    "type": "int"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "path"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "purge": {
                    "default": false,
                    "description": [
                        "Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the device with the exception of the `admin` user (the current defined set of users)."
                    ],
                    "type": "bool"
                },
                "sshkey": {
                    "description": [
                        "Specifies one or more SSH public key(s) to configure for the given username.",
                        "This argument accepts a valid SSH key value."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Configures the state of the username definition as it relates to the device operational configuration. When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration"
                    ],
                    "type": "str"
                },
                "update_password": {
                    "choices": [
                        "on_create",
                        "always"
                    ],
                    "default": "always",
                    "description": [
                        "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created."
                    ],
                    "type": "str"
                },
                "view": {
                    "aliases": [
                        "role"
                    ],
                    "description": [
                        "Configures the view for the username in the device running configuration. The argument accepts a string value defining the view name. This argument does not check if the view has been configured on the device."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage the aggregate of local users on Cisco IOS device",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.ios"
        },
        "examples": "\n- name: create a new user\n  cisco.ios.ios_user:\n    name: ansible\n    nopassword: true\n    sshkey: \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\"\n    state: present\n\n- name: create a new user with multiple keys\n  cisco.ios.ios_user:\n    name: ansible\n    sshkey:\n    - \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\"\n    - \"{{ lookup('file', '~/path/to/public_key') }}\"\n    state: present\n\n- name: remove all users except admin\n  cisco.ios.ios_user:\n    purge: yes\n\n- name: remove all users except admin and these listed users\n  cisco.ios.ios_user:\n    aggregate:\n    - name: testuser1\n    - name: testuser2\n    - name: testuser3\n    purge: yes\n\n- name: set multiple users to privilege level 15\n  cisco.ios.ios_user:\n    aggregate:\n    - name: netop\n    - name: netend\n    privilege: 15\n    state: present\n\n- name: set user view/role\n  cisco.ios.ios_user:\n    name: netop\n    view: network-operator\n    state: present\n\n- name: Change Password for User netop\n  cisco.ios.ios_user:\n    name: netop\n    configured_password: '{{ new_password }}'\n    update_password: always\n    state: present\n\n- name: Aggregate of users\n  cisco.ios.ios_user:\n    aggregate:\n    - name: ansibletest2\n    - name: ansibletest3\n    view: network-admin\n\n- name: Add a user specifying password type\n  cisco.ios.ios_user:\n    name: ansibletest4\n    configured_password: '{{ new_password }}'\n    password_type: password\n\n- name: Add a user with MD5 hashed password\n  cisco.ios.ios_user:\n    name: ansibletest5\n    hashed_password:\n      type: 5\n      value: $3$8JcDilcYgFZi.yz4ApaqkHG2.8/\n\n- name: Delete users with aggregate\n  cisco.ios.ios_user:\n    aggregate:\n    - name: ansibletest1\n    - name: ansibletest2\n    - name: ansibletest3\n    state: absent\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "The list of configuration mode commands to send to the device",
                "returned": "always",
                "sample": [
                    "username ansible secret password",
                    "username admin secret admin"
                ],
                "type": "list"
            }
        }
    }
}
