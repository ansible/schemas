{
    "amazon.aws.ec2_tag": {
        "doc": {
            "author": [
                "Lester Wade (@lwade)",
                "Paul Arthur (@flowerysong)"
            ],
            "collection": "amazon.aws",
            "description": [
                "Creates, modifies and removes tags for any EC2 resource.",
                "Resources are referenced by their resource id (for example, an instance being i-XXXXXXX, a VPC being vpc-XXXXXXX).",
                "This module is designed to be used with complex args (tags), see the examples."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/amazon/aws/plugins/modules/ec2_tag.py",
            "has_action": false,
            "module": "ec2_tag",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "purge_tags": {
                    "default": false,
                    "description": [
                        "Whether unspecified tags should be removed from the resource.",
                        "Note that when combined with I(state=absent), specified tags with non-matching values are not purged."
                    ],
                    "type": "bool"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "resource": {
                    "description": [
                        "The EC2 resource id."
                    ],
                    "required": true,
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "list"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the tags should be present or absent on the resource.",
                        "The use of I(state=list) to interrogate the tags of an instance has been deprecated and will be removed in Anisble 2.14.  The 'list' functionality has been moved to a dedicated module M(ec2_tag_info)."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "A dictionary of tags to add or remove from the resource.",
                        "If the value provided for a key is not set and I(state=absent), the tag will be removed regardless of its current value.",
                        "Required when I(state=present) or I(state=absent)."
                    ],
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore",
                "python >= 2.6"
            ],
            "short_description": "create and remove tags on ec2 resources"
        },
        "examples": "\n- name: Ensure tags are present on a resource\n  ec2_tag:\n    region: eu-west-1\n    resource: vol-XXXXXX\n    state: present\n    tags:\n      Name: ubervol\n      env: prod\n\n- name: Ensure all volumes are tagged\n  ec2_tag:\n    region:  eu-west-1\n    resource: '{{ item.id }}'\n    state: present\n    tags:\n      Name: dbserver\n      Env: production\n  loop: '{{ ec2_vol.volumes }}'\n\n- name: Remove the Env tag\n  ec2_tag:\n    region: eu-west-1\n    resource: i-xxxxxxxxxxxxxxxxx\n    tags:\n      Env:\n    state: absent\n\n- name: Remove the Env tag if it's currently 'development'\n  ec2_tag:\n    region: eu-west-1\n    resource: i-xxxxxxxxxxxxxxxxx\n    tags:\n      Env: development\n    state: absent\n\n- name: Remove all tags except for Name from an instance\n  ec2_tag:\n    region: eu-west-1\n    resource: i-xxxxxxxxxxxxxxxxx\n    tags:\n        Name: ''\n    state: absent\n    purge_tags: true\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "stableinterface"
            ],
            "supported_by": "community"
        },
        "return": {
            "added_tags": {
                "description": "A dict of tags that were added to the resource",
                "returned": "If tags were added",
                "type": "dict"
            },
            "removed_tags": {
                "description": "A dict of tags that were removed from the resource",
                "returned": "If tags were removed",
                "type": "dict"
            },
            "tags": {
                "description": "A dict containing the tags on the resource",
                "returned": "always",
                "type": "dict"
            }
        }
    }
}
