{
    "community.network.ce_info_center_debug": {
        "doc": {
            "author": [
                "wangdezhuang (@QijunPan)"
            ],
            "collection": "community.network",
            "description": [
                "Manages information center debug configurations on HUAWEI CloudEngine switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_info_center_debug.py",
            "has_action": false,
            "module": "ce_info_center_debug",
            "notes": [
                "This module requires the netconf system service be enabled on the remote device being managed.",
                "Recommended connection is C(netconf).",
                "This module also works with C(local) connections for legacy playbooks."
            ],
            "options": {
                "channel_id": {
                    "description": [
                        "Number of a channel. The value is an integer ranging from 0 to 9. The default value is 0."
                    ]
                },
                "debug_enable": {
                    "choices": [
                        "no_use",
                        "true",
                        "false"
                    ],
                    "default": "no_use",
                    "description": [
                        "Whether a device is enabled to output debugging information."
                    ]
                },
                "debug_level": {
                    "choices": [
                        "emergencies",
                        "alert",
                        "critical",
                        "error",
                        "warning",
                        "notification",
                        "informational",
                        "debugging"
                    ],
                    "description": [
                        "Debug level permitted to output."
                    ]
                },
                "debug_time_stamp": {
                    "choices": [
                        "date_boot",
                        "date_second",
                        "date_tenthsecond",
                        "date_millisecond",
                        "shortdate_second",
                        "shortdate_tenthsecond",
                        "shortdate_millisecond",
                        "formatdate_second",
                        "formatdate_tenthsecond",
                        "formatdate_millisecond"
                    ],
                    "description": [
                        "Timestamp type of debugging information."
                    ]
                },
                "module_name": {
                    "description": [
                        "Module name of the rule. The value is a string of 1 to 31 case-insensitive characters. The default value is default. Please use lower-case letter, such as [aaa, acl, arp, bfd]."
                    ]
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Specify desired state of the resource."
                    ]
                }
            },
            "short_description": "Manages information center debug configuration on HUAWEI CloudEngine switches."
        },
        "examples": "\n\n- name: CloudEngine info center debug test\n  hosts: cloudengine\n  connection: local\n  gather_facts: no\n  vars:\n    cli:\n      host: \"{{ inventory_hostname }}\"\n      port: \"{{ ansible_ssh_port }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      transport: cli\n\n  tasks:\n\n  - name: \"Config debug time stamp\"\n    community.network.ce_info_center_debug:\n      state: present\n      debug_time_stamp: date_boot\n      provider: \"{{ cli }}\"\n\n  - name: \"Undo debug time stamp\"\n    community.network.ce_info_center_debug:\n      state: absent\n      debug_time_stamp: date_boot\n      provider: \"{{ cli }}\"\n\n  - name: \"Config debug module log level\"\n    community.network.ce_info_center_debug:\n      state: present\n      module_name: aaa\n      channel_id: 1\n      debug_enable: true\n      debug_level: error\n      provider: \"{{ cli }}\"\n\n  - name: \"Undo debug module log level\"\n    community.network.ce_info_center_debug:\n      state: absent\n      module_name: aaa\n      channel_id: 1\n      debug_enable: true\n      debug_level: error\n      provider: \"{{ cli }}\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of aaa params after module execution",
                "returned": "always",
                "sample": {
                    "debugTimeStamp": "DATE_BOOT"
                },
                "type": "dict"
            },
            "existing": {
                "description": "k/v pairs of existing aaa server",
                "returned": "always",
                "sample": {
                    "debugTimeStamp": "DATE_MILLISECOND"
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "debug_time_stamp": "date_boot",
                    "state": "present"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command sent to the device",
                "returned": "always",
                "sample": [
                    "info-center timestamp debugging boot"
                ],
                "type": "list"
            }
        }
    }
}
