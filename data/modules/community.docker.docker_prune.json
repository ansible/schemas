{
    "community.docker.docker_prune": {
        "doc": {
            "author": [
                "Felix Fontein (@felixfontein)"
            ],
            "collection": "community.docker",
            "description": [
                "Allows to run C(docker container prune), C(docker image prune), C(docker network prune) and C(docker volume prune) via the Docker API."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/docker/plugins/modules/docker_prune.py",
            "has_action": false,
            "module": "docker_prune",
            "notes": [
                "Connect to the Docker daemon by providing parameters with each task or by defining environment variables. You can define C(DOCKER_HOST), C(DOCKER_TLS_HOSTNAME), C(DOCKER_API_VERSION), C(DOCKER_CERT_PATH), C(DOCKER_SSL_VERSION), C(DOCKER_TLS), C(DOCKER_TLS_VERIFY) and C(DOCKER_TIMEOUT). If you are using docker machine, run the script shipped with the product that sets up the environment. It will set these variables for you. See U(https://docs.docker.com/machine/reference/env/) for more details.",
                "When connecting to Docker daemon with TLS, you might need to install additional Python packages. For the Docker SDK for Python, version 2.4 or newer, this can be done by installing C(docker[tls]) with M(ansible.builtin.pip).",
                "Note that the Docker SDK for Python only allows to specify the path to the Docker configuration for very few functions. In general, it will use C($HOME/.docker/config.json) if the C(DOCKER_CONFIG) environment variable is not specified, and use C($DOCKER_CONFIG/config.json) otherwise.",
                "This module uses the L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) to communicate with the Docker daemon."
            ],
            "options": {
                "api_version": {
                    "aliases": [
                        "docker_api_version"
                    ],
                    "default": "auto",
                    "description": [
                        "The version of the Docker API running on the Docker Host.",
                        "Defaults to the latest version of the API supported by Docker SDK for Python and the docker daemon.",
                        "If the value is not specified in the task, the value of environment variable C(DOCKER_API_VERSION) will be used instead. If the environment variable is not set, the default value will be used."
                    ],
                    "type": "str"
                },
                "builder_cache": {
                    "default": false,
                    "description": [
                        "Whether to prune the builder cache.",
                        "Requires version 3.3.0 of the Docker SDK for Python or newer."
                    ],
                    "type": "bool"
                },
                "ca_cert": {
                    "aliases": [
                        "tls_ca_cert",
                        "cacert_path"
                    ],
                    "description": [
                        "Use a CA certificate when performing server verification by providing the path to a CA certificate file.",
                        "If the value is not specified in the task and the environment variable C(DOCKER_CERT_PATH) is set, the file C(ca.pem) from the directory specified in the environment variable C(DOCKER_CERT_PATH) will be used."
                    ],
                    "type": "path"
                },
                "client_cert": {
                    "aliases": [
                        "tls_client_cert",
                        "cert_path"
                    ],
                    "description": [
                        "Path to the client's TLS certificate file.",
                        "If the value is not specified in the task and the environment variable C(DOCKER_CERT_PATH) is set, the file C(cert.pem) from the directory specified in the environment variable C(DOCKER_CERT_PATH) will be used."
                    ],
                    "type": "path"
                },
                "client_key": {
                    "aliases": [
                        "tls_client_key",
                        "key_path"
                    ],
                    "description": [
                        "Path to the client's TLS key file.",
                        "If the value is not specified in the task and the environment variable C(DOCKER_CERT_PATH) is set, the file C(key.pem) from the directory specified in the environment variable C(DOCKER_CERT_PATH) will be used."
                    ],
                    "type": "path"
                },
                "containers": {
                    "default": false,
                    "description": [
                        "Whether to prune containers."
                    ],
                    "type": "bool"
                },
                "containers_filters": {
                    "description": [
                        "A dictionary of filter values used for selecting containers to delete.",
                        "For example, C(until: 24h).",
                        "See L(the docker documentation,https://docs.docker.com/engine/reference/commandline/container_prune/#filtering) for more information on possible filters."
                    ],
                    "type": "dict"
                },
                "debug": {
                    "default": false,
                    "description": [
                        "Debug mode"
                    ],
                    "type": "bool"
                },
                "docker_host": {
                    "aliases": [
                        "docker_url"
                    ],
                    "default": "unix://var/run/docker.sock",
                    "description": [
                        "The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, C(tcp://192.0.2.23:2376). If TLS is used to encrypt the connection, the module will automatically replace C(tcp) in the connection URL with C(https).",
                        "If the value is not specified in the task, the value of environment variable C(DOCKER_HOST) will be used instead. If the environment variable is not set, the default value will be used."
                    ],
                    "type": "str"
                },
                "images": {
                    "default": false,
                    "description": [
                        "Whether to prune images."
                    ],
                    "type": "bool"
                },
                "images_filters": {
                    "description": [
                        "A dictionary of filter values used for selecting images to delete.",
                        "For example, C(dangling: true).",
                        "See L(the docker documentation,https://docs.docker.com/engine/reference/commandline/image_prune/#filtering) for more information on possible filters."
                    ],
                    "type": "dict"
                },
                "networks": {
                    "default": false,
                    "description": [
                        "Whether to prune networks."
                    ],
                    "type": "bool"
                },
                "networks_filters": {
                    "description": [
                        "A dictionary of filter values used for selecting networks to delete.",
                        "See L(the docker documentation,https://docs.docker.com/engine/reference/commandline/network_prune/#filtering) for more information on possible filters."
                    ],
                    "type": "dict"
                },
                "ssl_version": {
                    "description": [
                        "Provide a valid SSL version number. Default value determined by ssl.py module.",
                        "If the value is not specified in the task, the value of environment variable C(DOCKER_SSL_VERSION) will be used instead."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 60,
                    "description": [
                        "The maximum amount of time in seconds to wait on a response from the API.",
                        "If the value is not specified in the task, the value of environment variable C(DOCKER_TIMEOUT) will be used instead. If the environment variable is not set, the default value will be used."
                    ],
                    "type": "int"
                },
                "tls": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server. Note that if I(validate_certs) is set to C(yes) as well, it will take precedence.",
                        "If the value is not specified in the task, the value of environment variable C(DOCKER_TLS) will be used instead. If the environment variable is not set, the default value will be used."
                    ],
                    "type": "bool"
                },
                "tls_hostname": {
                    "description": [
                        "When verifying the authenticity of the Docker Host server, provide the expected name of the server.",
                        "If the value is not specified in the task, the value of environment variable C(DOCKER_TLS_HOSTNAME) will be used instead. If the environment variable is not set, the default value will be used.",
                        "The current default value is C(localhost). This default is deprecated and will change in community.docker 2.0.0 to be a value computed from I(docker_host). Explicitly specify C(localhost) to make sure this value will still be used, and to disable the deprecation message which will be shown otherwise."
                    ],
                    "type": "str"
                },
                "use_ssh_client": {
                    "default": false,
                    "description": [
                        "For SSH transports, use the C(ssh) CLI tool instead of paramiko.",
                        "Requires Docker SDK for Python 4.4.0 or newer."
                    ],
                    "type": "bool",
                    "version_added": "1.5.0",
                    "version_added_collection": "community.docker"
                },
                "validate_certs": {
                    "aliases": [
                        "tls_verify"
                    ],
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server.",
                        "If the value is not specified in the task, the value of environment variable C(DOCKER_TLS_VERIFY) will be used instead. If the environment variable is not set, the default value will be used."
                    ],
                    "type": "bool"
                },
                "volumes": {
                    "default": false,
                    "description": [
                        "Whether to prune volumes."
                    ],
                    "type": "bool"
                },
                "volumes_filters": {
                    "description": [
                        "A dictionary of filter values used for selecting volumes to delete.",
                        "See L(the docker documentation,https://docs.docker.com/engine/reference/commandline/volume_prune/#filtering) for more information on possible filters."
                    ],
                    "type": "dict"
                }
            },
            "requirements": [
                "Docker API >= 1.25",
                "Docker SDK for Python: Please note that the L(docker-py,https://pypi.org/project/docker-py/) Python module has been superseded by L(docker,https://pypi.org/project/docker/) (see L(here,https://github.com/docker/docker-py/issues/1310) for details). This module does *not* work with docker-py.",
                "L(Docker SDK for Python,https://docker-py.readthedocs.io/en/stable/) >= 2.1.0",
                "Python >= 2.7"
            ],
            "short_description": "Allows to prune various docker objects"
        },
        "examples": "\n- name: Prune containers older than 24h\n  community.docker.docker_prune:\n    containers: yes\n    containers_filters:\n      # only consider containers created more than 24 hours ago\n      until: 24h\n\n- name: Prune everything\n  community.docker.docker_prune:\n    containers: yes\n    images: yes\n    networks: yes\n    volumes: yes\n    builder_cache: yes\n\n- name: Prune everything (including non-dangling images)\n  community.docker.docker_prune:\n    containers: yes\n    images: yes\n    images_filters:\n      dangling: false\n    networks: yes\n    volumes: yes\n    builder_cache: yes\n",
        "metadata": null,
        "return": {
            "builder_cache_space_reclaimed": {
                "description": [
                    "Amount of reclaimed disk space from builder cache pruning in bytes."
                ],
                "returned": "I(builder_cache) is C(true)",
                "sample": "0",
                "type": "int"
            },
            "containers": {
                "description": [
                    "List of IDs of deleted containers."
                ],
                "elements": "str",
                "returned": "I(containers) is C(true)",
                "sample": "[]",
                "type": "list"
            },
            "containers_space_reclaimed": {
                "description": [
                    "Amount of reclaimed disk space from container pruning in bytes."
                ],
                "returned": "I(containers) is C(true)",
                "sample": "0",
                "type": "int"
            },
            "images": {
                "description": [
                    "List of IDs of deleted images."
                ],
                "elements": "str",
                "returned": "I(images) is C(true)",
                "sample": "[]",
                "type": "list"
            },
            "images_space_reclaimed": {
                "description": [
                    "Amount of reclaimed disk space from image pruning in bytes."
                ],
                "returned": "I(images) is C(true)",
                "sample": "0",
                "type": "int"
            },
            "networks": {
                "description": [
                    "List of IDs of deleted networks."
                ],
                "elements": "str",
                "returned": "I(networks) is C(true)",
                "sample": "[]",
                "type": "list"
            },
            "volumes": {
                "description": [
                    "List of IDs of deleted volumes."
                ],
                "elements": "str",
                "returned": "I(volumes) is C(true)",
                "sample": "[]",
                "type": "list"
            },
            "volumes_space_reclaimed": {
                "description": [
                    "Amount of reclaimed disk space from volumes pruning in bytes."
                ],
                "returned": "I(volumes) is C(true)",
                "sample": "0",
                "type": "int"
            }
        }
    }
}
