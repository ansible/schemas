{
    "community.general.oneandone_load_balancer": {
        "doc": {
            "author": [
                "Amel Ajdinovic (@aajdinov)",
                "Ethan Devenport (@edevenport)"
            ],
            "collection": "community.general",
            "description": [
                "Create, remove, update load balancers. This module has a dependency on 1and1 >= 1.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/oneandone_load_balancer.py",
            "has_action": false,
            "module": "oneandone_load_balancer",
            "options": {
                "add_rules": {
                    "description": [
                        "A list of rules that will be added to an existing load balancer. It is syntax is the same as the one used for rules parameter. Used in combination with update state."
                    ],
                    "elements": "dict",
                    "required": false,
                    "type": "list"
                },
                "add_server_ips": {
                    "description": [
                        "A list of server identifiers (id or name) to be assigned to a load balancer. Used in combination with update state."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "api_url": {
                    "description": [
                        "Custom API URL. Overrides the ONEANDONE_API_URL environment variable."
                    ],
                    "required": false,
                    "type": "str"
                },
                "auth_token": {
                    "description": [
                        "Authenticating API token provided by 1&1."
                    ],
                    "type": "str"
                },
                "datacenter": {
                    "choices": [
                        "US",
                        "ES",
                        "DE",
                        "GB"
                    ],
                    "description": [
                        "ID or country code of the datacenter where the load balancer will be created.",
                        "If not specified, it defaults to I(US)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Description of the load balancer. maxLength=256"
                    ],
                    "required": false,
                    "type": "str"
                },
                "health_check_interval": {
                    "description": [
                        "Health check period in seconds. minimum=5, maximum=300, multipleOf=1"
                    ],
                    "type": "str"
                },
                "health_check_parse": {
                    "description": [
                        "Regular expression to check. Required for HTTP health check. maxLength=64"
                    ],
                    "required": false,
                    "type": "str"
                },
                "health_check_path": {
                    "description": [
                        "Url to call for checking. Required for HTTP health check. maxLength=1000"
                    ],
                    "required": false,
                    "type": "str"
                },
                "health_check_test": {
                    "choices": [
                        "NONE",
                        "TCP",
                        "HTTP",
                        "ICMP"
                    ],
                    "description": [
                        "Type of the health check. At the moment, HTTP is not allowed."
                    ],
                    "type": "str"
                },
                "load_balancer": {
                    "description": [
                        "The identifier (id or name) of the load balancer used with update state."
                    ],
                    "type": "str"
                },
                "method": {
                    "choices": [
                        "ROUND_ROBIN",
                        "LEAST_CONNECTIONS"
                    ],
                    "description": [
                        "Balancing procedure."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Load balancer name used with present state. Used as identifier (id or name) when used with absent state. maxLength=128"
                    ],
                    "type": "str"
                },
                "persistence": {
                    "description": [
                        "Persistence."
                    ],
                    "type": "bool"
                },
                "persistence_time": {
                    "description": [
                        "Persistence time in seconds. Required if persistence is enabled. minimum=30, maximum=1200, multipleOf=1"
                    ],
                    "type": "str"
                },
                "remove_rules": {
                    "description": [
                        "A list of rule ids that will be removed from an existing load balancer. Used in combination with update state."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "remove_server_ips": {
                    "description": [
                        "A list of server IP ids to be unassigned from a load balancer. Used in combination with update state."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "rules": {
                    "description": [
                        "A list of rule objects that will be set for the load balancer. Each rule must contain protocol, port_balancer, and port_server parameters, in addition to source parameter, which is optional."
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "update"
                    ],
                    "default": "present",
                    "description": [
                        "Define a load balancer state to create, remove, or update."
                    ],
                    "required": false,
                    "type": "str"
                },
                "wait": {
                    "default": "yes",
                    "description": [
                        "wait for the instance to be in state 'running' before returning"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "wait_interval": {
                    "default": 5,
                    "description": [
                        "Defines the number of seconds to wait when using the _wait_for methods"
                    ],
                    "type": "int"
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "1and1",
                "python >= 2.6"
            ],
            "short_description": "Configure 1&1 load balancer."
        },
        "examples": "\n- name: Create a load balancer\n  community.general.oneandone_load_balancer:\n    auth_token: oneandone_private_api_key\n    name: ansible load balancer\n    description: Testing creation of load balancer with ansible\n    health_check_test: TCP\n    health_check_interval: 40\n    persistence: true\n    persistence_time: 1200\n    method: ROUND_ROBIN\n    datacenter: US\n    rules:\n     -\n       protocol: TCP\n       port_balancer: 80\n       port_server: 80\n       source: 0.0.0.0\n    wait: true\n    wait_timeout: 500\n\n- name: Destroy a load balancer\n  community.general.oneandone_load_balancer:\n    auth_token: oneandone_private_api_key\n    name: ansible load balancer\n    wait: true\n    wait_timeout: 500\n    state: absent\n\n- name: Update a load balancer\n  community.general.oneandone_load_balancer:\n    auth_token: oneandone_private_api_key\n    load_balancer: ansible load balancer\n    name: ansible load balancer updated\n    description: Testing the update of a load balancer with ansible\n    wait: true\n    wait_timeout: 500\n    state: update\n\n- name: Add server to a load balancer\n  community.general.oneandone_load_balancer:\n    auth_token: oneandone_private_api_key\n    load_balancer: ansible load balancer updated\n    description: Adding server to a load balancer with ansible\n    add_server_ips:\n     - server identifier (id or name)\n    wait: true\n    wait_timeout: 500\n    state: update\n\n- name: Remove server from a load balancer\n  community.general.oneandone_load_balancer:\n    auth_token: oneandone_private_api_key\n    load_balancer: ansible load balancer updated\n    description: Removing server from a load balancer with ansible\n    remove_server_ips:\n     - B2504878540DBC5F7634EB00A07C1EBD (server's ip id)\n    wait: true\n    wait_timeout: 500\n    state: update\n\n- name: Add rules to a load balancer\n  community.general.oneandone_load_balancer:\n    auth_token: oneandone_private_api_key\n    load_balancer: ansible load balancer updated\n    description: Adding rules to a load balancer with ansible\n    add_rules:\n     -\n       protocol: TCP\n       port_balancer: 70\n       port_server: 70\n       source: 0.0.0.0\n     -\n       protocol: TCP\n       port_balancer: 60\n       port_server: 60\n       source: 0.0.0.0\n    wait: true\n    wait_timeout: 500\n    state: update\n\n- name: Remove rules from a load balancer\n  community.general.oneandone_load_balancer:\n    auth_token: oneandone_private_api_key\n    load_balancer: ansible load balancer updated\n    description: Adding rules to a load balancer with ansible\n    remove_rules:\n     - rule_id #1\n     - rule_id #2\n     - ...\n    wait: true\n    wait_timeout: 500\n    state: update\n",
        "metadata": null,
        "return": {
            "load_balancer": {
                "description": "Information about the load balancer that was processed",
                "returned": "always",
                "sample": "{\"id\": \"92B74394A397ECC3359825C1656D67A6\", \"name\": \"Default Balancer\"}",
                "type": "dict"
            }
        }
    }
}
