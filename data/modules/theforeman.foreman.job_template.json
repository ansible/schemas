{
    "theforeman.foreman.job_template": {
        "doc": {
            "author": [
                "Manuel Bonk (@manuelbonk) ATIX AG",
                "Matthias Dellweg (@mdellweg) ATIX AG"
            ],
            "collection": "theforeman.foreman",
            "description": [
                "Manage Remote Execution Job Templates"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/theforeman/foreman/plugins/modules/job_template.py",
            "has_action": false,
            "module": "job_template",
            "options": {
                "audit_comment": {
                    "description": [
                        "Content of the audit comment field"
                    ],
                    "type": "str"
                },
                "description_format": {
                    "description": [
                        "description of the job template. Template inputs can be referenced."
                    ],
                    "type": "str"
                },
                "file_name": {
                    "description": [
                        "The path of a template file, that shall be imported.",
                        "Either this or I(template) is required as a source for the Job Template \"content\"."
                    ],
                    "type": "path"
                },
                "job_category": {
                    "description": [
                        "The category the template should be assigend to"
                    ],
                    "type": "str"
                },
                "locations": {
                    "description": "List of locations the entity should be assigned to",
                    "elements": "str",
                    "type": "list"
                },
                "locked": {
                    "default": false,
                    "description": [
                        "Determines whether the template shall be locked"
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "The name of the Job Template.",
                        "If omited, will be determined from the C(name) header of the template or the filename (in that order).",
                        "The special value \"*\" can be used to perform bulk actions (modify, delete) on all existing templates."
                    ],
                    "type": "str"
                },
                "organizations": {
                    "description": "List of organizations the entity should be assigned to",
                    "elements": "str",
                    "type": "list"
                },
                "password": {
                    "description": [
                        "Password of the user accessing the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "provider_type": {
                    "description": [
                        "Determines via which provider the template shall be executed"
                    ],
                    "required": false,
                    "type": "str"
                },
                "server_url": {
                    "description": [
                        "URL of the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "snippet": {
                    "description": [
                        "Determines whether the template shall be a snippet"
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "present_with_defaults",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the entity",
                        "C(present_with_defaults) will ensure the entity exists, but won't update existing ones"
                    ],
                    "type": "str"
                },
                "template": {
                    "description": [
                        "The content of the Job Template.",
                        "Either this or I(file_name) is required as a source for the Job Template \"content\"."
                    ],
                    "type": "str"
                },
                "template_inputs": {
                    "description": [
                        "The template inputs used in the Job Template"
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "advanced": {
                            "description": [
                                "Template Input is advanced"
                            ],
                            "type": "bool"
                        },
                        "description": {
                            "description": [
                                "description of the Template Input"
                            ],
                            "type": "str"
                        },
                        "fact_name": {
                            "description": [
                                "Fact name to use.",
                                "Required when I(input_type=fact)."
                            ],
                            "type": "str"
                        },
                        "input_type": {
                            "choices": [
                                "user",
                                "fact",
                                "variable",
                                "puppet_parameter"
                            ],
                            "description": [
                                "input type"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "name": {
                            "description": [
                                "name of the Template Input"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "options": {
                            "description": [
                                "Template values for user inputs. Must be an array of any type."
                            ],
                            "elements": "raw",
                            "type": "list"
                        },
                        "puppet_class_name": {
                            "description": [
                                "Puppet class name.",
                                "Required when I(input_type=puppet_parameter)."
                            ],
                            "type": "str"
                        },
                        "puppet_parameter_name": {
                            "description": [
                                "Puppet parameter name.",
                                "Required when I(input_type=puppet_parameter)."
                            ],
                            "type": "str"
                        },
                        "required": {
                            "description": [
                                "Is the input required"
                            ],
                            "type": "bool"
                        },
                        "resource_type": {
                            "description": [
                                "Type of the resource"
                            ],
                            "type": "str"
                        },
                        "value_type": {
                            "choices": [
                                "plain",
                                "search",
                                "date"
                            ],
                            "description": [
                                "Type of the value"
                            ],
                            "type": "str"
                        },
                        "variable_name": {
                            "description": [
                                "Variable name to use.",
                                "Required when I(input_type=variable)."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "username": {
                    "description": [
                        "Username accessing the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether or not to verify the TLS certificates of the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "requests"
            ],
            "short_description": "Manage Job Templates",
            "version_added": "1.0.0",
            "version_added_collection": "theforeman.foreman"
        },
        "examples": "\n\n- name: \"Create a Job Template inline\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: A New Job Template\n    state: present\n    template: |\n      <%#\n          name: A Job Template\n      %>\n      rm -rf <%= input(\"toDelete\") %>\n    template_inputs:\n      - name: toDelete\n        input_type: user\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n- name: \"Create a Job Template from a file\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: a new job template\n    file_name: timeywimey_template.erb\n    template_inputs:\n      - name: a new template input\n        input_type: user\n    state: present\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n- name: \"remove a job template's template inputs\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: a new job template\n    template_inputs: []\n    state: present\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n- name: \"Delete a Job Template\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: timeywimey\n    state: absent\n\n- name: \"Create a Job Template from a file and modify with parameter(s)\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: timeywimey_template.erb\n    name: Wibbly Wobbly Template\n    state: present\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n# Providing a name in this case wouldn't be very sensible.\n# Alternatively make use of with_filetree to parse recursively with filter.\n- name: Parsing a directory of Job templates\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: \"{{ item }}\"\n    state: present\n    locations:\n    - SKARO\n    organizations:\n    - DALEK INC\n    with_fileglob:\n     - \"./arsenal_templates/*.erb\"\n\n# If the templates are stored locally and the ansible module is executed on a remote host\n- name: Ensure latest version of all your Job Templates\n  theforeman.foreman.job_template:\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n    template: '{{ lookup(\"file\", item.src) }}'\n  with_filetree: '/path/to/job/templates'\n  when: item.state == 'file'\n\n\n# with name set to \"*\" bulk actions can be performed\n- name: \"Delete *ALL* Job Templates\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: absent\n\n- name: \"Assign all Job Templates to the same organization(s)\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: present\n    organizations:\n    - DALEK INC\n    - sky.net\n    - Doc Brown's garage\n\n",
        "metadata": null,
        "return": {
            "entity": {
                "contains": {
                    "job_templates": {
                        "description": "List of job templates.",
                        "elements": "dict",
                        "type": "list"
                    },
                    "template_inputs": {
                        "description": "List of template inputs associated with the job template.",
                        "elements": "dict",
                        "type": "list"
                    }
                },
                "description": "Final state of the affected entities grouped by their type.",
                "returned": "success",
                "type": "dict"
            }
        }
    }
}
