{
    "ngine_io.cloudstack.cs_zone": {
        "doc": {
            "author": "Ren\u00e9 Moser (@resmo)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Create, update and remove zones."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_zone.py",
            "has_action": false,
            "module": "cs_zone",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "dhcp_provider": {
                    "description": [
                        "DHCP provider for the Zone."
                    ],
                    "type": "str"
                },
                "dns1": {
                    "description": [
                        "First DNS for the zone.",
                        "Required if I(state=present)"
                    ],
                    "type": "str"
                },
                "dns1_ipv6": {
                    "description": [
                        "First DNS for IPv6 for the zone."
                    ],
                    "type": "str"
                },
                "dns2": {
                    "description": [
                        "Second DNS for the zone."
                    ],
                    "type": "str"
                },
                "dns2_ipv6": {
                    "description": [
                        "Second DNS for IPv6 for the zone."
                    ],
                    "type": "str"
                },
                "domain": {
                    "description": [
                        "Domain the zone is related to.",
                        "Zone is a public zone if not set."
                    ],
                    "type": "str"
                },
                "guest_cidr_address": {
                    "description": [
                        "Guest CIDR address for the zone."
                    ],
                    "type": "str"
                },
                "id": {
                    "description": [
                        "uuid of the existing zone."
                    ],
                    "type": "str"
                },
                "internal_dns1": {
                    "description": [
                        "First internal DNS for the zone.",
                        "If not set I(dns1) will be used on I(state=present)."
                    ],
                    "type": "str"
                },
                "internal_dns2": {
                    "description": [
                        "Second internal DNS for the zone."
                    ],
                    "type": "str"
                },
                "local_storage_enabled": {
                    "description": [
                        "Whether to enable local storage for the zone or not.."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name of the zone."
                    ],
                    "required": true,
                    "type": "str"
                },
                "network_domain": {
                    "description": [
                        "Network domain for the zone."
                    ],
                    "type": "str"
                },
                "network_type": {
                    "choices": [
                        "Basic",
                        "Advanced"
                    ],
                    "default": "Basic",
                    "description": [
                        "Network type of the zone."
                    ],
                    "type": "str"
                },
                "securitygroups_enabled": {
                    "description": [
                        "Whether the zone is security group enabled or not."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "enabled",
                        "disabled",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the zone."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Manages zones on Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: Ensure a zone is present\n  ngine_io.cloudstack.cs_zone:\n    name: ch-zrh-ix-01\n    dns1: 8.8.8.8\n    dns2: 8.8.4.4\n    network_type: basic\n\n- name: Ensure a zone is disabled\n  ngine_io.cloudstack.cs_zone:\n    name: ch-zrh-ix-01\n    state: disabled\n\n- name: Ensure a zone is enabled\n  ngine_io.cloudstack.cs_zone:\n    name: ch-zrh-ix-01\n    state: enabled\n\n- name: Ensure a zone is absent\n  ngine_io.cloudstack.cs_zone:\n    name: ch-zrh-ix-01\n    state: absent\n",
        "metadata": null,
        "return": {
            "allocation_state": {
                "description": "State of the zone.",
                "returned": "success",
                "sample": "Enabled",
                "type": "str"
            },
            "dhcp_provider": {
                "description": "DHCP provider for the zone",
                "returned": "success",
                "sample": "VirtualRouter",
                "type": "str"
            },
            "dns1": {
                "description": "First DNS for the zone.",
                "returned": "success",
                "sample": "8.8.8.8",
                "type": "str"
            },
            "dns1_ipv6": {
                "description": "First IPv6 DNS for the zone.",
                "returned": "success",
                "sample": "2001:4860:4860::8888",
                "type": "str"
            },
            "dns2": {
                "description": "Second DNS for the zone.",
                "returned": "success",
                "sample": "8.8.4.4",
                "type": "str"
            },
            "dns2_ipv6": {
                "description": "Second IPv6 DNS for the zone.",
                "returned": "success",
                "sample": "2001:4860:4860::8844",
                "type": "str"
            },
            "domain": {
                "description": "Domain the zone is related to.",
                "returned": "success",
                "sample": "ROOT",
                "type": "str"
            },
            "guest_cidr_address": {
                "description": "Guest CIDR address for the zone",
                "returned": "success",
                "sample": "10.1.1.0/24",
                "type": "str"
            },
            "id": {
                "description": "UUID of the zone.",
                "returned": "success",
                "sample": "04589590-ac63-4ffc-93f5-b698b8ac38b6",
                "type": "str"
            },
            "internal_dns1": {
                "description": "First internal DNS for the zone.",
                "returned": "success",
                "sample": "8.8.8.8",
                "type": "str"
            },
            "internal_dns2": {
                "description": "Second internal DNS for the zone.",
                "returned": "success",
                "sample": "8.8.4.4",
                "type": "str"
            },
            "local_storage_enabled": {
                "description": "Local storage offering enabled.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "name": {
                "description": "Name of the zone.",
                "returned": "success",
                "sample": "zone01",
                "type": "str"
            },
            "network_domain": {
                "description": "Network domain for the zone.",
                "returned": "success",
                "sample": "example.com",
                "type": "str"
            },
            "network_type": {
                "description": "Network type for the zone.",
                "returned": "success",
                "sample": "basic",
                "type": "str"
            },
            "securitygroups_enabled": {
                "description": "Security groups support is enabled.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "tags": {
                "description": "List of resource tags associated with the zone.",
                "returned": "success",
                "sample": [
                    {
                        "key": "foo",
                        "value": "bar"
                    }
                ],
                "type": "list"
            },
            "zone_token": {
                "description": "Zone token",
                "returned": "success",
                "sample": "ccb0a60c-79c8-3230-ab8b-8bdbe8c45bb7",
                "type": "str"
            }
        }
    }
}
