{
    "community.proxysql.proxysql_global_variables": {
        "doc": {
            "author": "Ben Mildren (@bmildren)",
            "collection": "community.proxysql",
            "description": [
                "The M(community.proxysql.proxysql_global_variables) module gets or sets the proxysql global variables."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/proxysql/plugins/modules/proxysql_global_variables.py",
            "has_action": false,
            "module": "proxysql_global_variables",
            "options": {
                "config_file": {
                    "default": "",
                    "description": [
                        "Specify a config file from which I(login_user) and I(login_password) are to be read."
                    ],
                    "type": "path"
                },
                "load_to_runtime": {
                    "default": "yes",
                    "description": [
                        "Dynamically load config to runtime memory."
                    ],
                    "type": "bool"
                },
                "login_host": {
                    "default": "127.0.0.1",
                    "description": [
                        "The host used to connect to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_port": {
                    "default": 6032,
                    "description": [
                        "The port used to connect to ProxySQL admin interface."
                    ],
                    "type": "int"
                },
                "login_unix_socket": {
                    "description": [
                        "The socket used to connect to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_user": {
                    "description": [
                        "The username used to authenticate to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "save_to_disk": {
                    "default": "yes",
                    "description": [
                        "Save config to sqlite db on disk to persist the configuration."
                    ],
                    "type": "bool"
                },
                "value": {
                    "description": [
                        "Defines a value the variable specified using I(variable) should be set to."
                    ],
                    "type": "str"
                },
                "variable": {
                    "description": [
                        "Defines which variable should be returned, or if I(value) is specified which variable should be updated."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "PyMySQL (Python 2.7 and Python 3.X), or",
                "MySQLdb (Python 2.x)"
            ],
            "short_description": "Gets or sets the proxysql global variables."
        },
        "examples": "\n---\n# This example sets the value of a variable, saves the mysql admin variables\n# config to disk, and dynamically loads the mysql admin variables config to\n# runtime. It uses supplied credentials to connect to the proxysql admin\n# interface.\n\n- name: Set the value of a variable\n  community.proxysql.proxysql_global_variables:\n    login_user: 'admin'\n    login_password: 'admin'\n    variable: 'mysql-max_connections'\n    value: 4096\n\n# This example gets the value of a variable.  It uses credentials in a\n# supplied config file to connect to the proxysql admin interface.\n\n- name: Get the value of a variable\n  community.proxysql.proxysql_global_variables:\n    config_file: '~/proxysql.cnf'\n    variable: 'mysql-default_query_delay'\n",
        "metadata": null,
        "return": {
            "stdout": {
                "description": "Returns the mysql variable supplied with it's associated value.",
                "returned": "Returns the current variable and value, or the newly set value for the variable supplied..",
                "sample": {
                    "changed": false,
                    "msg": "The variable is already been set to the supplied value",
                    "var": {
                        "variable_name": "mysql-poll_timeout",
                        "variable_value": "3000"
                    }
                },
                "type": "dict"
            }
        }
    }
}
