{
    "arista.eos.eos_acls": {
        "doc": {
            "author": "Gomathiselvi S (@GomathiselviS)",
            "collection": "arista.eos",
            "description": "This module manages the IP access-list attributes of Arista EOS interfaces.",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/arista/eos/plugins/modules/eos_acls.py",
            "has_action": true,
            "module": "eos_acls",
            "notes": [
                "Tested against Arista vEOS v4.20.10M"
            ],
            "options": {
                "config": {
                    "description": "A dictionary of IP access-list options",
                    "elements": "dict",
                    "suboptions": {
                        "acls": {
                            "description": [
                                "A list of Access Control Lists (ACL)."
                            ],
                            "elements": "dict",
                            "suboptions": {
                                "aces": {
                                    "description": "Filtering data",
                                    "elements": "dict",
                                    "suboptions": {
                                        "destination": {
                                            "description": "The packet's destination address",
                                            "suboptions": {
                                                "address": {
                                                    "description": "dotted decimal notation of IP address",
                                                    "type": "str"
                                                },
                                                "any": {
                                                    "description": "Rule matches all source addresses",
                                                    "type": "bool"
                                                },
                                                "host": {
                                                    "description": "Host IP address",
                                                    "type": "str"
                                                },
                                                "port_protocol": {
                                                    "description": "Specify dest port/protocol, along with operator . (comes with tcp/udp).",
                                                    "type": "dict"
                                                },
                                                "subnet_address": {
                                                    "description": "A subnet address",
                                                    "type": "str"
                                                },
                                                "wildcard_bits": {
                                                    "description": "Source wildcard bits",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "fragment_rules": {
                                            "description": "Add fragment rules",
                                            "type": "bool"
                                        },
                                        "fragments": {
                                            "description": "Match non-head fragment packets",
                                            "type": "bool"
                                        },
                                        "grant": {
                                            "choices": [
                                                "permit",
                                                "deny"
                                            ],
                                            "description": "Action to be applied on the rule",
                                            "type": "str"
                                        },
                                        "hop_limit": {
                                            "description": "Hop limit value.",
                                            "type": "dict"
                                        },
                                        "line": {
                                            "aliases": [
                                                "ace"
                                            ],
                                            "description": "For fact gathering, any ACE that is not fully parsed, while show up as a value of this attribute.",
                                            "type": "str"
                                        },
                                        "log": {
                                            "description": "Log matches against this rule",
                                            "type": "bool"
                                        },
                                        "protocol": {
                                            "description": [
                                                "Specify the protocol to match.",
                                                "Refer to vendor documentation for valid values."
                                            ],
                                            "type": "str"
                                        },
                                        "protocol_options": {
                                            "description": "All the possible sub options for the protocol chosen.",
                                            "suboptions": {
                                                "icmp": {
                                                    "description": [
                                                        "Internet Control Message Protocol settings."
                                                    ],
                                                    "suboptions": {
                                                        "administratively_prohibited": {
                                                            "description": "Administratively prohibited",
                                                            "type": "bool"
                                                        },
                                                        "alternate_address": {
                                                            "description": "Alternate address",
                                                            "type": "bool"
                                                        },
                                                        "conversion_error": {
                                                            "description": "Datagram conversion",
                                                            "type": "bool"
                                                        },
                                                        "dod_host_prohibited": {
                                                            "description": "Host prohibited",
                                                            "type": "bool"
                                                        },
                                                        "dod_net_prohibited": {
                                                            "description": "Net prohibited",
                                                            "type": "bool"
                                                        },
                                                        "echo": {
                                                            "description": "Echo (ping)",
                                                            "type": "bool"
                                                        },
                                                        "echo_reply": {
                                                            "description": "Echo reply",
                                                            "type": "bool"
                                                        },
                                                        "general_parameter_problem": {
                                                            "description": "Parameter problem",
                                                            "type": "bool"
                                                        },
                                                        "host_isolated": {
                                                            "description": "Host isolated",
                                                            "type": "bool"
                                                        },
                                                        "host_precedence_unreachable": {
                                                            "description": "Host unreachable for precedence",
                                                            "type": "bool"
                                                        },
                                                        "host_redirect": {
                                                            "description": "Host redirect",
                                                            "type": "bool"
                                                        },
                                                        "host_tos_redirect": {
                                                            "description": "Host redirect for TOS",
                                                            "type": "bool"
                                                        },
                                                        "host_tos_unreachable": {
                                                            "description": "Host unreachable for TOS",
                                                            "type": "bool"
                                                        },
                                                        "host_unknown": {
                                                            "description": "Host unknown",
                                                            "type": "bool"
                                                        },
                                                        "host_unreachable": {
                                                            "description": "Host unreachable",
                                                            "type": "bool"
                                                        },
                                                        "information_reply": {
                                                            "description": "Information replies",
                                                            "type": "bool"
                                                        },
                                                        "information_request": {
                                                            "description": "Information requests",
                                                            "type": "bool"
                                                        },
                                                        "mask_reply": {
                                                            "description": "Mask replies",
                                                            "type": "bool"
                                                        },
                                                        "mask_request": {
                                                            "description": "Mask requests",
                                                            "type": "bool"
                                                        },
                                                        "message_code": {
                                                            "description": "ICMP message code",
                                                            "type": "int"
                                                        },
                                                        "message_num": {
                                                            "description": "icmp msg type number.",
                                                            "type": "int"
                                                        },
                                                        "message_type": {
                                                            "description": "ICMP message type",
                                                            "type": "int"
                                                        },
                                                        "mobile_redirect": {
                                                            "description": "Mobile host redirect",
                                                            "type": "bool"
                                                        },
                                                        "net_redirect": {
                                                            "description": "Network redirect",
                                                            "type": "bool"
                                                        },
                                                        "net_tos_redirect": {
                                                            "description": "Net redirect for TOS",
                                                            "type": "bool"
                                                        },
                                                        "net_tos_unreachable": {
                                                            "description": "Network unreachable for TOS",
                                                            "type": "bool"
                                                        },
                                                        "net_unreachable": {
                                                            "description": "Net unreachable",
                                                            "type": "bool"
                                                        },
                                                        "network_unknown": {
                                                            "description": "Network unknown",
                                                            "type": "bool"
                                                        },
                                                        "no_room_for_option": {
                                                            "description": "Parameter required but no room",
                                                            "type": "bool"
                                                        },
                                                        "option_missing": {
                                                            "description": "Parameter required but not present",
                                                            "type": "bool"
                                                        },
                                                        "packet_too_big": {
                                                            "description": "Fragmentation needed and DF set",
                                                            "type": "bool"
                                                        },
                                                        "parameter_problem": {
                                                            "description": "All parameter problems",
                                                            "type": "bool"
                                                        },
                                                        "port_unreachable": {
                                                            "description": "Port unreachable",
                                                            "type": "bool"
                                                        },
                                                        "precedence_unreachable": {
                                                            "description": "Precedence cutoff",
                                                            "type": "bool"
                                                        },
                                                        "protocol_unreachable": {
                                                            "description": "Protocol unreachable",
                                                            "type": "bool"
                                                        },
                                                        "reassembly_timeout": {
                                                            "description": "Reassembly timeout",
                                                            "type": "bool"
                                                        },
                                                        "redirect": {
                                                            "description": "All redirects",
                                                            "type": "bool"
                                                        },
                                                        "router_advertisement": {
                                                            "description": "Router discovery advertisements",
                                                            "type": "bool"
                                                        },
                                                        "router_solicitation": {
                                                            "description": "Router discovery solicitations",
                                                            "type": "bool"
                                                        },
                                                        "source_quench": {
                                                            "description": "Source quenches",
                                                            "type": "bool"
                                                        },
                                                        "source_route_failed": {
                                                            "description": "Source route failed",
                                                            "type": "bool"
                                                        },
                                                        "time_exceeded": {
                                                            "description": "All time exceededs",
                                                            "type": "bool"
                                                        },
                                                        "timestamp_reply": {
                                                            "description": "Timestamp replies",
                                                            "type": "bool"
                                                        },
                                                        "timestamp_request": {
                                                            "description": "Timestamp requests",
                                                            "type": "bool"
                                                        },
                                                        "traceroute": {
                                                            "description": "Traceroute",
                                                            "type": "bool"
                                                        },
                                                        "ttl_exceeded": {
                                                            "description": "TTL exceeded",
                                                            "type": "bool"
                                                        },
                                                        "unreachable": {
                                                            "description": "All unreachables",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "icmpv6": {
                                                    "description": "Options for icmpv6.",
                                                    "suboptions": {
                                                        "address_unreachable": {
                                                            "description": "address unreachable",
                                                            "type": "bool"
                                                        },
                                                        "beyond_scope": {
                                                            "description": "beyond_scope",
                                                            "type": "bool"
                                                        },
                                                        "echo_reply": {
                                                            "description": "echo_reply",
                                                            "type": "bool"
                                                        },
                                                        "echo_request": {
                                                            "description": "echo reques",
                                                            "type": "bool"
                                                        },
                                                        "erroneous_header": {
                                                            "description": "erroneous header",
                                                            "type": "bool"
                                                        },
                                                        "fragment_reassembly_exceeded": {
                                                            "description": "fragment_reassembly_exceeded",
                                                            "type": "bool"
                                                        },
                                                        "hop_limit_exceeded": {
                                                            "description": "hop limit exceeded",
                                                            "type": "bool"
                                                        },
                                                        "neighbor_advertisement": {
                                                            "description": "neighbor advertisement",
                                                            "type": "bool"
                                                        },
                                                        "neighbor_solicitation": {
                                                            "description": "neighbor_solicitation",
                                                            "type": "bool"
                                                        },
                                                        "no_admin": {
                                                            "description": "no admin",
                                                            "type": "bool"
                                                        },
                                                        "no_route": {
                                                            "description": "no route",
                                                            "type": "bool"
                                                        },
                                                        "packet_too_big": {
                                                            "description": "packet too big",
                                                            "type": "bool"
                                                        },
                                                        "parameter_problem": {
                                                            "description": "parameter problem",
                                                            "type": "bool"
                                                        },
                                                        "port_unreachable": {
                                                            "description": "port unreachable",
                                                            "type": "bool"
                                                        },
                                                        "redirect_message": {
                                                            "description": "redirect message",
                                                            "type": "bool"
                                                        },
                                                        "reject_route": {
                                                            "description": "reject route",
                                                            "type": "bool"
                                                        },
                                                        "router_advertisement": {
                                                            "description": "router_advertisement",
                                                            "type": "bool"
                                                        },
                                                        "router_solicitation": {
                                                            "description": "router_solicitation",
                                                            "type": "bool"
                                                        },
                                                        "source_address_failed": {
                                                            "description": "source_address_failed",
                                                            "type": "bool"
                                                        },
                                                        "source_routing_error": {
                                                            "description": "source_routing_error",
                                                            "type": "bool"
                                                        },
                                                        "time_exceeded": {
                                                            "description": "time_exceeded",
                                                            "type": "bool"
                                                        },
                                                        "unreachable": {
                                                            "description": "unreachable",
                                                            "type": "bool"
                                                        },
                                                        "unrecognized_ipv6_option": {
                                                            "description": "unrecognized_ipv6_option",
                                                            "type": "bool"
                                                        },
                                                        "unrecognized_next_header": {
                                                            "description": "unrecognized_next_header",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "ip": {
                                                    "description": "Internet Protocol.",
                                                    "suboptions": {
                                                        "nexthop_group": {
                                                            "description": "Nexthop-group name.",
                                                            "type": "str"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "ipv6": {
                                                    "description": "Internet V6 Protocol.",
                                                    "suboptions": {
                                                        "nexthop_group": {
                                                            "description": "Nexthop-group name.",
                                                            "type": "str"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "tcp": {
                                                    "description": "Options for tcp protocol.",
                                                    "suboptions": {
                                                        "flags": {
                                                            "description": "Match TCP packet flags",
                                                            "suboptions": {
                                                                "ack": {
                                                                    "description": "Match on the ACK bit",
                                                                    "type": "bool"
                                                                },
                                                                "established": {
                                                                    "description": "Match established connections",
                                                                    "type": "bool"
                                                                },
                                                                "fin": {
                                                                    "description": "Match on the FIN bit",
                                                                    "type": "bool"
                                                                },
                                                                "psh": {
                                                                    "description": "Match on the PSH bit",
                                                                    "type": "bool"
                                                                },
                                                                "rst": {
                                                                    "description": "Match on the RST bit",
                                                                    "type": "bool"
                                                                },
                                                                "syn": {
                                                                    "description": "Match on the SYN bit",
                                                                    "type": "bool"
                                                                },
                                                                "urg": {
                                                                    "description": "Match on the URG bit",
                                                                    "type": "bool"
                                                                }
                                                            },
                                                            "type": "dict"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "remark": {
                                            "description": "Specify a comment",
                                            "type": "str"
                                        },
                                        "sequence": {
                                            "description": "sequence number for the ordered list of rules",
                                            "type": "int"
                                        },
                                        "source": {
                                            "description": "The packet's source address",
                                            "suboptions": {
                                                "address": {
                                                    "description": "dotted decimal notation of IP address",
                                                    "type": "str"
                                                },
                                                "any": {
                                                    "description": "Rule matches all source addresses",
                                                    "type": "bool"
                                                },
                                                "host": {
                                                    "description": "Host IP address",
                                                    "type": "str"
                                                },
                                                "port_protocol": {
                                                    "description": "Specify source port/protocoli, along with operator. (comes with tcp/udp).",
                                                    "type": "dict"
                                                },
                                                "subnet_address": {
                                                    "description": "A subnet address",
                                                    "type": "str"
                                                },
                                                "wildcard_bits": {
                                                    "description": "Source wildcard bits",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "tracked": {
                                            "description": "Match packets in existing ICMP/UDP/TCP connections",
                                            "type": "bool"
                                        },
                                        "ttl": {
                                            "description": "Compares the TTL (time-to-live) value in the packet to a specified value",
                                            "suboptions": {
                                                "eq": {
                                                    "description": "Match a single TTL value",
                                                    "type": "int"
                                                },
                                                "gt": {
                                                    "description": "Match TTL greater than this number",
                                                    "type": "int"
                                                },
                                                "lt": {
                                                    "description": "Match TTL lesser than this number",
                                                    "type": "int"
                                                },
                                                "neq": {
                                                    "description": "Match TTL not equal to this value",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "vlan": {
                                            "description": "Vlan options",
                                            "type": "str"
                                        }
                                    },
                                    "type": "list"
                                },
                                "name": {
                                    "description": "Name of the acl-list",
                                    "required": true,
                                    "type": "str"
                                },
                                "standard": {
                                    "description": "standard access-list or not",
                                    "type": "bool"
                                }
                            },
                            "type": "list"
                        },
                        "afi": {
                            "choices": [
                                "ipv4",
                                "ipv6"
                            ],
                            "description": [
                                "The Address Family Indicator (AFI) for the Access Control Lists (ACL)."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "running_config": {
                    "description": [
                        "This option is used only with state I(parsed).",
                        "The value of this option should be the output received from the EOS device by executing the command B(show running-config | section access-list).",
                        "The state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "deleted",
                        "merged",
                        "overridden",
                        "replaced",
                        "gathered",
                        "rendered",
                        "parsed"
                    ],
                    "default": "merged",
                    "description": [
                        "The state the configuration should be left in."
                    ],
                    "type": "str"
                }
            },
            "short_description": "ACLs resource module",
            "version_added": "1.0.0",
            "version_added_collection": "arista.eos"
        },
        "examples": "\n# Using merged\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n- name: Merge provided configuration with device configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          grant: deny\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destnation:\n            any: true\n    state: merged\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    35 deny ospf 20.0.0.0/8 any\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# Using merged\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n- name: Merge to update the given configuration with an existing ace\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          log: true\n          ttl:\n            eq: 33\n    state: merged\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    35 deny ospf 20.0.0.0/8 any ttl eq 33 log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# Using replaced\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# !\n# ip access-list test3\n#    10 permit ip 35.33.0.0/16 any log\n# !\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n\n- name: Replace device configuration with provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          grant: permit\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destination:\n            any: true\n    state: replaced\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    35 permit ospf 20.0.0.0/8 any\n# !\n# ip access-list test3\n#    10 permit ip 35.33.0.0/16 any log\n# !\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n# Using overridden\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# !\n# ip access-list test3\n#    10 permit ip 35.33.0.0/16 any log\n# !\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n\n- name: override device configuration with  provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          action: permit\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destination:\n            any: true\n    state: overridden\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n# ip access-list test1\n#    35 permit ospf 20.0.0.0/8 any\n# !\n\n# Using deleted:\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# !\n\n- name: Delete provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n    state: deleted\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n\n# Before state:\n# -------------\n# show running-config | section access-list\n# ip access-list test1\n#    10 permit ip 10.10.10.0/24 any ttl eq 200\n#    20 permit ip 10.30.10.0/24 host 10.20.10.1\n#    30 deny tcp host 10.10.20.1 eq finger www any syn log\n#    40 permit ip any any\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n# !\n\n- name: Delete provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n    state: deleted\n\n# After state:\n# ------------\n#\n# show running-config | section access-list\n\n# ipv6 access-list test2\n#     10 deny icmpv6 any any reject-route hop-limit eq 20\n\n\n# using gathered\n\n# ip access-list test1\n#    35 deny ospf 20.0.0.0/8 any\n# ip access-list test2\n#    40 permit vlan 55 0xE2 icmpv6 any any log\n\n- name: Gather the exisitng condiguration\n  arista.eos.eos_acls:\n    state: gathered\n\n# returns:\n\n\n#  arista.eos.eos_acls:\n#    config:\n#     - afi: \"ipv4\"\n#       acls:\n#        - name: test1\n#          aces:\n#          - sequence: 35\n#            grant: \"deny\"\n#            protocol: \"ospf\"\n#            source:\n#              subnet_address: 20.0.0.0/8\n#            destination:\n#              any: true\n#     - afi: \"ipv6\"\n#       acls:\n#        - name: test2\n#          aces:\n#           - sequence: 40\n#             grant: \"permit\"\n#             vlan: \"55 0xE2\"\n#             protocol: \"icmpv6\"\n#             log: true\n#             source:\n#               any: true\n#             destination:\n#               any: true\n\n\n# using rendered\n\n- name: Delete provided configuration\n  arista.eos.eos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test1\n        aces:\n        - sequence: 35\n          grant: deny\n          protocol: ospf\n          source:\n            subnet_address: 20.0.0.0/8\n          destination:\n            any: true\n    - afi: ipv6\n      acls:\n      - name: test2\n        aces:\n        - sequence: 40\n          grant: permit\n          vlan: 55 0xE2\n          protocol: icmpv6\n          log: true\n          source:\n            any: true\n          destination:\n            any: true\n    state: rendered\n\n# returns:\n\n# ip access-list test1\n#    35 deny ospf 20.0.0.0/8 any\n# ip access-list test2\n#    40 permit vlan 55 0xE2 icmpv6 any any log\n\n\n# Using Parsed\n\n# parsed_acls.cfg\n\n# ipv6 access-list standard test2\n#    10 permit any log\n# !\n# ip access-list test1\n#    35 deny ospf 20.0.0.0/8 any\n#    45 remark Run by ansible\n#    55 permit tcp any any\n# !\n\n- name: parse configs\n  arista.eos.eos_acls:\n    running_config: \"{{ lookup('file', './parsed_acls.cfg') }}\"\n    state: parsed\n\n# returns\n# \"parsed\": [\n#         {\n#             \"acls\": [\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"destination\": {\n#                                 \"any\": true\n#                             },\n#                             \"grant\": \"deny\",\n#                             \"protocol\": \"ospf\",\n#                             \"sequence\": 35,\n#                             \"source\": {\n#                                 \"subnet_address\": \"20.0.0.0/8\"\n#                             }\n#                         },\n#                         {\n#                             \"remark\": \"Run by ansible\",\n#                             \"sequence\": 45\n#                         },\n#                         {\n#                             \"destination\": {\n#                                 \"any\": true\n#                             },\n#                             \"grant\": \"permit\",\n#                             \"protocol\": \"tcp\",\n#                             \"sequence\": 55,\n#                             \"source\": {\n#                                 \"any\": true\n#                             }\n#                         }\n#                     ],\n#                     \"name\": \"test1\"\n#                 }\n#             ],\n#             \"afi\": \"ipv4\"\n#         },\n#         {\n#             \"acls\": [\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"grant\": \"permit\",\n#                             \"log\": true,\n#                             \"sequence\": 10,\n#                             \"source\": {\n#                                 \"any\": true\n#                             }\n#                         }\n#                     ],\n#                     \"name\": \"test2\",\n#                     \"standard\": true\n#                 }\n#             ],\n#             \"afi\": \"ipv6\"\n#         }\n#     ]\n\n",
        "metadata": null,
        "return": {
            "after": {
                "description": "The resulting configuration model invocation.",
                "returned": "when changed",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "list"
            },
            "before": {
                "description": "The configuration prior to the model invocation.",
                "returned": "always",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "list"
            },
            "commands": {
                "description": "The set of commands pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "ipv6 access-list standard test2",
                    "10 permit any log",
                    "ip access-list test1",
                    "35 deny ospf 20.0.0.0/8 any",
                    "45 remark Run by ansible",
                    "55 permit tcp any any"
                ],
                "type": "list"
            }
        }
    }
}
