{
    "cisco.meraki.meraki_malware": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Fully configure malware protection in a Meraki environment."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_malware.py",
            "has_action": false,
            "module": "meraki_mx_malware",
            "notes": [
                "Some of the options are likely only used for developers within Meraki.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "allowed_files": {
                    "description": [
                        "List of files to whitelist."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "comment": {
                            "description": [
                                "Human readable information about file."
                            ],
                            "type": "str"
                        },
                        "sha256": {
                            "aliases": [
                                "hash"
                            ],
                            "description": [
                                "256-bit hash of file."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "allowed_urls": {
                    "description": [
                        "List of URLs to whitelist."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "comment": {
                            "description": [
                                "Human readable information about URL."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "URL string to allow."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "mode": {
                    "choices": [
                        "disabled",
                        "enabled"
                    ],
                    "description": [
                        "Enabled or disabled state of malware protection."
                    ],
                    "type": "str"
                },
                "net_id": {
                    "description": [
                        "ID of network which configuration is applied to."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "aliases": [
                        "network"
                    ],
                    "description": [
                        "Name of network which configuration is applied to."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "query",
                    "description": [
                        "Specifies whether object should be queried, created/modified, or removed."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage Malware Protection in the Meraki cloud"
        },
        "examples": "\n  - name: Enable malware protection\n    meraki_malware:\n      auth_key: abc123\n      state: present\n      org_name: YourOrg\n      net_name: YourNet\n      mode: enabled\n    delegate_to: localhost\n\n  - name: Set whitelisted url\n    meraki_malware:\n      auth_key: abc123\n      state: present\n      org_name: YourOrg\n      net_name: YourNet\n      mode: enabled\n      allowed_urls:\n        - url: www.ansible.com\n          comment: Ansible\n        - url: www.google.com\n          comment: Google\n    delegate_to: localhost\n\n  - name: Set whitelisted file\n    meraki_malware:\n      auth_key: abc123\n      state: present\n      org_name: YourOrg\n      net_name: YourNet\n      mode: enabled\n      allowed_files:\n        - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\n          comment: random zip\n    delegate_to: localhost\n\n  - name: Get malware settings\n    meraki_malware:\n      auth_key: abc123\n      state: query\n      org_name: YourNet\n      net_name: YourOrg\n    delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "allowed_files": {
                        "contains": {
                            "comment": {
                                "description": "Comment about the whitelisted entity",
                                "returned": "success",
                                "sample": "TPS report",
                                "type": "str"
                            },
                            "sha256": {
                                "description": "sha256 hash of whitelisted file.",
                                "returned": "success",
                                "sample": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                                "type": "str"
                            }
                        },
                        "description": "List of files which are whitelisted.",
                        "returned": "success",
                        "type": "complex"
                    },
                    "allowed_urls": {
                        "contains": {
                            "comment": {
                                "description": "Comment about the whitelisted entity",
                                "returned": "success",
                                "sample": "Corporate HQ",
                                "type": "str"
                            },
                            "url": {
                                "description": "URL of whitelisted site.",
                                "returned": "success",
                                "sample": "site.com",
                                "type": "str"
                            }
                        },
                        "description": "List of URLs which are whitelisted.",
                        "returned": "success",
                        "type": "complex"
                    },
                    "mode": {
                        "description": "Mode to enable or disable malware scanning.",
                        "returned": "success",
                        "sample": "enabled",
                        "type": "str"
                    }
                },
                "description": "List of administrators.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
