{
    "t_systems_mms.icinga_director.icinga_service_apply": {
        "doc": {
            "author": "Sebastian Gumprich (@rndmh3ro)",
            "collection": "t_systems_mms.icinga_director",
            "description": [
                "Add or remove a service apply rule to Icinga2 through the director API."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/t_systems_mms/icinga_director/plugins/modules/icinga_service_apply.py",
            "has_action": false,
            "module": "icinga_service_apply",
            "notes": [
                "This module supports check mode."
            ],
            "options": {
                "apply_for": {
                    "description": [
                        "Evaluates the apply for rule for all objects with the custom attribute specified.",
                        "For example selecting \"host.vars.custom_attr\" will generate \"for (config in host.vars.array_var)\" where \"config\" will be accessible through \"$config$\".",
                        "Note - only custom variables of type \"Array\" are eligible."
                    ],
                    "type": "str"
                },
                "assign_filter": {
                    "description": [
                        "The filter where the service apply rule will take effect."
                    ],
                    "type": "str"
                },
                "check_command": {
                    "description": [
                        "Check command definition."
                    ],
                    "type": "str",
                    "version_added": "1.7.0",
                    "version_added_collection": "t_systems_mms.icinga_director"
                },
                "check_interval": {
                    "description": [
                        "Your regular check interval."
                    ],
                    "required": false,
                    "type": "str"
                },
                "check_period": {
                    "description": [
                        "The name of a time period which determines when this object should be monitored. Not limited by default."
                    ],
                    "required": false,
                    "type": "str"
                },
                "check_timeout": {
                    "description": [
                        "Check command timeout in seconds. Overrides the CheckCommand's timeout attribute."
                    ],
                    "required": false,
                    "type": "str"
                },
                "client_cert": {
                    "description": [
                        "PEM formatted certificate chain file to be used for SSL client authentication.",
                        "This file can also include the key as well, and if the key is included, C(client_key) is not required."
                    ],
                    "type": "path"
                },
                "client_key": {
                    "description": [
                        "PEM formatted file that contains your private key to be used for SSL client authentication.",
                        "If C(client_cert) contains both the certificate and key, this option is not required."
                    ],
                    "type": "path"
                },
                "command_endpoint": {
                    "description": [
                        "The host where the service should be executed on."
                    ],
                    "type": "str"
                },
                "display_name": {
                    "description": [
                        "Alternative displayed name of the service apply rule."
                    ],
                    "type": "str"
                },
                "enable_active_checks": {
                    "description": [
                        "Whether to actively check this object."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "enable_event_handler": {
                    "description": [
                        "Whether to enable event handlers this object."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "enable_notifications": {
                    "description": [
                        "Whether to send notifications for this object."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "enable_passive_checks": {
                    "description": [
                        "Whether to accept passive check results for this object."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "enable_perfdata": {
                    "description": [
                        "Whether to process performance data provided by this object."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "force": {
                    "aliases": [
                        "thirsty"
                    ],
                    "default": false,
                    "description": [
                        "If C(yes) do not get a cached copy.",
                        "Alias C(thirsty) has been deprecated and will be removed in 2.13."
                    ],
                    "type": "bool"
                },
                "force_basic_auth": {
                    "default": false,
                    "description": [
                        "Credentials specified with I(url_username) and I(url_password) should be passed in HTTP Header."
                    ],
                    "type": "bool"
                },
                "groups": {
                    "description": [
                        "Service groups that should be directly assigned to this service.",
                        "Servicegroups can be useful for various reasons.",
                        "They are helpful to provided service-type specific view in Icinga Web 2, either for custom dashboards or as an instrument to enforce restrictions.",
                        "Service groups can be directly assigned to single services or to service templates."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "http_agent": {
                    "default": "ansible-httpget",
                    "description": [
                        "Header to identify as, generally appears in web server logs."
                    ],
                    "type": "str"
                },
                "imports": {
                    "description": [
                        "Importable templates, add as many as you want.",
                        "Please note that order matters when importing properties from multiple templates - last one wins."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "max_check_attempts": {
                    "description": [
                        "Defines after how many check attempts a new hard state is reached."
                    ],
                    "required": false,
                    "type": "str"
                },
                "notes": {
                    "description": [
                        "Additional notes for this object."
                    ],
                    "type": "str"
                },
                "notes_url": {
                    "description": [
                        "An URL pointing to additional notes for this object.",
                        "Separate multiple urls like this \"'http://url1' 'http://url2'\".",
                        "Maximum length is 255 characters."
                    ],
                    "type": "str"
                },
                "object_name": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Name for the Icinga service apply rule."
                    ],
                    "required": true,
                    "type": "str"
                },
                "retry_interval": {
                    "description": [
                        "Retry interval, will be applied after a state change unless the next hard state is reached."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Apply feature state."
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path"
                    ],
                    "required": true,
                    "type": "str"
                },
                "url_password": {
                    "description": [
                        "The password for use in HTTP basic authentication.",
                        "If the I(url_username) parameter is not specified, the I(url_password) parameter will not be used."
                    ],
                    "type": "str"
                },
                "url_username": {
                    "description": [
                        "The username for use in HTTP basic authentication.",
                        "This parameter can be used without I(url_password) for sites that allow empty passwords"
                    ],
                    "type": "str"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                },
                "vars": {
                    "description": [
                        "Custom properties of the service apply rule."
                    ],
                    "type": "dict"
                }
            },
            "short_description": "Manage service apply rules in Icinga2",
            "version_added": "1.0.0",
            "version_added_collection": "t_systems_mms.icinga_director"
        },
        "examples": "\n- name: Add service apply rule to icinga\n  t_systems_mms.icinga_director.icinga_service_apply:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"SERVICE_dummy\"\n    assign_filter: 'host.name=\"foohost\"'\n    check_command: hostalive\n    display_name: \"dummy process\"\n    check_interval: \"10m\"\n    check_period: \"24/7\"\n    check_timeout: \"1m\"\n    enable_active_checks: true\n    enable_event_handler: true\n    enable_notifications: true\n    enable_passive_checks: false\n    enable_perfdata: false\n    max_check_attempts: \"5\"\n    retry_interval: \"3m\"\n    imports:\n      - fooservicetemplate\n    groups:\n      - fooservicegroup\n    vars:\n      http_address: \"$address$\"\n      http_port: \"9080\"\n      http_uri: \"/ready\"\n      http_string: \"Ready\"\n      http_expect: \"Yes\"\n\n- name: Add service apply rule with command_endpoint\n  t_systems_mms.icinga_director.icinga_service_apply:\n    state: present\n    url: \"{{ icinga_url }}\"\n    url_username: \"{{ icinga_user }}\"\n    url_password: \"{{ icinga_pass }}\"\n    object_name: \"SERVICE_dummy\"\n    assign_filter: 'host.name=\"foohost\"'\n    check_command: hostalive\n    display_name: \"dummy process\"\n    check_interval: \"10m\"\n    check_period: \"24/7\"\n    check_timeout: \"1m\"\n    enable_active_checks: true\n    enable_event_handler: true\n    enable_notifications: true\n    enable_passive_checks: false\n    enable_perfdata: false\n    max_check_attempts: \"5\"\n    retry_interval: \"3m\"\n    command_endpoint: \"fooendpoint\"\n    imports:\n      - fooservicetemplate\n    groups:\n      - fooservicegroup\n",
        "metadata": null,
        "return": null
    }
}
