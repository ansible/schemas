{
    "community.general.syspatch": {
        "doc": {
            "author": [
                "Andrew Klaus (@precurse)"
            ],
            "collection": "community.general",
            "description": [
                "Manage OpenBSD system patches using syspatch."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/syspatch.py",
            "has_action": false,
            "module": "syspatch",
            "options": {
                "apply": {
                    "default": true,
                    "description": [
                        "Apply all available system patches.",
                        "By default, apply all patches.",
                        "Deprecated. Will be removed in community.general 3.0.0."
                    ],
                    "type": "bool"
                },
                "revert": {
                    "choices": [
                        "all",
                        "one"
                    ],
                    "description": [
                        "Revert system patches."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage OpenBSD system patches"
        },
        "examples": "\n- name: Apply all available system patches\n  community.general.syspatch:\n    apply: true\n\n- name: Revert last patch\n  community.general.syspatch:\n    revert: one\n\n- name: Revert all patches\n  community.general.syspatch:\n    revert: all\n\n# NOTE: You can reboot automatically if a patch requires it:\n- name: Apply all patches and store result\n  community.general.syspatch:\n    apply: true\n  register: syspatch\n\n- name: Reboot if patch requires it\n  ansible.builtin.reboot:\n  when: syspatch.reboot_needed\n",
        "metadata": null,
        "return": {
            "rc": {
                "description": "The command return code (0 means success)",
                "returned": "always",
                "type": "int"
            },
            "reboot_needed": {
                "description": "Whether or not a reboot is required after an update.",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "stderr": {
                "description": "syspatch standard error.",
                "returned": "always",
                "sample": "syspatch: need root privileges",
                "type": "str"
            },
            "stdout": {
                "description": "syspatch standard output.",
                "returned": "always",
                "sample": "001_rip6cksum",
                "type": "str"
            }
        }
    }
}
