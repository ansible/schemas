{
    "azure.azcollection.azure_rm_containerinstance": {
        "doc": {
            "author": [
                "Zim Kalinowski (@zikalino)"
            ],
            "collection": "azure.azcollection",
            "description": [
                "Create, update and delete an Azure Container Instance."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/azure/azcollection/plugins/modules/azure_rm_containerinstance.py",
            "has_action": false,
            "module": "azure_rm_containerinstance",
            "notes": [
                "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).",
                "Authentication is also possible using a service principal or Active Directory user.",
                "To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.",
                "To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.",
                "Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment."
            ],
            "options": {
                "ad_user": {
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "adfs_authority_url": {
                    "description": [
                        "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "api_profile": {
                    "default": "latest",
                    "description": [
                        "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "append_tags": {
                    "default": true,
                    "description": [
                        "Use to control if tags field is canonical or just appends to existing tags.",
                        "When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ],
                    "type": "bool"
                },
                "auth_source": {
                    "choices": [
                        "auto",
                        "cli",
                        "credential_file",
                        "env",
                        "msi"
                    ],
                    "default": "auto",
                    "description": [
                        "Controls the source of the credentials to use for authentication.",
                        "Can also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.",
                        "When set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).",
                        "When set to C(env), the credentials will be read from the environment variables",
                        "When set to C(credential_file), it will read the profile from C(~/.azure/credentials).",
                        "When set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.",
                        "When set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.",
                        "The C(msi) was added in Ansible 2.6."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "cert_validation_mode": {
                    "choices": [
                        "ignore",
                        "validate"
                    ],
                    "description": [
                        "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "client_id": {
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "cloud_environment": {
                    "default": "AzureCloud",
                    "description": [
                        "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "containers": {
                    "description": [
                        "List of containers.",
                        "Required when creation."
                    ],
                    "suboptions": {
                        "commands": {
                            "description": [
                                "List of commands to execute within the container instance in exec form.",
                                "When updating existing container all existing commands will be replaced by new ones."
                            ],
                            "type": "list"
                        },
                        "cpu": {
                            "default": 1,
                            "description": [
                                "The required number of CPU cores of the containers."
                            ],
                            "type": "float"
                        },
                        "environment_variables": {
                            "description": [
                                "List of container environment variables.",
                                "When updating existing container all existing variables will be replaced by new ones."
                            ],
                            "suboptions": {
                                "is_secure": {
                                    "description": [
                                        "Is variable secure."
                                    ],
                                    "type": "bool"
                                },
                                "name": {
                                    "description": [
                                        "Environment variable name."
                                    ],
                                    "type": "str"
                                },
                                "value": {
                                    "description": [
                                        "Environment variable value."
                                    ],
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "image": {
                            "description": [
                                "The container image name."
                            ],
                            "required": true
                        },
                        "memory": {
                            "default": 1.5,
                            "description": [
                                "The required memory of the containers in GB."
                            ],
                            "type": "float"
                        },
                        "name": {
                            "description": [
                                "The name of the container instance."
                            ],
                            "required": true
                        },
                        "ports": {
                            "description": [
                                "List of ports exposed within the container group."
                            ],
                            "type": "list"
                        }
                    }
                },
                "dns_name_label": {
                    "description": [
                        "The Dns name label for the IP."
                    ],
                    "type": "str"
                },
                "force_update": {
                    "default": "no",
                    "description": [
                        "Force update of existing container instance. Any update will result in deletion and recreation of existing containers."
                    ],
                    "type": "bool"
                },
                "ip_address": {
                    "choices": [
                        "public",
                        "none"
                    ],
                    "default": "none",
                    "description": [
                        "The IP address type of the container group.",
                        "Default is C(none) and creating an instance without public IP."
                    ]
                },
                "location": {
                    "description": [
                        "Valid azure location. Defaults to location of the resource group."
                    ]
                },
                "name": {
                    "description": [
                        "The name of the container group."
                    ],
                    "required": true
                },
                "os_type": {
                    "choices": [
                        "linux",
                        "windows"
                    ],
                    "default": "linux",
                    "description": [
                        "The OS type of containers."
                    ]
                },
                "password": {
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "ports": {
                    "description": [
                        "List of ports exposed within the container group.",
                        "This option is deprecated, using I(ports) under I(containers)\"."
                    ],
                    "type": "list"
                },
                "profile": {
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ],
                    "type": "str"
                },
                "registry_login_server": {
                    "description": [
                        "The container image registry login server."
                    ]
                },
                "registry_password": {
                    "description": [
                        "The password to log in container image registry server."
                    ]
                },
                "registry_username": {
                    "description": [
                        "The username to log in container image registry server."
                    ]
                },
                "resource_group": {
                    "description": [
                        "Name of resource group."
                    ],
                    "required": true
                },
                "restart_policy": {
                    "choices": [
                        "always",
                        "on_failure",
                        "never"
                    ],
                    "description": [
                        "Restart policy for all containers within the container group."
                    ],
                    "type": "str"
                },
                "secret": {
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Assert the state of the container instance. Use C(present) to create or update an container instance and C(absent) to delete it."
                    ]
                },
                "subscription_id": {
                    "description": [
                        "Your Azure subscription Id."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object.",
                        "Metadata tags on the object will be updated with any provided values.",
                        "To remove tags set append_tags option to false.",
                        "Currently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.",
                        "Azure Front Door doesn't support the use of",
                        "Azure Automation and Azure CDN only support 15 tags on resources."
                    ],
                    "type": "dict"
                },
                "tenant": {
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7",
                "azure >= 2.0.0"
            ],
            "seealso": [
                {
                    "description": "How to authenticate using the C(az login) command.",
                    "link": "https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest",
                    "name": "Sign in with Azure CLI"
                }
            ],
            "short_description": "Manage an Azure Container Instance",
            "version_added": "0.1.2",
            "version_added_collection": "azure.azcollection"
        },
        "examples": "\n  - name: Create sample container group\n    azure_rm_containerinstance:\n      resource_group: myResourceGroup\n      name: myContainerInstanceGroup\n      os_type: linux\n      ip_address: public\n      containers:\n        - name: myContainer1\n          image: httpd\n          memory: 1.5\n          ports:\n            - 80\n            - 81\n",
        "metadata": null,
        "return": {
            "id": {
                "description": [
                    "Resource ID."
                ],
                "returned": "always",
                "sample": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.ContainerInstance/containerGroups/aci1b6dd89",
                "type": "str"
            },
            "ip_address": {
                "description": [
                    "Public IP Address of created container group."
                ],
                "returned": "if address is public",
                "sample": "175.12.233.11",
                "type": "str"
            },
            "provisioning_state": {
                "description": [
                    "Provisioning state of the container."
                ],
                "returned": "always",
                "sample": "Creating",
                "type": "str"
            }
        }
    }
}
