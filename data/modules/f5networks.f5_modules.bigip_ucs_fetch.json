{
    "f5networks.f5_modules.bigip_ucs_fetch": {
        "doc": {
            "author": [
                "Tim Rupp (@caphrim007)",
                "Wojciech Wypior (@wojtek0806)"
            ],
            "collection": "f5networks.f5_modules",
            "description": [
                "This module is used for fetching UCS files from remote machines and storing them locally in a file tree, organized by hostname. This module is written to create and transfer UCS files that might not be present, it does not require UCS file to be pre-created. So a missing remote UCS is not an error unless C(fail_on_missing) is set to 'yes'."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/f5networks/f5_modules/plugins/modules/bigip_ucs_fetch.py",
            "has_action": false,
            "module": "bigip_ucs_fetch",
            "notes": [
                "BIG-IP provides no way to get a checksum of the UCS files on the system via any interface with the possible exception of logging in directly to the box (which would not support appliance mode). Therefore, the best this module can do is check for the existence of the file on disk; no check-summing.",
                "If you are using this module with either Ansible Tower or Ansible AWX, you should be aware of how these Ansible products execute jobs in restricted environments. More information can be found here https://clouddocs.f5.com/products/orchestration/ansible/devel/usage/module-usage-with-tower.html",
                "Some longer running tasks might cause the REST interface on BIG-IP to time out, to avoid this adjust the timers as per this KB article https://support.f5.com/csp/article/K94602685",
                "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).",
                "Requires BIG-IP software version >= 12.",
                "The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration."
            ],
            "options": {
                "async_timeout": {
                    "default": 150,
                    "description": [
                        "Parameter used when creating new UCS file on device.",
                        "The amount of time in seconds to wait for the API async interface to complete its task.",
                        "The accepted value range is between C(150) and C(1800) seconds."
                    ],
                    "type": "int"
                },
                "backup": {
                    "default": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow overwrote it incorrectly."
                    ],
                    "type": "bool"
                },
                "create_on_missing": {
                    "default": true,
                    "description": [
                        "Creates the UCS based on the value of C(src), if the file does not already exist on the remote system."
                    ],
                    "type": "bool"
                },
                "dest": {
                    "description": [
                        "A directory to save the UCS file into."
                    ],
                    "required": true,
                    "type": "path"
                },
                "encryption_password": {
                    "description": [
                        "Password to use to encrypt the UCS file if desired."
                    ],
                    "type": "str"
                },
                "fail_on_missing": {
                    "default": false,
                    "description": [
                        "Make the module fail if the UCS file on the remote system is missing."
                    ],
                    "type": "bool"
                },
                "force": {
                    "default": true,
                    "description": [
                        "If C(no), the file will only be transferred if the destination does not exist."
                    ],
                    "type": "bool"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_provider": {
                            "description": [
                                "Configures the auth provider for to obtain authentication tokens from the remote device.",
                                "This option is really used when working with BIG-IQ devices."
                            ],
                            "type": "str"
                        },
                        "no_f5_teem": {
                            "default": false,
                            "description": [
                                "If C(yes), TEEM telemetry data is not sent to F5.",
                                "You may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).",
                                "Previously used variable C(F5_TEEM) is deprecated as its name was confusing."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "aliases": [
                                "pass",
                                "pwd"
                            ],
                            "description": [
                                "The password for the user account used to connect to the BIG-IP.",
                                "You may omit this option by setting the environment variable C(F5_PASSWORD)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server": {
                            "description": [
                                "The BIG-IP host.",
                                "You may omit this option by setting the environment variable C(F5_SERVER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server_port": {
                            "default": 443,
                            "description": [
                                "The BIG-IP server port.",
                                "You may omit this option by setting the environment variable C(F5_SERVER_PORT)."
                            ],
                            "type": "int"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "rest"
                            ],
                            "default": "rest",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "description": [
                                "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.",
                                "You may omit this option by setting the environment variable C(F5_USER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": true,
                            "description": [
                                "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.",
                                "You may omit this option by setting the environment variable C(F5_VALIDATE_CERTS)."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict",
                    "version_added": "1.0.0",
                    "version_added_collection": "f5networks.f5_modules"
                },
                "src": {
                    "description": [
                        "The name of the UCS file to create on the remote server for downloading. The file will be retrieved or created in /var/local/ucs/."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Fetches a UCS file from remote nodes",
            "version_added": "1.0.0",
            "version_added_collection": "f5networks.f5_modules"
        },
        "examples": "\n- name: Download a new UCS\n  bigip_ucs_fetch:\n    src: cs_backup.ucs\n    dest: /tmp/cs_backup.ucs\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "backup_file": {
                "description": "Name of backup file.",
                "returned": "changed and if backup=yes",
                "sample": "/path/to/file.txt.2015-02-12@22:09~",
                "type": "str"
            },
            "checksum": {
                "description": "The SHA1 checksum of the downloaded file.",
                "returned": "success or changed",
                "sample": "7b46bbe4f8ebfee64761b5313855618f64c64109",
                "type": "str"
            },
            "dest": {
                "description": "Location on the ansible host the UCS was saved to.",
                "returned": "success",
                "sample": "/path/to/file.txt",
                "type": "str"
            },
            "gid": {
                "description": "Group ID of the UCS file, after execution.",
                "returned": "success",
                "sample": 100,
                "type": "int"
            },
            "group": {
                "description": "Group of the UCS file, after execution.",
                "returned": "success",
                "sample": "httpd",
                "type": "str"
            },
            "md5sum": {
                "description": "The MD5 checksum of the downloaded file.",
                "returned": "changed or success",
                "sample": "96cacab4c259c4598727d7cf2ceb3b45",
                "type": "str"
            },
            "mode": {
                "description": "Permissions of the target UCS, after execution.",
                "returned": "success",
                "sample": 420,
                "type": "str"
            },
            "owner": {
                "description": "Owner of the UCS file, after execution.",
                "returned": "success",
                "sample": "httpd",
                "type": "str"
            },
            "size": {
                "description": "Size of the target UCS, after execution.",
                "returned": "success",
                "sample": 1220,
                "type": "int"
            },
            "src": {
                "description": [
                    "Name of the UCS file on the remote BIG-IP to download. If not specified, this will be a randomly generated filename."
                ],
                "returned": "changed",
                "sample": "cs_backup.ucs",
                "type": "str"
            },
            "uid": {
                "description": "Owner ID of the UCS file, after execution.",
                "returned": "success",
                "sample": 100,
                "type": "int"
            }
        }
    }
}
