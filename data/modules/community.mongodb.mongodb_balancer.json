{
    "community.mongodb.mongodb_balancer": {
        "doc": {
            "author": "Rhys Campbell (@rhysmeister)",
            "collection": "community.mongodb",
            "description": [
                "Manages the MongoDB Sharded Cluster Balancer.",
                "Start or stop the balancer.",
                "Adjust the cluster chunksize.",
                "Enable or disable autosplit.",
                "Adds or remove a balancer window."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/mongodb/plugins/modules/mongodb_balancer.py",
            "has_action": false,
            "module": "mongodb_balancer",
            "notes": [
                "Requires the pymongo Python package on the remote host, version 2.4.2+. This can be installed using pip or the OS package manager. @see U(http://api.mongodb.org/python/current/installation.html)"
            ],
            "options": {
                "auth_mechanism": {
                    "choices": [
                        "SCRAM-SHA-256",
                        "SCRAM-SHA-1",
                        "MONGODB-X509",
                        "GSSAPI",
                        "PLAIN"
                    ],
                    "description": [
                        "Authentication type."
                    ],
                    "required": false,
                    "type": "str"
                },
                "autosplit": {
                    "description": [
                        "Disable or enable the autosplit flag in the config.settings collection."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "chunksize": {
                    "description": [
                        "Control the size of chunks in the sharded cluster.",
                        "Value should be given in MB."
                    ],
                    "required": false,
                    "type": "int"
                },
                "connection_options": {
                    "description": [
                        "Additional connection options.",
                        "Supply as a list of dicts or strings containing key value pairs seperated with '='."
                    ],
                    "elements": "raw",
                    "required": false,
                    "type": "list"
                },
                "login_database": {
                    "default": "admin",
                    "description": [
                        "The database where login credentials are stored."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_host": {
                    "default": "localhost",
                    "description": [
                        "The host running MongoDB instance to login to."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate with.",
                        "Required when I(login_user) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_port": {
                    "default": 27017,
                    "description": [
                        "The MongoDB server port to login to."
                    ],
                    "required": false,
                    "type": "int"
                },
                "login_user": {
                    "description": [
                        "The MongoDB user to login with.",
                        "Required when I(login_password) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "mongos_process": {
                    "default": "mongos",
                    "description": [
                        "Provide a custom name for the mongos process.",
                        "Most users can ignore this setting."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl": {
                    "default": false,
                    "description": [
                        "Whether to use an SSL connection when connecting to the database."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "ssl_ca_certs": {
                    "description": [
                        "The ssl_ca_certs option takes a path to a CA file."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_cert_reqs": {
                    "choices": [
                        "CERT_NONE",
                        "CERT_OPTIONAL",
                        "CERT_REQUIRED"
                    ],
                    "default": "CERT_REQUIRED",
                    "description": [
                        "Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_certfile": {
                    "description": [
                        "Present a client certificate using the ssl_certfile option."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_crlfile": {
                    "description": [
                        "The ssl_crlfile option takes a path to a CRL file."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_keyfile": {
                    "description": [
                        "Private key for the client certificate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_pem_passphrase": {
                    "description": [
                        "Passphrase to decrypt encrypted private keys."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "started",
                        "stopped"
                    ],
                    "default": "started",
                    "description": [
                        "Manage the Balancer for the Cluster"
                    ],
                    "required": false,
                    "type": "str"
                },
                "window": {
                    "description": [
                        "Schedule the balancer window.",
                        "Provide the following dictionary keys start, stop, state",
                        "The state key should be \"present\" or \"absent\".",
                        "The start and stop keys are ignored when state is \"absent\".",
                        "start and stop should be strings in \"HH:MM\" format indicating the time bounds of the window."
                    ],
                    "required": false,
                    "type": "raw"
                }
            },
            "requirements": [
                "pymongo"
            ],
            "short_description": "Manages the MongoDB Sharded Cluster Balancer.",
            "version_added": "1.0.0",
            "version_added_collection": "community.mongodb"
        },
        "examples": "\n- name: Start the balancer\n  community.mongodb.mongodb_balancer:\n    state: started\n\n- name: Stop the balancer and disable autosplit\n  community.mongodb.mongodb_balancer:\n    state: stopped\n    autosplit: false\n\n- name: Enable autosplit\n  community.mongodb.mongodb_balancer:\n    autosplit: true\n\n- name: Change the default chunksize to 128MB\n  community.mongodb.mongodb_balancer:\n    chunksize: 128\n\n- name: Add or update a balancing window\n  community.mongodb.mongodb_balancer:\n    window:\n      start: \"23:00\"\n      stop: \"06:00\"\n      state: \"present\"\n\n- name: Remove a balancing window\n  community.mongodb.mongodb_balancer:\n    window:\n      state: \"absent\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "Whether the balancer state or autosplit changed.",
                "returned": "success",
                "type": "bool"
            },
            "failed": {
                "description": "If something went wrong",
                "returned": "failed",
                "type": "bool"
            },
            "msg": {
                "description": "A short description of what happened.",
                "returned": "failure",
                "type": "str"
            },
            "new_autosplit": {
                "description": "The new state of autosplit.",
                "returned": "When autosplit is changed.",
                "type": "str"
            },
            "new_balancer_state": {
                "description": "The new state of the balancer.",
                "returned": "When balancer state is changed",
                "type": "str"
            },
            "new_chunksize": {
                "description": "The new value for chunksize.",
                "returned": "When chunksize is changed.",
                "type": "int"
            },
            "old_autosplit": {
                "description": "The previous state of autosplit.",
                "returned": "When autosplit is changed.",
                "type": "str"
            },
            "old_balancer_state": {
                "description": "The previous state of the balancer",
                "returned": "When balancer state is changed",
                "type": "str"
            },
            "old_chunksize": {
                "description": "The previous value for chunksize.",
                "returned": "When chunksize is changed.",
                "type": "int"
            }
        }
    }
}
