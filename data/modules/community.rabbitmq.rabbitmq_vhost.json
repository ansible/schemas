{
    "community.rabbitmq.rabbitmq_vhost": {
        "doc": {
            "author": "Chris Hoffman (@chrishoffman)",
            "collection": "community.rabbitmq",
            "description": [
                "Manage the state of a virtual host in RabbitMQ"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_vhost.py",
            "has_action": false,
            "module": "rabbitmq_vhost",
            "options": {
                "name": {
                    "aliases": [
                        "vhost"
                    ],
                    "description": [
                        "The name of the vhost to manage"
                    ],
                    "required": true,
                    "type": "str"
                },
                "node": {
                    "default": "rabbit",
                    "description": [
                        "erlang node name of the rabbit we wish to configure"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "The state of vhost"
                    ],
                    "type": "str"
                },
                "tracing": {
                    "aliases": [
                        "trace"
                    ],
                    "default": "no",
                    "description": [
                        "Enable/disable tracing for a vhost"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage the state of a virtual host in RabbitMQ"
        },
        "examples": "\n# Ensure that the vhost /test exists.\n- community.rabbitmq.rabbitmq_vhost:\n    name: /test\n    state: present\n",
        "metadata": null,
        "return": null
    }
}
