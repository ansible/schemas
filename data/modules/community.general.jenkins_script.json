{
    "community.general.jenkins_script": {
        "doc": {
            "author": "James Hogarth (@hogarthj)",
            "collection": "community.general",
            "description": [
                "The C(jenkins_script) module takes a script plus a dict of values to use within the script and returns the result of the script being run."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/jenkins_script.py",
            "has_action": false,
            "module": "jenkins_script",
            "notes": [
                "Since the script can do anything this does not report on changes. Knowing the script is being run it's important to set changed_when for the ansible output to be clear on any alterations made."
            ],
            "options": {
                "args": {
                    "description": [
                        "A dict of key-value pairs used in formatting the script using string.Template (see https://docs.python.org/2/library/string.html#template-strings)."
                    ],
                    "type": "dict"
                },
                "password": {
                    "description": [
                        "The password to connect to the jenkins server with."
                    ],
                    "type": "str"
                },
                "script": {
                    "description": [
                        "The groovy script to be executed. This gets passed as a string Template if args is defined."
                    ],
                    "required": true,
                    "type": "str"
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The request timeout in seconds"
                    ],
                    "type": "int"
                },
                "url": {
                    "default": "http://localhost:8080",
                    "description": [
                        "The jenkins server to execute the script against. The default is a local jenkins instance that is not being proxied through a webserver."
                    ],
                    "type": "str"
                },
                "user": {
                    "description": [
                        "The username to connect to the jenkins server with."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": "yes",
                    "description": [
                        "If set to C(no), the SSL certificates will not be validated. This should only set to C(no) used on personally controlled sites using self-signed certificates as it avoids verifying the source site."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Executes a groovy script in the jenkins instance"
        },
        "examples": "\n- name: Obtaining a list of plugins\n  community.general.jenkins_script:\n    script: 'println(Jenkins.instance.pluginManager.plugins)'\n    user: admin\n    password: admin\n\n- name: Setting master using a variable to hold a more complicate script\n  ansible.builtin.set_fact:\n    setmaster_mode: |\n        import jenkins.model.*\n        instance = Jenkins.getInstance()\n        instance.setMode(${jenkins_mode})\n        instance.save()\n\n- name: Use the variable as the script\n  community.general.jenkins_script:\n    script: \"{{ setmaster_mode }}\"\n    args:\n      jenkins_mode: Node.Mode.EXCLUSIVE\n\n- name: Interacting with an untrusted HTTPS connection\n  community.general.jenkins_script:\n    script: \"println(Jenkins.instance.pluginManager.plugins)\"\n    user: admin\n    password: admin\n    url: https://localhost\n    validate_certs: no\n",
        "metadata": null,
        "return": {
            "output": {
                "description": "Result of script",
                "returned": "success",
                "sample": "Result: true",
                "type": "str"
            }
        }
    }
}
