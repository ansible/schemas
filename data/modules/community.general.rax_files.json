{
    "community.general.rax_files": {
        "doc": {
            "author": "Paul Durivage (@angstwad)",
            "collection": "community.general",
            "description": [
                "Manipulate Rackspace Cloud Files Containers"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/rax_files.py",
            "has_action": false,
            "module": "rax_files",
            "notes": [
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)",
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)"
            ],
            "options": {
                "api_key": {
                    "aliases": [
                        "password"
                    ],
                    "description": [
                        "Rackspace API key, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "auth_endpoint": {
                    "description": [
                        "The URI of the authentication service.",
                        "If not specified will be set to U(https://identity.api.rackspacecloud.com/v2.0/)"
                    ],
                    "type": "str"
                },
                "clear_meta": {
                    "default": "no",
                    "description": [
                        "Optionally clear existing metadata when applying metadata to existing containers. Selecting this option is only appropriate when setting type=meta"
                    ],
                    "type": "bool"
                },
                "container": {
                    "description": [
                        "The container to use for container or metadata operations."
                    ],
                    "type": "str"
                },
                "credentials": {
                    "aliases": [
                        "creds_file"
                    ],
                    "description": [
                        "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
                    ],
                    "type": "path"
                },
                "env": {
                    "description": [
                        "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
                    ],
                    "type": "str"
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication mechanism to use, such as rackspace or keystone."
                    ],
                    "type": "str"
                },
                "meta": {
                    "description": [
                        "A hash of items to set as metadata values on a container"
                    ],
                    "type": "dict"
                },
                "private": {
                    "default": false,
                    "description": [
                        "Used to set a container as private, removing it from the CDN.  B(Warning!) Private containers, if previously made public, can have live objects available until the TTL on cached objects expires"
                    ],
                    "type": "bool"
                },
                "public": {
                    "default": false,
                    "description": [
                        "Used to set a container as public, available via the Cloud Files CDN"
                    ],
                    "type": "bool"
                },
                "region": {
                    "description": [
                        "Region to create an instance in"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "list"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "type": "str"
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication."
                    ],
                    "type": "str"
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication."
                    ],
                    "type": "str"
                },
                "ttl": {
                    "description": [
                        "In seconds, set a container-wide TTL for all objects cached on CDN edge nodes. Setting a TTL is only appropriate for containers that are public"
                    ],
                    "type": "int"
                },
                "type": {
                    "choices": [
                        "container",
                        "meta"
                    ],
                    "default": "container",
                    "description": [
                        "Type of object to do work on, i.e. metadata object or a container object"
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Rackspace username, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify_ssl"
                    ],
                    "description": [
                        "Whether or not to require SSL validation of API endpoints."
                    ],
                    "type": "bool"
                },
                "web_error": {
                    "description": [
                        "Sets an object to be presented as the HTTP error page when accessed by the CDN URL"
                    ],
                    "type": "str"
                },
                "web_index": {
                    "description": [
                        "Sets an object to be presented as the HTTP index page when accessed by the CDN URL"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "pyrax",
                "python >= 2.6"
            ],
            "short_description": "Manipulate Rackspace Cloud Files Containers"
        },
        "examples": "\n- name: \"Test Cloud Files Containers\"\n  hosts: local\n  gather_facts: no\n  tasks:\n    - name: \"List all containers\"\n      community.general.rax_files:\n        state: list\n\n    - name: \"Create container called 'mycontainer'\"\n      community.general.rax_files:\n        container: mycontainer\n\n    - name: \"Create container 'mycontainer2' with metadata\"\n      community.general.rax_files:\n        container: mycontainer2\n        meta:\n          key: value\n          file_for: someuser@example.com\n\n    - name: \"Set a container's web index page\"\n      community.general.rax_files:\n        container: mycontainer\n        web_index: index.html\n\n    - name: \"Set a container's web error page\"\n      community.general.rax_files:\n        container: mycontainer\n        web_error: error.html\n\n    - name: \"Make container public\"\n      community.general.rax_files:\n        container: mycontainer\n        public: yes\n\n    - name: \"Make container public with a 24 hour TTL\"\n      community.general.rax_files:\n        container: mycontainer\n        public: yes\n        ttl: 86400\n\n    - name: \"Make container private\"\n      community.general.rax_files:\n        container: mycontainer\n        private: yes\n\n- name: \"Test Cloud Files Containers Metadata Storage\"\n  hosts: local\n  gather_facts: no\n  tasks:\n    - name: \"Get mycontainer2 metadata\"\n      community.general.rax_files:\n        container: mycontainer2\n        type: meta\n\n    - name: \"Set mycontainer2 metadata\"\n      community.general.rax_files:\n        container: mycontainer2\n        type: meta\n        meta:\n          uploaded_by: someuser@example.com\n\n    - name: \"Remove mycontainer2 metadata\"\n      community.general.rax_files:\n        container: \"mycontainer2\"\n        type: meta\n        state: absent\n        meta:\n          key: \"\"\n          file_for: \"\"\n",
        "metadata": null,
        "return": null
    }
}
