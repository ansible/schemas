{
    "cisco.aci.aci_access_port_to_interface_policy_leaf_profile": {
        "doc": {
            "author": [
                "Bruno Calogero (@brunocalogero)",
                "Shreyas Srish (@shrsr)"
            ],
            "collection": "cisco.aci",
            "description": [
                "Manage Fabric interface policy leaf profile interface selectors on Cisco ACI fabrics."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/aci/plugins/modules/aci_access_port_to_interface_policy_leaf_profile.py",
            "has_action": false,
            "module": "aci_access_port_to_interface_policy_leaf_profile",
            "notes": [
                "The C(interface_profile) must exist before using this module in your playbook. The M(cisco.aci.aci_interface_policy_leaf_profile) modules can be used for this."
            ],
            "options": {
                "access_port_selector": {
                    "aliases": [
                        "name",
                        "access_port_selector_name"
                    ],
                    "description": [
                        "The name of the Fabric access policy leaf interface profile access port selector."
                    ],
                    "type": "str"
                },
                "annotation": {
                    "description": [
                        "User-defined string for annotating an object.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
                    ],
                    "type": "str"
                },
                "certificate_name": {
                    "aliases": [
                        "cert_name"
                    ],
                    "description": [
                        "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
                        "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
                        "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "The description to assign to the C(access_port_selector)"
                    ],
                    "type": "str"
                },
                "from_card": {
                    "aliases": [
                        "from_card_range"
                    ],
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
                        "The parameter will be removed in Ansible 2.12.",
                        "HORIZONTALLINE",
                        "The beginning (from-range) of the card range block for the leaf access port block."
                    ],
                    "type": "str"
                },
                "from_port": {
                    "aliases": [
                        "from",
                        "fromPort",
                        "from_port_range"
                    ],
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
                        "The parameter will be removed in Ansible 2.12.",
                        "HORIZONTALLINE",
                        "The beginning (from-range) of the port range block for the leaf access port block."
                    ],
                    "type": "str"
                },
                "host": {
                    "aliases": [
                        "hostname"
                    ],
                    "description": [
                        "IP Address or hostname of APIC resolvable by Ansible control host.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "interface_profile": {
                    "aliases": [
                        "leaf_interface_profile_name",
                        "leaf_interface_profile",
                        "interface_profile_name"
                    ],
                    "description": [
                        "The name of the Fabric access policy leaf interface profile."
                    ],
                    "type": "str"
                },
                "interface_type": {
                    "choices": [
                        "breakout",
                        "fex",
                        "port_channel",
                        "switch_port",
                        "vpc"
                    ],
                    "default": "switch_port",
                    "description": [
                        "The type of interface for the static EPG deployment."
                    ],
                    "type": "str"
                },
                "leaf_port_blk_description": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
                        "The parameter will be removed in Ansible 2.12.",
                        "HORIZONTALLINE",
                        "The description to assign to the C(leaf_port_blk)"
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "info",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Influence the output of this ACI module.",
                        "C(normal) means the standard output, incl. C(current) dict",
                        "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
                        "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
                    ],
                    "type": "str"
                },
                "output_path": {
                    "description": [
                        "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
                    ],
                    "type": "str"
                },
                "owner_key": {
                    "description": [
                        "User-defined string for the ownerKey attribute of an ACI object.",
                        "This attribute represents a key for enabling clients to own their data for entity correlation.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
                    ],
                    "type": "str"
                },
                "owner_tag": {
                    "description": [
                        "User-defined string for the ownerTag attribute of an ACI object.",
                        "This attribute represents a tag for enabling clients to add their own data.",
                        "For example, to indicate who created this object.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password to use for authentication.",
                        "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
                        "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ],
                    "type": "str"
                },
                "policy_group": {
                    "aliases": [
                        "policy_group_name"
                    ],
                    "description": [
                        "The name of the fabric access policy group to be associated with the leaf interface profile interface selector."
                    ],
                    "type": "str"
                },
                "port": {
                    "description": [
                        "Port number to be used for REST connection.",
                        "The default value depends on parameter C(use_ssl).",
                        "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
                    ],
                    "type": "int"
                },
                "port_blk": {
                    "aliases": [
                        "leaf_port_blk_name",
                        "leaf_port_blk",
                        "port_blk_name"
                    ],
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
                        "The parameter will be removed in Ansible 2.12.",
                        "HORIZONTALLINE",
                        "The name of the Fabric access policy leaf interface profile access port block."
                    ],
                    "type": "str"
                },
                "private_key": {
                    "aliases": [
                        "cert_key"
                    ],
                    "description": [
                        "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
                        "This value also influences the default C(certificate_name) that is used.",
                        "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) will be used instead."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Use C(present) or C(absent) for adding or removing.",
                        "Use C(query) for listing an object or multiple objects."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "The socket level timeout in seconds.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
                    ],
                    "type": "int"
                },
                "to_card": {
                    "aliases": [
                        "to_card_range"
                    ],
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
                        "The parameter will be removed in Ansible 2.12.",
                        "HORIZONTALLINE",
                        "The end (to-range) of the card range block for the leaf access port block."
                    ],
                    "type": "str"
                },
                "to_port": {
                    "aliases": [
                        "to",
                        "toPort",
                        "to_port_range"
                    ],
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.8 we recommend using M(cisco.aci.aci_access_port_block_to_access_port) instead.",
                        "The parameter will be removed in Ansible 2.12.",
                        "HORIZONTALLINE",
                        "The end (to-range) of the port range block for the leaf access port block."
                    ],
                    "type": "str"
                },
                "type": {
                    "choices": [
                        "fex",
                        "leaf"
                    ],
                    "default": "leaf",
                    "description": [
                        "The type of access port to be created under respective profile."
                    ],
                    "type": "str"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
                    ],
                    "type": "bool"
                },
                "use_ssl": {
                    "default": true,
                    "description": [
                        "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "user"
                    ],
                    "default": "admin",
                    "description": [
                        "The username to use for authentication.",
                        "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                }
            },
            "seealso": [
                {
                    "module": "cisco.aci.aci_access_port_block_to_access_port"
                },
                {
                    "description": "More information about the internal APIC classes B(infra:HPortS), B(infra:RsAccBaseGrp) and B(infra:PortBlk).",
                    "link": "https://developer.cisco.com/docs/apic-mim-ref/",
                    "name": "APIC Management Information Model reference"
                },
                {
                    "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
                    "ref": "aci_guide"
                },
                {
                    "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
                    "ref": "aci_dev_guide"
                }
            ],
            "short_description": "Manage Fabric interface policy leaf profile interface selectors (infra:HPortS, infra:RsAccBaseGrp, infra:PortBlk)"
        },
        "examples": "\n- name: Associate an Interface Access Port Selector to an Interface Policy Leaf Profile with a Policy Group\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    from_port: 13\n    to_port: 16\n    policy_group: policygroupname\n    state: present\n  delegate_to: localhost\n\n- name: Associate an interface access port selector to an Interface Policy Leaf Profile (w/o policy group) (check if this works)\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    port_blk: leafportblkname\n    from_port: 13\n    to_port: 16\n    state: present\n  delegate_to: localhost\n\n- name: Remove an interface access port selector associated with an Interface Policy Leaf Profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    state: absent\n  delegate_to: localhost\n\n- name: Remove an interface access port selector associated with an Interface Policy Fex Profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: fexintprfname\n    access_port_selector: accessportselectorname\n    state: absent\n  delegate_to: localhost\n\n- name: Query Specific access_port_selector under given leaf_interface_profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: leafintprfname\n    access_port_selector: accessportselectorname\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Query Specific access_port_selector under given Fex leaf_interface_profile\n  cisco.aci.aci_access_port_to_interface_policy_leaf_profile:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    interface_profile: fexintprfname\n    access_port_selector: accessportselectorname\n    state: query\n  delegate_to: localhost\n  register: query_result\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": {
            "current": {
                "description": "The existing configuration from the APIC after the module has finished",
                "returned": "success",
                "sample": [
                    {
                        "fvTenant": {
                            "attributes": {
                                "descr": "Production environment",
                                "dn": "uni/tn-production",
                                "name": "production",
                                "nameAlias": "",
                                "ownerKey": "",
                                "ownerTag": ""
                            }
                        }
                    }
                ],
                "type": "list"
            },
            "error": {
                "description": "The error information as returned from the APIC",
                "returned": "failure",
                "sample": {
                    "code": "122",
                    "text": "unknown managed object class foo"
                },
                "type": "dict"
            },
            "filter_string": {
                "description": "The filter string used for the request",
                "returned": "failure or debug",
                "sample": "?rsp-prop-include=config-only",
                "type": "str"
            },
            "method": {
                "description": "The HTTP method used for the request to the APIC",
                "returned": "failure or debug",
                "sample": "POST",
                "type": "str"
            },
            "previous": {
                "description": "The original configuration from the APIC before the module has started",
                "returned": "info",
                "sample": [
                    {
                        "fvTenant": {
                            "attributes": {
                                "descr": "Production",
                                "dn": "uni/tn-production",
                                "name": "production",
                                "nameAlias": "",
                                "ownerKey": "",
                                "ownerTag": ""
                            }
                        }
                    }
                ],
                "type": "list"
            },
            "proposed": {
                "description": "The assembled configuration from the user-provided parameters",
                "returned": "info",
                "sample": {
                    "fvTenant": {
                        "attributes": {
                            "descr": "Production environment",
                            "name": "production"
                        }
                    }
                },
                "type": "dict"
            },
            "raw": {
                "description": "The raw output returned by the APIC REST API (xml or json)",
                "returned": "parse error",
                "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
                "type": "str"
            },
            "response": {
                "description": "The HTTP response from the APIC",
                "returned": "failure or debug",
                "sample": "OK (30 bytes)",
                "type": "str"
            },
            "sent": {
                "description": "The actual/minimal configuration pushed to the APIC",
                "returned": "info",
                "sample": {
                    "fvTenant": {
                        "attributes": {
                            "descr": "Production environment"
                        }
                    }
                },
                "type": "list"
            },
            "status": {
                "description": "The HTTP status from the APIC",
                "returned": "failure or debug",
                "sample": 200,
                "type": "int"
            },
            "url": {
                "description": "The HTTP url used for the request to the APIC",
                "returned": "failure or debug",
                "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
                "type": "str"
            }
        }
    }
}
