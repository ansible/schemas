{
    "cisco.meraki.meraki_device": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Visibility into devices associated to a Meraki environment."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_device.py",
            "has_action": false,
            "module": "meraki_device",
            "notes": [
                "This module does not support claiming of devices or licenses into a Meraki organization.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "address": {
                    "description": [
                        "Postal address of device's location."
                    ],
                    "type": "str"
                },
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Hostname of network device to search for."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "lat": {
                    "aliases": [
                        "latitude"
                    ],
                    "description": [
                        "Latitude of device's geographic location.",
                        "Use negative number for southern hemisphere."
                    ],
                    "type": "float"
                },
                "lldp_cdp_timespan": {
                    "description": [
                        "Timespan, in seconds, used to query LLDP and CDP information.",
                        "Must be less than 1 month."
                    ],
                    "type": "int"
                },
                "lng": {
                    "aliases": [
                        "longitude"
                    ],
                    "description": [
                        "Longitude of device's geographic location.",
                        "Use negative number for western hemisphere."
                    ],
                    "type": "float"
                },
                "model": {
                    "description": [
                        "Model of network device to search for."
                    ],
                    "type": "str"
                },
                "move_map_marker": {
                    "description": [
                        "Whether or not to set the latitude and longitude of a device based on the new address.",
                        "Only applies when C(lat) and C(lng) are not specified."
                    ],
                    "type": "bool"
                },
                "net_id": {
                    "description": [
                        "ID of a network."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "aliases": [
                        "network"
                    ],
                    "description": [
                        "Name of a network."
                    ],
                    "type": "str"
                },
                "note": {
                    "description": [
                        "Informational notes about a device.",
                        "Limited to 255 characters."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "query": {
                    "choices": [
                        "lldp_cdp",
                        "uplink"
                    ],
                    "description": [
                        "Specifies what information should be queried."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "serial": {
                    "description": [
                        "Serial number of a device to query."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "query",
                    "description": [
                        "Query an organization."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "Space delimited list of tags to assign to device."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage devices in the Meraki cloud"
        },
        "examples": "\n- name: Query all devices in an organization.\n  meraki_device:\n    auth_key: abc12345\n    org_name: YourOrg\n    state: query\n  delegate_to: localhost\n\n- name: Query all devices in a network.\n  meraki_device:\n    auth_key: abc12345\n    org_name: YourOrg\n    net_name: YourNet\n    state: query\n  delegate_to: localhost\n\n- name: Query a device by serial number.\n  meraki_device:\n    auth_key: abc12345\n    org_name: YourOrg\n    net_name: YourNet\n    serial: ABC-123\n    state: query\n  delegate_to: localhost\n\n- name: Lookup uplink information about a device.\n  meraki_device:\n    auth_key: abc12345\n    org_name: YourOrg\n    net_name: YourNet\n    serial_uplink: ABC-123\n    state: query\n  delegate_to: localhost\n\n- name: Lookup LLDP and CDP information about devices connected to specified device.\n  meraki_device:\n    auth_key: abc12345\n    org_name: YourOrg\n    net_name: YourNet\n    serial_lldp_cdp: ABC-123\n    state: query\n  delegate_to: localhost\n\n- name: Lookup a device by hostname.\n  meraki_device:\n    auth_key: abc12345\n    org_name: YourOrg\n    net_name: YourNet\n    hostname: main-switch\n    state: query\n  delegate_to: localhost\n\n- name: Query all devices of a specific model.\n  meraki_device:\n    auth_key: abc123\n    org_name: YourOrg\n    net_name: YourNet\n    model: MR26\n    state: query\n  delegate_to: localhost\n\n- name: Update information about a device.\n  meraki_device:\n    auth_key: abc123\n    org_name: YourOrg\n    net_name: YourNet\n    state: present\n    serial: '{{serial}}'\n    name: mr26\n    address: 1060 W. Addison St., Chicago, IL\n    lat: 41.948038\n    lng: -87.65568\n    tags: recently-added\n  delegate_to: localhost\n\n- name: Claim a device into a network.\n  meraki_device:\n    auth_key: abc123\n    org_name: YourOrg\n    net_name: YourNet\n    serial: ABC-123\n    state: present\n  delegate_to: localhost\n\n- name: Remove a device from a network.\n  meraki_device:\n    auth_key: abc123\n    org_name: YourOrg\n    net_name: YourNet\n    serial: ABC-123\n    state: absent\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "response": {
                "description": "Data returned from Meraki dashboard.",
                "returned": "info",
                "type": "dict"
            }
        }
    }
}
