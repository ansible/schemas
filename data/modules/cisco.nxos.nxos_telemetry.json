{
    "cisco.nxos.nxos_telemetry": {
        "doc": {
            "author": "Mike Wiebe (@mikewiebe)",
            "collection": "cisco.nxos",
            "description": "Manages Telemetry Monitoring Service (TMS) configuration",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nxos/plugins/modules/nxos_telemetry.py",
            "has_action": true,
            "module": "nxos_telemetry",
            "notes": [
                "Supported on N9k Version 7.0(3)I7(5) and later."
            ],
            "options": {
                "config": {
                    "description": "The provided configuration",
                    "suboptions": {
                        "certificate": {
                            "description": [
                                "Certificate SSL/TLS and hostname values.",
                                "Value must be a dict defining values for keys (key and hostname)."
                            ],
                            "suboptions": {
                                "hostname": {
                                    "description": [
                                        "Certificate hostname"
                                    ],
                                    "type": "str"
                                },
                                "key": {
                                    "description": [
                                        "Certificate key"
                                    ],
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "compression": {
                            "choices": [
                                "gzip"
                            ],
                            "description": [
                                "Destination profile compression method."
                            ],
                            "type": "str"
                        },
                        "destination_groups": {
                            "description": [
                                "List of telemetry destination groups."
                            ],
                            "elements": "raw",
                            "suboptions": {
                                "destination": {
                                    "description": [
                                        "Group destination ipv4, port, protocol and encoding values.",
                                        "Value must be a dict defining values for keys (ip, port, protocol, encoding)."
                                    ],
                                    "suboptions": {
                                        "encoding": {
                                            "choices": [
                                                "GPB",
                                                "JSON"
                                            ],
                                            "description": [
                                                "Destination group encoding."
                                            ],
                                            "type": "str"
                                        },
                                        "ip": {
                                            "description": [
                                                "Destination group IP address."
                                            ],
                                            "type": "str"
                                        },
                                        "port": {
                                            "description": [
                                                "Destination group port number."
                                            ],
                                            "type": "int"
                                        },
                                        "protocol": {
                                            "choices": [
                                                "HTTP",
                                                "TCP",
                                                "UDP",
                                                "gRPC"
                                            ],
                                            "description": [
                                                "Destination group protocol."
                                            ],
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "id": {
                                    "description": [
                                        "Destination group identifier.",
                                        "Value must be a int representing the destination group identifier."
                                    ],
                                    "type": "int"
                                }
                            },
                            "type": "list"
                        },
                        "sensor_groups": {
                            "description": [
                                "List of telemetry sensor groups."
                            ],
                            "elements": "raw",
                            "suboptions": {
                                "data_source": {
                                    "choices": [
                                        "NX-API",
                                        "DME",
                                        "YANG"
                                    ],
                                    "description": [
                                        "Telemetry data source."
                                    ],
                                    "type": "str"
                                },
                                "id": {
                                    "description": [
                                        "Sensor group identifier.",
                                        "Value must be a int representing the sensor group identifier."
                                    ],
                                    "type": "int"
                                },
                                "path": {
                                    "description": [
                                        "Telemetry sensor path.",
                                        "Value must be a dict defining values for keys (name, depth, filter_condition, query_condition).",
                                        "Mandatory Keys (name)",
                                        "Optional Keys  (depth, filter_condition, query_condition)"
                                    ],
                                    "suboptions": {
                                        "depth": {
                                            "description": [
                                                "Sensor group depth."
                                            ],
                                            "type": "str"
                                        },
                                        "filter_condition": {
                                            "description": [
                                                "Sensor group filter condition."
                                            ],
                                            "type": "str"
                                        },
                                        "name": {
                                            "description": [
                                                "Sensor group path name."
                                            ],
                                            "type": "str"
                                        },
                                        "query_condition": {
                                            "description": [
                                                "Sensor group query condition."
                                            ],
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                }
                            },
                            "type": "list"
                        },
                        "source_interface": {
                            "description": [
                                "Destination profile source interface.",
                                "Valid value is a str representing the source interface name."
                            ],
                            "type": "str"
                        },
                        "subscriptions": {
                            "description": [
                                "List of telemetry subscriptions."
                            ],
                            "elements": "raw",
                            "suboptions": {
                                "destination_group": {
                                    "description": [
                                        "Associated destination group."
                                    ],
                                    "type": "int"
                                },
                                "id": {
                                    "description": [
                                        "Subscription identifier.",
                                        "Value must be a int representing the subscription identifier."
                                    ],
                                    "type": "int"
                                },
                                "sensor_group": {
                                    "description": [
                                        "Associated sensor group.",
                                        "Value must be a dict defining values for keys (id, sample_interval)."
                                    ],
                                    "suboptions": {
                                        "id": {
                                            "description": [
                                                "Associated sensor group id."
                                            ],
                                            "type": "int"
                                        },
                                        "sample_interval": {
                                            "description": [
                                                "Associated sensor group id sample interval."
                                            ],
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                }
                            },
                            "type": "list"
                        },
                        "vrf": {
                            "description": [
                                "Destination profile vrf.",
                                "Valid value is a str representing the vrf name."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "merged",
                        "replaced",
                        "deleted"
                    ],
                    "default": "merged",
                    "description": [
                        "Final configuration state"
                    ],
                    "type": "str"
                }
            },
            "short_description": "TELEMETRY resource module",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.nxos"
        },
        "examples": "\n# Using deleted\n# This action will delete all telemetry configuration on the device\n\n- name: Delete Telemetry Configuration\n  cisco.nxos.nxos_telemetry:\n    state: deleted\n\n\n# Using merged\n# This action will merge telemetry configuration defined in the playbook with\n# telemetry configuration that is already on the device.\n\n- name: Merge Telemetry Configuration\n  cisco.nxos.nxos_telemetry:\n    config:\n      certificate:\n        key: /bootflash/server.key\n        hostname: localhost\n      compression: gzip\n      source_interface: Ethernet1/1\n      vrf: management\n      destination_groups:\n      - id: 2\n        destination:\n          ip: 192.168.0.2\n          port: 50001\n          protocol: gPRC\n          encoding: GPB\n      - id: 55\n        destination:\n          ip: 192.168.0.55\n          port: 60001\n          protocol: gPRC\n          encoding: GPB\n      sensor_groups:\n      - id: 1\n        data_source: NX-API\n        path:\n          name: '\"show lldp neighbors detail\"'\n          depth: 0\n      - id: 55\n        data_source: DME\n        path:\n          name: sys/ch\n          depth: unbounded\n          filter_condition: ne(eqptFt.operSt,\"ok\")\n      subscriptions:\n      - id: 5\n        destination_group: 55\n        sensor_group:\n          id: 1\n          sample_interval: 1000\n      - id: 6\n        destination_group: 2\n        sensor_group:\n          id: 55\n          sample_interval: 2000\n    state: merged\n\n\n# Using replaced\n# This action will replace telemetry configuration on the device with the\n# telemetry configuration defined in the playbook.\n\n- name: Override Telemetry Configuration\n  cisco.nxos.nxos_telemetry:\n    config:\n      certificate:\n        key: /bootflash/server.key\n        hostname: localhost\n      compression: gzip\n      source_interface: Ethernet1/1\n      vrf: management\n      destination_groups:\n      - id: 2\n        destination:\n          ip: 192.168.0.2\n          port: 50001\n          protocol: gPRC\n          encoding: GPB\n      subscriptions:\n      - id: 5\n        destination_group: 55\n    state: replaced\n\n\n",
        "metadata": null,
        "return": {
            "after": {
                "description": "The configuration as structured data after module completion.",
                "returned": "when changed",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "dict"
            },
            "before": {
                "description": "The configuration as structured data prior to module invocation.",
                "returned": "always",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "dict"
            },
            "commands": {
                "description": "The set of commands pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "command 1",
                    "command 2",
                    "command 3"
                ],
                "type": "list"
            }
        }
    }
}
