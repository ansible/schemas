{
    "debug": {
        "doc": {
            "author": [
                "Dag Wieers (@dagwieers)",
                "Michael DeHaan"
            ],
            "collection": "ansible.builtin",
            "description": [
                "This module prints statements during execution and can be useful for debugging variables or expressions without necessarily halting the playbook.",
                "Useful for debugging together with the 'when:' directive.",
                "This module is also supported for Windows targets."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/debug.py",
            "has_action": true,
            "module": "debug",
            "notes": [
                "This module is also supported for Windows targets."
            ],
            "options": {
                "msg": {
                    "default": "Hello world!",
                    "description": [
                        "The customized message that is printed. If omitted, prints a generic message."
                    ],
                    "type": "str"
                },
                "var": {
                    "description": [
                        "A variable name to debug.",
                        "Mutually exclusive with the C(msg) option.",
                        "Be aware that this option already runs in Jinja2 context and has an implicit C({{ }}) wrapping, so you should not be using Jinja2 delimiters unless you are looking for double interpolation."
                    ],
                    "type": "str"
                },
                "verbosity": {
                    "default": 0,
                    "description": [
                        "A number that controls when the debug is run, if you set to 3 it will only run debug when -vvv or above."
                    ],
                    "type": "int",
                    "version_added": "2.1",
                    "version_added_collection": "ansible.builtin"
                }
            },
            "seealso": [
                {
                    "module": "ansible.builtin.assert"
                },
                {
                    "module": "ansible.builtin.fail"
                }
            ],
            "short_description": "Print statements during execution",
            "version_added": "0.8",
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "metadata": null,
        "return": null
    }
}
