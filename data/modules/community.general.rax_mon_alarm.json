{
    "community.general.rax_mon_alarm": {
        "doc": {
            "author": "Ash Wilson (@smashwilson)",
            "collection": "community.general",
            "description": [
                "Create or delete a Rackspace Cloud Monitoring alarm that associates an existing rax_mon_entity, rax_mon_check, and rax_mon_notification_plan with criteria that specify what conditions will trigger which levels of notifications. Rackspace monitoring module flow | rax_mon_entity -> rax_mon_check -> rax_mon_notification -> rax_mon_notification_plan -> *rax_mon_alarm*"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/rax_mon_alarm.py",
            "has_action": false,
            "module": "rax_mon_alarm",
            "notes": [
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)"
            ],
            "options": {
                "api_key": {
                    "aliases": [
                        "password"
                    ],
                    "description": [
                        "Rackspace API key, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "auth_endpoint": {
                    "description": [
                        "The URI of the authentication service.",
                        "If not specified will be set to U(https://identity.api.rackspacecloud.com/v2.0/)"
                    ],
                    "type": "str"
                },
                "check_id": {
                    "description": [
                        "ID of the check that should be alerted on. May be acquired by registering the value of a rax_mon_check task."
                    ],
                    "required": true,
                    "type": "str"
                },
                "credentials": {
                    "aliases": [
                        "creds_file"
                    ],
                    "description": [
                        "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
                    ],
                    "type": "path"
                },
                "criteria": {
                    "description": [
                        "Alarm DSL that describes alerting conditions and their output states. Must be between 1 and 16384 characters long. See http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/alerts-language.html for a reference on the alerting language."
                    ],
                    "type": "str"
                },
                "disabled": {
                    "default": false,
                    "description": [
                        "If yes, create this alarm, but leave it in an inactive state. Defaults to no."
                    ],
                    "type": "bool"
                },
                "entity_id": {
                    "description": [
                        "ID of the entity this alarm is attached to. May be acquired by registering the value of a rax_mon_entity task."
                    ],
                    "required": true,
                    "type": "str"
                },
                "env": {
                    "description": [
                        "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
                    ],
                    "type": "str"
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication mechanism to use, such as rackspace or keystone."
                    ],
                    "type": "str"
                },
                "label": {
                    "description": [
                        "Friendly name for this alarm, used to achieve idempotence. Must be a String between 1 and 255 characters long."
                    ],
                    "required": true,
                    "type": "str"
                },
                "metadata": {
                    "description": [
                        "Arbitrary key/value pairs to accompany the alarm. Must be a hash of String keys and values between 1 and 255 characters long."
                    ],
                    "type": "dict"
                },
                "notification_plan_id": {
                    "description": [
                        "ID of the notification plan to trigger if this alarm fires. May be acquired by registering the value of a rax_mon_notification_plan task."
                    ],
                    "required": true,
                    "type": "str"
                },
                "region": {
                    "description": [
                        "Region to create an instance in."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Ensure that the alarm with this C(label) exists or does not exist."
                    ],
                    "required": false,
                    "type": "str"
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication."
                    ],
                    "type": "str"
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Rackspace username, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify_ssl"
                    ],
                    "description": [
                        "Whether or not to require SSL validation of API endpoints."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "pyrax"
            ],
            "short_description": "Create or delete a Rackspace Cloud Monitoring alarm."
        },
        "examples": "\n- name: Alarm example\n  gather_facts: False\n  hosts: local\n  connection: local\n  tasks:\n  - name: Ensure that a specific alarm exists.\n    community.general.rax_mon_alarm:\n      credentials: ~/.rax_pub\n      state: present\n      label: uhoh\n      entity_id: \"{{ the_entity['entity']['id'] }}\"\n      check_id: \"{{ the_check['check']['id'] }}\"\n      notification_plan_id: \"{{ defcon1['notification_plan']['id'] }}\"\n      criteria: >\n        if (rate(metric['average']) > 10) {\n          return new AlarmStatus(WARNING);\n        }\n        return new AlarmStatus(OK);\n    register: the_alarm\n",
        "metadata": null,
        "return": null
    }
}
