{
    "community.vmware.vmware_vmotion": {
        "doc": {
            "author": [
                "Bede Carroll (@bedecarroll)",
                "Olivier Boukili (@oboukili)"
            ],
            "collection": "community.vmware",
            "description": [
                "Using VMware vCenter, move a virtual machine using vMotion to a different host, and/or its vmdks to another datastore using storage vMotion."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_vmotion.py",
            "has_action": false,
            "module": "vmware_vmotion",
            "notes": [
                "Tested on vSphere 6.0"
            ],
            "options": {
                "destination_datastore": {
                    "aliases": [
                        "datastore"
                    ],
                    "description": [
                        "Name of the destination datastore the virtual machine's vmdk should be moved on."
                    ],
                    "type": "str"
                },
                "destination_host": {
                    "aliases": [
                        "destination"
                    ],
                    "description": [
                        "Name of the destination host the virtual machine should be running on.",
                        "Version 2.6 onwards, this parameter is not a required parameter, unlike the previous versions."
                    ],
                    "type": "str"
                },
                "destination_resourcepool": {
                    "aliases": [
                        "resource_pool"
                    ],
                    "description": [
                        "Name of the destination resource pool where the virtual machine should be running.",
                        "Resource pool is required if vmotion is done between hosts which are part of different clusters or datacenters.",
                        "if not passed, resource_pool object will be retrived from host_obj parent."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "moid": {
                    "description": [
                        "Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.",
                        "This is required if C(vm_name) or C(vm_uuid) is not supplied."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "use_instance_uuid": {
                    "default": false,
                    "description": [
                        "Whether to use the VMware instance UUID rather than the BIOS UUID."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                },
                "vm_name": {
                    "aliases": [
                        "vm"
                    ],
                    "description": [
                        "Name of the VM to perform a vMotion on.",
                        "This is required parameter, if C(vm_uuid) is not set.",
                        "Version 2.6 onwards, this parameter is not a required parameter, unlike the previous versions."
                    ],
                    "type": "str"
                },
                "vm_uuid": {
                    "aliases": [
                        "uuid"
                    ],
                    "description": [
                        "UUID of the virtual machine to perform a vMotion operation on.",
                        "This is a required parameter, if C(vm_name) or C(moid) is not set."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "pyVmomi"
            ],
            "short_description": "Move a virtual machine using vMotion, and/or its vmdks using storage vMotion."
        },
        "examples": "\n- name: Perform vMotion of virtual machine\n  community.vmware.vmware_vmotion:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    validate_certs: no\n    vm_name: 'vm_name_as_per_vcenter'\n    destination_host: 'destination_host_as_per_vcenter'\n  delegate_to: localhost\n\n- name: Perform vMotion of virtual machine\n  community.vmware.vmware_vmotion:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    validate_certs: no\n    moid: vm-42\n    destination_host: 'destination_host_as_per_vcenter'\n  delegate_to: localhost\n\n- name: Perform vMotion of virtual machine to resource_pool\n  community.vmware.vmware_vmotion:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    validate_certs: no\n    moid: vm-42\n    destination_host: 'destination_host_as_per_vcenter'\n    destination_resourcepool: 'destination_resourcepool_as_per_vcenter'\n  delegate_to: localhost\n\n- name: Perform storage vMotion of of virtual machine\n  community.vmware.vmware_vmotion:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    validate_certs: no\n    vm_name: 'vm_name_as_per_vcenter'\n    destination_datastore: 'destination_datastore_as_per_vcenter'\n  delegate_to: localhost\n\n- name: Perform storage vMotion and host vMotion of virtual machine\n  community.vmware.vmware_vmotion:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    validate_certs: no\n    vm_name: 'vm_name_as_per_vcenter'\n    destination_host: 'destination_host_as_per_vcenter'\n    destination_datastore: 'destination_datastore_as_per_vcenter'\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "running_host": {
                "description": "List the host the virtual machine is registered to",
                "returned": "changed or success",
                "sample": "host1.example.com",
                "type": "str"
            }
        }
    }
}
