{
    "cisco.aci.aci_bd_subnet": {
        "doc": {
            "author": [
                "Jacob McGill (@jmcgill298)"
            ],
            "collection": "cisco.aci",
            "description": [
                "Manage Subnets on Cisco ACI fabrics."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/aci/plugins/modules/aci_bd_subnet.py",
            "has_action": false,
            "module": "aci_bd_subnet",
            "notes": [
                "The C(gateway) parameter is the root key used to access the Subnet (not name), so the C(gateway) is required when the state is C(absent) or C(present).",
                "The C(tenant) and C(bd) used must exist before using this module in your playbook. The M(cisco.aci.aci_tenant) module and M(cisco.aci.aci_bd) can be used for these."
            ],
            "options": {
                "annotation": {
                    "description": [
                        "User-defined string for annotating an object.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_ANNOTATION) will be used instead."
                    ],
                    "type": "str"
                },
                "bd": {
                    "aliases": [
                        "bd_name"
                    ],
                    "description": [
                        "The name of the Bridge Domain."
                    ],
                    "type": "str"
                },
                "certificate_name": {
                    "aliases": [
                        "cert_name"
                    ],
                    "description": [
                        "The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.",
                        "If a C(private_key) filename was provided, this defaults to the C(private_key) basename, without extension.",
                        "If PEM-formatted content was provided for C(private_key), this defaults to the C(username) value.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_CERTIFICATE_NAME) will be used instead."
                    ],
                    "type": "str"
                },
                "description": {
                    "aliases": [
                        "descr"
                    ],
                    "description": [
                        "The description for the Subnet."
                    ],
                    "type": "str"
                },
                "enable_vip": {
                    "description": [
                        "Determines if the Subnet should be treated as a VIP; used when the BD is extended to multiple sites.",
                        "The APIC defaults to C(no) when unset during creation."
                    ],
                    "type": "bool"
                },
                "gateway": {
                    "aliases": [
                        "gateway_ip"
                    ],
                    "description": [
                        "The IPv4 or IPv6 gateway address for the Subnet."
                    ],
                    "type": "str"
                },
                "host": {
                    "aliases": [
                        "hostname"
                    ],
                    "description": [
                        "IP Address or hostname of APIC resolvable by Ansible control host.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_HOST) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "mask": {
                    "aliases": [
                        "subnet_mask"
                    ],
                    "description": [
                        "The subnet mask for the Subnet.",
                        "This is the number associated with CIDR notation.",
                        "For IPv4 addresses, accepted values range between C(0) and C(32).",
                        "For IPv6 addresses, accepted Values range between C(0) and C(128)."
                    ],
                    "type": "int"
                },
                "name_alias": {
                    "description": [
                        "The alias for the current object. This relates to the nameAlias field in ACI."
                    ],
                    "type": "str"
                },
                "nd_prefix_policy": {
                    "description": [
                        "The IPv6 Neighbor Discovery Prefix Policy to associate with the Subnet."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "info",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Influence the output of this ACI module.",
                        "C(normal) means the standard output, incl. C(current) dict",
                        "C(info) adds informational output, incl. C(previous), C(proposed) and C(sent) dicts",
                        "C(debug) adds debugging output, incl. C(filter_string), C(method), C(response), C(status) and C(url) information",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_LEVEL) will be used instead."
                    ],
                    "type": "str"
                },
                "output_path": {
                    "description": [
                        "Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OUTPUT_PATH) will be used instead."
                    ],
                    "type": "str"
                },
                "owner_key": {
                    "description": [
                        "User-defined string for the ownerKey attribute of an ACI object.",
                        "This attribute represents a key for enabling clients to own their data for entity correlation.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_KEY) will be used instead."
                    ],
                    "type": "str"
                },
                "owner_tag": {
                    "description": [
                        "User-defined string for the ownerTag attribute of an ACI object.",
                        "This attribute represents a tag for enabling clients to add their own data.",
                        "For example, to indicate who created this object.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_OWNER_TAG) will be used instead."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password to use for authentication.",
                        "This option is mutual exclusive with C(private_key). If C(private_key) is provided too, it will be used instead.",
                        "If the value is not specified in the task, the value of environment variables C(ACI_PASSWORD) or C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ],
                    "type": "str"
                },
                "port": {
                    "description": [
                        "Port number to be used for REST connection.",
                        "The default value depends on parameter C(use_ssl).",
                        "If the value is not specified in the task, the value of environment variable C(ACI_PORT) will be used instead."
                    ],
                    "type": "int"
                },
                "preferred": {
                    "description": [
                        "Determines if the Subnet is preferred over all available Subnets. Only one Subnet per Address Family (IPv4/IPv6). can be preferred in the Bridge Domain.",
                        "The APIC defaults to C(no) when unset during creation."
                    ],
                    "type": "bool"
                },
                "private_key": {
                    "aliases": [
                        "cert_key"
                    ],
                    "description": [
                        "Either a PEM-formatted private key file or the private key content used for signature-based authentication.",
                        "This value also influences the default C(certificate_name) that is used.",
                        "This option is mutual exclusive with C(password). If C(password) is provided too, it will be ignored.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_PRIVATE_KEY) will be used instead."
                    ],
                    "type": "str"
                },
                "route_profile": {
                    "description": [
                        "The Route Profile to the associate with the Subnet."
                    ],
                    "type": "str"
                },
                "route_profile_l3_out": {
                    "description": [
                        "The L3 Out that contains the associated Route Profile."
                    ],
                    "type": "str"
                },
                "scope": {
                    "choices": [
                        "private",
                        "public",
                        "shared"
                    ],
                    "description": [
                        "Determines the scope of the Subnet.",
                        "The C(private) option only allows communication with hosts in the same VRF.",
                        "The C(public) option allows the Subnet to be advertised outside of the ACI Fabric, and allows communication with hosts in other VRFs.",
                        "The shared option limits communication to hosts in either the same VRF or the shared VRF.",
                        "The value is a list of options, C(private) and C(public) are mutually exclusive, but both can be used with C(shared).",
                        "The APIC defaults to C(private) when unset during creation."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Use C(present) or C(absent) for adding or removing.",
                        "Use C(query) for listing an object or multiple objects."
                    ],
                    "type": "str"
                },
                "subnet_control": {
                    "choices": [
                        "nd_ra",
                        "no_gw",
                        "querier_ip",
                        "unspecified"
                    ],
                    "description": [
                        "Determines the Subnet's Control State.",
                        "The C(querier_ip) option is used to treat the gateway_ip as an IGMP querier source IP.",
                        "The C(nd_ra) option is used to treat the gateway_ip address as a Neighbor Discovery Router Advertisement Prefix.",
                        "The C(no_gw) option is used to remove default gateway functionality from the gateway address.",
                        "The APIC defaults to C(nd_ra) when unset during creation."
                    ],
                    "type": "str"
                },
                "subnet_name": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "The name of the Subnet."
                    ],
                    "type": "str"
                },
                "tenant": {
                    "aliases": [
                        "tenant_name"
                    ],
                    "description": [
                        "The name of the Tenant."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "The socket level timeout in seconds.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_TIMEOUT) will be used instead."
                    ],
                    "type": "int"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_USE_PROXY) will be used instead."
                    ],
                    "type": "bool"
                },
                "use_ssl": {
                    "default": true,
                    "description": [
                        "If C(no), an HTTP connection will be used instead of the default HTTPS connection.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_USE_SSL) will be used instead."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "user"
                    ],
                    "default": "admin",
                    "description": [
                        "The username to use for authentication.",
                        "If the value is not specified in the task, the value of environment variables C(ACI_USERNAME) or C(ANSIBLE_NET_USERNAME) will be used instead."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only set to C(no) when used on personally controlled sites using self-signed certificates.",
                        "If the value is not specified in the task, the value of environment variable C(ACI_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                }
            },
            "seealso": [
                {
                    "module": "cisco.aci.aci_bd"
                },
                {
                    "module": "cisco.aci.aci_tenant"
                },
                {
                    "description": "More information about the internal APIC class B(fv:Subnet).",
                    "link": "https://developer.cisco.com/docs/apic-mim-ref/",
                    "name": "APIC Management Information Model reference"
                },
                {
                    "description": "Detailed information on how to manage your ACI infrastructure using Ansible.",
                    "ref": "aci_guide"
                },
                {
                    "description": "Detailed guide on how to write your own Cisco ACI modules to contribute.",
                    "ref": "aci_dev_guide"
                }
            ],
            "short_description": "Manage Subnets (fv:Subnet)"
        },
        "examples": "\n- name: Create a tenant\n  cisco.aci.aci_tenant:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    state: present\n  delegate_to: localhost\n\n- name: Create a bridge domain\n  cisco.aci.aci_bd:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    state: present\n  delegate_to: localhost\n\n- name: Create a subnet\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    state: present\n  delegate_to: localhost\n\n- name: Create a subnet with options\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    subnet_name: sql\n    gateway: 10.1.2.1\n    mask: 23\n    description: SQL Servers\n    scope: public\n    route_profile_l3_out: corp\n    route_profile: corp_route_profile\n    state: present\n  delegate_to: localhost\n\n- name: Update a subnets scope to private and shared\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    scope: [private, shared]\n    state: present\n  delegate_to: localhost\n\n- name: Get all subnets\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    state: query\n  delegate_to: localhost\n\n- name: Get all subnets of specific gateway in specified tenant\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    gateway: 10.1.1.1\n    mask: 24\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Get specific subnet\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    state: query\n  delegate_to: localhost\n  register: query_result\n\n- name: Delete a subnet\n  cisco.aci.aci_bd_subnet:\n    host: apic\n    username: admin\n    password: SomeSecretPassword\n    tenant: production\n    bd: database\n    gateway: 10.1.1.1\n    mask: 24\n    state: absent\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": {
            "current": {
                "description": "The existing configuration from the APIC after the module has finished",
                "returned": "success",
                "sample": [
                    {
                        "fvTenant": {
                            "attributes": {
                                "descr": "Production environment",
                                "dn": "uni/tn-production",
                                "name": "production",
                                "nameAlias": "",
                                "ownerKey": "",
                                "ownerTag": ""
                            }
                        }
                    }
                ],
                "type": "list"
            },
            "error": {
                "description": "The error information as returned from the APIC",
                "returned": "failure",
                "sample": {
                    "code": "122",
                    "text": "unknown managed object class foo"
                },
                "type": "dict"
            },
            "filter_string": {
                "description": "The filter string used for the request",
                "returned": "failure or debug",
                "sample": "?rsp-prop-include=config-only",
                "type": "str"
            },
            "method": {
                "description": "The HTTP method used for the request to the APIC",
                "returned": "failure or debug",
                "sample": "POST",
                "type": "str"
            },
            "previous": {
                "description": "The original configuration from the APIC before the module has started",
                "returned": "info",
                "sample": [
                    {
                        "fvTenant": {
                            "attributes": {
                                "descr": "Production",
                                "dn": "uni/tn-production",
                                "name": "production",
                                "nameAlias": "",
                                "ownerKey": "",
                                "ownerTag": ""
                            }
                        }
                    }
                ],
                "type": "list"
            },
            "proposed": {
                "description": "The assembled configuration from the user-provided parameters",
                "returned": "info",
                "sample": {
                    "fvTenant": {
                        "attributes": {
                            "descr": "Production environment",
                            "name": "production"
                        }
                    }
                },
                "type": "dict"
            },
            "raw": {
                "description": "The raw output returned by the APIC REST API (xml or json)",
                "returned": "parse error",
                "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><imdata totalCount=\"1\"><error code=\"122\" text=\"unknown managed object class foo\"/></imdata>",
                "type": "str"
            },
            "response": {
                "description": "The HTTP response from the APIC",
                "returned": "failure or debug",
                "sample": "OK (30 bytes)",
                "type": "str"
            },
            "sent": {
                "description": "The actual/minimal configuration pushed to the APIC",
                "returned": "info",
                "sample": {
                    "fvTenant": {
                        "attributes": {
                            "descr": "Production environment"
                        }
                    }
                },
                "type": "list"
            },
            "status": {
                "description": "The HTTP status from the APIC",
                "returned": "failure or debug",
                "sample": 200,
                "type": "int"
            },
            "url": {
                "description": "The HTTP url used for the request to the APIC",
                "returned": "failure or debug",
                "sample": "https://10.11.12.13/api/mo/uni/tn-production.json",
                "type": "str"
            }
        }
    }
}
