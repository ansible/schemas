{
    "community.general.oneview_san_manager": {
        "doc": {
            "author": [
                "Felipe Bulsoni (@fgbulsoni)",
                "Thiago Miotto (@tmiotto)",
                "Adriane Cardozo (@adriane-cardozo)"
            ],
            "collection": "community.general",
            "description": [
                "Provides an interface to manage SAN Manager resources. Can create, update, or delete."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/oneview_san_manager.py",
            "has_action": false,
            "module": "oneview_san_manager",
            "notes": [
                "A sample configuration file for the config parameter can be found at: U(https://github.com/HewlettPackard/oneview-ansible/blob/master/examples/oneview_config-rename.json)",
                "Check how to use environment variables for configuration at: U(https://github.com/HewlettPackard/oneview-ansible#environment-variables)",
                "Additional Playbooks for the HPE OneView Ansible modules can be found at: U(https://github.com/HewlettPackard/oneview-ansible/tree/master/examples)",
                "The OneView API version used will directly affect returned and expected fields in resources. Information on setting the desired API version and can be found at: U(https://github.com/HewlettPackard/oneview-ansible#setting-your-oneview-version)"
            ],
            "options": {
                "api_version": {
                    "description": [
                        "OneView API Version."
                    ],
                    "type": "int"
                },
                "config": {
                    "description": [
                        "Path to a .json configuration file containing the OneView client configuration. The configuration file is optional and when used should be present in the host running the ansible commands. If the file path is not provided, the configuration will be loaded from environment variables. For links to example configuration files or how to use the environment variables verify the notes section."
                    ],
                    "type": "path"
                },
                "data": {
                    "description": [
                        "List with SAN Manager properties."
                    ],
                    "required": true,
                    "type": "dict"
                },
                "hostname": {
                    "description": [
                        "IP address or hostname for the appliance."
                    ],
                    "type": "str"
                },
                "image_streamer_hostname": {
                    "description": [
                        "IP address or hostname for the HPE Image Streamer REST API."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Password for API authentication."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "connection_information_set"
                    ],
                    "default": "present",
                    "description": [
                        "Indicates the desired state for the Uplink Set resource. - C(present) ensures data properties are compliant with OneView. - C(absent) removes the resource from OneView, if it exists. - C(connection_information_set) updates the connection information for the SAN Manager. This operation is non-idempotent."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Username for API authentication."
                    ],
                    "type": "str"
                },
                "validate_etag": {
                    "default": true,
                    "description": [
                        "When the ETag Validation is enabled, the request will be conditionally processed only if the current ETag for the resource matches the ETag provided in the data."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "hpOneView >= 3.1.1",
                "python >= 2.7.9"
            ],
            "short_description": "Manage OneView SAN Manager resources"
        },
        "examples": "\n- name: Creates a Device Manager for the Brocade SAN provider with the given hostname and credentials\n  community.general.oneview_san_manager:\n    config: /etc/oneview/oneview_config.json\n    state: present\n    data:\n      providerDisplayName: Brocade Network Advisor\n      connectionInfo:\n        - name: Host\n          value: 172.18.15.1\n        - name: Port\n          value: 5989\n        - name: Username\n          value: username\n        - name: Password\n          value: password\n        - name: UseSsl\n          value: true\n  delegate_to: localhost\n\n- name: Ensure a Device Manager for the Cisco SAN Provider is present\n  community.general.oneview_san_manager:\n    config: /etc/oneview/oneview_config.json\n    state: present\n    data:\n      name: 172.18.20.1\n      providerDisplayName: Cisco\n      connectionInfo:\n        - name: Host\n          value: 172.18.20.1\n        - name: SnmpPort\n          value: 161\n        - name: SnmpUserName\n          value: admin\n        - name: SnmpAuthLevel\n          value: authnopriv\n        - name: SnmpAuthProtocol\n          value: sha\n        - name: SnmpAuthString\n          value: password\n  delegate_to: localhost\n\n- name: Sets the SAN Manager connection information\n  community.general.oneview_san_manager:\n    config: /etc/oneview/oneview_config.json\n    state: connection_information_set\n    data:\n      connectionInfo:\n        - name: Host\n          value: '172.18.15.1'\n        - name: Port\n          value: '5989'\n        - name: Username\n          value: 'username'\n        - name: Password\n          value: 'password'\n        - name: UseSsl\n          value: true\n  delegate_to: localhost\n\n- name: Refreshes the SAN Manager\n  community.general.oneview_san_manager:\n    config: /etc/oneview/oneview_config.json\n    state: present\n    data:\n      name: 172.18.15.1\n      refreshState: RefreshPending\n  delegate_to: localhost\n\n- name: Delete the SAN Manager recently created\n  community.general.oneview_san_manager:\n    config: /etc/oneview/oneview_config.json\n    state: absent\n    data:\n      name: '172.18.15.1'\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "san_manager": {
                "description": "Has the OneView facts about the SAN Manager.",
                "returned": "On state 'present'. Can be null.",
                "type": "dict"
            }
        }
    }
}
