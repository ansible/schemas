{
    "community.vmware.vmware_dvswitch_info": {
        "doc": {
            "author": [
                "sky-joker (@sky-joker)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to gather information about dvswitch configurations."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_dvswitch_info.py",
            "has_action": false,
            "module": "vmware_dvswitch_info",
            "options": {
                "folder": {
                    "description": [
                        "Specify a folder location of dvswitch to gather information from.",
                        "Examples:",
                        "   folder: /datacenter1/network",
                        "   folder: datacenter1/network",
                        "   folder: /datacenter1/network/folder1",
                        "   folder: datacenter1/network/folder1",
                        "   folder: /folder1/datacenter1/network",
                        "   folder: folder1/datacenter1/network",
                        "   folder: /folder1/datacenter1/network/folder2"
                    ],
                    "required": false,
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "properties": {
                    "description": [
                        "Specify the properties to retrieve.",
                        "If not specified, all properties are retrieved (deeply).",
                        "Results are returned in a structure identical to the vsphere API.",
                        "Example:",
                        "   properties: [",
                        "      \"summary.name\",",
                        "      \"summary.numPorts\",",
                        "      \"config.maxMtu\",",
                        "      \"overallStatus\"",
                        "   ]",
                        "Only valid when C(schema) is C(vsphere)."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "schema": {
                    "choices": [
                        "summary",
                        "vsphere"
                    ],
                    "default": "summary",
                    "description": [
                        "Specify the output schema desired.",
                        "The 'summary' output schema is the legacy output from the module",
                        "The 'vsphere' output schema is the vSphere API class definition which requires pyvmomi>6.7.1"
                    ],
                    "type": "str"
                },
                "switch_name": {
                    "aliases": [
                        "switch",
                        "dvswitch"
                    ],
                    "description": [
                        "Name of a dvswitch to look for.",
                        "If C(switch_name) not specified gather all dvswitch information."
                    ],
                    "required": false,
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "PyVmomi"
            ],
            "short_description": "Gathers info dvswitch configurations"
        },
        "examples": "\n- name: Gather all registered dvswitch\n  community.vmware.vmware_dvswitch_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n  delegate_to: localhost\n  register: dvswitch_info\n\n- name: Gather info about specific dvswitch\n  community.vmware.vmware_dvswitch_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    switch_name: DVSwitch01\n  delegate_to: localhost\n  register: dvswitch_info\n\n- name: Gather info from folder about specific dvswitch\n  community.vmware.vmware_dvswitch_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    folder: /datacenter1/network/F01\n    switch_name: DVSwitch02\n  delegate_to: localhost\n  register: dvswitch_info\n\n- name: Gather some info from a dvswitch using the vSphere API output schema\n  community.vmware.vmware_dvswitch_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    schema: vsphere\n    properties:\n      - summary.name\n      - summary.numPorts\n      - config.maxMtu\n      - overallStatus\n    switch_name: DVSwitch01\n  register: dvswitch_info\n",
        "metadata": null,
        "return": {
            "distributed_virtual_switches": {
                "description": "list of dictionary of dvswitch and their information",
                "returned": "always",
                "sample": [
                    {
                        "configure": {
                            "folder": "network",
                            "hosts": [
                                "esxi-test-02.local",
                                "esxi-test-01.local"
                            ],
                            "settings": {
                                "healthCheck": {
                                    "TeamingHealthCheckConfig": false,
                                    "VlanMtuHealthCheckConfig": false
                                },
                                "netflow": {
                                    "activeFlowTimeout": 60,
                                    "collectorIpAddress": "",
                                    "collectorPort": 0,
                                    "idleFlowTimeout": 15,
                                    "internalFlowsOnly": false,
                                    "observationDomainId": 0,
                                    "samplingRate": 0,
                                    "switchIpAddress": null
                                },
                                "privateVlan": [],
                                "properties": {
                                    "administratorContact": {
                                        "contact": null,
                                        "name": null
                                    },
                                    "advanced": {
                                        "maxMtu": 1500,
                                        "multicastFilteringMode": "legacyFiltering"
                                    },
                                    "discoveryProtocol": {
                                        "operation": "listen",
                                        "protocol": "cdp"
                                    },
                                    "general": {
                                        "ioControl": true,
                                        "name": "DVSwitch01",
                                        "numPorts": 10,
                                        "numUplinks": 1,
                                        "vendor": "VMware, Inc.",
                                        "version": "6.6.0"
                                    }
                                }
                            }
                        },
                        "uuid": "50 30 99 9c a7 60 8a 4f-05 9f e7 b5 da df 8f 17"
                    }
                ],
                "type": "list"
            }
        }
    }
}
