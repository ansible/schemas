{
    "cloudscale_ch.cloud.floating_ip": {
        "doc": {
            "author": [
                "Gaudenz Steinlin (@gaudenz)",
                "Denis Krienb\u00fchl (@href)",
                "Ren\u00e9 Moser (@resmo)"
            ],
            "collection": "cloudscale_ch.cloud",
            "description": [
                "Create, assign and delete floating IPs on the cloudscale.ch IaaS service."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cloudscale_ch/cloud/plugins/modules/floating_ip.py",
            "has_action": false,
            "module": "floating_ip",
            "notes": [
                "Once a floating_ip is created, all parameters except C(server), C(reverse_ptr) and C(tags) are read-only.",
                "All operations are performed using the cloudscale.ch public API v1.",
                "For details consult the full API documentation: U(https://www.cloudscale.ch/en/api/v1).",
                "A valid API token is required for all operations. You can create as many tokens as you like using the cloudscale.ch control panel at U(https://control.cloudscale.ch)."
            ],
            "options": {
                "api_timeout": {
                    "default": 30,
                    "description": [
                        "Timeout in seconds for calls to the cloudscale.ch API."
                    ],
                    "type": "int"
                },
                "api_token": {
                    "description": [
                        "cloudscale.ch API token.",
                        "This can also be passed in the C(CLOUDSCALE_API_TOKEN) environment variable."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_url": {
                    "default": "https://api.cloudscale.ch/v1",
                    "description": [
                        "cloudscale.ch API URL.",
                        "This can also be passed in the C(CLOUDSCALE_API_URL) environment variable."
                    ],
                    "type": "str",
                    "version_added": "1.3.0",
                    "version_added_collection": "cloudscale_ch.cloud"
                },
                "ip_version": {
                    "choices": [
                        4,
                        6
                    ],
                    "description": [
                        "IP protocol version of the floating IP.",
                        "Required when assigning a new floating IP."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "Name to identifiy the floating IP address for idempotency.",
                        "One of I(network) or I(name) is required to identify the floating IP.",
                        "Required for assigning a new floating IP."
                    ],
                    "type": "str",
                    "version_added": "1.3.0",
                    "version_added_collection": "cloudscale_ch.cloud"
                },
                "network": {
                    "aliases": [
                        "ip"
                    ],
                    "description": [
                        "Floating IP address to change.",
                        "One of I(network) or I(name) is required to identify the floating IP."
                    ],
                    "type": "str"
                },
                "prefix_length": {
                    "choices": [
                        56
                    ],
                    "description": [
                        "Only valid if I(ip_version) is 6.",
                        "Prefix length for the IPv6 network. Currently only a prefix of /56 can be requested. If no I(prefix_length) is present, a single address is created."
                    ],
                    "type": "int"
                },
                "region": {
                    "description": [
                        "Region in which the floating IP resides (e.g. C(lgp) or C(rma)). If omitted, the region of the project default zone is used. This parameter must be omitted if I(type) is set to C(global)."
                    ],
                    "type": "str"
                },
                "reverse_ptr": {
                    "description": [
                        "Reverse PTR entry for this address.",
                        "You cannot set a reverse PTR entry for IPv6 floating networks. Reverse PTR entries are only allowed for single addresses."
                    ],
                    "type": "str"
                },
                "server": {
                    "description": [
                        "UUID of the server assigned to this floating IP."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the floating IP."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "Tags associated with the floating IP. Set this to C({}) to clear any tags."
                    ],
                    "type": "dict",
                    "version_added": "1.1.0",
                    "version_added_collection": "cloudscale_ch.cloud"
                },
                "type": {
                    "choices": [
                        "regional",
                        "global"
                    ],
                    "default": "regional",
                    "description": [
                        "The type of the floating IP."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages floating IPs on the cloudscale.ch IaaS service",
            "version_added": "1.0.0",
            "version_added_collection": "cloudscale_ch.cloud"
        },
        "examples": "\n# Request a new floating IP without assignment to a server\n- name: Request a floating IP\n  cloudscale_ch.cloud.floating_ip:\n    name: IP to my server\n    ip_version: 4\n    reverse_ptr: my-server.example.com\n    api_token: xxxxxx\n\n# Request a new floating IP with assignment\n- name: Request a floating IP\n  cloudscale_ch.cloud.floating_ip:\n    name: web\n    ip_version: 4\n    server: 47cec963-fcd2-482f-bdb6-24461b2d47b1\n    reverse_ptr: my-server.example.com\n    api_token: xxxxxx\n\n# Assign an existing floating IP to a different server by its IP address\n- name: Move floating IP to backup server\n  cloudscale_ch.cloud.floating_ip:\n    ip: 192.0.2.123\n    server: ea3b39a3-77a8-4d0b-881d-0bb00a1e7f48\n    api_token: xxxxxx\n\n# Assign an existing floating IP to a different server by name\n- name: Move floating IP to backup server\n  cloudscale_ch.cloud.floating_ip:\n    name: IP to my server\n    server: ea3b39a3-77a8-4d0b-881d-0bb00a1e7f48\n    api_token: xxxxxx\n\n# Request a new floating IPv6 network\n- name: Request a floating IP\n  cloudscale_ch.cloud.floating_ip:\n    name: IPv6 to my server\n    ip_version: 6\n    prefix_length: 56\n    server: 47cec963-fcd2-482f-bdb6-24461b2d47b1\n    api_token: xxxxxx\n    region: lpg1\n\n# Assign an existing floating network to a different server\n- name: Move floating IP to backup server\n  cloudscale_ch.cloud.floating_ip:\n    ip: '{{ floating_ip.ip }}'\n    server: ea3b39a3-77a8-4d0b-881d-0bb00a1e7f48\n    api_token: xxxxxx\n\n# Remove a floating IP\n- name: Release floating IP\n  cloudscale_ch.cloud.floating_ip:\n    ip: 192.0.2.123\n    state: absent\n    api_token: xxxxxx\n\n# Remove a floating IP by name\n- name: Release floating IP\n  cloudscale_ch.cloud.floating_ip:\n    name: IP to my server\n    state: absent\n    api_token: xxxxxx\n",
        "metadata": null,
        "return": {
            "href": {
                "description": "The API URL to get details about this floating IP.",
                "returned": "success when state == present",
                "sample": "https://api.cloudscale.ch/v1/floating-ips/2001:db8::cafe",
                "type": "str"
            },
            "ip": {
                "description": "The floating IP address.",
                "returned": "success when state == present",
                "sample": "185.98.122.176",
                "type": "str"
            },
            "name": {
                "description": "The name of the floating IP.",
                "returned": "success",
                "sample": "my floating ip",
                "type": "str",
                "version_added": "1.3.0",
                "version_added_collection": "cloudscale_ch.cloud"
            },
            "network": {
                "description": "The CIDR notation of the network that is routed to your server.",
                "returned": "success",
                "sample": "2001:db8::cafe/128",
                "type": "str"
            },
            "next_hop": {
                "description": "Your floating IP is routed to this IP address.",
                "returned": "success when state == present",
                "sample": "2001:db8:dead:beef::42",
                "type": "str"
            },
            "region": {
                "description": "The region of the floating IP.",
                "returned": "success when state == present",
                "sample": {
                    "slug": "lpg"
                },
                "type": "dict"
            },
            "reverse_ptr": {
                "description": "The reverse pointer for this floating IP address.",
                "returned": "success when state == present",
                "sample": "185-98-122-176.cust.cloudscale.ch",
                "type": "str"
            },
            "server": {
                "description": "The floating IP is routed to this server.",
                "returned": "success when state == present",
                "sample": "47cec963-fcd2-482f-bdb6-24461b2d47b1",
                "type": "str"
            },
            "state": {
                "description": "The current status of the floating IP.",
                "returned": "success",
                "sample": "present",
                "type": "str"
            },
            "tags": {
                "description": "Tags assosiated with the floating IP.",
                "returned": "success",
                "sample": {
                    "project": "my project"
                },
                "type": "dict",
                "version_added": "1.1.0",
                "version_added_collection": "cloudscale_ch.cloud"
            }
        }
    }
}
