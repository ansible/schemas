{
    "community.network.nclu": {
        "doc": {
            "author": "Cumulus Networks (@isharacomix)",
            "collection": "community.network",
            "description": [
                "Interface to the Network Command Line Utility, developed to make it easier to configure operating systems running ifupdown2 and Quagga, such as Cumulus Linux. Command documentation is available at U(https://docs.cumulusnetworks.com/cumulus-linux/System-Configuration/Network-Command-Line-Utility-NCLU/)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/nclu.py",
            "has_action": false,
            "module": "nclu",
            "options": {
                "abort": {
                    "default": false,
                    "description": [
                        "Boolean. When true, perform a 'net abort' before the block. This cleans out any uncommitted changes in the buffer. Mutually exclusive with I(atomic)."
                    ],
                    "type": "bool"
                },
                "atomic": {
                    "default": false,
                    "description": [
                        "When true, equivalent to both I(commit) and I(abort) being true. Mutually exclusive with I(commit) and I(atomic)."
                    ],
                    "type": "bool"
                },
                "commands": {
                    "description": [
                        "A list of strings containing the net commands to run. Mutually exclusive with I(template)."
                    ]
                },
                "commit": {
                    "default": false,
                    "description": [
                        "When true, performs a 'net commit' at the end of the block. Mutually exclusive with I(atomic)."
                    ],
                    "type": "bool"
                },
                "description": {
                    "default": "Ansible-originated commit",
                    "description": [
                        "Commit description that will be recorded to the commit log if I(commit) or I(atomic) are true."
                    ]
                },
                "template": {
                    "description": [
                        "A single, multi-line string with jinja2 formatting. This string will be broken by lines, and each line will be run through net. Mutually exclusive with I(commands)."
                    ]
                }
            },
            "short_description": "Configure network interfaces using NCLU"
        },
        "examples": "\n\n- name: Add two interfaces without committing any changes\n  community.network.nclu:\n    commands:\n        - add int swp1\n        - add int swp2\n\n- name: Modify hostname to Cumulus-1 and commit the change\n  community.network.nclu:\n    commands:\n        - add hostname Cumulus-1\n    commit: true\n\n- name: Add 48 interfaces and commit the change.\n  community.network.nclu:\n    template: |\n        {% for iface in range(1,49) %}\n        add int swp{{iface}}\n        {% endfor %}\n    commit: true\n    description: \"Ansible - add swps1-48\"\n\n- name: Fetch Status Of Interface\n  community.network.nclu:\n    commands:\n        - show interface swp1\n  register: output\n\n- name: Print Status Of Interface\n  ansible.builtin.debug:\n    var: output\n\n- name: Fetch Details From All Interfaces In JSON Format\n  community.network.nclu:\n    commands:\n        - show interface json\n  register: output\n\n- name: Print Interface Details\n  ansible.builtin.debug:\n    var: output[\"msg\"]\n\n- name: Atomically add an interface\n  community.network.nclu:\n    commands:\n        - add int swp1\n    atomic: true\n    description: \"Ansible - add swp1\"\n\n- name: Remove IP address from interface swp1\n  community.network.nclu:\n    commands:\n        - del int swp1 ip address 1.1.1.1/24\n\n- name: Configure BGP AS and add 2 EBGP neighbors using BGP Unnumbered\n  community.network.nclu:\n    commands:\n        - add bgp autonomous-system 65000\n        - add bgp neighbor swp51 interface remote-as external\n        - add bgp neighbor swp52 interface remote-as external\n    commit: true\n\n- name: Configure BGP AS and Add 2 EBGP neighbors Using BGP Unnumbered via Template\n  community.network.nclu:\n    template: |\n      {% for neighbor in range(51,53) %}\n      add bgp neighbor swp{{neighbor}} interface remote-as external\n      add bgp autonomous-system 65000\n      {% endfor %}\n    atomic: true\n\n- name: Check BGP Status\n  community.network.nclu:\n    commands:\n        - show bgp summary json\n  register: output\n\n- name: Print BGP Status In JSON\n  ansible.builtin.debug:\n    var: output[\"msg\"]\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "whether the interface was changed",
                "returned": "changed",
                "sample": true,
                "type": "bool"
            },
            "msg": {
                "description": "human-readable report of success or failure",
                "returned": "always",
                "sample": "interface bond0 config updated",
                "type": "str"
            }
        }
    }
}
