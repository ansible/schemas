{
    "arista.eos.eos_bgp_global": {
        "doc": {
            "author": "Gomathi Selvi Srinivasan (@GomathiselviS)",
            "collection": "arista.eos",
            "description": "This module configures and manages the attributes of BGP global on Arista EOS platforms.",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/arista/eos/plugins/modules/eos_bgp_global.py",
            "has_action": true,
            "module": "eos_bgp_global",
            "notes": [
                "Tested against Arista EOS 4.23.0F",
                "This module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options)."
            ],
            "options": {
                "config": {
                    "description": "A list of configurations for BGP global.",
                    "suboptions": {
                        "access_group": {
                            "description": "ip/ipv6 access list configuration.",
                            "suboptions": {
                                "acl_name": {
                                    "description": "access list name.",
                                    "type": "str"
                                },
                                "afi": {
                                    "choices": [
                                        "ipv4",
                                        "ipv6"
                                    ],
                                    "description": "Specify ip/ipv6.",
                                    "type": "str"
                                },
                                "direction": {
                                    "description": "direction of packets.",
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "aggregate_address": {
                            "description": "Configure aggregate address.",
                            "elements": "dict",
                            "suboptions": {
                                "address": {
                                    "description": "ipv4/ipv6 address prefix.",
                                    "type": "str"
                                },
                                "advertise_only": {
                                    "description": "Advertise without installing the generated blackhole route in FIB.",
                                    "type": "bool"
                                },
                                "as_set": {
                                    "description": "Generate autonomous system set path information.",
                                    "type": "bool"
                                },
                                "attribute_map": {
                                    "description": "Name of the route map used to set the attribute of the aggregate route.",
                                    "type": "str"
                                },
                                "match_map": {
                                    "description": "Name of the route map used to filter the contributors of the aggregate route.",
                                    "type": "str"
                                },
                                "summary_only": {
                                    "description": "Filters all more-specific routes from updates.",
                                    "type": "bool"
                                }
                            },
                            "type": "list"
                        },
                        "as_number": {
                            "description": "Autonomous system number.",
                            "type": "str"
                        },
                        "bgp_params": {
                            "description": "BGP parameters.",
                            "suboptions": {
                                "additional_paths": {
                                    "choices": [
                                        "install",
                                        "send",
                                        "receive"
                                    ],
                                    "description": "BGP additional-paths commands",
                                    "type": "str"
                                },
                                "advertise_inactive": {
                                    "description": "Advertise BGP routes even if they are inactive in RIB.",
                                    "type": "bool"
                                },
                                "allowas_in": {
                                    "description": "Allow local-as in updates.",
                                    "suboptions": {
                                        "count": {
                                            "description": "Number of local ASNs allowed in a BGP update.",
                                            "type": "int"
                                        },
                                        "set": {
                                            "description": "When True, it is set.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "always_compare_med": {
                                    "description": "BGP Always Compare MED",
                                    "type": "bool"
                                },
                                "asn": {
                                    "choices": [
                                        "asdot",
                                        "asplain"
                                    ],
                                    "description": "AS Number notation.",
                                    "type": "str"
                                },
                                "auto_local_addr": {
                                    "description": "Automatically determine the local address to be used for the non-transport AF.",
                                    "type": "bool"
                                },
                                "bestpath": {
                                    "description": "Select the bestpath selection algorithim for BGP routes.",
                                    "suboptions": {
                                        "as_path": {
                                            "choices": [
                                                "ignore",
                                                "multipath_relax"
                                            ],
                                            "description": "Select the bestpath selection based on as-path.",
                                            "type": "str"
                                        },
                                        "ecmp_fast": {
                                            "description": "Tie-break BGP paths in a ECMP group based on the order of arrival.",
                                            "type": "bool"
                                        },
                                        "med": {
                                            "description": "MED attribute",
                                            "suboptions": {
                                                "confed": {
                                                    "description": "MED Confed.",
                                                    "type": "bool"
                                                },
                                                "missing_as_worst": {
                                                    "description": "MED missing-as-worst.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "skip": {
                                            "description": "skip one of the tie breaking rules in the bestpath selection.",
                                            "type": "bool"
                                        },
                                        "tie_break": {
                                            "choices": [
                                                "cluster_list_length",
                                                "router_id"
                                            ],
                                            "description": "Configure the tie-break option for BGP bestpath selection.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "client_to_client": {
                                    "description": "client to client configuration.",
                                    "type": "bool"
                                },
                                "cluster_id": {
                                    "description": "Cluster ID of this router acting as a route reflector.",
                                    "type": "str"
                                },
                                "confederation": {
                                    "description": "confederation.",
                                    "suboptions": {
                                        "identifier": {
                                            "description": "Confederation identifier.",
                                            "type": "str"
                                        },
                                        "peers": {
                                            "description": "Confederation peers.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "control_plan_filter": {
                                    "description": "Control plane filter for BGP.",
                                    "type": "bool"
                                },
                                "convergence": {
                                    "description": "Bgp convergence parameters.",
                                    "suboptions": {
                                        "slow_peer": {
                                            "description": "Maximum amount of time to wait for slow peers to estabilsh session.",
                                            "type": "bool"
                                        },
                                        "time": {
                                            "description": "time in secs",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "default": {
                                    "choices": [
                                        "ipv4_unicast",
                                        "ipv6_unicast"
                                    ],
                                    "description": "Default neighbor configuration commands.",
                                    "type": "str"
                                },
                                "enforce_first_as": {
                                    "description": "Enforce the First AS for EBGP routes(default).",
                                    "type": "bool"
                                },
                                "host_routes": {
                                    "description": "BGP host routes configuration.",
                                    "type": "bool"
                                },
                                "labeled_unicast": {
                                    "choices": [
                                        "ip",
                                        "tunnel"
                                    ],
                                    "description": "Labeled Unicast.",
                                    "type": "str"
                                },
                                "listen": {
                                    "description": "BGP listen.",
                                    "suboptions": {
                                        "limit": {
                                            "description": "Set limit on the number of dynamic BGP peers allowed.",
                                            "type": "int"
                                        },
                                        "range": {
                                            "description": "Subnet Range to be associated with the peer-group.",
                                            "suboptions": {
                                                "address": {
                                                    "description": "Address prefix",
                                                    "type": "str"
                                                },
                                                "peer_group": {
                                                    "description": "Name of peer group.",
                                                    "suboptions": {
                                                        "name": {
                                                            "description": "name.",
                                                            "type": "str"
                                                        },
                                                        "peer_filter": {
                                                            "description": "Name of peer filter.",
                                                            "type": "str"
                                                        },
                                                        "remote_as": {
                                                            "description": "Neighbor AS number",
                                                            "type": "str"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "log_neighbor_changes": {
                                    "description": "Log neighbor up/down events.",
                                    "type": "bool"
                                },
                                "missing_policy": {
                                    "description": "Missing policy override configuration commands.",
                                    "suboptions": {
                                        "action": {
                                            "choices": [
                                                "deny",
                                                "permit",
                                                "deny-in-out"
                                            ],
                                            "description": "Missing policy action options.",
                                            "type": "str"
                                        },
                                        "direction": {
                                            "choices": [
                                                "in",
                                                "out"
                                            ],
                                            "description": "Missing policy direction options.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "monitoring": {
                                    "description": "Enable Bgp monitoring for all/specified stations.",
                                    "type": "bool"
                                },
                                "next_hop_unchanged": {
                                    "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                                    "type": "bool"
                                },
                                "redistribute_internal": {
                                    "description": "Redistribute internal BGP routes.",
                                    "type": "bool"
                                },
                                "route": {
                                    "description": "Configure route-map for route installation.",
                                    "type": "str"
                                },
                                "route_reflector": {
                                    "description": "Configure route reflector options",
                                    "suboptions": {
                                        "preserve": {
                                            "description": "preserve route attributes, overwriting route-map changes",
                                            "type": "bool"
                                        },
                                        "set": {
                                            "description": "When True route_reflector is set.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "transport": {
                                    "description": "Configure transport port for TCP session",
                                    "type": "int"
                                }
                            },
                            "type": "dict"
                        },
                        "default_metric": {
                            "description": "Default metric.",
                            "type": "int"
                        },
                        "distance": {
                            "description": "Define an administrative distance.",
                            "suboptions": {
                                "external": {
                                    "description": "distance for external routes.",
                                    "type": "int"
                                },
                                "internal": {
                                    "description": "distance for internal routes.",
                                    "type": "int"
                                },
                                "local": {
                                    "description": "distance for local routes.",
                                    "type": "int"
                                }
                            },
                            "type": "dict"
                        },
                        "graceful_restart": {
                            "description": "Enable graceful restart mode.",
                            "suboptions": {
                                "restart_time": {
                                    "description": "Set the max time needed to restart and come back up.",
                                    "type": "int"
                                },
                                "set": {
                                    "description": "When True, graceful restart is set.",
                                    "type": "bool"
                                },
                                "stalepath_time": {
                                    "description": "Set the max time to hold onto restarting peer stale paths.",
                                    "type": "int"
                                }
                            },
                            "type": "dict"
                        },
                        "graceful_restart_helper": {
                            "description": "Enable graceful restart helper mode.",
                            "type": "bool"
                        },
                        "maximum_paths": {
                            "description": "Maximum number of equal cost paths.",
                            "suboptions": {
                                "max_equal_cost_paths": {
                                    "description": "Value for maximum number of equal cost paths.",
                                    "type": "int"
                                },
                                "max_installed_ecmp_paths": {
                                    "description": "Value for maximum number of installed ECMP routes.",
                                    "type": "int"
                                }
                            },
                            "type": "dict"
                        },
                        "monitoring": {
                            "description": "BGP monitoring protocol configuration.",
                            "suboptions": {
                                "port": {
                                    "description": "Configure the BGP monitoring protocol port number <1024-65535>.",
                                    "type": "int"
                                },
                                "received": {
                                    "choices": [
                                        "post_policy",
                                        "pre_policy"
                                    ],
                                    "description": "BGP monitoring protocol received route selection.",
                                    "type": "str"
                                },
                                "station": {
                                    "description": "BGP monitoring station configuration.",
                                    "type": "str"
                                },
                                "timestamp": {
                                    "choices": [
                                        "none",
                                        "send_time"
                                    ],
                                    "description": "BGP monitoring protocol Per-Peer Header timestamp behavior.",
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "neighbor": {
                            "description": "Configure routing for a network.",
                            "elements": "dict",
                            "suboptions": {
                                "additional_paths": {
                                    "choices": [
                                        "send",
                                        "receive"
                                    ],
                                    "description": "BGP additional-paths commands.",
                                    "type": "str"
                                },
                                "allowas_in": {
                                    "description": "Allow local-as in updates.",
                                    "suboptions": {
                                        "count": {
                                            "description": "Number of local ASNs allowed in a BGP update.",
                                            "type": "int"
                                        },
                                        "set": {
                                            "description": "When True, it is set.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "auto_local_addr": {
                                    "description": "Automatically determine the local address to be used for the non-transport AF.",
                                    "type": "bool"
                                },
                                "default_originate": {
                                    "description": "Originate default route to this neighbor.",
                                    "suboptions": {
                                        "always": {
                                            "description": "Always originate default route to this neighbor.",
                                            "type": "bool"
                                        },
                                        "route_map": {
                                            "description": "Route map reference.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "description": {
                                    "description": "Text describing the neighbor.",
                                    "type": "str"
                                },
                                "dont_capability_negotiate": {
                                    "description": "Donot perform Capability Negotiation with this neighbor.",
                                    "type": "bool"
                                },
                                "ebgp_multihop": {
                                    "description": "Allow BGP connections to indirectly connected external peers.",
                                    "suboptions": {
                                        "set": {
                                            "description": "If True, ttl is not set.",
                                            "type": "bool"
                                        },
                                        "ttl": {
                                            "description": "Time-to-live in the range 1-255 hops.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "encryption_password": {
                                    "description": "Password to use in computation of MD5 hash.",
                                    "suboptions": {
                                        "password": {
                                            "description": "password (up to 80 chars).",
                                            "type": "str"
                                        },
                                        "type": {
                                            "choices": [
                                                0,
                                                7
                                            ],
                                            "description": "Encryption type.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "enforce_first_as": {
                                    "description": "Enforce the First AS for EBGP routes(default).",
                                    "type": "bool"
                                },
                                "export_localpref": {
                                    "description": "Override localpref when exporting to an internal peer.",
                                    "type": "int"
                                },
                                "fall_over": {
                                    "description": "Configure BFD protocol options for this peer.",
                                    "type": "bool"
                                },
                                "graceful_restart": {
                                    "description": "Enable graceful restart mode.",
                                    "type": "bool"
                                },
                                "graceful_restart_helper": {
                                    "description": "Enable graceful restart helper mode.",
                                    "type": "bool"
                                },
                                "idle_restart_timer": {
                                    "description": "Neighbor idle restart timer.",
                                    "type": "int"
                                },
                                "import_localpref": {
                                    "description": "Override localpref when importing from an external peer.",
                                    "type": "int"
                                },
                                "link_bandwidth": {
                                    "description": "Enable link bandwidth community for routes to this peer.",
                                    "suboptions": {
                                        "auto": {
                                            "description": "Enable link bandwidth auto generation for routes from this peer.",
                                            "type": "bool"
                                        },
                                        "default": {
                                            "description": "Enable link bandwidth default generation for routes from this peer.",
                                            "type": "str"
                                        },
                                        "set": {
                                            "description": "If True, set link bandwidth",
                                            "type": "bool"
                                        },
                                        "update_delay": {
                                            "description": "Delay outbound route updates.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "local_as": {
                                    "description": "Configure local AS number advertised to peer.",
                                    "suboptions": {
                                        "as_number": {
                                            "description": "AS number.",
                                            "type": "str"
                                        },
                                        "fallback": {
                                            "description": "Prefer router AS Number over local AS Number.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "local_v6_addr": {
                                    "description": "The local IPv6 address of the neighbor in A:B:C:D:E:F:G:H format.",
                                    "type": "str"
                                },
                                "maximum_accepted_routes": {
                                    "description": "Maximum number of routes accepted from this peer.",
                                    "suboptions": {
                                        "count": {
                                            "description": "Maximum number of accepted routes (0 means unlimited).",
                                            "type": "int"
                                        },
                                        "warning_limit": {
                                            "description": "Maximum number of accepted routes after which a warning is issued. (0 means never warn)",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "maximum_received_routes": {
                                    "description": "Maximum number of routes received from this peer.",
                                    "suboptions": {
                                        "count": {
                                            "description": "Maximum number of routes (0 means unlimited).",
                                            "type": "int"
                                        },
                                        "warning_limit": {
                                            "description": "Percentage of maximum-routes at which warning is to be issued.",
                                            "suboptions": {
                                                "limit_count": {
                                                    "description": "Number of routes at which to warn.",
                                                    "type": "int"
                                                },
                                                "limit_percent": {
                                                    "description": "Percentage of maximum number of routes at which to warn( 1-100).",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "warning_only": {
                                            "description": "Only warn, no restart, if max route limit exceeded.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "metric_out": {
                                    "description": "MED value to advertise to peer.",
                                    "type": "int"
                                },
                                "monitoring": {
                                    "description": "Enable BGP Monitoring Protocol for this peer.",
                                    "type": "bool"
                                },
                                "next_hop_self": {
                                    "description": "Always advertise this router address as the BGP next hop",
                                    "type": "bool"
                                },
                                "next_hop_unchanged": {
                                    "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                                    "type": "bool"
                                },
                                "next_hop_v6_address": {
                                    "description": "IPv6 next-hop address for the neighbor",
                                    "type": "str"
                                },
                                "out_delay": {
                                    "description": "Delay outbound route updates.",
                                    "type": "int"
                                },
                                "peer": {
                                    "description": "Neighbor address or peer-group.",
                                    "type": "str"
                                },
                                "peer_group": {
                                    "description": "Name of the peer-group.",
                                    "type": "str"
                                },
                                "prefix_list": {
                                    "description": "Prefix list reference.",
                                    "suboptions": {
                                        "direction": {
                                            "choices": [
                                                "in",
                                                "out"
                                            ],
                                            "description": "Configure an inbound/outbound prefix-list.",
                                            "type": "str"
                                        },
                                        "name": {
                                            "description": "prefix list name.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "remote_as": {
                                    "description": "Neighbor Autonomous System.",
                                    "type": "str"
                                },
                                "remove_private_as": {
                                    "description": "Remove private AS number from updates to this peer.",
                                    "suboptions": {
                                        "all": {
                                            "description": "Remove private AS number.",
                                            "type": "bool"
                                        },
                                        "replace_as": {
                                            "description": "Replace private AS number with local AS number.",
                                            "type": "bool"
                                        },
                                        "set": {
                                            "description": "If True, set remove_private_as.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "route_map": {
                                    "description": "Route map reference.",
                                    "suboptions": {
                                        "direction": {
                                            "choices": [
                                                "in",
                                                "out"
                                            ],
                                            "description": "Configure an inbound/outbound route-map.",
                                            "type": "str"
                                        },
                                        "name": {
                                            "description": "Route map name.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "route_reflector_client": {
                                    "description": "Configure peer as a route reflector client.",
                                    "type": "bool"
                                },
                                "route_to_peer": {
                                    "description": "Use routing table information to reach the peer.",
                                    "type": "bool"
                                },
                                "send_community": {
                                    "description": "Send community attribute to this neighbor.",
                                    "suboptions": {
                                        "community_attribute": {
                                            "description": "Type of community attributes to send to this neighbor.",
                                            "type": "str"
                                        },
                                        "divide": {
                                            "choices": [
                                                "equal",
                                                "ratio"
                                            ],
                                            "description": "link-bandwidth divide attribute.",
                                            "type": "str"
                                        },
                                        "link_bandwidth_attribute": {
                                            "choices": [
                                                "aggregate",
                                                "divide"
                                            ],
                                            "description": "cumulative/aggregate attribute to be sent.",
                                            "type": "str"
                                        },
                                        "speed": {
                                            "description": "Reference link speed in bits/second",
                                            "type": "str"
                                        },
                                        "sub_attribute": {
                                            "choices": [
                                                "extended",
                                                "link-bandwidth",
                                                "standard"
                                            ],
                                            "description": "Attribute to be sent to the neighbor.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "shut_down": {
                                    "description": "Administratively shut down this neighbor.",
                                    "type": "bool"
                                },
                                "soft_recognition": {
                                    "choices": [
                                        "all",
                                        "None"
                                    ],
                                    "description": "Configure how to handle routes that fail import.",
                                    "type": "str"
                                },
                                "timers": {
                                    "description": "Timers.",
                                    "suboptions": {
                                        "holdtime": {
                                            "description": "Hold time in secs.",
                                            "type": "int"
                                        },
                                        "keepalive": {
                                            "description": "Keep Alive Interval in secs.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "transport": {
                                    "description": "Configure transport options for TCP session.",
                                    "suboptions": {
                                        "connection_mode": {
                                            "description": "Configure connection-mode for TCP session.",
                                            "type": "str"
                                        },
                                        "remote_port": {
                                            "description": "Configure BGP peer TCP port to connect to.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "ttl": {
                                    "description": "BGP ttl security check",
                                    "type": "int"
                                },
                                "update_source": {
                                    "description": "Specify the local source interface for peer BGP sessions.",
                                    "type": "str"
                                },
                                "weight": {
                                    "description": "Weight to assign.",
                                    "type": "int"
                                }
                            },
                            "type": "list"
                        },
                        "network": {
                            "description": "Configure routing for a network.",
                            "elements": "dict",
                            "suboptions": {
                                "address": {
                                    "description": "address prefix.",
                                    "type": "str"
                                },
                                "route_map": {
                                    "description": "Name of route map.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "redistribute": {
                            "description": "Redistribute routes in to BGP.",
                            "elements": "dict",
                            "suboptions": {
                                "isis_level": {
                                    "choices": [
                                        "level-1",
                                        "level-2",
                                        "level-1-2"
                                    ],
                                    "description": "Applicable for isis routes. Specify isis route level.",
                                    "type": "str"
                                },
                                "ospf_route": {
                                    "choices": [
                                        "internal",
                                        "external",
                                        "nssa_external_1",
                                        "nssa_external_2"
                                    ],
                                    "description": "ospf route options.",
                                    "type": "str"
                                },
                                "protocol": {
                                    "choices": [
                                        "isis",
                                        "ospf3",
                                        "ospf",
                                        "attached-host",
                                        "connected",
                                        "rip",
                                        "static"
                                    ],
                                    "description": "Routes to be redistributed.",
                                    "type": "str"
                                },
                                "route_map": {
                                    "description": "Route map reference.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "route_target": {
                            "description": "Route target.",
                            "suboptions": {
                                "action": {
                                    "choices": [
                                        "both",
                                        "import",
                                        "export"
                                    ],
                                    "description": "Route action.",
                                    "type": "str"
                                },
                                "target": {
                                    "description": "Route Target.",
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "router_id": {
                            "description": "Router id.",
                            "type": "str"
                        },
                        "shutdown": {
                            "description": "When True, shut down BGP.",
                            "type": "bool"
                        },
                        "timers": {
                            "description": "Timers.",
                            "suboptions": {
                                "holdtime": {
                                    "description": "Hold time in secs.",
                                    "type": "int"
                                },
                                "keepalive": {
                                    "description": "Keep Alive Interval in secs.",
                                    "type": "int"
                                }
                            },
                            "type": "dict"
                        },
                        "ucmp": {
                            "description": "Configure unequal cost multipathing.",
                            "suboptions": {
                                "fec": {
                                    "description": "Configure UCMP fec utilization threshold.",
                                    "suboptions": {
                                        "clear": {
                                            "description": "UCMP FEC utilization Clear thresholds.",
                                            "type": "int"
                                        },
                                        "trigger": {
                                            "description": "UCMP fec utilization too high threshold.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "link_bandwidth": {
                                    "description": "Configure link-bandwidth propagation delay.",
                                    "suboptions": {
                                        "mode": {
                                            "choices": [
                                                "encoding_weighted",
                                                "recursive"
                                            ],
                                            "description": "UCMP link bandwidth mode",
                                            "type": "str"
                                        },
                                        "update_delay": {
                                            "description": "Link Bandwidth Advertisement delay.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "mode": {
                                    "description": "UCMP mode.",
                                    "suboptions": {
                                        "nexthops": {
                                            "description": "Value for total number UCMP nexthops.",
                                            "type": "int"
                                        },
                                        "set": {
                                            "description": "If True, ucmp mode is set to 1.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "dict"
                                }
                            },
                            "type": "dict"
                        },
                        "update": {
                            "description": "Configure BGP update generation.",
                            "suboptions": {
                                "batch_size": {
                                    "description": "batch size for FIB route acknowledgements.",
                                    "type": "int"
                                },
                                "wait_for": {
                                    "choices": [
                                        "wait_for_convergence",
                                        "wait_install"
                                    ],
                                    "description": "wait for options before converge or synchronize.",
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "vlan": {
                            "description": "Configure MAC VRF BGP for single VLAN support.",
                            "type": "int"
                        },
                        "vlan_aware_bundle": {
                            "description": "Configure MAC VRF BGP for multiple VLAN support.",
                            "type": "str"
                        },
                        "vrfs": {
                            "description": "Configure BGP in a VRF.",
                            "elements": "dict",
                            "suboptions": {
                                "access_group": {
                                    "description": "ip/ipv6 access list configuration.",
                                    "suboptions": {
                                        "acl_name": {
                                            "description": "access list name.",
                                            "type": "str"
                                        },
                                        "afi": {
                                            "choices": [
                                                "ip",
                                                "ipv6"
                                            ],
                                            "description": "Specify ip/ipv6.",
                                            "type": "str"
                                        },
                                        "direction": {
                                            "description": "direction of packets.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "aggregate_address": {
                                    "description": "Configure aggregate address.",
                                    "elements": "dict",
                                    "suboptions": {
                                        "address": {
                                            "description": "ipv4/ipv6 address prefix.",
                                            "type": "str"
                                        },
                                        "advertise_only": {
                                            "description": "Advertise without installing the generated blackhole route in FIB.",
                                            "type": "bool"
                                        },
                                        "as_set": {
                                            "description": "Generate autonomous system set path information.",
                                            "type": "bool"
                                        },
                                        "attribute_map": {
                                            "description": "Name of the route map used to set the attribute of the aggregate route.",
                                            "type": "str"
                                        },
                                        "match_map": {
                                            "description": "Name of the route map used to filter the contributors of the aggregate route.",
                                            "type": "str"
                                        },
                                        "summary_only": {
                                            "description": "Filters all more-specific routes from updates.",
                                            "type": "bool"
                                        }
                                    },
                                    "type": "list"
                                },
                                "bgp_params": {
                                    "description": "BGP parameters.",
                                    "suboptions": {
                                        "additional_paths": {
                                            "choices": [
                                                "install",
                                                "send",
                                                "receive"
                                            ],
                                            "description": "BGP additional-paths commands",
                                            "type": "str"
                                        },
                                        "advertise_inactive": {
                                            "description": "Advertise BGP routes even if they are inactive in RIB.",
                                            "type": "bool"
                                        },
                                        "allowas_in": {
                                            "description": "Allow local-as in updates.",
                                            "suboptions": {
                                                "count": {
                                                    "description": "Number of local ASNs allowed in a BGP update.",
                                                    "type": "int"
                                                },
                                                "set": {
                                                    "description": "When True, it is set.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "always_compare_med": {
                                            "description": "BGP Always Compare MED",
                                            "type": "bool"
                                        },
                                        "asn": {
                                            "choices": [
                                                "asdot",
                                                "asplain"
                                            ],
                                            "description": "AS Number notation.",
                                            "type": "str"
                                        },
                                        "auto_local_addr": {
                                            "description": "Automatically determine the local address to be used for the non-transport AF.",
                                            "type": "bool"
                                        },
                                        "bestpath": {
                                            "description": "Select the bestpath selection algorithim for BGP routes.",
                                            "suboptions": {
                                                "as_path": {
                                                    "choices": [
                                                        "ignore",
                                                        "multipath_relax"
                                                    ],
                                                    "description": "Select the bestpath selection based on as-path.",
                                                    "type": "str"
                                                },
                                                "ecmp_fast": {
                                                    "description": "Tie-break BGP paths in a ECMP group based on the order of arrival.",
                                                    "type": "bool"
                                                },
                                                "med": {
                                                    "description": "MED attribute",
                                                    "suboptions": {
                                                        "confed": {
                                                            "description": "MED Confed.",
                                                            "type": "bool"
                                                        },
                                                        "missing_as_worst": {
                                                            "description": "MED missing-as-worst.",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "skip": {
                                                    "description": "skip one of the tie breaking rules in the bestpath selection.",
                                                    "type": "bool"
                                                },
                                                "tie_break": {
                                                    "choices": [
                                                        "cluster_list_length",
                                                        "router_id"
                                                    ],
                                                    "description": "Configure the tie-break option for BGP bestpath selection.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "client_to_client": {
                                            "description": "client to client configuration.",
                                            "type": "bool"
                                        },
                                        "cluster_id": {
                                            "description": "Cluster ID of this router acting as a route reflector.",
                                            "type": "str"
                                        },
                                        "confederation": {
                                            "description": "confederation.",
                                            "suboptions": {
                                                "identifier": {
                                                    "description": "Confederation identifier.",
                                                    "type": "str"
                                                },
                                                "peers": {
                                                    "description": "Confederation peers.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "control_plane_filter": {
                                            "description": "Control plane filter for BGP.",
                                            "type": "bool"
                                        },
                                        "convergence": {
                                            "description": "Bgp convergence parameters.",
                                            "suboptions": {
                                                "slow_peer": {
                                                    "description": "Maximum amount of time to wait for slow peers to estabilsh session.",
                                                    "type": "bool"
                                                },
                                                "time": {
                                                    "description": "time in secs",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "default": {
                                            "choices": [
                                                "ipv4_unicast",
                                                "ipv6_unicast"
                                            ],
                                            "description": "Default neighbor configuration commands.",
                                            "type": "str"
                                        },
                                        "enforce_first_as": {
                                            "description": "Enforce the First AS for EBGP routes(default).",
                                            "type": "bool"
                                        },
                                        "host_routes": {
                                            "description": "BGP host routes configuration.",
                                            "type": "bool"
                                        },
                                        "labeled_unicast": {
                                            "choices": [
                                                "ip",
                                                "tunnel"
                                            ],
                                            "description": "Labeled Unicast.",
                                            "type": "str"
                                        },
                                        "listen": {
                                            "description": "BGP listen.",
                                            "suboptions": {
                                                "limit": {
                                                    "description": "Set limit on the number of dynamic BGP peers allowed.",
                                                    "type": "int"
                                                },
                                                "range": {
                                                    "description": "Subnet Range to be associated with the peer-group.",
                                                    "suboptions": {
                                                        "address": {
                                                            "description": "Address prefix",
                                                            "type": "str"
                                                        },
                                                        "peer_group": {
                                                            "description": "Name of peer group.",
                                                            "suboptions": {
                                                                "name": {
                                                                    "description": "name.",
                                                                    "type": "str"
                                                                },
                                                                "peer_filter": {
                                                                    "description": "Name of peer filter.",
                                                                    "type": "str"
                                                                },
                                                                "remote_as": {
                                                                    "description": "Neighbor AS number",
                                                                    "type": "str"
                                                                }
                                                            },
                                                            "type": "dict"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "log_neighbor_changes": {
                                            "description": "Log neighbor up/down events.",
                                            "type": "bool"
                                        },
                                        "missing_policy": {
                                            "description": "Missing policy override configuration commands.",
                                            "suboptions": {
                                                "action": {
                                                    "choices": [
                                                        "deny",
                                                        "permit",
                                                        "deny-in-out"
                                                    ],
                                                    "description": "Missing policy action options.",
                                                    "type": "str"
                                                },
                                                "direction": {
                                                    "choices": [
                                                        "in",
                                                        "out"
                                                    ],
                                                    "description": "Missing policy direction options.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "monitoring": {
                                            "description": "Enable Bgp monitoring for all/specified stations.",
                                            "type": "bool"
                                        },
                                        "next_hop_unchanged": {
                                            "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                                            "type": "bool"
                                        },
                                        "redistribute_internal": {
                                            "description": "Redistribute internal BGP routes.",
                                            "type": "bool"
                                        },
                                        "route": {
                                            "description": "Configure route-map for route installation.",
                                            "type": "str"
                                        },
                                        "route_reflector": {
                                            "description": "Configure route reflector options",
                                            "suboptions": {
                                                "preserve": {
                                                    "description": "preserve route attributes, overwriting route-map changes",
                                                    "type": "bool"
                                                },
                                                "set": {
                                                    "description": "When True route_reflector is set.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "transport": {
                                            "description": "Configure transport port for TCP session",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "default_metric": {
                                    "description": "Default metric.",
                                    "type": "int"
                                },
                                "distance": {
                                    "description": "Define an administrative distance.",
                                    "suboptions": {
                                        "external": {
                                            "description": "distance for external routes.",
                                            "type": "int"
                                        },
                                        "internal": {
                                            "description": "distance for internal routes.",
                                            "type": "int"
                                        },
                                        "local": {
                                            "description": "distance for local routes.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "graceful_restart": {
                                    "description": "Enable graceful restart mode.",
                                    "suboptions": {
                                        "restart_time": {
                                            "description": "Set the max time needed to restart and come back up.",
                                            "type": "int"
                                        },
                                        "set": {
                                            "description": "When True, graceful restart is set.",
                                            "type": "bool"
                                        },
                                        "stalepath_time": {
                                            "description": "Set the max time to hold onto restarting peer stale paths.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "graceful_restart_helper": {
                                    "description": "Enable graceful restart helper mode.",
                                    "type": "bool"
                                },
                                "maximum_paths": {
                                    "description": "Maximum number of equal cost paths.",
                                    "suboptions": {
                                        "max_equal_cost_paths": {
                                            "description": "Value for maximum number of equal cost paths.",
                                            "type": "int"
                                        },
                                        "max_installed_ecmp_paths": {
                                            "description": "Value for maximum number of installed ECMP routes.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "neighbor": {
                                    "description": "Configure routing for a network.",
                                    "elements": "dict",
                                    "suboptions": {
                                        "additional_paths": {
                                            "choices": [
                                                "send",
                                                "receive"
                                            ],
                                            "description": "BGP additional-paths commands.",
                                            "type": "str"
                                        },
                                        "allowas_in": {
                                            "description": "Allow local-as in updates.",
                                            "suboptions": {
                                                "count": {
                                                    "description": "Number of local ASNs allowed in a BGP update.",
                                                    "type": "int"
                                                },
                                                "set": {
                                                    "description": "When True, it is set.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "auto_local_addr": {
                                            "description": "Automatically determine the local address to be used for the non-transport AF.",
                                            "type": "bool"
                                        },
                                        "default_originate": {
                                            "description": "Originate default route to this neighbor.",
                                            "suboptions": {
                                                "always": {
                                                    "description": "Always originate default route to this neighbor.",
                                                    "type": "bool"
                                                },
                                                "route_map": {
                                                    "description": "Route map reference.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "description": {
                                            "description": "Text describing the neighbor.",
                                            "type": "str"
                                        },
                                        "dont_capability_negotiate": {
                                            "description": "Donot perform Capability Negotiation with this neighbor.",
                                            "type": "bool"
                                        },
                                        "ebgp_multihop": {
                                            "description": "Allow BGP connections to indirectly connected external peers.",
                                            "suboptions": {
                                                "set": {
                                                    "description": "If True, ttl is not set.",
                                                    "type": "bool"
                                                },
                                                "ttl": {
                                                    "description": "Time-to-live in the range 1-255 hops.",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "encryption_password": {
                                            "description": "Password to use in computation of MD5 hash.",
                                            "suboptions": {
                                                "password": {
                                                    "description": "password (up to 80 chars).",
                                                    "type": "str"
                                                },
                                                "type": {
                                                    "choices": [
                                                        0,
                                                        7
                                                    ],
                                                    "description": "Encryption type.",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "enforce_first_as": {
                                            "description": "Enforce the First AS for EBGP routes(default).",
                                            "type": "bool"
                                        },
                                        "export_localpref": {
                                            "description": "Override localpref when exporting to an internal peer.",
                                            "type": "int"
                                        },
                                        "fall_over": {
                                            "description": "Configure BFD protocol options for this peer.",
                                            "type": "bool"
                                        },
                                        "graceful_restart": {
                                            "description": "Enable graceful restart mode.",
                                            "type": "bool"
                                        },
                                        "graceful_restart_helper": {
                                            "description": "Enable graceful restart helper mode.",
                                            "type": "bool"
                                        },
                                        "idle_restart_timer": {
                                            "description": "Neighbor idle restart timer.",
                                            "type": "int"
                                        },
                                        "import_localpref": {
                                            "description": "Override localpref when importing from an external peer.",
                                            "type": "int"
                                        },
                                        "link_bandwidth": {
                                            "description": "Enable link bandwidth community for routes to this peer.",
                                            "suboptions": {
                                                "auto": {
                                                    "description": "Enable link bandwidth auto generation for routes from this peer.",
                                                    "type": "bool"
                                                },
                                                "default": {
                                                    "description": "Enable link bandwidth default generation for routes from this peer.",
                                                    "type": "str"
                                                },
                                                "set": {
                                                    "description": "If True, set link bandwidth",
                                                    "type": "bool"
                                                },
                                                "update_delay": {
                                                    "description": "Delay outbound route updates.",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "local_as": {
                                            "description": "Configure local AS number advertised to peer.",
                                            "suboptions": {
                                                "as_number": {
                                                    "description": "AS number.",
                                                    "type": "str"
                                                },
                                                "fallback": {
                                                    "description": "Prefer router AS Number over local AS Number.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "local_v6_addr": {
                                            "description": "The local IPv6 address of the neighbor in A:B:C:D:E:F:G:H format.",
                                            "type": "str"
                                        },
                                        "maximum_accepted_routes": {
                                            "description": "Maximum number of routes accepted from this peer.",
                                            "suboptions": {
                                                "count": {
                                                    "description": "Maximum number of accepted routes (0 means unlimited).",
                                                    "type": "int"
                                                },
                                                "warning_limit": {
                                                    "description": "Maximum number of accepted routes after which a warning is issued. (0 means never warn)",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "maximum_received_routes": {
                                            "description": "Maximum number of routes received from this peer.",
                                            "suboptions": {
                                                "count": {
                                                    "description": "Maximum number of routes (0 means unlimited).",
                                                    "type": "int"
                                                },
                                                "warning_limit": {
                                                    "description": "Percentage of maximum-routes at which warning is to be issued.",
                                                    "suboptions": {
                                                        "limit_count": {
                                                            "description": "Number of routes at which to warn.",
                                                            "type": "int"
                                                        },
                                                        "limit_percent": {
                                                            "description": "Percentage of maximum number of routes at which to warn( 1-100).",
                                                            "type": "int"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "warning_only": {
                                                    "description": "Only warn, no restart, if max route limit exceeded.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "metric_out": {
                                            "description": "MED value to advertise to peer.",
                                            "type": "int"
                                        },
                                        "monitoring": {
                                            "description": "Enable BGP Monitoring Protocol for this peer.",
                                            "type": "bool"
                                        },
                                        "next_hop_self": {
                                            "description": "Always advertise this router address as the BGP next hop",
                                            "type": "bool"
                                        },
                                        "next_hop_unchanged": {
                                            "description": "Preserve original nexthop while advertising routes to eBGP peers.",
                                            "type": "bool"
                                        },
                                        "next_hop_v6_address": {
                                            "description": "IPv6 next-hop address for the neighbor",
                                            "type": "str"
                                        },
                                        "out_delay": {
                                            "description": "Delay outbound route updates.",
                                            "type": "int"
                                        },
                                        "peer": {
                                            "description": "Neighbor address or peer group.",
                                            "type": "str"
                                        },
                                        "peer_group": {
                                            "description": "Name of the peer-group.",
                                            "type": "str"
                                        },
                                        "prefix_list": {
                                            "description": "Prefix list reference.",
                                            "suboptions": {
                                                "direction": {
                                                    "choices": [
                                                        "in",
                                                        "out"
                                                    ],
                                                    "description": "Configure an inbound/outbound prefix-list.",
                                                    "type": "str"
                                                },
                                                "name": {
                                                    "description": "prefix list name.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "remote_as": {
                                            "description": "Neighbor Autonomous System.",
                                            "type": "str"
                                        },
                                        "remove_private_as": {
                                            "description": "Remove private AS number from updates to this peer.",
                                            "suboptions": {
                                                "all": {
                                                    "description": "Remove private AS number.",
                                                    "type": "bool"
                                                },
                                                "replace_as": {
                                                    "description": "Replace private AS number with local AS number.",
                                                    "type": "bool"
                                                },
                                                "set": {
                                                    "description": "If True, set remove_private_as.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "route_map": {
                                            "description": "Route map reference.",
                                            "suboptions": {
                                                "direction": {
                                                    "choices": [
                                                        "in",
                                                        "out"
                                                    ],
                                                    "description": "Configure an inbound/outbound route-map.",
                                                    "type": "str"
                                                },
                                                "name": {
                                                    "description": "Route map name.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "route_reflector_client": {
                                            "description": "Configure peer as a route reflector client.",
                                            "type": "bool"
                                        },
                                        "route_to_peer": {
                                            "description": "Use routing table information to reach the peer.",
                                            "type": "bool"
                                        },
                                        "send_community": {
                                            "description": "Send community attribute to this neighbor.",
                                            "suboptions": {
                                                "community_attribute": {
                                                    "description": "Type of community attributes to send to this neighbor.",
                                                    "type": "str"
                                                },
                                                "divide": {
                                                    "choices": [
                                                        "equal",
                                                        "ratio"
                                                    ],
                                                    "description": "link-bandwidth divide attribute.",
                                                    "type": "str"
                                                },
                                                "link_bandwidth_attribute": {
                                                    "choices": [
                                                        "aggregate",
                                                        "divide"
                                                    ],
                                                    "description": "cumulative/aggregate attribute to be sent.",
                                                    "type": "str"
                                                },
                                                "speed": {
                                                    "description": "Reference link speed in bits/second",
                                                    "type": "str"
                                                },
                                                "sub_attribute": {
                                                    "choices": [
                                                        "extended",
                                                        "link-bandwidth",
                                                        "standard"
                                                    ],
                                                    "description": "Attribute to be sent to the neighbor.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "shut_down": {
                                            "description": "Administratively shut down this neighbor.",
                                            "type": "bool"
                                        },
                                        "soft_recognition": {
                                            "choices": [
                                                "all",
                                                "None"
                                            ],
                                            "description": "Configure how to handle routes that fail import.",
                                            "type": "str"
                                        },
                                        "timers": {
                                            "description": "Timers.",
                                            "suboptions": {
                                                "holdtime": {
                                                    "description": "Hold time in secs.",
                                                    "type": "int"
                                                },
                                                "keepalive": {
                                                    "description": "Keep Alive Interval in secs.",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "transport": {
                                            "description": "Configure transport options for TCP session.",
                                            "suboptions": {
                                                "connection_mode": {
                                                    "description": "Configure connection-mode for TCP session.",
                                                    "type": "str"
                                                },
                                                "remote_port": {
                                                    "description": "Configure BGP peer TCP port to connect to.",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "ttl": {
                                            "description": "BGP ttl security check",
                                            "type": "int"
                                        },
                                        "update_source": {
                                            "description": "Specify the local source interface for peer BGP sessions.",
                                            "type": "str"
                                        },
                                        "weight": {
                                            "description": "Weight to assign.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "list"
                                },
                                "network": {
                                    "description": "Configure routing for a network.",
                                    "elements": "dict",
                                    "suboptions": {
                                        "address": {
                                            "description": "address prefix.",
                                            "type": "str"
                                        },
                                        "route_map": {
                                            "description": "Name of route map.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "list"
                                },
                                "redistribute": {
                                    "description": "Redistribute routes in to BGP.",
                                    "elements": "dict",
                                    "suboptions": {
                                        "isis_level": {
                                            "choices": [
                                                "level-1",
                                                "level-2",
                                                "level-1-2"
                                            ],
                                            "description": "Applicable for isis routes. Specify isis route level.",
                                            "type": "str"
                                        },
                                        "ospf_route": {
                                            "choices": [
                                                "internal",
                                                "external",
                                                "nssa_external_1",
                                                "nssa_external_2"
                                            ],
                                            "description": "ospf route options.",
                                            "type": "str"
                                        },
                                        "protocol": {
                                            "choices": [
                                                "isis",
                                                "ospf3",
                                                "ospf",
                                                "attached-host",
                                                "connected",
                                                "rip",
                                                "static"
                                            ],
                                            "description": "Routes to be redistributed.",
                                            "type": "str"
                                        },
                                        "route_map": {
                                            "description": "Route map reference.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "list"
                                },
                                "route_target": {
                                    "description": "Route target.",
                                    "suboptions": {
                                        "action": {
                                            "choices": [
                                                "both",
                                                "import",
                                                "export"
                                            ],
                                            "description": "Route action.",
                                            "type": "str"
                                        },
                                        "target": {
                                            "description": "Route Target.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "router_id": {
                                    "description": "Router id.",
                                    "type": "str"
                                },
                                "shutdown": {
                                    "description": "When True, shut down BGP.",
                                    "type": "bool"
                                },
                                "timers": {
                                    "description": "Timers.",
                                    "suboptions": {
                                        "holdtime": {
                                            "description": "Hold time in secs.",
                                            "type": "int"
                                        },
                                        "keepalive": {
                                            "description": "Keep Alive Interval in secs.",
                                            "type": "int"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "ucmp": {
                                    "description": "Configure unequal cost multipathing.",
                                    "suboptions": {
                                        "fec": {
                                            "description": "Configure UCMP fec utilization threshold.",
                                            "suboptions": {
                                                "clear": {
                                                    "description": "UCMP FEC utilization Clear thresholds.",
                                                    "type": "int"
                                                },
                                                "trigger": {
                                                    "description": "UCMP fec utilization too high threshold.",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "link_bandwidth": {
                                            "description": "Configure link-bandwidth propagation delay.",
                                            "suboptions": {
                                                "mode": {
                                                    "choices": [
                                                        "encoding_weighted",
                                                        "recursive"
                                                    ],
                                                    "description": "UCMP link bandwidth mode",
                                                    "type": "str"
                                                },
                                                "update_delay": {
                                                    "description": "Link Bandwidth Advertisement delay.",
                                                    "type": "int"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "mode": {
                                            "description": "UCMP mode.",
                                            "suboptions": {
                                                "nexthops": {
                                                    "description": "Value for total number UCMP nexthops.",
                                                    "type": "int"
                                                },
                                                "set": {
                                                    "description": "If True, ucmp mode is set to 1.",
                                                    "type": "bool"
                                                }
                                            },
                                            "type": "dict"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "update": {
                                    "description": "Configure BGP update generation.",
                                    "suboptions": {
                                        "batch_size": {
                                            "description": "batch size for FIB route acknowledgements.",
                                            "type": "int"
                                        },
                                        "wait_for": {
                                            "choices": [
                                                "wait_for_convergence",
                                                "wait_install"
                                            ],
                                            "description": "wait for options before converge or synchronize.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "dict"
                                },
                                "vrf": {
                                    "description": "VRF name.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        }
                    },
                    "type": "dict"
                },
                "running_config": {
                    "description": [
                        "This option is used only with state I(parsed).",
                        "The value of this option should be the output received from the EOS device by executing the command B(show running-config | section bgp).",
                        "The state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "deleted",
                        "merged",
                        "purged",
                        "replaced",
                        "gathered",
                        "rendered",
                        "parsed"
                    ],
                    "default": "merged",
                    "description": [
                        "The state the configuration should be left in.",
                        "State I(purged) removes all the BGP configurations from the target device. Use caution with this state.('no router bgp <x>')",
                        "State I(deleted) only removes BGP attributes that this modules manages and does not negate the BGP process completely. Thereby, preserving address-family related configurations under BGP context.",
                        "Running states I(deleted) and I(replaced) will result in an error if there are address-family configuration lines present under vrf context that is is to be removed. Please use the  M(arista.eos.eos_bgp_address_family) module for prior cleanup.",
                        "Refer to examples for more details."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages BGP global resource module",
            "version_added": "1.4.0",
            "version_added_collection": "arista.eos"
        },
        "examples": "\n# Using merged\n# Before state\n\n# veos(config)#show running-config | section bgp\n# veos(config)#\n\n  - name: Merge provided configuration with device configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n        bgp_params:\n          host_routes: True\n          convergence:\n            slow_peer: True\n            time: 6\n          additional_paths: \"send\"\n          log_neighbor_changes: True\n        maximum_paths:\n          max_equal_cost_paths: 55\n        aggregate_address:\n          - address: \"1.2.1.0/24\"\n            as_set: true\n            match_map: \"match01\"\n          - address: \"5.2.1.0/24\"\n            attribute_map: \"attrmatch01\"\n            advertise_only: true\n        redistribute:\n          - protocol: \"static\"\n            route_map: \"map_static\"\n          - protocol: \"attached-host\"\n        distance:\n          internal: 50\n        neighbor:\n          - peer: \"10.1.3.2\"\n            allowas_in:\n              set: true\n            default_originate:\n              always: true\n            dont_capability_negotiate: true\n            export_localpref: 4000\n            maximum_received_routes:\n              count: 500\n              warning_limit:\n                limit_percent: 5\n            next_hop_unchanged: true\n            prefix_list:\n              name: \"prefix01\"\n              direction: \"out\"\n          - peer: \"peer1\"\n            fall_over: true\n            link_bandwidth:\n              update_delay: 5\n            monitoring: True\n            send_community:\n              community_attribute: \"extended\"\n              sub_attribute: \"link-bandwidth\"\n              link_bandwidth_attribute: \"aggregate\"\n              speed: \"600\"\n        vlan: 5\n      state: merged\n\n# After State:\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    distance bgp 50 50 50\n#    maximum-paths 55\n#    bgp additional-paths send any\n#    neighbor peer1 peer-group\n#    neighbor peer1 link-bandwidth update-delay 5\n#    neighbor peer1 fall-over bfd\n#    neighbor peer1 monitoring\n#    neighbor peer1 send-community extended link-bandwidth aggregate 600\n#    neighbor peer1 maximum-routes 12000\n#    neighbor 10.1.3.2 export-localpref 4000\n#    neighbor 10.1.3.2 next-hop-unchanged\n#    neighbor 10.1.3.2 dont-capability-negotiate\n#    neighbor 10.1.3.2 allowas-in 3\n#    neighbor 10.1.3.2 default-originate always\n#    neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#    aggregate-address 1.2.1.0/24 as-set match-map match01\n#    aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#    redistribute static route-map map_static\n#    redistribute attached-host\n#    !\n#    vlan 5\n#    !\n#    address-family ipv4\n#       neighbor 10.1.3.2 prefix-list prefix01 out\n# veos(config)#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"aggregate_address\": [\n#             {\n#                 \"address\": \"1.2.1.0/24\",\n#                 \"as_set\": true,\n#                 \"match_map\": \"match01\"\n#             },\n#             {\n#                 \"address\": \"5.2.1.0/24\",\n#                 \"advertise_only\": true,\n#                 \"attribute_map\": \"attrmatch01\"\n#             }\n#         ],\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"distance\": {\n#             \"external\": 50,\n#             \"internal\": 50,\n#             \"local\": 50\n#         },\n#         \"maximum_paths\": {\n#             \"max_equal_cost_paths\": 55\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"fall_over\": true,\n#                 \"link_bandwidth\": {\n#                     \"set\": true,\n#                     \"update_delay\": 5\n#                 },\n#                 \"maximum_received_routes\": {\n#                     \"count\": 12000\n#                 },\n#                 \"monitoring\": true,\n#                 \"peer\": \"peer1\",\n#                 \"peer_group\": \"peer1\",\n#                 \"send_community\": {\n#                     \"community_attribute\": \"extended\",\n#                     \"link_bandwidth_attribute\": \"aggregate\",\n#                     \"speed\": \"600\",\n#                     \"sub_attribute\": \"link-bandwidth\"\n#                 }\n#             },\n#             {\n#                 \"allowas_in\": {\n#                     \"count\": 3\n#                 },\n#                 \"default_originate\": {\n#                     \"always\": true\n#                 },\n#                 \"dont_capability_negotiate\": true,\n#                 \"export_localpref\": 4000,\n#                 \"maximum_received_routes\": {\n#                     \"count\": 500,\n#                     \"warning_limit\": {\n#                         \"limit_percent\": 5\n#                     }\n#                 },\n#                 \"next_hop_unchanged\": true,\n#                 \"peer\": \"10.1.3.2\"\n#             }\n#         ],\n#         \"redistribute\": [\n#             {\n#                 \"protocol\": \"static\",\n#                 \"route_map\": \"map_static\"\n#             },\n#             {\n#                 \"protocol\": \"attached-host\"\n#             }\n#         ],\n#         \"vlan\": 5\n#     },\n#     \"before\": {},\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 100\",\n#         \"neighbor 10.1.3.2 allowas-in\",\n#         \"neighbor 10.1.3.2 default-originate always\",\n#         \"neighbor 10.1.3.2 dont-capability-negotiate\",\n#         \"neighbor 10.1.3.2 export-localpref 4000\",\n#         \"neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\",\n#         \"neighbor 10.1.3.2 next-hop-unchanged\",\n#         \"neighbor 10.1.3.2 prefix-list prefix01 out\",\n#         \"neighbor peer1 fall-over bfd\",\n#         \"neighbor peer1 link-bandwidth update-delay 5\",\n#         \"neighbor peer1 monitoring\",\n#         \"neighbor peer1 send-community extended link-bandwidth aggregate 600\",\n#         \"redistribute static route-map map_static\",\n#         \"redistribute attached-host\",\n#         \"aggregate-address 1.2.1.0/24 as-set match-map match01\",\n#         \"aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\",\n#         \"bgp host-routes fib direct-install\",\n#         \"bgp convergence slow-peer time 6\",\n#         \"bgp additional-paths send any\",\n#         \"bgp log-neighbor-changes\",\n#         \"maximum-paths 55\",\n#         \"distance bgp 50\",\n#         \"vlan 5\"\n#     ],\n\n# Using replaced:\n\n# Before state:\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    distance bgp 50 50 50\n#    maximum-paths 55\n#    bgp additional-paths send any\n#    neighbor peer1 peer-group\n#    neighbor peer1 link-bandwidth update-delay 5\n#    neighbor peer1 fall-over bfd\n#    neighbor peer1 monitoring\n#    neighbor peer1 send-community extended link-bandwidth aggregate 600\n#    neighbor peer1 maximum-routes 12000\n#    neighbor 10.1.3.2 export-localpref 4000\n#    neighbor 10.1.3.2 next-hop-unchanged\n#    neighbor 10.1.3.2 dont-capability-negotiate\n#    neighbor 10.1.3.2 allowas-in 3\n#    neighbor 10.1.3.2 default-originate always\n#    neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#    aggregate-address 1.2.1.0/24 as-set match-map match01\n#    aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#    redistribute static route-map map_static\n#    redistribute attached-host\n#    !\n#    vlan 5\n#    !\n#    address-family ipv4\n#       neighbor 10.1.3.2 prefix-list prefix01 out\n#    !\n#    vrf vrf01\n#       route-target import 54:11\n#       neighbor 12.1.3.2 dont-capability-negotiate\n#       neighbor 12.1.3.2 allowas-in 3\n#       neighbor 12.1.3.2 default-originate always\n#       neighbor 12.1.3.2 maximum-routes 12000\n# veos(config)#\n\n  - name: replace provided configuration with device configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n        bgp_params:\n          host_routes: True\n          convergence:\n            slow_peer: True\n            time: 6\n          additional_paths: \"send\"\n          log_neighbor_changes: True\n        vrfs:\n          - vrf: \"vrf01\"\n            maximum_paths:\n              max_equal_cost_paths: 55\n            aggregate_address:\n              - address: \"1.2.1.0/24\"\n                as_set: true\n                match_map: \"match01\"\n              - address: \"5.2.1.0/24\"\n                attribute_map: \"attrmatch01\"\n                advertise_only: true\n            redistribute:\n              - protocol: \"static\"\n                route_map: \"map_static\"\n              - protocol: \"attached-host\"\n            distance:\n              internal: 50\n            neighbor:\n              - peer: \"10.1.3.2\"\n                allowas_in:\n                  set: true\n                default_originate:\n                  always: true\n                dont_capability_negotiate: true\n                export_localpref: 4000\n                maximum_received_routes:\n                  count: 500\n                  warning_limit:\n                    limit_percent: 5\n                next_hop_unchanged: true\n                prefix_list:\n                  name: \"prefix01\"\n                  direction: \"out\"\n              - peer: \"peer1\"\n                fall_over: true\n                link_bandwidth:\n                  update_delay: 5\n                monitoring: True\n                send_community:\n                  community_attribute: \"extended\"\n                  sub_attribute: \"link-bandwidth\"\n                  link_bandwidth_attribute: \"aggregate\"\n                  speed: \"600\"\n      state: replaced\n\n# After State:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    bgp additional-paths send any\n#    !\n#    vrf vrf01\n#       distance bgp 50 50 50\n#       maximum-paths 55\n#       neighbor 10.1.3.2 export-localpref 4000\n#       neighbor 10.1.3.2 next-hop-unchanged\n#       neighbor 10.1.3.2 dont-capability-negotiate\n#       neighbor 10.1.3.2 allowas-in 3\n#       neighbor 10.1.3.2 default-originate always\n#       neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#       aggregate-address 1.2.1.0/24 as-set match-map match01\n#       aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#       redistribute static route-map map_static\n#       redistribute attached-host\n#       !\n#       address-family ipv4\n#          neighbor 10.1.3.2 prefix-list prefix01 out\n# veos(config)#\n#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"aggregate_address\": [\n#                     {\n#                         \"address\": \"1.2.1.0/24\",\n#                         \"as_set\": true,\n#                         \"match_map\": \"match01\"\n#                     },\n#                     {\n#                         \"address\": \"5.2.1.0/24\",\n#                         \"advertise_only\": true,\n#                         \"attribute_map\": \"attrmatch01\"\n#                     }\n#                 ],\n#                 \"distance\": {\n#                     \"external\": 50,\n#                     \"internal\": 50,\n#                     \"local\": 50\n#                 },\n#                 \"maximum_paths\": {\n#                     \"max_equal_cost_paths\": 55\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"export_localpref\": 4000,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 500,\n#                             \"warning_limit\": {\n#                                 \"limit_percent\": 5\n#                             }\n#                         },\n#                         \"next_hop_unchanged\": true,\n#                         \"peer\": \"10.1.3.2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"protocol\": \"static\",\n#                         \"route_map\": \"map_static\"\n#                     },\n#                     {\n#                         \"protocol\": \"attached-host\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"before\": {\n#         \"aggregate_address\": [\n#             {\n#                 \"address\": \"1.2.1.0/24\",\n#                 \"as_set\": true,\n#                 \"match_map\": \"match01\"\n#             },\n#             {\n#                 \"address\": \"5.2.1.0/24\",\n#                 \"advertise_only\": true,\n#                 \"attribute_map\": \"attrmatch01\"\n#             }\n#         ],\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"distance\": {\n#             \"external\": 50,\n#             \"internal\": 50,\n#             \"local\": 50\n#         },\n#         \"maximum_paths\": {\n#             \"max_equal_cost_paths\": 55\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"fall_over\": true,\n#                 \"link_bandwidth\": {\n#                     \"set\": true,\n#                     \"update_delay\": 5\n#                 },\n#                 \"maximum_received_routes\": {\n#                     \"count\": 12000\n#                 },\n#                 \"monitoring\": true,\n#                 \"peer\": \"peer1\",\n#                 \"peer_group\": \"peer1\",\n#                 \"send_community\": {\n#                     \"community_attribute\": \"extended\",\n#                     \"link_bandwidth_attribute\": \"aggregate\",\n#                     \"speed\": \"600\",\n#                     \"sub_attribute\": \"link-bandwidth\"\n#                 }\n#             },\n#             {\n#                 \"allowas_in\": {\n#                     \"count\": 3\n#                 },\n#                 \"default_originate\": {\n#                     \"always\": true\n#                 },\n#                 \"dont_capability_negotiate\": true,\n#                 \"export_localpref\": 4000,\n#                 \"maximum_received_routes\": {\n#                     \"count\": 500,\n#                     \"warning_limit\": {\n#                         \"limit_percent\": 5\n#                     }\n#                 },\n#                 \"next_hop_unchanged\": true,\n#                 \"peer\": \"10.1.3.2\"\n#             }\n#         ],\n#         \"redistribute\": [\n#             {\n#                 \"protocol\": \"static\",\n#                 \"route_map\": \"map_static\"\n#             },\n#             {\n#                 \"protocol\": \"attached-host\"\n#             }\n#         ],\n#         \"vlan\": 5,\n#         \"vrfs\": [\n#             {\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 12000\n#                         },\n#                         \"peer\": \"12.1.3.2\"\n#                     }\n#                 ],\n#                 \"route_target\": {\n#                     \"action\": \"import\",\n#                     \"target\": \"54:11\"\n#                 },\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 100\",\n#         \"vrf vrf01\",\n#         \"no route-target import 54:11\",\n#         \"neighbor 10.1.3.2 allowas-in\",\n#         \"neighbor 10.1.3.2 default-originate always\",\n#         \"neighbor 10.1.3.2 dont-capability-negotiate\",\n#         \"neighbor 10.1.3.2 export-localpref 4000\",\n#         \"neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\",\n#         \"neighbor 10.1.3.2 next-hop-unchanged\",\n#         \"neighbor 10.1.3.2 prefix-list prefix01 out\",\n#         \"neighbor peer1 fall-over bfd\",\n#         \"neighbor peer1 link-bandwidth update-delay 5\",\n#         \"neighbor peer1 monitoring\",\n#         \"neighbor peer1 send-community extended link-bandwidth aggregate 600\",\n#         \"no neighbor 12.1.3.2\",\n#         \"redistribute static route-map map_static\",\n#         \"redistribute attached-host\",\n#         \"aggregate-address 1.2.1.0/24 as-set match-map match01\",\n#         \"aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\",\n#         \"maximum-paths 55\",\n#         \"distance bgp 50\",\n#         \"exit\",\n#         \"no neighbor peer1 peer-group\",\n#         \"no neighbor peer1 link-bandwidth update-delay 5\",\n#         \"no neighbor peer1 fall-over bfd\",\n#         \"no neighbor peer1 monitoring\",\n#         \"no neighbor peer1 send-community extended link-bandwidth aggregate 600\",\n#         \"no neighbor peer1 maximum-routes 12000\",\n#         \"no neighbor 10.1.3.2\",\n#         \"no redistribute static route-map map_static\",\n#         \"no redistribute attached-host\",\n#         \"no aggregate-address 1.2.1.0/24 as-set match-map match01\",\n#         \"no aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\",\n#         \"bgp host-routes fib direct-install\",\n#         \"bgp log-neighbor-changes\",\n#         \"no distance bgp 50 50 50\",\n#         \"no maximum-paths 55\",\n#         \"no vlan 5\"\n#     ],\n#\n\n# Using replaced (in presence of address_family under vrf):\n# Before State:\n\n#veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    bgp additional-paths send any\n#    !\n#    vrf vrf01\n#       distance bgp 50 50 50\n#       maximum-paths 55\n#       neighbor 10.1.3.2 export-localpref 4000\n#       neighbor 10.1.3.2 next-hop-unchanged\n#       neighbor 10.1.3.2 dont-capability-negotiate\n#       neighbor 10.1.3.2 allowas-in 3\n#       neighbor 10.1.3.2 default-originate always\n#       neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#       aggregate-address 1.2.1.0/24 as-set match-map match01\n#       aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#       redistribute static route-map map_static\n#       redistribute attached-host\n#       !\n#       address-family ipv4\n#          neighbor 10.1.3.2 prefix-list prefix01 out\n#       !\n#       address-family ipv6\n#          redistribute dhcp\n# veos(config)#\n\n  - name:  Replace\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n        graceful_restart:\n          set: True\n        router_id: \"1.1.1.1\"\n        timers:\n          keepalive: 2\n          holdtime: 5\n        ucmp:\n          mode:\n            set: True\n        vlan_aware_bundle: \"bundle1 bundle2 bundle3\"\n      state: replaced\n\n# Module Execution:\n\n# fatal: [192.168.122.113]: FAILED! => {\n#     \"changed\": false,\n#     \"invocation\": {\n#         \"module_args\": {\n#             \"config\": {\n#                 \"access_group\": null,\n#                 \"aggregate_address\": null,\n#                 \"as_number\": \"100\",\n#                 \"bgp_params\": null,\n#                 \"default_metric\": null,\n#                 \"distance\": null,\n#                 \"graceful_restart\": {\n#                     \"restart_time\": null,\n#                     \"set\": true,\n#                     \"stalepath_time\": null\n#                 },\n#                 \"graceful_restart_helper\": null,\n#                 \"maximum_paths\": null,\n#                 \"monitoring\": null,\n#                 \"neighbor\": null,\n#                 \"network\": null,\n#                 \"redistribute\": null,\n#                 \"route_target\": null,\n#                 \"router_id\": \"1.1.1.1\",\n#                 \"shutdown\": null,\n#                 \"timers\": {\n#                     \"holdtime\": 5,\n#                     \"keepalive\": 2\n#                 },\n#                 \"ucmp\": {\n#                     \"fec\": null,\n#                     \"link_bandwidth\": null,\n#                     \"mode\": {\n#                         \"nexthops\": null,\n#                         \"set\": true\n#                     }\n#                 },\n#                 \"update\": null,\n#                 \"vlan\": null,\n#                 \"vlan_aware_bundle\": \"bundle1 bundle2 bundle3\",\n#                 \"vrfs\": null\n#             },\n#             \"running_config\": null,\n#             \"state\": \"replaced\"\n#         }\n#     },\n#     \"msg\": \"Use the _bgp_af module to delete the address_family under vrf, before replacing/deleting the vrf.\"\n# }\n\n# Using deleted:\n\n# Before state:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    bgp additional-paths send any\n#    !\n#    vrf vrf01\n#       distance bgp 50 50 50\n#       maximum-paths 55\n#       neighbor 10.1.3.2 export-localpref 4000\n#       neighbor 10.1.3.2 next-hop-unchanged\n#       neighbor 10.1.3.2 dont-capability-negotiate\n#       neighbor 10.1.3.2 allowas-in 3\n#       neighbor 10.1.3.2 default-originate always\n#       neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#       aggregate-address 1.2.1.0/24 as-set match-map match01\n#       aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#       redistribute static route-map map_static\n#       redistribute attached-host\n#       !\n\n  - name: Delete configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n      state: deleted\n\n# After State:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#\n#\n# Module Execution:\n#\n# \"after\": {\n#         \"as_number\": \"100\"\n#     },\n#     \"before\": {\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"vrfs\": [\n#             {\n#                 \"aggregate_address\": [\n#                     {\n#                         \"address\": \"1.2.1.0/24\",\n#                         \"as_set\": true,\n#                         \"match_map\": \"match01\"\n#                     },\n#                     {\n#                         \"address\": \"5.2.1.0/24\",\n#                         \"advertise_only\": true,\n#                         \"attribute_map\": \"attrmatch01\"\n#                     }\n#                 ],\n#                 \"distance\": {\n#                     \"external\": 50,\n#                     \"internal\": 50,\n#                     \"local\": 50\n#                 },\n#                 \"maximum_paths\": {\n#                     \"max_equal_cost_paths\": 55\n#                 },\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"export_localpref\": 4000,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 500,\n#                             \"warning_limit\": {\n#                                 \"limit_percent\": 5\n#                             }\n#                         },\n#                         \"next_hop_unchanged\": true,\n#                         \"peer\": \"10.1.3.2\"\n#                     }\n#                 ],\n#                 \"redistribute\": [\n#                     {\n#                         \"protocol\": \"static\",\n#                         \"route_map\": \"map_static\"\n#                     },\n#                     {\n#                         \"protocol\": \"attached-host\"\n#                     }\n#                 ],\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"router bgp 100\",\n#         \"no vrf vrf01\",\n#         \"no bgp convergence slow-peer time 6\",\n#         \"no bgp additional-paths send any\"\n#     ],\n#\n\n# Using purged:\n\n# Before state:\n\n# veos(config)#show running-config | section bgp\n# router bgp 100\n#    bgp convergence slow-peer time 6\n#    distance bgp 50 50 50\n#    maximum-paths 55\n#    bgp additional-paths send any\n#    neighbor peer1 peer-group\n#    neighbor peer1 link-bandwidth update-delay 5\n#    neighbor peer1 fall-over bfd\n#    neighbor peer1 monitoring\n#    neighbor peer1 send-community extended link-bandwidth aggregate 600\n#    neighbor peer1 maximum-routes 12000\n#    neighbor 10.1.3.2 export-localpref 4000\n#    neighbor 10.1.3.2 next-hop-unchanged\n#    neighbor 10.1.3.2 dont-capability-negotiate\n#    neighbor 10.1.3.2 allowas-in 3\n#    neighbor 10.1.3.2 default-originate always\n#    neighbor 10.1.3.2 maximum-routes 500 warning-limit 5 percent\n#    aggregate-address 1.2.1.0/24 as-set match-map match01\n#    aggregate-address 5.2.1.0/24 attribute-map attrmatch01 advertise-only\n#    redistribute static route-map map_static\n#    redistribute attached-host\n#    !\n#    vlan 5\n#    !\n#    address-family ipv4\n#       neighbor 10.1.3.2 prefix-list prefix01 out\n#    !\n#    vrf vrf01\n#       route-target import 54:11\n#       neighbor 12.1.3.2 dont-capability-negotiate\n#       neighbor 12.1.3.2 allowas-in 3\n#       neighbor 12.1.3.2 default-originate always\n#       neighbor 12.1.3.2 maximum-routes 12000\n# veos(config)#\n\n  - name: Purge configuration\n    arista.eos.eos_bgp_global:\n      config:\n        as_number: \"100\"\n      state: purged\n\n# After State:\n\n# veos(config)#show running-config | section bgp\n# veos(config)#\n\n# Module Execution:\n\n# \"after\": {},\n#     \"before\": {\n#         \"aggregate_address\": [\n#             {\n#                 \"address\": \"1.2.1.0/24\",\n#                 \"as_set\": true,\n#                 \"match_map\": \"match01\"\n#             },\n#             {\n#                 \"address\": \"5.2.1.0/24\",\n#                 \"advertise_only\": true,\n#                 \"attribute_map\": \"attrmatch01\"\n#             }\n#         ],\n#         \"as_number\": \"100\",\n#         \"bgp_params\": {\n#             \"additional_paths\": \"send\",\n#             \"convergence\": {\n#                 \"slow_peer\": true,\n#                 \"time\": 6\n#             }\n#         },\n#         \"distance\": {\n#             \"external\": 50,\n#             \"internal\": 50,\n#             \"local\": 50\n#         },\n#         \"maximum_paths\": {\n#             \"max_equal_cost_paths\": 55\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"fall_over\": true,\n#                 \"link_bandwidth\": {\n#                     \"set\": true,\n#                     \"update_delay\": 5\n#                 },\n#                 \"maximum_received_routes\": {\n#                     \"count\": 12000\n#                 },\n#                 \"monitoring\": true,\n#                 \"peer\": \"peer1\",\n#                 \"peer_group\": \"peer1\",\n#                 \"send_community\": {\n#                     \"community_attribute\": \"extended\",\n#                     \"link_bandwidth_attribute\": \"aggregate\",\n#                     \"speed\": \"600\",\n#                     \"sub_attribute\": \"link-bandwidth\"\n#                 }\n#             },\n#             {\n#                 \"allowas_in\": {\n#                     \"count\": 3\n#                 },\n#                 \"default_originate\": {\n#                     \"always\": true\n#                 },\n#                 \"dont_capability_negotiate\": true,\n#                 \"export_localpref\": 4000,\n#                 \"maximum_received_routes\": {\n#                     \"count\": 500,\n#                     \"warning_limit\": {\n#                         \"limit_percent\": 5\n#                     }\n#                 },\n#                 \"next_hop_unchanged\": true,\n#                 \"peer\": \"10.1.3.2\"\n#             }\n#         ],\n#         \"redistribute\": [\n#             {\n#                 \"protocol\": \"static\",\n#                 \"route_map\": \"map_static\"\n#             },\n#             {\n#                 \"protocol\": \"attached-host\"\n#             }\n#         ],\n#         \"vlan\": 5,\n#         \"vrfs\": [\n#             {\n#                 \"neighbor\": [\n#                     {\n#                         \"allowas_in\": {\n#                             \"count\": 3\n#                         },\n#                         \"default_originate\": {\n#                             \"always\": true\n#                         },\n#                         \"dont_capability_negotiate\": true,\n#                         \"maximum_received_routes\": {\n#                             \"count\": 12000\n#                         },\n#                         \"peer\": \"12.1.3.2\"\n#                     }\n#                 ],\n#                 \"route_target\": {\n#                     \"action\": \"import\",\n#                     \"target\": \"54:11\"\n#                 },\n#                 \"vrf\": \"vrf01\"\n#             }\n#         ]\n#     },\n#     \"changed\": true,\n#     \"commands\": [\n#         \"no router bgp 100\"\n#     ],\n\n",
        "metadata": null,
        "return": null
    }
}
