{
    "community.general.gandi_livedns": {
        "doc": {
            "author": [
                "Gregory Thiemonge (@gthiemonge)"
            ],
            "collection": "community.general",
            "description": [
                "Manages DNS records by the Gandi LiveDNS API, see the docs: U(https://doc.livedns.gandi.net/)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/gandi_livedns.py",
            "has_action": false,
            "module": "gandi_livedns",
            "notes": [
                "Supports C(check_mode)."
            ],
            "options": {
                "api_key": {
                    "description": [
                        "Account API token."
                    ],
                    "required": true,
                    "type": "str"
                },
                "domain": {
                    "description": [
                        "The name of the Domain to work with (for example, \"example.com\")."
                    ],
                    "required": true,
                    "type": "str"
                },
                "record": {
                    "description": [
                        "Record to add."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the record(s) should exist or not."
                    ],
                    "type": "str"
                },
                "ttl": {
                    "description": [
                        "The TTL to give the new record.",
                        "Required when I(state=present)."
                    ],
                    "type": "int"
                },
                "type": {
                    "description": [
                        "The type of DNS record to create."
                    ],
                    "required": true,
                    "type": "str"
                },
                "values": {
                    "description": [
                        "The record values.",
                        "Required when I(state=present)."
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "short_description": "Manage Gandi LiveDNS records",
            "version_added": "2.3.0",
            "version_added_collection": "community.general"
        },
        "examples": "\n- name: Create a test A record to point to 127.0.0.1 in the my.com domain\n  community.general.gandi_livedns:\n    domain: my.com\n    record: test\n    type: A\n    values:\n    - 127.0.0.1\n    ttl: 7200\n    api_key: dummyapitoken\n  register: record\n\n- name: Create a mail CNAME record to www.my.com domain\n  community.general.gandi_livedns:\n    domain: my.com\n    type: CNAME\n    record: mail\n    values:\n    - www\n    ttl: 7200\n    api_key: dummyapitoken\n    state: present\n\n- name: Change its TTL\n  community.general.gandi_livedns:\n    domain: my.com\n    type: CNAME\n    record: mail\n    values:\n    - www\n    ttl: 10800\n    api_key: dummyapitoken\n    state: present\n\n- name: Delete the record\n  community.general.gandi_livedns:\n    domain: my.com\n    type: CNAME\n    record: mail\n    api_key: dummyapitoken\n    state: absent\n",
        "metadata": null,
        "return": {
            "record": {
                "contains": {
                    "domain": {
                        "description": "The domain associated with the record.",
                        "returned": "success",
                        "sample": "my.com",
                        "type": "str"
                    },
                    "record": {
                        "description": "The record name.",
                        "returned": "success",
                        "sample": "www",
                        "type": "str"
                    },
                    "ttl": {
                        "description": "The time-to-live for the record.",
                        "returned": "success",
                        "sample": 300,
                        "type": "int"
                    },
                    "type": {
                        "description": "The record type.",
                        "returned": "success",
                        "sample": "A",
                        "type": "str"
                    },
                    "values": {
                        "description": "The record content (details depend on record type).",
                        "elements": "str",
                        "returned": "success",
                        "sample": [
                            "192.0.2.91",
                            "192.0.2.92"
                        ],
                        "type": "list"
                    }
                },
                "description": "A dictionary containing the record data.",
                "returned": "success, except on record deletion",
                "type": "dict"
            }
        }
    }
}
