{
    "fortinet.fortimanager.fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks.py",
            "has_action": false,
            "module": "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bookmark-group": {
                    "description": "the parameter (bookmark-group) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "portal": {
                    "description": "the parameter (portal) in requested url",
                    "required": true,
                    "type": "str"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "vpnsslweb_portal_bookmarkgroup_bookmarks": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "additional-params": {
                            "description": "Additional parameters.",
                            "type": "str"
                        },
                        "apptype": {
                            "choices": [
                                "web",
                                "telnet",
                                "ssh",
                                "ftp",
                                "smb",
                                "vnc",
                                "rdp",
                                "citrix",
                                "rdpnative",
                                "portforward",
                                "sftp"
                            ],
                            "description": "Application type.",
                            "type": "str"
                        },
                        "description": {
                            "description": "Description.",
                            "type": "str"
                        },
                        "folder": {
                            "description": "Network shared file folder parameter.",
                            "type": "str"
                        },
                        "form-data": {
                            "description": "no description",
                            "suboptions": {
                                "name": {
                                    "description": "Name.",
                                    "type": "str"
                                },
                                "value": {
                                    "description": "Value.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "host": {
                            "description": "Host name/IP parameter.",
                            "type": "str"
                        },
                        "listening-port": {
                            "description": "Listening port (0 - 65535).",
                            "type": "int"
                        },
                        "load-balancing-info": {
                            "description": "The load balancing information or cookie which should be provided to the connection broker.",
                            "type": "str"
                        },
                        "logon-password": {
                            "description": "no description",
                            "type": "str"
                        },
                        "logon-user": {
                            "description": "Logon user.",
                            "type": "str"
                        },
                        "name": {
                            "description": "Bookmark name.",
                            "type": "str"
                        },
                        "port": {
                            "description": "Remote port.",
                            "type": "int"
                        },
                        "preconnection-blob": {
                            "description": "An arbitrary string which identifies the RDP source.",
                            "type": "str"
                        },
                        "preconnection-id": {
                            "description": "The numeric ID of the RDP source (0-2147483648).",
                            "type": "int"
                        },
                        "remote-port": {
                            "description": "Remote port (0 - 65535).",
                            "type": "int"
                        },
                        "security": {
                            "choices": [
                                "rdp",
                                "nla",
                                "tls",
                                "any"
                            ],
                            "description": "Security mode for RDP connection.",
                            "type": "str"
                        },
                        "server-layout": {
                            "choices": [
                                "en-us-qwerty",
                                "de-de-qwertz",
                                "fr-fr-azerty",
                                "it-it-qwerty",
                                "sv-se-qwerty",
                                "failsafe",
                                "en-gb-qwerty",
                                "es-es-qwerty",
                                "fr-ch-qwertz",
                                "ja-jp-qwerty",
                                "pt-br-qwerty",
                                "tr-tr-qwerty"
                            ],
                            "description": "Server side keyboard layout.",
                            "type": "str"
                        },
                        "show-status-window": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable showing of status window.",
                            "type": "str"
                        },
                        "sso": {
                            "choices": [
                                "disable",
                                "static",
                                "auto"
                            ],
                            "description": "Single Sign-On.",
                            "type": "str"
                        },
                        "sso-credential": {
                            "choices": [
                                "sslvpn-login",
                                "alternative"
                            ],
                            "description": "Single sign-on credentials.",
                            "type": "str"
                        },
                        "sso-credential-sent-once": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Single sign-on credentials are only sent once to remote server.",
                            "type": "str"
                        },
                        "sso-password": {
                            "description": "no description",
                            "type": "str"
                        },
                        "sso-username": {
                            "description": "SSO user name.",
                            "type": "str"
                        },
                        "url": {
                            "description": "URL parameter.",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "Bookmark table.",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: Bookmark table.\n      fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         portal: <your own value>\n         bookmark-group: <your own value>\n         state: <value in [present, absent]>\n         vpnsslweb_portal_bookmarkgroup_bookmarks:\n            additional-params: <value of string>\n            apptype: <value in [web, telnet, ssh, ...]>\n            description: <value of string>\n            folder: <value of string>\n            form-data:\n              -\n                  name: <value of string>\n                  value: <value of string>\n            host: <value of string>\n            listening-port: <value of integer>\n            load-balancing-info: <value of string>\n            logon-password: <value of string>\n            logon-user: <value of string>\n            name: <value of string>\n            port: <value of integer>\n            preconnection-blob: <value of string>\n            preconnection-id: <value of integer>\n            remote-port: <value of integer>\n            security: <value in [rdp, nla, tls, ...]>\n            server-layout: <value in [en-us-qwerty, de-de-qwertz, fr-fr-azerty, ...]>\n            show-status-window: <value in [disable, enable]>\n            sso: <value in [disable, static, auto]>\n            sso-credential: <value in [sslvpn-login, alternative]>\n            sso-credential-sent-once: <value in [disable, enable]>\n            sso-password: <value of string>\n            sso-username: <value of string>\n            url: <value of string>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
