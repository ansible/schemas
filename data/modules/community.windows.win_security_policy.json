{
    "community.windows.win_security_policy": {
        "doc": {
            "author": [
                "Jordan Borean (@jborean93)"
            ],
            "collection": "community.windows",
            "description": [
                "Allows you to set the local security policies that are configured by SecEdit.exe."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/windows/plugins/modules/win_security_policy.py",
            "has_action": false,
            "module": "win_security_policy",
            "notes": [
                "This module uses the SecEdit.exe tool to configure the values, more details of the areas and keys that can be configured can be found here U(https://msdn.microsoft.com/en-us/library/bb742512.aspx).",
                "If you are in a domain environment these policies may be set by a GPO policy, this module can temporarily change these values but the GPO will override it if the value differs.",
                "You can also run C(SecEdit.exe /export /cfg C:\\temp\\output.ini) to view the current policies set on your system.",
                "When assigning user rights, use the M(ansible.windows.win_user_right) module instead."
            ],
            "options": {
                "key": {
                    "description": [
                        "The ini key of the section or policy name to modify.",
                        "The module will return an error if this key is invalid."
                    ],
                    "required": true,
                    "type": "str"
                },
                "section": {
                    "description": [
                        "The ini section the key exists in.",
                        "If the section does not exist then the module will return an error.",
                        "Example sections to use are 'Account Policies', 'Local Policies', 'Event Log', 'Restricted Groups', 'System Services', 'Registry' and 'File System'",
                        "If wanting to edit the C(Privilege Rights) section, use the M(ansible.windows.win_user_right) module instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "value": {
                    "description": [
                        "The value for the ini key or policy name.",
                        "If the key takes in a boolean value then 0 = False and 1 = True."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "seealso": [
                {
                    "module": "ansible.windows.win_user_right"
                }
            ],
            "short_description": "Change local security policy settings"
        },
        "examples": "\n- name: Change the guest account name\n  community.windows.win_security_policy:\n    section: System Access\n    key: NewGuestName\n    value: Guest Account\n\n- name: Set the maximum password age\n  community.windows.win_security_policy:\n    section: System Access\n    key: MaximumPasswordAge\n    value: 15\n\n- name: Do not store passwords using reversible encryption\n  community.windows.win_security_policy:\n    section: System Access\n    key: ClearTextPassword\n    value: 0\n\n- name: Enable system events\n  community.windows.win_security_policy:\n    section: Event Audit\n    key: AuditSystemEvents\n    value: 1\n",
        "metadata": null,
        "return": {
            "import_log": {
                "description": "The log of the SecEdit.exe /configure job that configured the local policies. This is used for debugging purposes on failures.",
                "returned": "secedit.exe /import run and change occurred",
                "sample": "Completed 6 percent (0/15) \\tProcess Privilege Rights area.",
                "type": "str"
            },
            "key": {
                "description": "The key in the section passed to the module to modify.",
                "returned": "success",
                "sample": "NewGuestName",
                "type": "str"
            },
            "rc": {
                "description": "The return code after a failure when running SecEdit.exe.",
                "returned": "failure with secedit calls",
                "sample": -1,
                "type": "int"
            },
            "section": {
                "description": "The section passed to the module to modify.",
                "returned": "success",
                "sample": "System Access",
                "type": "str"
            },
            "stderr": {
                "description": "The output of the STDERR buffer after a failure when running SecEdit.exe.",
                "returned": "failure with secedit calls",
                "sample": "failed to import security policy",
                "type": "str"
            },
            "stdout": {
                "description": "The output of the STDOUT buffer after a failure when running SecEdit.exe.",
                "returned": "failure with secedit calls",
                "sample": "check log for error details",
                "type": "str"
            },
            "value": {
                "description": "The value passed to the module to modify to.",
                "returned": "success",
                "sample": "Guest Account",
                "type": "str"
            }
        }
    }
}
