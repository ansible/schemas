{
    "community.digitalocean.digital_ocean_firewall_facts": {
        "doc": {
            "author": "Anthony Bond (@BondAnthony)",
            "collection": "community.digitalocean",
            "description": [
                "This module can be used to gather information about DigitalOcean firewalls.",
                "This module was called C(digital_ocean_firewall_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/digitalocean/plugins/modules/digital_ocean_firewall_facts.py",
            "has_action": false,
            "module": "digital_ocean_firewall_info",
            "options": {
                "name": {
                    "description": [
                        "Firewall rule name that can be used to identify and reference a specific firewall rule."
                    ],
                    "required": false,
                    "type": "str"
                },
                "oauth_token": {
                    "aliases": [
                        "api_token"
                    ],
                    "description": [
                        "DigitalOcean OAuth token.",
                        "There are several other environment variables which can be used to provide this value.",
                        "i.e., - 'DO_API_TOKEN', 'DO_API_KEY', 'DO_OAUTH_TOKEN' and 'OAUTH_TOKEN'"
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "The timeout in seconds used for polling DigitalOcean's API."
                    ],
                    "type": "int"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6"
            ],
            "short_description": "Gather information about DigitalOcean firewalls"
        },
        "examples": "\n- name: Gather information about all firewalls\n  community.digitalocean.digital_ocean_firewall_info:\n    oauth_token: \"{{ oauth_token }}\"\n\n- name: Gather information about a specific firewall by name\n  community.digitalocean.digital_ocean_firewall_info:\n    oauth_token: \"{{ oauth_token }}\"\n    name: \"firewall_name\"\n\n- name: Gather information from a firewall rule\n  community.digitalocean.digital_ocean_firewall_info:\n    name: SSH\n  register: resp_out\n\n- set_fact:\n    firewall_id: \"{{ resp_out.data.id }}\"\n\n- debug:\n    msg: \"{{ firewall_id }}\"\n",
        "metadata": null,
        "return": {
            "data": {
                "description": "DigitalOcean firewall information",
                "returned": "success",
                "sample": [
                    {
                        "created_at": "2018-01-15T07:04:25Z",
                        "droplet_ids": [
                            87426985
                        ],
                        "id": "435tbg678-1db53-32b6-t543-28322569t252",
                        "inbound_rules": [
                            {
                                "ports": "9100",
                                "protocol": "tcp",
                                "sources": {
                                    "addresses": [
                                        "1.1.1.1"
                                    ]
                                }
                            }
                        ],
                        "name": "metrics",
                        "outbound_rules": [],
                        "pending_changes": [],
                        "status": "succeeded",
                        "tags": []
                    }
                ],
                "type": "list"
            }
        }
    }
}
