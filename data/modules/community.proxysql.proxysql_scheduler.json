{
    "community.proxysql.proxysql_scheduler": {
        "doc": {
            "author": "Ben Mildren (@bmildren)",
            "collection": "community.proxysql",
            "description": [
                "The M(community.proxysql.proxysql_scheduler) module adds or removes schedules using the proxysql admin interface."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/proxysql/plugins/modules/proxysql_scheduler.py",
            "has_action": false,
            "module": "proxysql_scheduler",
            "options": {
                "active": {
                    "default": true,
                    "description": [
                        "A schedule with I(active) set to C(False) will be tracked in the database, but will be never loaded in the in-memory data structures."
                    ],
                    "type": "bool"
                },
                "arg1": {
                    "description": [
                        "Argument that can be passed to the job."
                    ],
                    "type": "str"
                },
                "arg2": {
                    "description": [
                        "Argument that can be passed to the job."
                    ],
                    "type": "str"
                },
                "arg3": {
                    "description": [
                        "Argument that can be passed to the job."
                    ],
                    "type": "str"
                },
                "arg4": {
                    "description": [
                        "Argument that can be passed to the job."
                    ],
                    "type": "str"
                },
                "arg5": {
                    "description": [
                        "Argument that can be passed to the job."
                    ],
                    "type": "str"
                },
                "comment": {
                    "description": [
                        "Text field that can be used for any purposed defined by the user."
                    ],
                    "type": "str"
                },
                "config_file": {
                    "default": "",
                    "description": [
                        "Specify a config file from which I(login_user) and I(login_password) are to be read."
                    ],
                    "type": "path"
                },
                "filename": {
                    "description": [
                        "Full path of the executable to be executed."
                    ],
                    "required": true,
                    "type": "str"
                },
                "force_delete": {
                    "default": false,
                    "description": [
                        "By default we avoid deleting more than one schedule in a single batch, however if you need this behaviour and you're not concerned about the schedules deleted, you can set I(force_delete) to C(True)."
                    ],
                    "type": "bool"
                },
                "interval_ms": {
                    "default": 10000,
                    "description": [
                        "How often (in millisecond) the job will be started. The minimum value for I(interval_ms) is 100 milliseconds."
                    ],
                    "type": "int"
                },
                "load_to_runtime": {
                    "default": "yes",
                    "description": [
                        "Dynamically load config to runtime memory."
                    ],
                    "type": "bool"
                },
                "login_host": {
                    "default": "127.0.0.1",
                    "description": [
                        "The host used to connect to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_port": {
                    "default": 6032,
                    "description": [
                        "The port used to connect to ProxySQL admin interface."
                    ],
                    "type": "int"
                },
                "login_unix_socket": {
                    "description": [
                        "The socket used to connect to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_user": {
                    "description": [
                        "The username used to authenticate to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "save_to_disk": {
                    "default": "yes",
                    "description": [
                        "Save config to sqlite db on disk to persist the configuration."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "When C(present) - adds the schedule, when C(absent) - removes the schedule."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "PyMySQL (Python 2.7 and Python 3.X), or",
                "MySQLdb (Python 2.x)"
            ],
            "short_description": "Adds or removes schedules from proxysql admin interface."
        },
        "examples": "\n---\n# This example adds a schedule, it saves the scheduler config to disk, but\n# avoids loading the scheduler config to runtime (this might be because\n# several servers are being added and the user wants to push the config to\n# runtime in a single batch using the community.general.proxysql_manage_config\n# module).  It uses supplied credentials to connect to the proxysql admin\n# interface.\n\n- name: Add a schedule\n  community.proxysql.proxysql_scheduler:\n    login_user: 'admin'\n    login_password: 'admin'\n    interval_ms: 1000\n    filename: \"/opt/maintenance.py\"\n    state: present\n    load_to_runtime: False\n\n# This example removes a schedule, saves the scheduler config to disk, and\n# dynamically loads the scheduler config to runtime.  It uses credentials\n# in a supplied config file to connect to the proxysql admin interface.\n\n- name: Remove a schedule\n  community.proxysql.proxysql_scheduler:\n    config_file: '~/proxysql.cnf'\n    filename: \"/opt/old_script.py\"\n    state: absent\n",
        "metadata": null,
        "return": {
            "stdout": {
                "description": "The schedule modified or removed from proxysql",
                "returned": "On create/update will return the newly modified schedule, on delete it will return the deleted record.",
                "sample": {
                    "changed": true,
                    "filename": "/opt/test.py",
                    "msg": "Added schedule to scheduler",
                    "schedules": [
                        {
                            "active": "1",
                            "arg1": null,
                            "arg2": null,
                            "arg3": null,
                            "arg4": null,
                            "arg5": null,
                            "comment": "",
                            "filename": "/opt/test.py",
                            "id": "1",
                            "interval_ms": "10000"
                        }
                    ],
                    "state": "present"
                },
                "type": "dict"
            }
        }
    }
}
