{
    "cyberark.pas.cyberark_authentication": {
        "doc": {
            "author": [
                "Edward Nunez (@enunez-cyberark) CyberArk BizDev",
                "Cyberark Bizdev (@cyberark-bizdev)",
                "Edgar Mota"
            ],
            "collection": "cyberark.pas",
            "description": [
                "Authenticates to CyberArk Vault using Privileged Account Security Web Services SDK and creates a session fact that can be used by other modules. It returns an Ansible fact called I(cyberark_session). Every module can use this fact as C(cyberark_session) parameter."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cyberark/pas/plugins/modules/cyberark_authentication.py",
            "has_action": false,
            "module": "cyberark_authentication",
            "options": {
                "api_base_url": {
                    "description": [
                        "A string containing the base URL of the server hosting CyberArk's Privileged Account Security Web Services SDK."
                    ],
                    "type": "str"
                },
                "connection_number": {
                    "description": [
                        "To support multiple connections for same user specify",
                        "different value for this parameter."
                    ],
                    "type": "int"
                },
                "cyberark_session": {
                    "description": [
                        "Dictionary set by a CyberArk authentication containing the different values to perform actions on a logged-on CyberArk session."
                    ],
                    "type": "dict"
                },
                "new_password": {
                    "description": [
                        "The new password of the user. This parameter is optional, and enables you to change a password."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password of the user."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Specifies if an authentication logon/logoff and a cyberark_session should be added/removed."
                    ],
                    "type": "str"
                },
                "use_cyberark_authentication": {
                    "default": "no",
                    "description": [
                        "Whether or not LDAP will be used."
                    ],
                    "type": "bool"
                },
                "use_ldap_authentication": {
                    "default": "no",
                    "description": [
                        "Whether or not LDAP will be used."
                    ],
                    "type": "bool"
                },
                "use_radius_authentication": {
                    "default": "no",
                    "description": [
                        "Whether or not users will be authenticated via a RADIUS server. Valid values are true/false."
                    ],
                    "type": "bool"
                },
                "use_windows_authentication": {
                    "default": "no",
                    "description": [
                        "Whether or not Windows will be used."
                    ],
                    "type": "bool"
                },
                "username": {
                    "description": [
                        "The name of the user who will logon to the Vault."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": "yes",
                    "description": [
                        "If C(false), SSL certificates will not be validated.  This should only set to C(false) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "CyberArk Authentication using PAS Web Services SDK.",
            "version_added": 2.4,
            "version_added_collection": "cyberark.pas"
        },
        "examples": "\n- name: Logon - use_shared_logon_authentication\n  cyberark_authentication:\n    api_base_url: \"{{ web_services_base_url }}\"\n    use_shared_logon_authentication: yes\n\n- name: Logon - Not use_shared_logon_authentication\n  cyberark_authentication:\n    api_base_url: \"{{ web_services_base_url }}\"\n    username: \"{{ password_object.password }}\"\n    password: \"{{ password_object.passprops.username }}\"\n    use_shared_logon_authentication: no\n\n- name: Logoff from CyberArk Vault\n  cyberark_authentication:\n    state: absent\n    cyberark_session: \"{{ cyberark_session }}\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": {
            "cyberark_session": {
                "contains": {
                    "api_base_url": {
                        "description": [
                            "Base URL for API calls. Returned in the cyberark_session, so it can be used in subsequent calls."
                        ],
                        "returned": "always",
                        "type": "str"
                    },
                    "token": {
                        "description": [
                            "The token that identifies the session, encoded in BASE 64."
                        ],
                        "returned": "always",
                        "type": "str"
                    },
                    "use_shared_logon_authentication": {
                        "description": [
                            "Whether or not Shared Logon Authentication was used to establish the session."
                        ],
                        "returned": "always",
                        "type": "bool"
                    },
                    "validate_certs": {
                        "description": "Whether or not SSL certificates should be validated.",
                        "returned": "always",
                        "type": "bool"
                    }
                },
                "description": "Authentication facts.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
