{
    "community.general.manageiq_tags": {
        "doc": {
            "author": "Daniel Korn (@dkorn)",
            "collection": "community.general",
            "description": [
                "The manageiq_tags module supports adding, updating and deleting tags in ManageIQ."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/manageiq_tags.py",
            "has_action": false,
            "module": "manageiq_tags",
            "options": {
                "manageiq_connection": {
                    "description": [
                        "ManageIQ connection configuration information."
                    ],
                    "required": false,
                    "suboptions": {
                        "ca_cert": {
                            "aliases": [
                                "ca_bundle_path"
                            ],
                            "description": [
                                "The path to a CA bundle file or directory with certificates. defaults to None."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "ManageIQ password. C(MIQ_PASSWORD) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "token": {
                            "description": [
                                "ManageIQ token. C(MIQ_TOKEN) env var if set. otherwise, required if no username or password is passed in."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "ManageIQ environment url. C(MIQ_URL) env var if set. otherwise, it is required to pass it."
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "ManageIQ username. C(MIQ_USERNAME) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "verify_ssl"
                            ],
                            "default": true,
                            "description": [
                                "Whether SSL certificates should be verified for HTTPS requests. defaults to True."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "resource_id": {
                    "description": [
                        "The ID of the resource at which tags will be controlled.",
                        "Must be specified if I(resource_name) is not set. Both options are mutually exclusive."
                    ],
                    "type": "int",
                    "version_added": "2.2.0",
                    "version_added_collection": "community.general"
                },
                "resource_name": {
                    "description": [
                        "The name of the resource at which tags will be controlled.",
                        "Must be specified if I(resource_id) is not set. Both options are mutually exclusive."
                    ],
                    "type": "str"
                },
                "resource_type": {
                    "choices": [
                        "provider",
                        "host",
                        "vm",
                        "blueprint",
                        "category",
                        "cluster",
                        "data store",
                        "group",
                        "resource pool",
                        "service",
                        "service template",
                        "template",
                        "tenant",
                        "user"
                    ],
                    "description": [
                        "The relevant resource type in manageiq."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "list"
                    ],
                    "default": "present",
                    "description": [
                        "absent - tags should not exist,",
                        "present - tags should exist,",
                        "list - list current tags."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "tags - list of dictionaries, each includes 'name' and 'category' keys.",
                        "required if state is present or absent."
                    ],
                    "elements": "dict",
                    "type": "list"
                }
            },
            "requirements": [
                "manageiq-client U(https://github.com/ManageIQ/manageiq-api-client-python/)"
            ],
            "short_description": "Management of resource tags in ManageIQ."
        },
        "examples": "\n- name: Create new tags for a provider in ManageIQ\n  community.general.manageiq_tags:\n    resource_name: 'EngLab'\n    resource_type: 'provider'\n    tags:\n    - category: environment\n      name: prod\n    - category: owner\n      name: prod_ops\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Create new tags for a provider in ManageIQ\n  community.general.manageiq_tags:\n    resource_id: 23000000790497\n    resource_type: 'provider'\n    tags:\n    - category: environment\n      name: prod\n    - category: owner\n      name: prod_ops\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: Remove tags for a provider in ManageIQ\n  community.general.manageiq_tags:\n    state: absent\n    resource_name: 'EngLab'\n    resource_type: 'provider'\n    tags:\n    - category: environment\n      name: prod\n    - category: owner\n      name: prod_ops\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n\n- name: List current tags for a provider in ManageIQ\n  community.general.manageiq_tags:\n    state: list\n    resource_name: 'EngLab'\n    resource_type: 'provider'\n    manageiq_connection:\n      url: 'http://127.0.0.1:3000'\n      username: 'admin'\n      password: 'smartvm'\n      validate_certs: False\n",
        "metadata": null,
        "return": null
    }
}
