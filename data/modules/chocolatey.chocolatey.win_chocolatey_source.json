{
    "chocolatey.chocolatey.win_chocolatey_source": {
        "doc": {
            "author": [
                "Jordan Borean (@jborean93)"
            ],
            "collection": "chocolatey.chocolatey",
            "description": [
                "Used to managed Chocolatey sources configured on the client.",
                "Requires Chocolatey to be already installed on the remote host."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/chocolatey/chocolatey/plugins/modules/win_chocolatey_source.py",
            "has_action": false,
            "module": "win_chocolatey_source",
            "options": {
                "admin_only": {
                    "description": [
                        "Makes the source visible to Administrators only.",
                        "Requires Chocolatey >= 0.10.8.",
                        "When creating a new source, this defaults to C(no)."
                    ],
                    "type": "bool"
                },
                "allow_self_service": {
                    "description": [
                        "Allow the source to be used with self-service",
                        "Requires Chocolatey >= 0.10.4.",
                        "When creating a new source, this defaults to C(no)."
                    ],
                    "type": "bool"
                },
                "bypass_proxy": {
                    "description": [
                        "Bypass the proxy when using this source.",
                        "Requires Chocolatey >= 0.10.4.",
                        "When creating a new source, this defaults to C(no)."
                    ],
                    "type": "bool"
                },
                "certificate": {
                    "description": [
                        "The path to a .pfx file to use for X509 authenticated feeds.",
                        "Requires Chocolatey >= 0.9.10."
                    ],
                    "type": "str"
                },
                "certificate_password": {
                    "description": [
                        "The password for I(certificate) if required.",
                        "Requires Chocolatey >= 0.9.10."
                    ]
                },
                "name": {
                    "description": [
                        "The name of the source to configure."
                    ],
                    "required": true
                },
                "priority": {
                    "description": [
                        "The priority order of this source compared to other sources, lower is better.",
                        "All priorities above C(0) will be evaluated first, then zero-based values will be evaluated in config file order.",
                        "Requires Chocolatey >= 0.9.9.9.",
                        "When creating a new source, this defaults to C(0)."
                    ],
                    "type": "int"
                },
                "source": {
                    "description": [
                        "The file/folder/url of the source.",
                        "Required when I(state) is C(present) or C(disabled) and the source does not already exist."
                    ]
                },
                "source_password": {
                    "description": [
                        "The password for I(source_username).",
                        "Required if I(source_username) is set."
                    ]
                },
                "source_username": {
                    "description": [
                        "The username used to access I(source)."
                    ]
                },
                "state": {
                    "choices": [
                        "absent",
                        "disabled",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "When C(absent), will remove the source.",
                        "When C(disabled), will ensure the source exists but is disabled.",
                        "When C(present), will ensure the source exists and is enabled."
                    ]
                },
                "update_password": {
                    "choices": [
                        "always",
                        "on_create"
                    ],
                    "default": "always",
                    "description": [
                        "When C(always), the module will always set the password and report a change if I(certificate_password) or I(source_password) is set.",
                        "When C(on_create), the module will only set the password if the source is being created."
                    ]
                }
            },
            "seealso": [
                {
                    "module": "win_chocolatey"
                },
                {
                    "module": "win_chocolatey_config"
                },
                {
                    "module": "win_chocolatey_facts"
                },
                {
                    "module": "win_chocolatey_feature"
                }
            ],
            "short_description": "Manages Chocolatey sources",
            "version_added": "2.7",
            "version_added_collection": "chocolatey.chocolatey"
        },
        "examples": "\n- name: Remove the default public source\n  win_chocolatey_source:\n    name: chocolatey\n    state: absent\n\n- name: Add new internal source\n  win_chocolatey_source:\n    name: internal repo\n    state: present\n    source: http://chocolatey-server/chocolatey\n\n- name: Create HTTP source with credentials\n  win_chocolatey_source:\n    name: internal repo\n    state: present\n    source: https://chocolatey-server/chocolatey\n    source_username: username\n    source_password: password\n\n- name: Disable Chocolatey source\n  win_chocolatey_source:\n    name: chocolatey\n    state: disabled\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
