{
    "community.vmware.vmware_datastore_maintenancemode": {
        "doc": {
            "author": [
                "Abhijeet Kasurde (@Akasurde)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to manage maintenance mode of a datastore."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_datastore_maintenancemode.py",
            "has_action": false,
            "module": "vmware_datastore_maintenancemode",
            "notes": [
                "Tested on vSphere 5.5, 6.0 and 6.5"
            ],
            "options": {
                "cluster_name": {
                    "description": [
                        "Name of the cluster where datastore is connected to.",
                        "If multiple datastores are connected to the given cluster, then all datastores will be managed by C(state).",
                        "If C(datastore) or C(datastore_cluster) are not set, this parameter is required."
                    ],
                    "type": "str"
                },
                "datastore": {
                    "description": [
                        "Name of datastore to manage.",
                        "If C(datastore_cluster) or C(cluster_name) are not set, this parameter is required."
                    ],
                    "type": "str"
                },
                "datastore_cluster": {
                    "description": [
                        "Name of the datastore cluster from all child datastores to be managed.",
                        "If C(datastore) or C(cluster_name) are not set, this parameter is required."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "If set to C(present), then enter datastore into maintenance mode.",
                        "If set to C(present) and datastore is already in maintenance mode, then no action will be taken.",
                        "If set to C(absent) and datastore is in maintenance mode, then exit maintenance mode.",
                        "If set to C(absent) and datastore is not in maintenance mode, then no action will be taken."
                    ],
                    "required": false,
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Place a datastore into maintenance mode"
        },
        "examples": "\n- name: Enter datastore into Maintenance Mode\n  community.vmware.vmware_datastore_maintenancemode:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    datastore: '{{ datastore_name }}'\n    state: present\n  delegate_to: localhost\n\n- name: Enter all datastores under cluster into Maintenance Mode\n  community.vmware.vmware_datastore_maintenancemode:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    cluster_name: '{{ cluster_name }}'\n    state: present\n  delegate_to: localhost\n\n- name: Enter all datastores under datastore cluster into Maintenance Mode\n  community.vmware.vmware_datastore_maintenancemode:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    datastore_cluster: '{{ datastore_cluster_name }}'\n    state: present\n  delegate_to: localhost\n\n- name: Exit datastore into Maintenance Mode\n  community.vmware.vmware_datastore_maintenancemode:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    datastore: '{{ datastore_name }}'\n    state: absent\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "datastore_status": {
                "description": "Action taken for datastore",
                "returned": "always",
                "sample": {
                    "ds_226_01": "Datastore 'ds_226_01' is already in maintenance mode."
                },
                "type": "dict"
            }
        }
    }
}
