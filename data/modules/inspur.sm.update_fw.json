{
    "inspur.sm.update_fw": {
        "doc": {
            "author": [
                "WangBaoshan (@ISIB-group)"
            ],
            "collection": "inspur.sm",
            "description": [
                "Update firmware on Inspur server."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/inspur/sm/plugins/modules/update_fw.py",
            "has_action": false,
            "module": "update_fw",
            "options": {
                "dual_image": {
                    "choices": [
                        "single",
                        "dual"
                    ],
                    "default": "dual",
                    "description": [
                        "(M5)update dual image(default) or not."
                    ],
                    "type": "str"
                },
                "has_me": {
                    "choices": [
                        0,
                        1
                    ],
                    "default": 1,
                    "description": [
                        "(M5-BIOS)update me or not when update bios,only work in INTEL platform,0-no,1-yes."
                    ],
                    "type": "int"
                },
                "host": {
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ],
                    "type": "str"
                },
                "mode": {
                    "choices": [
                        "Auto",
                        "Manual"
                    ],
                    "default": "Auto",
                    "description": [
                        "(BMC)active mode, Manual or Auto(default)."
                    ],
                    "type": "str"
                },
                "over_ride": {
                    "choices": [
                        0,
                        1
                    ],
                    "default": 0,
                    "description": [
                        "Reserve Configrations,0-reserve, 1-override."
                    ],
                    "type": "int"
                },
                "password": {
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "type": {
                    "choices": [
                        "BMC",
                        "BIOS"
                    ],
                    "description": [
                        "Firmware type."
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "Firmware image url."
                    ],
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Update firmware.",
            "version_added": "0.1.0",
            "version_added_collection": "inspur.sm"
        },
        "examples": "\n- name: Update fw test\n  hosts: ism\n  connection: local\n  gather_facts: no\n  vars:\n    ism:\n      host: \"{{ ansible_ssh_host }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  tasks:\n\n  - name: \"update bios\"\n    inspur.sm.update_fw:\n      url: \"/home/wbs/SA5112M5_BIOS_4.1.8_Standard_20200117.bin\"\n      type: \"BIOS\"\n      provider: \"{{ ism }}\"\n\n  - name: \"update bmc\"\n    inspur.sm.update_fw:\n      url: \"/home/wbs/SA5112M5_BMC_4.17.7_Standard_20200430\"\n      mode: \"Auto\"\n      type: \"BMC\"\n      dual_image: \"dual\"\n      provider: \"{{ ism }}\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "Check to see if a change was made on the device.",
                "returned": "always",
                "type": "bool"
            },
            "message": {
                "description": "Messages returned after module execution.",
                "returned": "always",
                "type": "str"
            },
            "state": {
                "description": "Status after module execution.",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
