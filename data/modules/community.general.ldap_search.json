{
    "community.general.ldap_search": {
        "doc": {
            "author": [
                "Sebastian Pfahl (@eryx12o45)"
            ],
            "collection": "community.general",
            "description": [
                "Return the results of an LDAP search."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/ldap_search.py",
            "has_action": false,
            "module": "ldap_search",
            "notes": [
                "The default authentication settings will attempt to use a SASL EXTERNAL bind over a UNIX domain socket. This works well with the default Ubuntu install for example, which includes a C(cn=peercred,cn=external,cn=auth) ACL rule allowing root to modify the server configuration. If you need to use a simple bind to access your server, pass the credentials in I(bind_dn) and I(bind_pw)."
            ],
            "options": {
                "attrs": {
                    "description": [
                        "A list of attributes for limiting the result. Use an actual list or a comma-separated string."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "bind_dn": {
                    "description": [
                        "A DN to bind with. If this is omitted, we'll try a SASL bind with the EXTERNAL mechanism as default.",
                        "If this is blank, we'll use an anonymous bind."
                    ],
                    "type": "str"
                },
                "bind_pw": {
                    "description": [
                        "The password to use with I(bind_dn)."
                    ],
                    "type": "str"
                },
                "dn": {
                    "description": [
                        "The LDAP DN to search in."
                    ],
                    "required": true,
                    "type": "str"
                },
                "filter": {
                    "default": "(objectClass=*)",
                    "description": [
                        "Used for filtering the LDAP search result."
                    ],
                    "type": "str"
                },
                "referrals_chasing": {
                    "choices": [
                        "disabled",
                        "anonymous"
                    ],
                    "default": "anonymous",
                    "description": [
                        "Set the referrals chasing behavior.",
                        "C(anonymous) follow referrals anonymously. This is the default behavior.",
                        "C(disabled) disable referrals chasing. This sets C(OPT_REFERRALS) to off."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "sasl_class": {
                    "choices": [
                        "external",
                        "gssapi"
                    ],
                    "default": "external",
                    "description": [
                        "The class to use for SASL authentication.",
                        "possible choices are C(external), C(gssapi)."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "schema": {
                    "default": false,
                    "description": [
                        "Set to C(true) to return the full attribute schema of entries, not their attribute values. Overrides I(attrs) when provided."
                    ],
                    "type": "bool"
                },
                "scope": {
                    "choices": [
                        "base",
                        "onelevel",
                        "subordinate",
                        "children"
                    ],
                    "default": "base",
                    "description": [
                        "The LDAP scope to use."
                    ],
                    "type": "str"
                },
                "server_uri": {
                    "default": "ldapi:///",
                    "description": [
                        "A URI to the LDAP server.",
                        "The default value lets the underlying LDAP client library look for a UNIX domain socket in its default location."
                    ],
                    "type": "str"
                },
                "start_tls": {
                    "default": false,
                    "description": [
                        "If true, we'll use the START_TLS LDAP extension."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), SSL certificates will not be validated.",
                        "This should only be used on sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python-ldap"
            ],
            "short_description": "Search for entries in a LDAP server",
            "version_added": "0.2.0",
            "version_added_collection": "community.general"
        },
        "examples": "\n- name: Return all entries within the 'groups' organizational unit.\n  community.general.ldap_search:\n    dn: \"ou=groups,dc=example,dc=com\"\n  register: ldap_groups\n\n- name: Return GIDs for all groups\n  community.general.ldap_search:\n    dn: \"ou=groups,dc=example,dc=com\"\n    scope: \"onelevel\"\n    attrs:\n      - \"gidNumber\"\n  register: ldap_group_gids\n",
        "metadata": null,
        "return": null
    }
}
