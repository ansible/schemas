{
    "community.proxysql.proxysql_replication_hostgroups": {
        "doc": {
            "author": "Ben Mildren (@bmildren)",
            "collection": "community.proxysql",
            "description": [
                "Each row in mysql_replication_hostgroups represent a pair of writer_hostgroup and reader_hostgroup. ProxySQL will monitor the value of read_only for all the servers in specified hostgroups, and based on the value of read_only will assign the server to the writer or reader hostgroups."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/proxysql/plugins/modules/proxysql_replication_hostgroups.py",
            "has_action": false,
            "module": "proxysql_replication_hostgroups",
            "options": {
                "comment": {
                    "description": [
                        "Text field that can be used for any purposes defined by the user."
                    ],
                    "type": "str"
                },
                "config_file": {
                    "default": "",
                    "description": [
                        "Specify a config file from which I(login_user) and I(login_password) are to be read."
                    ],
                    "type": "path"
                },
                "load_to_runtime": {
                    "default": "yes",
                    "description": [
                        "Dynamically load config to runtime memory."
                    ],
                    "type": "bool"
                },
                "login_host": {
                    "default": "127.0.0.1",
                    "description": [
                        "The host used to connect to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_port": {
                    "default": 6032,
                    "description": [
                        "The port used to connect to ProxySQL admin interface."
                    ],
                    "type": "int"
                },
                "login_unix_socket": {
                    "description": [
                        "The socket used to connect to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "login_user": {
                    "description": [
                        "The username used to authenticate to ProxySQL admin interface."
                    ],
                    "type": "str"
                },
                "reader_hostgroup": {
                    "description": [
                        "Id of the reader hostgroup."
                    ],
                    "required": true,
                    "type": "int"
                },
                "save_to_disk": {
                    "default": "yes",
                    "description": [
                        "Save config to sqlite db on disk to persist the configuration."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "When C(present) - adds the replication hostgroup, when C(absent) - removes the replication hostgroup."
                    ],
                    "type": "str"
                },
                "writer_hostgroup": {
                    "description": [
                        "Id of the writer hostgroup."
                    ],
                    "required": true,
                    "type": "int"
                }
            },
            "requirements": [
                "PyMySQL (Python 2.7 and Python 3.X), or",
                "MySQLdb (Python 2.x)"
            ],
            "short_description": "Manages replication hostgroups using the proxysql admin interface."
        },
        "examples": "\n---\n# This example adds a replication hostgroup, it saves the mysql server config\n# to disk, but avoids loading the mysql server config to runtime (this might be\n# because several replication hostgroup are being added and the user wants to\n# push the config to runtime in a single batch using the\n# community.general.proxysql_manage_config module).  It uses supplied credentials\n# to connect to the proxysql admin interface.\n\n- name: Add a replication hostgroup\n  community.proxysql.proxysql_replication_hostgroups:\n    login_user: 'admin'\n    login_password: 'admin'\n    writer_hostgroup: 1\n    reader_hostgroup: 2\n    state: present\n    load_to_runtime: False\n\n# This example removes a replication hostgroup, saves the mysql server config\n# to disk, and dynamically loads the mysql server config to runtime.  It uses\n# credentials in a supplied config file to connect to the proxysql admin\n# interface.\n\n- name: Remove a replication hostgroup\n  community.proxysql.proxysql_replication_hostgroups:\n    config_file: '~/proxysql.cnf'\n    writer_hostgroup: 3\n    reader_hostgroup: 4\n    state: absent\n",
        "metadata": null,
        "return": {
            "stdout": {
                "description": "The replication hostgroup modified or removed from proxysql",
                "returned": "On create/update will return the newly modified group, on delete it will return the deleted record.",
                "sample": {
                    "changed": true,
                    "msg": "Added server to mysql_hosts",
                    "repl_group": {
                        "comment": "",
                        "reader_hostgroup": "1",
                        "writer_hostgroup": "2"
                    },
                    "state": "present"
                },
                "type": "dict"
            }
        }
    }
}
