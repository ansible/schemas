{
    "netapp.elementsw.na_elementsw_volume_clone": {
        "doc": {
            "author": "NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>",
            "collection": "netapp.elementsw",
            "description": [
                "Create volume clones on Element OS"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netapp/elementsw/plugins/modules/na_elementsw_volume_clone.py",
            "has_action": false,
            "module": "na_elementsw_volume_clone",
            "notes": [
                "The modules prefixed with na\\\\_elementsw are built to support the SolidFire storage platform."
            ],
            "options": {
                "access": {
                    "choices": [
                        "readOnly",
                        "readWrite",
                        "locked",
                        "replicationTarget"
                    ],
                    "description": [
                        "Access allowed for the volume.",
                        "If unspecified, the access settings of the clone will be the same as the source.",
                        "readOnly - Only read operations are allowed.",
                        "readWrite - Reads and writes are allowed.",
                        "locked - No reads or writes are allowed.",
                        "replicationTarget - Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked."
                    ],
                    "type": "str"
                },
                "account_id": {
                    "description": [
                        "Account ID for the owner of this cloned volume. id may be a numeric identifier or an account name."
                    ],
                    "required": true,
                    "type": "str"
                },
                "attributes": {
                    "description": "A YAML dictionary of attributes that you would like to apply on this cloned volume.",
                    "type": "dict"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the SolidFire cluster.",
                        "For na_elementsw_cluster, the Management IP (MIP) or hostname of the node to initiate the cluster creation from."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the clone."
                    ],
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass"
                    ],
                    "description": [
                        "Password for the specified user."
                    ],
                    "required": true,
                    "type": "str"
                },
                "size": {
                    "description": [
                        "The size of the cloned volume in (size_unit)."
                    ],
                    "type": "int"
                },
                "size_unit": {
                    "choices": [
                        "bytes",
                        "b",
                        "kb",
                        "mb",
                        "gb",
                        "tb",
                        "pb",
                        "eb",
                        "zb",
                        "yb"
                    ],
                    "default": "gb",
                    "description": [
                        "The unit used to interpret the size parameter."
                    ],
                    "type": "str"
                },
                "src_snapshot_id": {
                    "description": [
                        "The id of the snapshot to clone. id may be a numeric identifier or a snapshot name."
                    ],
                    "type": "str"
                },
                "src_volume_id": {
                    "description": [
                        "The id of the src volume to clone. id may be a numeric identifier or a volume name."
                    ],
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "user"
                    ],
                    "description": [
                        "Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://mysupport.netapp.com/documentation/docweb/index.html?productID=62636&language=en-US)."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "The modules were developed with SolidFire 10.1",
                "solidfire-sdk-python (1.1.0.92) or greater. Install using 'pip install solidfire-sdk-python'"
            ],
            "short_description": "NetApp Element Software Create Volume Clone",
            "version_added": "2.7.0",
            "version_added_collection": "netapp.elementsw"
        },
        "examples": "\n    - name: Clone Volume\n      na_elementsw_volume_clone:\n        hostname: \"{{ elementsw_hostname }}\"\n        username: \"{{ elementsw_username }}\"\n        password: \"{{ elementsw_password }}\"\n        name: CloneAnsibleVol\n        src_volume_id: 123\n        src_snapshot_id: 41\n        account_id: 3\n        size: 1\n        size_unit: gb\n        access: readWrite\n        attributes: {\"virtual_network_id\": 12345}\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": {
            "msg": {
                "description": "Success message",
                "returned": "success",
                "type": "str"
            }
        }
    }
}
