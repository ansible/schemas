{
    "cisco.meraki.meraki_webhook": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Configure and query information about webhooks within the Meraki cloud."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_webhook.py",
            "has_action": false,
            "module": "meraki_webhook",
            "notes": [
                "Some of the options are likely only used for developers within Meraki.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "Name of webhook."
                    ],
                    "type": "str"
                },
                "net_id": {
                    "description": [
                        "ID of network which configuration is applied to."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "aliases": [
                        "network"
                    ],
                    "description": [
                        "Name of network which configuration is applied to."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "shared_secret": {
                    "description": [
                        "Secret password to use when accessing webhook."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "query"
                    ],
                    "default": "query",
                    "description": [
                        "Specifies whether object should be queried, created/modified, or removed."
                    ],
                    "type": "str"
                },
                "test": {
                    "choices": [
                        "test"
                    ],
                    "description": [
                        "Indicates whether to test or query status."
                    ],
                    "type": "str"
                },
                "test_id": {
                    "description": [
                        "ID of webhook test query."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "url": {
                    "description": [
                        "URL to access when calling webhook."
                    ],
                    "type": "str"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                },
                "webhook_id": {
                    "description": [
                        "Unique ID of webhook."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage webhooks configured in the Meraki cloud"
        },
        "examples": "\n- name: Create webhook\n  meraki_webhook:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_name: YourNet\n    name: Test_Hook\n    url: https://webhook.url/\n    shared_secret: shhhdonttellanyone\n  delegate_to: localhost\n\n- name: Query one webhook\n  meraki_webhook:\n    auth_key: abc123\n    state: query\n    org_name: YourOrg\n    net_name: YourNet\n    name: Test_Hook\n  delegate_to: localhost\n\n- name: Query all webhooks\n  meraki_webhook:\n    auth_key: abc123\n    state: query\n    org_name: YourOrg\n    net_name: YourNet\n  delegate_to: localhost\n\n- name: Delete webhook\n  meraki_webhook:\n    auth_key: abc123\n    state: absent\n    org_name: YourOrg\n    net_name: YourNet\n    name: Test_Hook\n  delegate_to: localhost\n\n- name: Test webhook\n  meraki_webhook:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_name: YourNet\n    test: test\n    url: https://webhook.url/abc123\n  delegate_to: localhost\n\n- name: Get webhook status\n  meraki_webhook:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_name: YourNet\n    test: status\n    test_id: abc123531234\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "id": {
                        "description": "Unique ID of webhook.",
                        "returned": "success",
                        "sample": "aHR0cHM6Ly93ZWJob22LnvpdGUvOGViNWI3NmYtYjE2Ny00Y2I4LTlmYzQtND32Mj3F5NzIaMjQ0",
                        "type": "str"
                    },
                    "name": {
                        "description": "Descriptive name of webhook.",
                        "returned": "success",
                        "sample": "Test_Hook",
                        "type": "str"
                    },
                    "networkId": {
                        "description": "ID of network containing webhook object.",
                        "returned": "success",
                        "sample": "N_12345",
                        "type": "str"
                    },
                    "shared_secret": {
                        "description": "Password for webhook.",
                        "returned": "success",
                        "sample": "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER",
                        "type": "str"
                    },
                    "status": {
                        "description": "Status of webhook test.",
                        "returned": "success, when testing webhook",
                        "sample": "enqueued",
                        "type": "str"
                    },
                    "url": {
                        "description": "URL of webhook endpoint.",
                        "returned": "success",
                        "sample": "https://webhook.url/abc123",
                        "type": "str"
                    }
                },
                "description": "List of administrators.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
