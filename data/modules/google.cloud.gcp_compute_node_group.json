{
    "google.cloud.gcp_compute_node_group": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "Represents a NodeGroup resource to manage a group of sole-tenant nodes."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_group.py",
            "has_action": false,
            "module": "gcp_compute_node_group",
            "notes": [
                "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups)",
                "Sole-Tenant Nodes: U(https://cloud.google.com/compute/docs/nodes/)",
                "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.",
                "for authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.",
                "For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.",
                "For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.",
                "For authentication, you can set scopes using the C(GCP_SCOPES) env variable.",
                "Environment variables values will only be used if the playbook values are not set.",
                "The I(service_account_email) and I(service_account_file) options are mutually exclusive."
            ],
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "autoscaling_policy": {
                    "description": [
                        "If you use sole-tenant nodes for your workloads, you can use the node group autoscaler to automatically manage the sizes of your node groups."
                    ],
                    "required": false,
                    "suboptions": {
                        "max_nodes": {
                            "description": [
                                "Maximum size of the node group. Set to a value less than or equal to 100 and greater than or equal to min-nodes."
                            ],
                            "required": true,
                            "type": "int"
                        },
                        "min_nodes": {
                            "description": [
                                "Minimum size of the node group. Must be less than or equal to max-nodes. The default value is 0."
                            ],
                            "required": false,
                            "type": "int"
                        },
                        "mode": {
                            "description": [
                                "The autoscaling mode. Set to one of the following: - OFF: Disables the autoscaler.",
                                "- ON: Enables scaling in and scaling out.",
                                "- ONLY_SCALE_OUT: Enables only scaling out.",
                                "You must use this mode if your node groups are configured to restart their hosted VMs on minimal servers.",
                                "Some valid choices include: \"OFF\", \"ON\", \"ONLY_SCALE_OUT\""
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "description": {
                    "description": [
                        "An optional textual description of the resource."
                    ],
                    "required": false,
                    "type": "str"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "maintenance_policy": {
                    "default": "DEFAULT",
                    "description": [
                        "Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT."
                    ],
                    "required": false,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the resource."
                    ],
                    "required": false,
                    "type": "str"
                },
                "node_template": {
                    "description": [
                        "The URL of the node template to which this node group belongs.",
                        "This field represents a link to a NodeTemplate resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_node_template task and then set this node_template field to \"{{ name-of-resource }}\""
                    ],
                    "required": true,
                    "type": "dict"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                },
                "size": {
                    "description": [
                        "The total number of nodes in the node group."
                    ],
                    "required": true,
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the given object should exist in GCP"
                    ],
                    "type": "str"
                },
                "zone": {
                    "description": [
                        "Zone where this node group is located ."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Creates a GCP NodeGroup"
        },
        "examples": "\n- name: create a node template\n  google.cloud.gcp_compute_node_template:\n    name: \"{{ resource_name }}\"\n    region: us-central1\n    node_type: n1-node-96-624\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: node_template\n\n- name: create a node group\n  google.cloud.gcp_compute_node_group:\n    name: test_object\n    zone: us-central1-a\n    description: example group for ansible\n    size: 1\n    node_template: \"{{ node_template }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "autoscalingPolicy": {
                "contains": {
                    "maxNodes": {
                        "description": [
                            "Maximum size of the node group. Set to a value less than or equal to 100 and greater than or equal to min-nodes."
                        ],
                        "returned": "success",
                        "type": "int"
                    },
                    "minNodes": {
                        "description": [
                            "Minimum size of the node group. Must be less than or equal to max-nodes. The default value is 0."
                        ],
                        "returned": "success",
                        "type": "int"
                    },
                    "mode": {
                        "description": [
                            "The autoscaling mode. Set to one of the following: - OFF: Disables the autoscaler.",
                            "- ON: Enables scaling in and scaling out.",
                            "- ONLY_SCALE_OUT: Enables only scaling out.",
                            "You must use this mode if your node groups are configured to restart their hosted VMs on minimal servers."
                        ],
                        "returned": "success",
                        "type": "str"
                    }
                },
                "description": [
                    "If you use sole-tenant nodes for your workloads, you can use the node group autoscaler to automatically manage the sizes of your node groups."
                ],
                "returned": "success",
                "type": "complex"
            },
            "creationTimestamp": {
                "description": [
                    "Creation timestamp in RFC3339 text format."
                ],
                "returned": "success",
                "type": "str"
            },
            "description": {
                "description": [
                    "An optional textual description of the resource."
                ],
                "returned": "success",
                "type": "str"
            },
            "maintenancePolicy": {
                "description": [
                    "Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT."
                ],
                "returned": "success",
                "type": "str"
            },
            "name": {
                "description": [
                    "Name of the resource."
                ],
                "returned": "success",
                "type": "str"
            },
            "nodeTemplate": {
                "description": [
                    "The URL of the node template to which this node group belongs."
                ],
                "returned": "success",
                "type": "dict"
            },
            "size": {
                "description": [
                    "The total number of nodes in the node group."
                ],
                "returned": "success",
                "type": "int"
            },
            "zone": {
                "description": [
                    "Zone where this node group is located ."
                ],
                "returned": "success",
                "type": "str"
            }
        }
    }
}
