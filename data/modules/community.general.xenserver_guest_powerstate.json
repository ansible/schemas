{
    "community.general.xenserver_guest_powerstate": {
        "doc": {
            "author": [
                "Bojan Vitnik (@bvitnik) <bvitnik@mainstream.rs>"
            ],
            "collection": "community.general",
            "description": "This module can be used to power on, power off, restart or suspend virtual machine and gracefully reboot or shutdown guest OS of virtual machine.\n",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/xenserver_guest_powerstate.py",
            "has_action": false,
            "module": "xenserver_guest_powerstate",
            "notes": [
                "Minimal supported version of XenServer is 5.6.",
                "Module was tested with XenServer 6.5, 7.1, 7.2, 7.6, Citrix Hypervisor 8.0, XCP-ng 7.6 and 8.0.",
                "To acquire XenAPI Python library, just run C(pip install XenAPI) on your Ansible Control Node. The library can also be found inside Citrix Hypervisor/XenServer SDK (downloadable from Citrix website). Copy the XenAPI.py file from the SDK to your Python site-packages on your Ansible Control Node to use it. Latest version of the library can also be acquired from GitHub: U(https://raw.githubusercontent.com/xapi-project/xen-api/master/scripts/examples/python/XenAPI/XenAPI.py)",
                "If no scheme is specified in C(hostname), module defaults to C(http://) because C(https://) is problematic in most setups. Make sure you are accessing XenServer host in trusted environment or use C(https://) scheme explicitly.",
                "To use C(https://) scheme for C(hostname) you have to either import host certificate to your OS certificate store or use C(validate_certs: no) which requires XenAPI library from XenServer 7.2 SDK or newer and Python 2.7.9 or newer."
            ],
            "options": {
                "hostname": {
                    "aliases": [
                        "host",
                        "pool"
                    ],
                    "default": "localhost",
                    "description": [
                        "The hostname or IP address of the XenServer host or XenServer pool master.",
                        "If the value is not specified in the task, the value of environment variable C(XENSERVER_HOST) will be used instead."
                    ],
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "name_label"
                    ],
                    "description": [
                        "Name of the VM to manage.",
                        "VMs running on XenServer do not necessarily have unique names. The module will fail if multiple VMs with same name are found.",
                        "In case of multiple VMs with same name, use C(uuid) to uniquely specify VM to manage.",
                        "This parameter is case sensitive."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password to use for connecting to XenServer.",
                        "If the value is not specified in the task, the value of environment variable C(XENSERVER_PASSWORD) will be used instead."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "powered-on",
                        "powered-off",
                        "restarted",
                        "shutdown-guest",
                        "reboot-guest",
                        "suspended",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Specify the state VM should be in.",
                        "If C(state) is set to value other than C(present), then VM is transitioned into required state and facts are returned.",
                        "If C(state) is set to C(present), then VM is just checked for existence and facts are returned."
                    ],
                    "type": "str"
                },
                "state_change_timeout": {
                    "default": 0,
                    "description": [
                        "By default, module will wait indefinitely for VM to change state or acquire an IP address if C(wait_for_ip_address: yes).",
                        "If this parameter is set to positive value, the module will instead wait specified number of seconds for the state change.",
                        "In case of timeout, module will generate an error message."
                    ],
                    "type": "int"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "default": "root",
                    "description": [
                        "The username to use for connecting to XenServer.",
                        "If the value is not specified in the task, the value of environment variable C(XENSERVER_USER) will be used instead."
                    ],
                    "type": "str"
                },
                "uuid": {
                    "description": [
                        "UUID of the VM to manage if known. This is XenServer's unique identifier.",
                        "It is required if name is not unique."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(XENSERVER_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                },
                "wait_for_ip_address": {
                    "default": false,
                    "description": [
                        "Wait until XenServer detects an IP address for the VM.",
                        "This requires XenServer Tools to be preinstalled on the VM to work properly."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "XenAPI"
            ],
            "short_description": "Manages power states of virtual machines running on Citrix Hypervisor/XenServer host or pool"
        },
        "examples": "\n- name: Power on VM\n  community.general.xenserver_guest_powerstate:\n    hostname: \"{{ xenserver_hostname }}\"\n    username: \"{{ xenserver_username }}\"\n    password: \"{{ xenserver_password }}\"\n    name: testvm_11\n    state: powered-on\n  delegate_to: localhost\n  register: facts\n",
        "metadata": null,
        "return": {
            "instance": {
                "description": "Metadata about the VM",
                "returned": "always",
                "sample": {
                    "cdrom": {
                        "type": "none"
                    },
                    "customization_agent": "native",
                    "disks": [
                        {
                            "name": "windows-template-testing-0",
                            "name_desc": "",
                            "os_device": "xvda",
                            "size": 42949672960,
                            "sr": "Local storage",
                            "sr_uuid": "0af1245e-bdb0-ba33-1446-57a962ec4075",
                            "vbd_userdevice": "0"
                        },
                        {
                            "name": "windows-template-testing-1",
                            "name_desc": "",
                            "os_device": "xvdb",
                            "size": 42949672960,
                            "sr": "Local storage",
                            "sr_uuid": "0af1245e-bdb0-ba33-1446-57a962ec4075",
                            "vbd_userdevice": "1"
                        }
                    ],
                    "domid": "56",
                    "folder": "",
                    "hardware": {
                        "memory_mb": 8192,
                        "num_cpu_cores_per_socket": 2,
                        "num_cpus": 4
                    },
                    "home_server": "",
                    "is_template": false,
                    "name": "windows-template-testing",
                    "name_desc": "",
                    "networks": [
                        {
                            "gateway": "192.168.0.254",
                            "gateway6": "fc00::fffe",
                            "ip": "192.168.0.200",
                            "ip6": [
                                "fe80:0000:0000:0000:e9cb:625a:32c5:c291",
                                "fc00:0000:0000:0000:0000:0000:0000:0001"
                            ],
                            "mac": "ba:91:3a:48:20:76",
                            "mtu": "1500",
                            "name": "Pool-wide network associated with eth1",
                            "netmask": "255.255.255.128",
                            "prefix": "25",
                            "prefix6": "64",
                            "vif_device": "0"
                        }
                    ],
                    "other_config": {
                        "base_template_name": "Windows Server 2016 (64-bit)",
                        "import_task": "OpaqueRef:e43eb71c-45d6-5351-09ff-96e4fb7d0fa5",
                        "install-methods": "cdrom",
                        "instant": "true",
                        "mac_seed": "f83e8d8a-cfdc-b105-b054-ef5cb416b77e"
                    },
                    "platform": {
                        "acpi": "1",
                        "apic": "true",
                        "cores-per-socket": "2",
                        "device_id": "0002",
                        "hpet": "true",
                        "nx": "true",
                        "pae": "true",
                        "timeoffset": "-25200",
                        "vga": "std",
                        "videoram": "8",
                        "viridian": "true",
                        "viridian_reference_tsc": "true",
                        "viridian_time_ref_count": "true"
                    },
                    "state": "poweredon",
                    "uuid": "e3c0b2d5-5f05-424e-479c-d3df8b3e7cda",
                    "xenstore_data": {
                        "vm-data": ""
                    }
                },
                "type": "dict"
            }
        }
    }
}
