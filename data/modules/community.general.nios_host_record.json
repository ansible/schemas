{
    "community.general.nios_host_record": {
        "doc": {
            "author": "Peter Sprygada (@privateip)",
            "collection": "community.general",
            "description": [
                "Adds and/or removes instances of host record objects from Infoblox NIOS servers.  This module manages NIOS C(record:host) objects using the Infoblox WAPI interface over REST.",
                "Updates instances of host record object from Infoblox NIOS servers."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/nios_host_record.py",
            "has_action": false,
            "module": "nios_host_record",
            "notes": [
                "This module must be run locally, which can be achieved by specifying C(connection: local).",
                "Please read the :ref:`nios_guide` for more detailed information on how to use Infoblox with Ansible."
            ],
            "options": {
                "aliases": {
                    "description": [
                        "Configures an optional list of additional aliases to add to the host record. These are equivalent to CNAMEs but held within a host record. Must be in list format."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "comment": {
                    "description": [
                        "Configures a text string comment to be associated with the instance of this object.  The provided text string will be configured on the object instance."
                    ],
                    "type": "str"
                },
                "configure_for_dns": {
                    "aliases": [
                        "dns"
                    ],
                    "default": true,
                    "description": [
                        "Sets the DNS to particular parent. If user needs to bypass DNS user can make the value to false."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "extattrs": {
                    "description": [
                        "Allows for the configuration of Extensible Attributes on the instance of the object.  This argument accepts a set of key / value pairs for configuration."
                    ],
                    "type": "dict"
                },
                "ipv4addrs": {
                    "aliases": [
                        "ipv4"
                    ],
                    "description": [
                        "Configures the IPv4 addresses for this host record.  This argument accepts a list of values (see suboptions)"
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "add": {
                            "description": [
                                "If user wants to add the ipv4 address to an existing host record. Note that with I(add) user will have to keep the I(state) as I(present), as new IP address is allocated to existing host record. See examples."
                            ],
                            "required": false,
                            "type": "bool",
                            "version_added": "0.2.0",
                            "version_added_collection": "community.general"
                        },
                        "configure_for_dhcp": {
                            "aliases": [
                                "dhcp"
                            ],
                            "description": [
                                "Configure the host_record over DHCP instead of DNS, if user changes it to true, user need to mention MAC address to configure"
                            ],
                            "required": false,
                            "type": "bool"
                        },
                        "ipv4addr": {
                            "aliases": [
                                "address"
                            ],
                            "description": [
                                "Configures the IPv4 address for the host record. Users can dynamically allocate ipv4 address to host record by passing dictionary containing, I(nios_next_ip) and I(CIDR network range). If user wants to add or remove the ipv4 address from existing record, I(add/remove) params need to be used. See examples"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "mac": {
                            "description": [
                                "Configures the hardware MAC address for the host record. If user makes DHCP to true, user need to mention MAC address."
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "remove": {
                            "description": [
                                "If user wants to remove the ipv4 address from an existing host record. Note that with I(remove) user will have to change the I(state) to I(absent), as IP address is de-allocated from an existing host record. See examples."
                            ],
                            "required": false,
                            "type": "bool",
                            "version_added": "0.2.0",
                            "version_added_collection": "community.general"
                        }
                    },
                    "type": "list"
                },
                "ipv6addrs": {
                    "aliases": [
                        "ipv6"
                    ],
                    "description": [
                        "Configures the IPv6 addresses for the host record.  This argument accepts a list of values (see options)"
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "configure_for_dhcp": {
                            "description": [
                                "Configure the host_record over DHCP instead of DNS, if user changes it to true, user need to mention MAC address to configure"
                            ],
                            "required": false,
                            "type": "bool"
                        },
                        "ipv6addr": {
                            "aliases": [
                                "address"
                            ],
                            "description": [
                                "Configures the IPv6 address for the host record"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "mac": {
                            "description": [
                                "Configures the hardware MAC address for the host record. If user makes DHCP to true, user need to mention MAC address."
                            ],
                            "required": false,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "name": {
                    "description": [
                        "Specifies the fully qualified hostname to add or remove from the system. User can also update the hostname as it is possible to pass a dict containing I(new_name), I(old_name). See examples."
                    ],
                    "required": true,
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote instance of NIOS WAPI over REST",
                                "Value can also be specified using C(INFOBLOX_HOST) environment variable."
                            ],
                            "type": "str"
                        },
                        "http_pool_connections": {
                            "default": 10,
                            "description": [
                                "Number of pools to be used by the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "int"
                        },
                        "http_pool_maxsize": {
                            "default": 10,
                            "description": [
                                "Maximum number of connections per pool to be used by the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "int"
                        },
                        "http_request_timeout": {
                            "default": 10,
                            "description": [
                                "The amount of time before to wait before receiving a response",
                                "Value can also be specified using C(INFOBLOX_HTTP_REQUEST_TIMEOUT) environment variable."
                            ],
                            "type": "int"
                        },
                        "max_results": {
                            "default": 1000,
                            "description": [
                                "Specifies the maximum number of objects to be returned, if set to a negative number the appliance will return an error when the number of returned objects would exceed the setting.",
                                "Value can also be specified using C(INFOBLOX_MAX_RESULTS) environment variable."
                            ],
                            "type": "int"
                        },
                        "max_retries": {
                            "default": 3,
                            "description": [
                                "Configures the number of attempted retries before the connection is declared usable",
                                "Value can also be specified using C(INFOBLOX_MAX_RETRIES) environment variable."
                            ],
                            "type": "int"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote instance of NIOS.",
                                "Value can also be specified using C(INFOBLOX_PASSWORD) environment variable."
                            ],
                            "type": "str"
                        },
                        "silent_ssl_warnings": {
                            "default": true,
                            "description": [
                                "Disable C(urllib3) SSL warnings in the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote instance of NIOS.",
                                "Value can also be specified using C(INFOBLOX_USERNAME) environment variable."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "ssl_verify"
                            ],
                            "default": false,
                            "description": [
                                "Boolean value to enable or disable verifying SSL certificates",
                                "Value can also be specified using C(INFOBLOX_SSL_VERIFY) environment variable."
                            ],
                            "type": "bool"
                        },
                        "wapi_version": {
                            "default": "2.1",
                            "description": [
                                "Specifies the version of WAPI to use",
                                "Value can also be specified using C(INFOBLOX_WAP_VERSION) environment variable.",
                                "Until ansible 2.8 the default WAPI was 1.4"
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Configures the intended state of the instance of the object on the NIOS server.  When this value is set to C(present), the object is configured on the device and when this value is set to C(absent) the value is removed (if necessary) from the device."
                    ],
                    "type": "str"
                },
                "ttl": {
                    "description": [
                        "Configures the TTL to be associated with this host record"
                    ],
                    "type": "int"
                },
                "view": {
                    "aliases": [
                        "dns_view"
                    ],
                    "default": "default",
                    "description": [
                        "Sets the DNS view to associate this host record with.  The DNS view must already be configured on the system"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "infoblox-client"
            ],
            "short_description": "Configure Infoblox NIOS host records"
        },
        "examples": "\n- name: Configure an ipv4 host record\n  community.general.nios_host_record:\n    name: host.ansible.com\n    ipv4:\n      - address: 192.168.10.1\n    aliases:\n      - cname.ansible.com\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Add a comment to an existing host record\n  community.general.nios_host_record:\n    name: host.ansible.com\n    ipv4:\n      - address: 192.168.10.1\n    comment: this is a test comment\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Remove a host record from the system\n  community.general.nios_host_record:\n    name: host.ansible.com\n    state: absent\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Update an ipv4 host record\n  community.general.nios_host_record:\n    name: {new_name: host-new.ansible.com, old_name: host.ansible.com}\n    ipv4:\n      - address: 192.168.10.1\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Create an ipv4 host record bypassing DNS\n  community.general.nios_host_record:\n    name: new_host\n    ipv4:\n      - address: 192.168.10.1\n    dns: false\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Create an ipv4 host record over DHCP\n  community.general.nios_host_record:\n    name: host.ansible.com\n    ipv4:\n      - address: 192.168.10.1\n        dhcp: true\n        mac: 00-80-C8-E3-4C-BD\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Dynamically add host record to next available ip\n  community.general.nios_host_record:\n    name: host.ansible.com\n    ipv4:\n      - address: {nios_next_ip: 192.168.10.0/24}\n    comment: this is a test comment\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Add ip to host record\n  community.general.nios_host_record:\n    name: host.ansible.com\n    ipv4:\n      - address: 192.168.10.2\n        add: true\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Remove ip to host record\n  community.general.nios_host_record:\n    name: host.ansible.com\n    ipv4:\n      - address: 192.168.10.1\n        remove: true\n    state: absent\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n",
        "metadata": null,
        "return": null
    }
}
