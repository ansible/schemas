{
    "community.general.manageiq_provider": {
        "doc": {
            "author": "Daniel Korn (@dkorn)",
            "collection": "community.general",
            "description": [
                "The manageiq_provider module supports adding, updating, and deleting provider in ManageIQ."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/manageiq_provider.py",
            "has_action": false,
            "module": "manageiq_provider",
            "options": {
                "alerts": {
                    "description": "Alerts endpoint connection information.",
                    "suboptions": {
                        "auth_key": {
                            "description": "Provider's api endpoint authentication bearer token. defaults to None.",
                            "type": "str"
                        },
                        "certificate_authority": {
                            "description": "The CA bundle string with custom certificates. defaults to None.",
                            "type": "str"
                        },
                        "hostname": {
                            "description": "The provider's api hostname.",
                            "required": true,
                            "type": "str"
                        },
                        "password": {
                            "description": "Provider's api endpoint authentication password. defaults to None.",
                            "type": "str"
                        },
                        "port": {
                            "description": "The provider's api port.",
                            "type": "int"
                        },
                        "security_protocol": {
                            "choices": [
                                "ssl-with-validation",
                                "ssl-with-validation-custom-ca",
                                "ssl-without-validation",
                                "non-ssl"
                            ],
                            "description": "How SSL certificates should be used for HTTPS requests. defaults to None.",
                            "type": "str"
                        },
                        "userid": {
                            "description": "Provider's api endpoint authentication userid. defaults to None.",
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": true,
                            "description": "Whether SSL certificates should be verified for HTTPS requests (deprecated). defaults to True.",
                            "type": "bool"
                        }
                    }
                },
                "api_version": {
                    "choices": [
                        "v2",
                        "v3"
                    ],
                    "description": "The OpenStack Keystone API version. defaults to None.",
                    "type": "str"
                },
                "azure_tenant_id": {
                    "aliases": [
                        "keystone_v3_domain_id"
                    ],
                    "description": "Tenant ID. defaults to None.",
                    "type": "str"
                },
                "host_default_vnc_port_end": {
                    "description": "The last port in the host VNC range. defaults to None.",
                    "type": "str"
                },
                "host_default_vnc_port_start": {
                    "description": "The first port in the host VNC range. defaults to None.",
                    "type": "str"
                },
                "manageiq_connection": {
                    "description": [
                        "ManageIQ connection configuration information."
                    ],
                    "required": false,
                    "suboptions": {
                        "ca_cert": {
                            "aliases": [
                                "ca_bundle_path"
                            ],
                            "description": [
                                "The path to a CA bundle file or directory with certificates. defaults to None."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "ManageIQ password. C(MIQ_PASSWORD) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "token": {
                            "description": [
                                "ManageIQ token. C(MIQ_TOKEN) env var if set. otherwise, required if no username or password is passed in."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "ManageIQ environment url. C(MIQ_URL) env var if set. otherwise, it is required to pass it."
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "ManageIQ username. C(MIQ_USERNAME) env var if set. otherwise, required if no token is passed in."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "verify_ssl"
                            ],
                            "default": true,
                            "description": [
                                "Whether SSL certificates should be verified for HTTPS requests. defaults to True."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "metrics": {
                    "description": "Metrics endpoint connection information.",
                    "suboptions": {
                        "auth_key": {
                            "description": "Provider's api endpoint authentication bearer token. defaults to None.",
                            "type": "str"
                        },
                        "certificate_authority": {
                            "description": "The CA bundle string with custom certificates. defaults to None.",
                            "type": "str"
                        },
                        "hostname": {
                            "description": "The provider's api hostname.",
                            "required": true,
                            "type": "str"
                        },
                        "password": {
                            "description": "Provider's api endpoint authentication password. defaults to None.",
                            "type": "str"
                        },
                        "path": {
                            "description": "Database name for oVirt metrics. Defaults to C(ovirt_engine_history).",
                            "type": "str"
                        },
                        "port": {
                            "description": "The provider's api port.",
                            "type": "int"
                        },
                        "security_protocol": {
                            "choices": [
                                "ssl-with-validation",
                                "ssl-with-validation-custom-ca",
                                "ssl-without-validation",
                                "non-ssl"
                            ],
                            "description": "How SSL certificates should be used for HTTPS requests. defaults to None.",
                            "type": "str"
                        },
                        "userid": {
                            "description": "Provider's api endpoint authentication userid. defaults to None.",
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": "yes",
                            "description": "Whether SSL certificates should be verified for HTTPS requests (deprecated). defaults to True.",
                            "type": "bool"
                        }
                    }
                },
                "name": {
                    "description": "The provider's name.",
                    "required": true,
                    "type": "str"
                },
                "project": {
                    "description": "Google Compute Engine Project ID. defaults to None.",
                    "type": "str"
                },
                "provider": {
                    "description": "Default endpoint connection information, required if state is true.",
                    "suboptions": {
                        "auth_key": {
                            "description": "Provider's api endpoint authentication bearer token. defaults to None.",
                            "type": "str"
                        },
                        "certificate_authority": {
                            "description": "The CA bundle string with custom certificates. defaults to None.",
                            "type": "str"
                        },
                        "hostname": {
                            "description": "The provider's api hostname.",
                            "required": true,
                            "type": "str"
                        },
                        "password": {
                            "description": "Provider's api endpoint authentication password. defaults to None.",
                            "type": "str"
                        },
                        "port": {
                            "description": "The provider's api port.",
                            "type": "int"
                        },
                        "security_protocol": {
                            "choices": [
                                "ssl-with-validation",
                                "ssl-with-validation-custom-ca",
                                "ssl-without-validation",
                                "non-ssl"
                            ],
                            "description": "How SSL certificates should be used for HTTPS requests. defaults to None.",
                            "type": "str"
                        },
                        "userid": {
                            "description": "Provider's api endpoint authentication userid. defaults to None.",
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": "yes",
                            "description": "Whether SSL certificates should be verified for HTTPS requests (deprecated). defaults to True.",
                            "type": "bool"
                        }
                    }
                },
                "provider_region": {
                    "description": "The provider region name to connect to (e.g. AWS region for Amazon).",
                    "type": "str"
                },
                "ssh_keypair": {
                    "description": "SSH key pair used for SSH connections to all hosts in this provider.",
                    "suboptions": {
                        "auth_key": {
                            "description": "SSH private key.",
                            "type": "str"
                        },
                        "hostname": {
                            "description": "Director hostname.",
                            "required": true,
                            "type": "str"
                        },
                        "userid": {
                            "description": "SSH username.",
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "verify_ssl"
                            ],
                            "default": true,
                            "description": [
                                "Whether certificates should be verified for connections."
                            ],
                            "type": "bool"
                        }
                    }
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "refresh"
                    ],
                    "default": "present",
                    "description": [
                        "absent - provider should not exist, present - provider should be present, refresh - provider will be refreshed"
                    ],
                    "type": "str"
                },
                "subscription": {
                    "description": "Microsoft Azure subscription ID. defaults to None.",
                    "type": "str"
                },
                "tenant_mapping_enabled": {
                    "default": "no",
                    "description": "Whether to enable mapping of existing tenants. defaults to False.",
                    "type": "bool"
                },
                "type": {
                    "choices": [
                        "Openshift",
                        "Amazon",
                        "oVirt",
                        "VMware",
                        "Azure",
                        "Director",
                        "OpenStack",
                        "GCE"
                    ],
                    "description": "The provider's type.",
                    "type": "str"
                },
                "zone": {
                    "default": "default",
                    "description": "The ManageIQ zone name that will manage the provider.",
                    "type": "str"
                }
            },
            "requirements": [
                "manageiq-client U(https://github.com/ManageIQ/manageiq-api-client-python/)"
            ],
            "short_description": "Management of provider in ManageIQ."
        },
        "examples": "\n- name: Create a new provider in ManageIQ ('Hawkular' metrics)\n  community.general.manageiq_provider:\n    name: 'EngLab'\n    type: 'OpenShift'\n    state: 'present'\n    provider:\n      auth_key: 'topSecret'\n      hostname: 'example.com'\n      port: 8443\n      validate_certs: true\n      security_protocol: 'ssl-with-validation-custom-ca'\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    metrics:\n      auth_key: 'topSecret'\n      role: 'hawkular'\n      hostname: 'example.com'\n      port: 443\n      validate_certs: true\n      security_protocol: 'ssl-with-validation-custom-ca'\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    manageiq_connection:\n      url: 'https://127.0.0.1:80'\n      username: 'admin'\n      password: 'password'\n      validate_certs: true\n\n\n- name: Update an existing provider named 'EngLab' (defaults to 'Prometheus' metrics)\n  community.general.manageiq_provider:\n    name: 'EngLab'\n    type: 'Openshift'\n    state: 'present'\n    provider:\n      auth_key: 'topSecret'\n      hostname: 'next.example.com'\n      port: 8443\n      validate_certs: true\n      security_protocol: 'ssl-with-validation-custom-ca'\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    metrics:\n      auth_key: 'topSecret'\n      hostname: 'next.example.com'\n      port: 443\n      validate_certs: true\n      security_protocol: 'ssl-with-validation-custom-ca'\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    manageiq_connection:\n      url: 'https://127.0.0.1'\n      username: 'admin'\n      password: 'password'\n      validate_certs: true\n\n\n- name: Delete a provider in ManageIQ\n  community.general.manageiq_provider:\n    name: 'EngLab'\n    type: 'Openshift'\n    state: 'absent'\n    manageiq_connection:\n      url: 'https://127.0.0.1'\n      username: 'admin'\n      password: 'password'\n      validate_certs: true\n\n\n- name: Create a new Amazon provider in ManageIQ using token authentication\n  community.general.manageiq_provider:\n    name: 'EngAmazon'\n    type: 'Amazon'\n    state: 'present'\n    provider:\n      hostname: 'amazon.example.com'\n      userid: 'hello'\n      password: 'world'\n    manageiq_connection:\n      url: 'https://127.0.0.1'\n      token: 'VeryLongToken'\n      validate_certs: true\n\n\n- name: Create a new oVirt provider in ManageIQ\n  community.general.manageiq_provider:\n    name: 'RHEV'\n    type: 'oVirt'\n    state: 'present'\n    provider:\n      hostname: 'rhev01.example.com'\n      userid: 'admin@internal'\n      password: 'password'\n      validate_certs: true\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    metrics:\n      hostname: 'metrics.example.com'\n      path: 'ovirt_engine_history'\n      userid: 'user_id_metrics'\n      password: 'password_metrics'\n      validate_certs: true\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    manageiq_connection:\n      url: 'https://127.0.0.1'\n      username: 'admin'\n      password: 'password'\n      validate_certs: true\n\n- name: Create a new VMware provider in ManageIQ\n  community.general.manageiq_provider:\n    name: 'EngVMware'\n    type: 'VMware'\n    state: 'present'\n    provider:\n      hostname: 'vcenter.example.com'\n      host_default_vnc_port_start: 5800\n      host_default_vnc_port_end: 5801\n      userid: 'root'\n      password: 'password'\n    manageiq_connection:\n      url: 'https://127.0.0.1'\n      token: 'VeryLongToken'\n      validate_certs: true\n\n- name: Create a new Azure provider in ManageIQ\n  community.general.manageiq_provider:\n    name: 'EngAzure'\n    type: 'Azure'\n    provider_region: 'northeurope'\n    subscription: 'e272bd74-f661-484f-b223-88dd128a4049'\n    azure_tenant_id: 'e272bd74-f661-484f-b223-88dd128a4048'\n    state: 'present'\n    provider:\n      hostname: 'azure.example.com'\n      userid: 'e272bd74-f661-484f-b223-88dd128a4049'\n      password: 'password'\n    manageiq_connection:\n      url: 'https://cf-6af0.rhpds.opentlc.com'\n      username: 'admin'\n      password: 'password'\n      validate_certs: false\n\n- name: Create a new OpenStack Director provider in ManageIQ with rsa keypair\n  community.general.manageiq_provider:\n    name: 'EngDirector'\n    type: 'Director'\n    api_version: 'v3'\n    state: 'present'\n    provider:\n      hostname: 'director.example.com'\n      userid: 'admin'\n      password: 'password'\n      security_protocol: 'ssl-with-validation'\n      validate_certs: 'true'\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    ssh_keypair:\n      hostname: director.example.com\n      userid: heat-admin\n      auth_key: 'SecretSSHPrivateKey'\n\n- name: Create a new OpenStack provider in ManageIQ with amqp metrics\n  community.general.manageiq_provider:\n    name: 'EngOpenStack'\n    type: 'OpenStack'\n    api_version: 'v3'\n    state: 'present'\n    provider_region: 'europe'\n    tenant_mapping_enabled: 'False'\n    keystone_v3_domain_id: 'mydomain'\n    provider:\n      hostname: 'openstack.example.com'\n      userid: 'admin'\n      password: 'password'\n      security_protocol: 'ssl-with-validation'\n      validate_certs: 'true'\n      certificate_authority: |\n        -----BEGIN CERTIFICATE-----\n        FAKECERTsdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\n        c2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkwHhcNMTcwODIxMTI1NTE5WhcNMjIwODIw\n        MTI1NTIwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MDMzMjAxMTkw\n        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUDnL2tQ2xf/zO7F7hmZ4S\n        ZuwKENdI4IYuWSxye4i3hPhKg6eKPzGzmDNWkIMDOrDAj1EgVSNPtPwsOL8OWvJm\n        AaTjr070D7ZGWWnrrDrWEClBx9Rx/6JAM38RT8Pu7c1hXBm0J81KufSLLYiZ/gOw\n        Znks5v5RUSGcAXvLkBJeATbsbh6fKX0RgQ3fFTvqQaE/r8LxcTN1uehPX1g5AaRa\n        z/SNDHaFtQlE3XcqAAukyMn4N5kdNcuwF3GlQ+tJnJv8SstPkfQcZbTMUQ7I2KpJ\n        ajXnMxmBhV5fCN4rb0QUNCrk2/B+EUMBY4MnxIakqNxnN1kvgI7FBbFgrHUe6QvJ\n        AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\n        SIb3DQEBCwUAA4IBAQAYRV57LUsqznSLZHA77o9+0fQetIE115DYP7wea42PODJI\n        QJ+JETEfoCr0+YOMAbVmznP9GH5cMTKEWHExcIpbMBU7nMZp6A3htcJgF2fgPzOA\n        aTUtzkuVCSrV//mbbYVxoFOc6sR3Br0wBs5+5iz3dBSt7xmgpMzZvqsQl655i051\n        gGSTIY3z5EJmBZBjwuTjal9mMoPGA4eoTPqlITJDHQ2bdCV2oDbc7zqupGrUfZFA\n        qzgieEyGzdCSRwjr1/PibA3bpwHyhD9CGD0PRVVTLhw6h6L5kuN1jA20OfzWxf/o\n        XUsdmRaWiF+l4s6Dcd56SuRp5SGNa2+vP9Of/FX5\n        -----END CERTIFICATE-----\n    metrics:\n      role: amqp\n      hostname: 'amqp.example.com'\n      security_protocol: 'non-ssl'\n      port: 5666\n      userid: admin\n      password: password\n\n\n- name: Create a new GCE provider in ManageIQ\n  community.general.manageiq_provider:\n    name: 'EngGoogle'\n    type: 'GCE'\n    provider_region: 'europe-west1'\n    project: 'project1'\n    state: 'present'\n    provider:\n      hostname: 'gce.example.com'\n      auth_key: 'google_json_key'\n      validate_certs: 'false'\n",
        "metadata": null,
        "return": null
    }
}
