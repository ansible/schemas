{
    "ngine_io.cloudstack.cs_affinitygroup": {
        "doc": {
            "author": "Ren\u00e9 Moser (@resmo)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Create and remove affinity groups."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_affinitygroup.py",
            "has_action": false,
            "module": "cs_affinitygroup",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "account": {
                    "description": [
                        "Account the affinity group is related to."
                    ],
                    "type": "str"
                },
                "affinity_type": {
                    "description": [
                        "Type of the affinity group. If not specified, first found affinity type is used."
                    ],
                    "type": "str"
                },
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Description of the affinity group."
                    ],
                    "type": "str"
                },
                "domain": {
                    "description": [
                        "Domain the affinity group is related to."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the affinity group."
                    ],
                    "required": true,
                    "type": "str"
                },
                "poll_async": {
                    "default": true,
                    "description": [
                        "Poll async jobs until job has finished."
                    ],
                    "type": "bool"
                },
                "project": {
                    "description": [
                        "Name of the project the affinity group is related to."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the affinity group."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Manages affinity groups on Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: Create a affinity group\n  ngine_io.cloudstack.cs_affinitygroup:\n    name: haproxy\n    affinity_type: host anti-affinity\n\n- name: Remove a affinity group\n  ngine_io.cloudstack.cs_affinitygroup:\n    name: haproxy\n    state: absent\n",
        "metadata": null,
        "return": {
            "account": {
                "description": "Account the affinity group is related to.",
                "returned": "success",
                "sample": "example account",
                "type": "str"
            },
            "affinity_type": {
                "description": "Type of affinity group.",
                "returned": "success",
                "sample": "host anti-affinity",
                "type": "str"
            },
            "description": {
                "description": "Description of affinity group.",
                "returned": "success",
                "sample": "application affinity group",
                "type": "str"
            },
            "domain": {
                "description": "Domain the affinity group is related to.",
                "returned": "success",
                "sample": "example domain",
                "type": "str"
            },
            "id": {
                "description": "UUID of the affinity group.",
                "returned": "success",
                "sample": "87b1e0ce-4e01-11e4-bb66-0050569e64b8",
                "type": "str"
            },
            "name": {
                "description": "Name of affinity group.",
                "returned": "success",
                "sample": "app",
                "type": "str"
            },
            "project": {
                "description": "Name of project the affinity group is related to.",
                "returned": "success",
                "sample": "Production",
                "type": "str"
            }
        }
    }
}
