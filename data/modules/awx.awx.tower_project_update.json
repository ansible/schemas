{
    "awx.awx.tower_project_update": {
        "doc": {
            "author": "Sean Sullivan (@sean-m-sullivan)",
            "collection": "awx.awx",
            "description": [
                "Update a Ansible Tower Project. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_project_update.py",
            "has_action": false,
            "module": "tower_project_update",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "interval": {
                    "default": 1,
                    "description": [
                        "The interval to request an update from Tower."
                    ],
                    "required": false,
                    "type": "float"
                },
                "name": {
                    "aliases": [
                        "project"
                    ],
                    "description": [
                        "The name or id of the project to update."
                    ],
                    "required": true,
                    "type": "str"
                },
                "organization": {
                    "description": [
                        "Organization the project exists in.",
                        "Used to help lookup the object, cannot be modified using this module.",
                        "If not provided, will lookup by name only, which does not work with duplicates."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "description": [
                        "If waiting for the project to update this will abort after this amount of seconds"
                    ],
                    "type": "int"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Wait for the project to update."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Update a Project in Ansible Tower"
        },
        "examples": "\n- name: Launch a project with a timeout of 10 seconds\n  tower_project_update:\n    project: \"Networking Project\"\n    timeout: 10\n\n- name: Launch a Project with extra_vars without waiting\n  tower_project_update:\n    project: \"Networking Project\"\n    wait: False\n",
        "metadata": {
            "metadata_version": "1.0",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "id": {
                "description": "project id of the updated project",
                "returned": "success",
                "sample": 86,
                "type": "int"
            },
            "status": {
                "description": "status of the updated project",
                "returned": "success",
                "sample": "pending",
                "type": "str"
            }
        }
    }
}
