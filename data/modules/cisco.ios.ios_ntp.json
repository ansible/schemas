{
    "cisco.ios.ios_ntp": {
        "doc": {
            "author": [
                "Federico Olivieri (@Federico87)"
            ],
            "collection": "cisco.ios",
            "description": [
                "Manages core NTP configuration."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/ios/plugins/modules/ios_ntp.py",
            "has_action": true,
            "module": "ios_ntp",
            "notes": [
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "acl": {
                    "description": [
                        "ACL for peer/server access restricition."
                    ],
                    "type": "str"
                },
                "auth": {
                    "default": false,
                    "description": [
                        "Enable NTP authentication. Data type boolean."
                    ],
                    "type": "bool"
                },
                "auth_key": {
                    "description": [
                        "md5 NTP authentication key of tye 7."
                    ],
                    "type": "str"
                },
                "key_id": {
                    "description": [
                        "auth_key id. Data type string"
                    ],
                    "type": "str"
                },
                "logging": {
                    "default": false,
                    "description": [
                        "Enable NTP logs. Data type boolean."
                    ],
                    "type": "bool"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "path"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "server": {
                    "description": [
                        "Network address of NTP server."
                    ],
                    "type": "str"
                },
                "source_int": {
                    "description": [
                        "Source interface for NTP packets."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Manage the state of the resource."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages core NTP configuration.",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.ios"
        },
        "examples": "\n# Set new NTP server and source interface\n- cisco.ios.ios_ntp:\n    server: 10.0.255.10\n    source_int: Loopback0\n    logging: false\n    state: present\n\n# Remove NTP ACL and logging\n- cisco.ios.ios_ntp:\n    acl: NTP_ACL\n    logging: true\n    state: absent\n\n# Set NTP authentication\n- cisco.ios.ios_ntp:\n    key_id: 10\n    auth_key: 15435A030726242723273C21181319000A\n    auth: true\n    state: present\n\n# Set new NTP configuration\n- cisco.ios.ios_ntp:\n    server: 10.0.255.10\n    source_int: Loopback0\n    acl: NTP_ACL\n    logging: true\n    key_id: 10\n    auth_key: 15435A030726242723273C21181319000A\n    auth: true\n    state: present\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "command sent to the device",
                "returned": "always",
                "sample": [
                    "no ntp server 10.0.255.10",
                    "no ntp source Loopback0"
                ],
                "type": "list"
            }
        }
    }
}
