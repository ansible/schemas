{
    "community.windows.win_domain_group": {
        "doc": {
            "author": [
                "Jordan Borean (@jborean93)"
            ],
            "collection": "community.windows",
            "description": [
                "Creates, modifies or removes groups in Active Directory.",
                "For local groups, use the M(ansible.windows.win_group) module instead."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/windows/plugins/modules/win_domain_group.py",
            "has_action": false,
            "module": "win_domain_group",
            "notes": [
                "This must be run on a host that has the ActiveDirectory powershell module installed."
            ],
            "options": {
                "attributes": {
                    "description": [
                        "A dict of custom LDAP attributes to set on the group.",
                        "This can be used to set custom attributes that are not exposed as module parameters, e.g. C(mail).",
                        "See the examples on how to format this parameter."
                    ],
                    "type": "dict"
                },
                "category": {
                    "choices": [
                        "distribution",
                        "security"
                    ],
                    "description": [
                        "The category of the group, this is the value to assign to the LDAP C(groupType) attribute.",
                        "If a new group is created then C(security) will be used by default."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "The value to be assigned to the LDAP C(description) attribute."
                    ],
                    "type": "str"
                },
                "display_name": {
                    "description": [
                        "The value to assign to the LDAP C(displayName) attribute."
                    ],
                    "type": "str"
                },
                "domain_password": {
                    "description": [
                        "The password for C(username)."
                    ],
                    "type": "str"
                },
                "domain_server": {
                    "description": [
                        "Specifies the Active Directory Domain Services instance to connect to.",
                        "Can be in the form of an FQDN or NetBIOS name.",
                        "If not specified then the value is based on the domain of the computer running PowerShell."
                    ],
                    "type": "str"
                },
                "domain_username": {
                    "description": [
                        "The username to use when interacting with AD.",
                        "If this is not set then the user Ansible used to log in with will be used instead."
                    ],
                    "type": "str"
                },
                "ignore_protection": {
                    "default": false,
                    "description": [
                        "Will ignore the C(ProtectedFromAccidentalDeletion) flag when deleting or moving a group.",
                        "The module will fail if one of these actions need to occur and this value is set to C(no)."
                    ],
                    "type": "bool"
                },
                "managed_by": {
                    "description": [
                        "The value to be assigned to the LDAP C(managedBy) attribute.",
                        "This value can be in the forms C(Distinguished Name), C(objectGUID), C(objectSid) or C(sAMAccountName), see examples for more details."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the group to create, modify or remove.",
                        "This value can be in the forms C(Distinguished Name), C(objectGUID), C(objectSid) or C(sAMAccountName), see examples for more details."
                    ],
                    "required": true,
                    "type": "str"
                },
                "organizational_unit": {
                    "aliases": [
                        "ou",
                        "path"
                    ],
                    "description": [
                        "The full LDAP path to create or move the group to.",
                        "This should be the path to the parent object to create or move the group to.",
                        "See examples for details of how this path is formed."
                    ],
                    "type": "str"
                },
                "protect": {
                    "description": [
                        "Will set the C(ProtectedFromAccidentalDeletion) flag based on this value.",
                        "This flag stops a user from deleting or moving a group to a different path."
                    ],
                    "type": "bool"
                },
                "scope": {
                    "choices": [
                        "domainlocal",
                        "global",
                        "universal"
                    ],
                    "description": [
                        "The scope of the group.",
                        "If C(state=present) and the group doesn't exist then this must be set."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "If C(state=present) this module will ensure the group is created and is configured accordingly.",
                        "If C(state=absent) this module will delete the group if it exists"
                    ],
                    "type": "str"
                }
            },
            "seealso": [
                {
                    "module": "ansible.windows.win_domain"
                },
                {
                    "module": "ansible.windows.win_domain_controller"
                },
                {
                    "module": "community.windows.win_domain_computer"
                },
                {
                    "module": "ansible.windows.win_domain_membership"
                },
                {
                    "module": "community.windows.win_domain_user"
                },
                {
                    "module": "ansible.windows.win_group"
                },
                {
                    "module": "ansible.windows.win_group_membership"
                }
            ],
            "short_description": "Creates, modifies or removes domain groups"
        },
        "examples": "\n- name: Ensure the group Cow exists using sAMAccountName\n  community.windows.win_domain_group:\n    name: Cow\n    scope: global\n    path: OU=groups,DC=ansible,DC=local\n\n- name: Ensure the group Cow doesn't exist using the Distinguished Name\n  community.windows.win_domain_group:\n    name: CN=Cow,OU=groups,DC=ansible,DC=local\n    state: absent\n\n- name: Delete group ignoring the protection flag\n  community.windows.win_domain_group:\n    name: Cow\n    state: absent\n    ignore_protection: yes\n\n- name: Create group with delete protection enabled and custom attributes\n  community.windows.win_domain_group:\n    name: Ansible Users\n    scope: domainlocal\n    category: security\n    attributes:\n      mail: helpdesk@ansible.com\n      wWWHomePage: www.ansible.com\n    ignore_protection: yes\n\n- name: Change the OU of a group using the SID and ignore the protection flag\n  community.windows.win_domain_group:\n    name: S-1-5-21-2171456218-3732823212-122182344-1189\n    scope: global\n    organizational_unit: OU=groups,DC=ansible,DC=local\n    ignore_protection: yes\n\n- name: Add managed_by user\n  community.windows.win_domain_group:\n    name: Group Name Here\n    managed_by: Domain Admins\n\n- name: Add group and specify the AD domain services to use for the create\n  community.windows.win_domain_group:\n    name: Test Group\n    domain_username: user@CORP.ANSIBLE.COM\n    domain_password: Password01!\n    domain_server: corp-DC12.corp.ansible.com\n    scope: domainlocal\n",
        "metadata": null,
        "return": {
            "attributes": {
                "description": "Custom attributes that were set by the module. This does not show all the custom attributes rather just the ones that were set by the module.",
                "returned": "group exists and attributes are set on the module invocation",
                "sample": {
                    "mail": "helpdesk@ansible.com",
                    "wWWHomePage": "www.ansible.com"
                },
                "type": "dict"
            },
            "canonical_name": {
                "description": "The canonical name of the group.",
                "returned": "group exists",
                "sample": "ansible.local/groups/Cow",
                "type": "str"
            },
            "category": {
                "description": "The Group type value of the group, i.e. Security or Distribution.",
                "returned": "group exists",
                "sample": "Security",
                "type": "str"
            },
            "created": {
                "description": "Whether a group was created",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "description": {
                "description": "The Description of the group.",
                "returned": "group exists",
                "sample": "Group Description",
                "type": "str"
            },
            "display_name": {
                "description": "The Display name of the group.",
                "returned": "group exists",
                "sample": "Users who connect through RDP",
                "type": "str"
            },
            "distinguished_name": {
                "description": "The full Distinguished Name of the group.",
                "returned": "group exists",
                "sample": "CN=Cow,OU=groups,DC=ansible,DC=local",
                "type": "str"
            },
            "group_scope": {
                "description": "The Group scope value of the group.",
                "returned": "group exists",
                "sample": "Universal",
                "type": "str"
            },
            "guid": {
                "description": "The guid of the group.",
                "returned": "group exists",
                "sample": "512a9adb-3fc0-4a26-9df0-e6ea1740cf45",
                "type": "str"
            },
            "managed_by": {
                "description": "The full Distinguished Name of the AD object that is set on the managedBy attribute.",
                "returned": "group exists",
                "sample": "CN=Domain Admins,CN=Users,DC=ansible,DC=local",
                "type": "str"
            },
            "name": {
                "description": "The name of the group.",
                "returned": "group exists",
                "sample": "Cow",
                "type": "str"
            },
            "protected_from_accidental_deletion": {
                "description": "Whether the group is protected from accidental deletion.",
                "returned": "group exists",
                "sample": true,
                "type": "bool"
            },
            "sid": {
                "description": "The Security ID of the group.",
                "returned": "group exists",
                "sample": "S-1-5-21-2171456218-3732823212-122182344-1189",
                "type": "str"
            }
        }
    }
}
