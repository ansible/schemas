{
    "hetzner.hcloud.hcloud_load_balancer_info": {
        "doc": {
            "author": [
                "Lukas Kaemmerling (@LKaemmerling)"
            ],
            "collection": "hetzner.hcloud",
            "description": [
                "Gather infos about your Hetzner Cloud Load Balancers.."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/hetzner/hcloud/plugins/modules/hcloud_load_balancer_info.py",
            "has_action": false,
            "module": "hcloud_load_balancer_info",
            "options": {
                "api_token": {
                    "description": [
                        "This is the API Token for the Hetzner Cloud."
                    ],
                    "required": true,
                    "type": "str"
                },
                "endpoint": {
                    "default": "https://api.hetzner.cloud/v1",
                    "description": [
                        "This is the API Endpoint for the Hetzner Cloud."
                    ],
                    "type": "str"
                },
                "id": {
                    "description": [
                        "The ID of the Load Balancers you want to get."
                    ],
                    "type": "int"
                },
                "label_selector": {
                    "description": [
                        "The label selector for the Load Balancers you want to get."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the Load Balancers you want to get."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "hcloud-python >= 1.0.0"
            ],
            "seealso": [
                {
                    "description": "Complete reference for the Hetzner Cloud API.",
                    "link": "https://docs.hetzner.cloud/",
                    "name": "Documentation for Hetzner Cloud API"
                }
            ],
            "short_description": "Gather infos about your Hetzner Cloud Load Balancers."
        },
        "examples": "\n- name: Gather hcloud load_balancer infos\n  hcloud_load_balancer_info:\n  register: output\n\n- name: Print the gathered infos\n  debug:\n    var: output\n",
        "metadata": null,
        "return": {
            "hcloud_load_balancer_info": {
                "contains": {
                    "delete_protection": {
                        "description": "True if Load Balancer is protected for deletion",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "disable_public_interface": {
                        "description": "True if Load Balancer public interface is disabled",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "id": {
                        "description": "Numeric identifier of the Load Balancer",
                        "returned": "always",
                        "sample": 1937415,
                        "type": "int"
                    },
                    "ipv4_address": {
                        "description": "Public IPv4 address of the Load Balancer",
                        "returned": "always",
                        "sample": "116.203.104.109",
                        "type": "str"
                    },
                    "ipv6_address": {
                        "description": "Public IPv6 address of the Load Balancer",
                        "returned": "always",
                        "sample": "2a01:4f8:1c1c:c140::1",
                        "type": "str"
                    },
                    "labels": {
                        "description": "User-defined labels (key-value pairs)",
                        "returned": "always",
                        "type": "dict"
                    },
                    "load_balancer_type": {
                        "description": "Name of the Load Balancer type of the Load Balancer",
                        "returned": "always",
                        "sample": "cx11",
                        "type": "str"
                    },
                    "location": {
                        "description": "Name of the location of the Load Balancer",
                        "returned": "always",
                        "sample": "fsn1",
                        "type": "str"
                    },
                    "name": {
                        "description": "Name of the Load Balancer",
                        "returned": "always",
                        "sample": "my-Load-Balancer",
                        "type": "str"
                    },
                    "services": {
                        "contains": {
                            "destination_port": {
                                "description": [
                                    "The port traffic is forwarded to, i.e. the port the targets are listening and accepting connections on."
                                ],
                                "returned": "always",
                                "sample": 80,
                                "type": "int"
                            },
                            "health_check": {
                                "contains": {
                                    "http": {
                                        "contains": {
                                            "domain": {
                                                "description": "Domain we will set within the HTTP HOST header",
                                                "returned": "always",
                                                "sample": "example.com",
                                                "type": "str"
                                            },
                                            "path": {
                                                "description": "Path we will try to access",
                                                "returned": "always",
                                                "sample": "/",
                                                "type": "str"
                                            },
                                            "response": {
                                                "description": "Response we expect, if response is not within the health check response the target is unhealthy",
                                                "returned": "always",
                                                "type": "str"
                                            },
                                            "status_codes": {
                                                "description": "List of HTTP status codes we expect to get when we perform the health check.",
                                                "elements": "str",
                                                "returned": "always",
                                                "sample": [
                                                    "2??",
                                                    "3??"
                                                ],
                                                "type": "list"
                                            },
                                            "tls": {
                                                "description": "Verify the TLS certificate, only available if health check protocol is https",
                                                "returned": "always",
                                                "sample": false,
                                                "type": "bool"
                                            }
                                        },
                                        "description": "Additional Configuration of health checks with protocol http/https",
                                        "returned": "always",
                                        "type": "complex"
                                    },
                                    "interval": {
                                        "description": "Interval of health checks, in seconds",
                                        "returned": "always",
                                        "sample": 15,
                                        "type": "int"
                                    },
                                    "port": {
                                        "description": "Port the health check will be performed on",
                                        "returned": "always",
                                        "sample": 80,
                                        "type": "int"
                                    },
                                    "protocol": {
                                        "description": "Protocol the health checks will be performed over",
                                        "returned": "always",
                                        "sample": "http",
                                        "type": "str"
                                    },
                                    "retries": {
                                        "description": "Number of retries until a target is marked as unhealthy",
                                        "returned": "always",
                                        "sample": 3,
                                        "type": "int"
                                    },
                                    "timeout": {
                                        "description": "Timeout of health checks, in seconds",
                                        "returned": "always",
                                        "sample": 10,
                                        "type": "int"
                                    }
                                },
                                "description": "Configuration for health checks",
                                "returned": "always",
                                "type": "complex"
                            },
                            "http": {
                                "contains": {
                                    "certificates": {
                                        "description": "List of Names or IDs of certificates",
                                        "elements": "str",
                                        "returned": "always",
                                        "type": "list"
                                    },
                                    "cookie_lifetime": {
                                        "description": "Lifetime of the cookie which will be set when you enable sticky sessions, in seconds",
                                        "returned": "always",
                                        "sample": 3600,
                                        "type": "int"
                                    },
                                    "cookie_name": {
                                        "description": "Name of the cookie which will be set when you enable sticky sessions",
                                        "returned": "always",
                                        "sample": "HCLBSTICKY",
                                        "type": "str"
                                    },
                                    "redirect_http": {
                                        "description": "Redirect Traffic from Port 80 to Port 443, only available if protocol is https",
                                        "returned": "always",
                                        "sample": false,
                                        "type": "bool"
                                    },
                                    "sticky_sessions": {
                                        "description": "Enable or disable sticky_sessions",
                                        "returned": "always",
                                        "sample": true,
                                        "type": "bool"
                                    }
                                },
                                "description": "Configuration for HTTP and HTTPS services",
                                "returned": "always",
                                "type": "complex"
                            },
                            "listen_port": {
                                "description": "The port the service listens on, i.e. the port users can connect to.",
                                "returned": "always",
                                "sample": 443,
                                "type": "int"
                            },
                            "protocol": {
                                "description": "Protocol of the service",
                                "returned": "always",
                                "sample": "http",
                                "type": "str"
                            },
                            "proxyprotocol": {
                                "description": [
                                    "Enable the PROXY protocol."
                                ],
                                "returned": "always",
                                "sample": false,
                                "type": "bool"
                            }
                        },
                        "description": "all services from this Load Balancer",
                        "returned": "Always",
                        "type": "complex"
                    },
                    "status": {
                        "description": "Status of the Load Balancer",
                        "returned": "always",
                        "sample": "running",
                        "type": "str"
                    },
                    "targets": {
                        "contains": {
                            "ip": {
                                "description": "IP of the dedicated server",
                                "returned": "if I(type) is ip",
                                "sample": "127.0.0.1",
                                "type": "str"
                            },
                            "label_selector": {
                                "description": "Label Selector",
                                "returned": "if I(type) is label_selector",
                                "sample": "application=backend",
                                "type": "str"
                            },
                            "load_balancer": {
                                "description": "Name of the Load Balancer",
                                "returned": "always",
                                "sample": "my-LoadBalancer",
                                "type": "str"
                            },
                            "server": {
                                "description": "Name of the Server",
                                "returned": "if I(type) is server",
                                "sample": "my-server",
                                "type": "str"
                            },
                            "type": {
                                "description": "Type of the Load Balancer Target",
                                "returned": "always",
                                "sample": "server",
                                "type": "str"
                            },
                            "use_private_ip": {
                                "description": [
                                    "Route the traffic over the private IP of the Load Balancer through a Hetzner Cloud Network.",
                                    "Load Balancer needs to be attached to a network. See M(hetzner.hcloud.hcloud.hcloud_load_balancer_network)"
                                ],
                                "returned": "always",
                                "sample": true,
                                "type": "bool"
                            }
                        },
                        "description": "The targets of the Load Balancer",
                        "returned": "always",
                        "type": "complex"
                    }
                },
                "description": "The load_balancer infos as list",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
