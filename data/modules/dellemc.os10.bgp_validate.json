{
    "dellemc.os10.bgp_validate": {
        "doc": {
            "author": "Senthil Kumar Ganesan (@skg-net)",
            "collection": "dellemc.os10",
            "description": [
                "Troubleshoot the bgp neighor state info using show ip bgp summary and show ip interface brief."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/dellemc/os10/plugins/modules/bgp_validate.py",
            "has_action": false,
            "module": "bgp_validate",
            "options": {
                "bgp_neighbors": {
                    "description": [
                        "planned neighbours input from group_var to compare actual"
                    ],
                    "required": true,
                    "type": "list"
                },
                "show_ip_bgp": {
                    "description": [
                        "show ip bgp summary output"
                    ],
                    "required": true,
                    "type": "list"
                },
                "show_ip_intf_brief": {
                    "description": [
                        "show ip interface brief output"
                    ],
                    "required": true,
                    "type": "list"
                }
            },
            "short_description": "Validate the bgp neighbor state,raise error if it is not in established state"
        },
        "examples": "\nCopy below YAML into a playbook (e.g. play.yml) and run as follows:\n\n#$ ansible-playbook -i inv play.yml\nname: Validate BGP configuration\nhosts: localhost\nconnection: local\ngather_facts: False\ntasks:\n  - name: \"Get Dell EMC OS10 Show ip bgp summary\"\n    os10_command:\n      commands:\n        - command: \"show ip bgp summary | display-xml\"\n        - command: \"show ip interface brief | display-xml\"\n      provider: \"{{ hostvars[item].cli }}\"\n    with_items: \"{{ groups['all'] }}\"\n    register: show_bgp\n  - set_fact:\n       output_bgp:  \"{{ output_bgp|default([])+ [{'host': item.invocation.module_args.provider.host, 'inv_name': item.item,\n                                                  'stdout_show_bgp': item.stdout.0, 'stdout_show_ip': item.stdout.1}] }}\"\n    loop: \"{{ show_bgp.results }}\"\n  - debug: var=output_bgp\n  - local_action: copy content={{ output_bgp }} dest=show\n  - name: call lib to convert bgp info from xml to dict format\n    base_xml_to_dict:\n       cli_responses: \"{{ item.stdout_show_bgp }}\"\n    with_items:\n      - \"{{ output_bgp }}\"\n    register: show_bgp_list\n  - name: call lib to convert ip interface info from xml to dict format\n    base_xml_to_dict:\n       cli_responses: \"{{ item.stdout_show_ip }}\"\n    with_items:\n      - \"{{ output_bgp }}\"\n    register: show_ip_intf_list\n  - name: call lib for bgp validation\n    bgp_validate:\n      show_ip_bgp: \"{{ show_bgp_list.results  }}\"\n      show_ip_intf_brief: \"{{ show_ip_intf_list.results  }}\"\n      bgp_neighbors: \"{{ intended_bgp_neighbors }}\"\n",
        "metadata": null,
        "return": null
    }
}
