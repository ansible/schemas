{
    "netapp.ontap.na_ontap_security_certificates": {
        "doc": {
            "author": "NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>",
            "collection": "netapp.ontap",
            "description": [
                "Install or delete security certificates on ONTAP.  (Create and sign will come in a second iteration)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netapp/ontap/plugins/modules/na_ontap_security_certificates.py",
            "has_action": false,
            "module": "na_ontap_security_certificates",
            "notes": [
                "The modules prefixed with na\\\\_ontap are built to support the ONTAP storage platform."
            ],
            "options": {
                "cert_filepath": {
                    "description": [
                        "path to SSL client cert file (.pem).",
                        "not supported with python 2.6."
                    ],
                    "type": "str",
                    "version_added": "20.6.0",
                    "version_added_collection": "netapp.ontap"
                },
                "common_name": {
                    "description": [
                        "Common name of the certificate.",
                        "Required for create and install.",
                        "If name is present, ignored for sign and delete.",
                        "If name is absent or ignored, required for sign and delete."
                    ],
                    "type": "str"
                },
                "expiry_time": {
                    "description": [
                        "Certificate expiration time. Specifying an expiration time is recommended when creating a certificate.",
                        "Can be provided when signing a certificate."
                    ],
                    "type": "str"
                },
                "feature_flags": {
                    "description": [
                        "Enable or disable a new feature.",
                        "This can be used to enable an experimental feature or disable a new feature that breaks backward compatibility.",
                        "Supported keys and values are subject to change without notice.  Unknown keys are ignored."
                    ],
                    "type": "dict",
                    "version_added": "20.5.0",
                    "version_added_collection": "netapp.ontap"
                },
                "hash_function": {
                    "description": [
                        "Hashing function. Can be provided when creating a self-signed certificate or when signing a certificate.",
                        "Allowed values for create and sign are sha256, sha224, sha384, sha512."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the ONTAP instance."
                    ],
                    "required": true,
                    "type": "str"
                },
                "http_port": {
                    "description": [
                        "Override the default port (80 or 443) with this port"
                    ],
                    "type": "int"
                },
                "https": {
                    "default": false,
                    "description": [
                        "Enable and disable https.",
                        "Ignored when using REST as only https is supported.",
                        "Ignored when using SSL certificate authentication as it requires SSL."
                    ],
                    "type": "bool"
                },
                "ignore_name_if_not_supported": {
                    "default": true,
                    "description": [
                        "ONTAP 9.6 and 9.7 REST API does not support I(name).",
                        "If set to true, no error is reported if I(name) is present, and I(name) is not used."
                    ],
                    "type": "bool",
                    "version_added": "20.8.0",
                    "version_added_collection": "netapp.ontap"
                },
                "intermediate_certificates": {
                    "description": [
                        "Chain of intermediate Certificates in PEM format.",
                        "Only valid when installing a certificate."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "key_filepath": {
                    "description": [
                        "path to SSL client key file."
                    ],
                    "type": "str",
                    "version_added": "20.6.0",
                    "version_added_collection": "netapp.ontap"
                },
                "key_size": {
                    "description": [
                        "Key size of the certificate in bits. Specifying a strong key size is recommended when creating a certificate.",
                        "Ignored for sign and delete."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "The unique name of the security certificate per SVM.",
                        "This parameter is not supported for ONTAP 9.6 or 9.7, as the REST API does not support it.",
                        "If present with ONTAP 9.6 or 9.7, it is ignored by default, see I(ignore_name_if_not_supported).",
                        "It is strongly recommended to use name for newer releases of ONTAP."
                    ],
                    "type": "str"
                },
                "ontapi": {
                    "description": [
                        "The ontap api version to use"
                    ],
                    "type": "int"
                },
                "password": {
                    "aliases": [
                        "pass"
                    ],
                    "description": [
                        "Password for the specified user."
                    ],
                    "type": "str"
                },
                "private_key": {
                    "description": [
                        "Private key certificate in PEM format.",
                        "Required when installing a CA-signed certificate.  Ignored otherwise."
                    ],
                    "type": "str"
                },
                "public_certificate": {
                    "description": [
                        "Public key certificate in PEM format.",
                        "Required when installing a certificate.  Ignored otherwise."
                    ],
                    "type": "str"
                },
                "signing_request": {
                    "description": [
                        "If present, the certificate identified by name and svm is used to sign the request.",
                        "A signed certificate is returned."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the specified security certificate should exist or not."
                    ],
                    "type": "str"
                },
                "svm": {
                    "aliases": [
                        "vserver"
                    ],
                    "description": [
                        "The name of the SVM (vserver).",
                        "If present, the certificate is installed in the SVM.",
                        "If absent, the certificate is installed in the cluster."
                    ],
                    "type": "str"
                },
                "type": {
                    "choices": [
                        "client",
                        "server",
                        "client_ca",
                        "server_ca",
                        "root_ca"
                    ],
                    "description": [
                        "Type of certificate",
                        "Required for create and install.",
                        "If name is present, ignored for sign and delete.",
                        "If name is absent or ignored, required for sign and delete."
                    ],
                    "type": "str"
                },
                "use_rest": {
                    "default": "auto",
                    "description": [
                        "REST API if supported by the target system for all the resources and attributes the module requires. Otherwise will revert to ZAPI.",
                        "always -- will always use the REST API",
                        "never -- will always use the ZAPI",
                        "auto -- will try to use the REST Api"
                    ],
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "user"
                    ],
                    "description": [
                        "This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.",
                        "For more information, please read the documentation U(https://mysupport.netapp.com/NOW/download/software/nmsdk/9.4/).",
                        "Two authentication methods are supported",
                        "1. basic authentication, using username and password,",
                        "2. SSL certificate authentication, using a ssl client cert file, and optionally a private key file.",
                        "To use a certificate, the certificate must have been installed in the ONTAP cluster, and cert authentication must have been enabled."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(False) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "Ansible 2.9",
                "Python3 netapp-lib (2018.11.13) or later. Install using 'pip install netapp-lib'",
                "netapp-lib 2020.3.12 is strongly recommended as it provides better error reporting for connection issues.",
                "A physical or virtual clustered Data ONTAP system. The modules support Data ONTAP 9.1 and onward.",
                "REST support requires ONTAP 9.6 or later.",
                "To enable http on the cluster you must run the following commands 'set -privilege advanced;' 'system services web modify -http-enabled true;'"
            ],
            "short_description": "NetApp ONTAP manage security certificates.",
            "version_added": "20.7.0",
            "version_added_collection": "netapp.ontap"
        },
        "examples": "\n- name: install certificate\n  na_ontap_security_certificates:\n    # <<: *cert_login\n    common_name: \"{{ ontap_cert_common_name }}\"\n    name: \"{{ ontap_cert_name }}\"\n    public_certificate: \"{{ ssl_certificate }}\"\n    type: client_ca\n    svm: \"{{ vserver }}\"\n\n- name: create certificate\n  na_ontap_security_certificates:\n    # <<: *cert_login\n    common_name: \"{{ ontap_cert_root_common_name }}\"\n    name: \"{{ ontap_cert_name }}\"\n    type: root_ca\n    svm: \"{{ vserver }}\"\n    expiry_time: P365DT     # one year\n\n- name: sign certificate using newly create certificate\n  tags: sign_request\n  na_ontap_security_certificates:\n    # <<: *login\n    name: \"{{ ontap_cert_name }}\"\n    svm: \"{{ vserver }}\"\n    signing_request: |\n      -----BEGIN CERTIFICATE REQUEST-----\n      MIIChDCCAWwCAQAwPzELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYDVQQH\n      DAlTdW5ueXZhbGUxDzANBgNVBAoMBk5ldEFwcDCCASIwDQYJKoZIhvcNAQEBBQAD\n      ggEPADCCAQoCggEBALgXCj6Si/I4xLdV7wjWYTbt8jY20fQOjk/4E7yBT1vFBflE\n      ks6YDc6dhC2G18cnoj9E3DiR8lIHPoAlFB/VmBNDev3GZkbFlrbV7qYmf8OEx2H2\n      tAefgSP0jLmCHCN1yyhJoCG6FsAiD3tf6yoyFF6qS9ureGL0tCJJ/osx64WzUz+Q\n      EN8lx7VSxriEFMSjreXZDhUFaCdIYKKRENuEWyYvdy5cbBmczhuM8EP6peOVv5Hm\n      BJzPUDkq7oTtEHmttpATq2Y92qzNzETO0bXN5X/93AWri8/yEXdX+HEw1C/omtsE\n      jGsCXrCrIJ+DgUdT/GHNdBWlXl/cWGtEgEQ4vrUCAwEAAaAAMA0GCSqGSIb3DQEB\n      CwUAA4IBAQBjZNoQgr/JDm1T8zyRhLkl3zw4a16qKNu/MS7prqZHLVQgrptHRegU\n      Hbz11XoHfVOdbyuvtzEe95QsDd6FYCZ4qzZRF3se4IjMeqwdQZ5WP0/GFiwM8Uln\n      /0TCWjt759XMeUX7+wgOg5NRjJ660eWMXzu/UJf+vZO0Q2FiPIr13JvvY3TjT+9J\n      UUtK4r9PaUuOPN2YL9IQqSD3goh8302Qr3nBXUgjeUGLkgfUM5S39apund2hyTX2\n      JCLQsKr88pwU9iDho2tHLv/2QgLwNZLPu8V+7IGu6G4vB28lN4Uy7xbhxFOKtyWu\n      fK4sEdTw3B/aDN0tB8MHFdPYycNZsEac\n      -----END CERTIFICATE REQUEST-----\n    expiry_time: P180DT\n\n- name: delete certificate\n  na_ontap_security_certificates:\n    # <<: *cert_login\n    state: absent\n    name: \"{{ ontap_cert_name }}\"\n    svm: \"{{ vserver }}\"\n\n# For ONTAP 9.6 or 9.7, use common_name and type, in addition to, or in lieu of name\n- name: install certificate\n  na_ontap_security_certificates:\n    # <<: *cert_login\n    common_name: \"{{ ontap_cert_common_name }}\"\n    public_certificate: \"{{ ssl_certificate }}\"\n    type: client_ca\n    svm: \"{{ vserver }}\"\n\n- name: create certificate\n  na_ontap_security_certificates:\n    # <<: *cert_login\n    common_name: \"{{ ontap_cert_root_common_name }}\"\n    type: root_ca\n    svm: \"{{ vserver }}\"\n    expiry_time: P365DT     # one year\n\n- name: sign certificate using newly create certificate\n  tags: sign_request\n  na_ontap_security_certificates:\n    # <<: *login\n    common_name: \"{{ ontap_cert_root_common_name }}\"\n    type: root_ca\n    svm: \"{{ vserver }}\"\n    signing_request: |\n      -----BEGIN CERTIFICATE REQUEST-----\n      MIIChDCCAWwCAQAwPzELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYDVQQH\n      DAlTdW5ueXZhbGUxDzANBgNVBAoMBk5ldEFwcDCCASIwDQYJKoZIhvcNAQEBBQAD\n      ggEPADCCAQoCggEBALgXCj6Si/I4xLdV7wjWYTbt8jY20fQOjk/4E7yBT1vFBflE\n      ks6YDc6dhC2G18cnoj9E3DiR8lIHPoAlFB/VmBNDev3GZkbFlrbV7qYmf8OEx2H2\n      tAefgSP0jLmCHCN1yyhJoCG6FsAiD3tf6yoyFF6qS9ureGL0tCJJ/osx64WzUz+Q\n      EN8lx7VSxriEFMSjreXZDhUFaCdIYKKRENuEWyYvdy5cbBmczhuM8EP6peOVv5Hm\n      BJzPUDkq7oTtEHmttpATq2Y92qzNzETO0bXN5X/93AWri8/yEXdX+HEw1C/omtsE\n      jGsCXrCrIJ+DgUdT/GHNdBWlXl/cWGtEgEQ4vrUCAwEAAaAAMA0GCSqGSIb3DQEB\n      CwUAA4IBAQBjZNoQgr/JDm1T8zyRhLkl3zw4a16qKNu/MS7prqZHLVQgrptHRegU\n      Hbz11XoHfVOdbyuvtzEe95QsDd6FYCZ4qzZRF3se4IjMeqwdQZ5WP0/GFiwM8Uln\n      /0TCWjt759XMeUX7+wgOg5NRjJ660eWMXzu/UJf+vZO0Q2FiPIr13JvvY3TjT+9J\n      UUtK4r9PaUuOPN2YL9IQqSD3goh8302Qr3nBXUgjeUGLkgfUM5S39apund2hyTX2\n      JCLQsKr88pwU9iDho2tHLv/2QgLwNZLPu8V+7IGu6G4vB28lN4Uy7xbhxFOKtyWu\n      fK4sEdTw3B/aDN0tB8MHFdPYycNZsEac\n      -----END CERTIFICATE REQUEST-----\n    expiry_time: P180DT\n\n- name: delete certificate\n  na_ontap_security_certificates:\n    # <<: *cert_login\n    state: absent\n    common_name: \"{{ ontap_cert_root_common_name }}\"\n    type: root_ca\n    name: \"{{ ontap_cert_name }}\"\n    svm: \"{{ vserver }}\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": {
            "ontap_info": {
                "description": "Returns public_certificate when signing, empty for create, install, and delete.",
                "returned": "always",
                "sample": "{ \"ontap_info\": { \"public_certificate\": \"-----BEGIN CERTIFICATE----- ........-----END CERTIFICATE----- \" } }",
                "type": "dict"
            }
        }
    }
}
