{
    "arista.eos.eos_lacp": {
        "doc": {
            "author": "Nathaniel Case (@Qalthos)",
            "collection": "arista.eos",
            "description": [
                "This module manages Global Link Aggregation Control Protocol (LACP) on Arista EOS devices."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/arista/eos/plugins/modules/eos_lacp.py",
            "has_action": true,
            "module": "eos_lacp",
            "notes": [
                "Tested against Arista EOS 4.20.10M",
                "This module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html)."
            ],
            "options": {
                "config": {
                    "description": "LACP global options.",
                    "suboptions": {
                        "system": {
                            "description": "LACP system options.",
                            "suboptions": {
                                "priority": {
                                    "description": [
                                        "The system priority to use in LACP negotiations.",
                                        "Lower value is higher priority.",
                                        "Refer to vendor documentation for valid values."
                                    ],
                                    "type": "int"
                                }
                            },
                            "type": "dict"
                        }
                    },
                    "type": "dict"
                },
                "running_config": {
                    "description": [
                        "This option is used only with state I(parsed).",
                        "The value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^lacp).",
                        "The state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "merged",
                        "replaced",
                        "deleted",
                        "parsed",
                        "rendered",
                        "gathered"
                    ],
                    "default": "merged",
                    "description": [
                        "The state of the configuration after module completion."
                    ],
                    "type": "str"
                }
            },
            "short_description": "LACP resource module",
            "version_added": "1.0.0",
            "version_added_collection": "arista.eos"
        },
        "examples": "\n# Using merged\n\n# Before state:\n# -------------\n# veos# show running-config | include lacp\n# lacp system-priority 10\n\n- name: Merge provided global LACP attributes with device attributes\n  arista.eos.eos_lacp:\n    config:\n      system:\n        priority: 20\n    state: merged\n\n# After state:\n# ------------\n# veos# show running-config | include lacp\n# lacp system-priority 20\n#\n\n\n# Using replaced\n\n# Before state:\n# -------------\n# veos# show running-config | include lacp\n# lacp system-priority 10\n\n- name: Replace device global LACP attributes with provided attributes\n  arista.eos.eos_lacp:\n    config:\n      system:\n        priority: 20\n    state: replaced\n\n# After state:\n# ------------\n# veos# show running-config | include lacp\n# lacp system-priority 20\n#\n\n\n# Using deleted\n\n# Before state:\n# -------------\n# veos# show running-config | include lacp\n# lacp system-priority 10\n\n- name: Delete global LACP attributes\n  arista.eos.eos_lacp:\n    state: deleted\n\n# After state:\n# ------------\n# veos# show running-config | include lacp\n#\n\n#Using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_lacp:\n    config:\n      system:\n        priority: 20\n    state: rendered\n\n# Output:\n# ------------\n# rendered:\n#   - \"lacp system-priority 20\"\n#\n\n# Using parsed:\n\n# parsed.cfg\n# lacp system-priority 20\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.eos_lacp:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n# parsed:\n#   system:\n#     priority: 20\n\n# Using gathered:\n# nathive config:\n# -------------\n# lacp system-priority 10\n\n- name: Gather lacp facts from the device\n  arista.eos.eos_lacp:\n    state: gathered\n\n# Output:\n# gathered:\n#   system:\n#     priority: 10\n#\n\n",
        "metadata": null,
        "return": {
            "after": {
                "description": "The configuration as structured data after module completion.",
                "returned": "when changed",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "dict"
            },
            "before": {
                "description": "The configuration as structured data prior to module invocation.",
                "returned": "always",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "dict"
            },
            "commands": {
                "description": "The set of commands pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "lacp system-priority 10"
                ],
                "type": "list"
            }
        }
    }
}
