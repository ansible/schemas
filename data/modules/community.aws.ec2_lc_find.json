{
    "community.aws.ec2_lc_find": {
        "doc": {
            "author": "Jose Armesto (@fiunchinho)",
            "collection": "community.aws",
            "description": [
                "Returns list of matching Launch Configurations for a given name, along with other useful information.",
                "Results can be sorted and sliced.",
                "It depends on boto.",
                "Based on the work by Tom Bamford U(https://github.com/tombamford)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_lc_find.py",
            "has_action": false,
            "module": "ec2_lc_find",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "limit": {
                    "description": [
                        "How many results to show.",
                        "Corresponds to Python slice notation like list[:limit]."
                    ],
                    "type": "int"
                },
                "name_regex": {
                    "description": [
                        "A Launch Configuration to match.",
                        "It'll be compiled as regex."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "sort_order": {
                    "choices": [
                        "ascending",
                        "descending"
                    ],
                    "default": "ascending",
                    "description": [
                        "Order in which to sort results."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Find AWS Autoscaling Launch Configurations",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Search for the Launch Configurations that start with \"app\"\n  community.aws.ec2_lc_find:\n    name_regex: app.*\n    sort_order: descending\n    limit: 2\n",
        "metadata": null,
        "return": {
            "arn": {
                "description": "Name of the AMI",
                "returned": "when Launch Configuration was found",
                "sample": "arn:aws:autoscaling:eu-west-1:12345:launchConfiguration:d82f050e-e315:launchConfigurationName/yourproject",
                "type": "str"
            },
            "associate_public_address": {
                "description": "Assign public address or not",
                "returned": "when Launch Configuration was found",
                "sample": true,
                "type": "bool"
            },
            "block_device_mappings": {
                "description": "Launch Configuration block device mappings property",
                "returned": "when Launch Configuration was found",
                "sample": [],
                "type": "list"
            },
            "classic_link_vpc_security_groups": {
                "description": "Launch Configuration classic link vpc security groups property",
                "returned": "when Launch Configuration was found",
                "sample": [],
                "type": "list"
            },
            "created_time": {
                "description": "When it was created",
                "returned": "when Launch Configuration was found",
                "sample": "2016-06-29T14:59:22.222000+00:00",
                "type": "str"
            },
            "ebs_optimized": {
                "description": "Launch Configuration EBS optimized property",
                "returned": "when Launch Configuration was found",
                "sample": false,
                "type": "bool"
            },
            "image_id": {
                "description": "AMI id",
                "returned": "when Launch Configuration was found",
                "sample": "ami-0d75df7e",
                "type": "str"
            },
            "instance_monitoring": {
                "description": "Launch Configuration instance monitoring property",
                "returned": "when Launch Configuration was found",
                "sample": {
                    "Enabled": false
                },
                "type": "str"
            },
            "instance_type": {
                "description": "Type of ec2 instance",
                "returned": "when Launch Configuration was found",
                "sample": "t2.small",
                "type": "str"
            },
            "kernel_id": {
                "description": "Launch Configuration kernel to use",
                "returned": "when Launch Configuration was found",
                "sample": "",
                "type": "str"
            },
            "keyname": {
                "description": "Launch Configuration ssh key",
                "returned": "when Launch Configuration was found",
                "sample": "mykey",
                "type": "str"
            },
            "name": {
                "description": "Name of the Launch Configuration",
                "returned": "when Launch Configuration was found",
                "sample": "myapp-v123",
                "type": "str"
            },
            "ram_disk_id": {
                "description": "Launch Configuration ram disk property",
                "returned": "when Launch Configuration was found",
                "sample": "",
                "type": "str"
            },
            "security_groups": {
                "description": "Launch Configuration security groups",
                "returned": "when Launch Configuration was found",
                "sample": [],
                "type": "list"
            },
            "user_data": {
                "description": "User data used to start instance",
                "returned": "when Launch Configuration was found",
                "sample": "ZXhwb3J0IENMT1VE",
                "type": "str"
            }
        }
    }
}
