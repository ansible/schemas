{
    "sensu.sensu_go.etcd_replicator": {
        "doc": {
            "author": [
                "Tadej Borovsak (@tadeboro)"
            ],
            "collection": "sensu.sensu_go",
            "description": [
                "Create, update or delete Sensu etcd replicator.",
                "For more information, refer to the Sensu documentation at U(https://docs.sensu.io/sensu-go/latest/operations/deploy-sensu/etcdreplicators/)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/sensu/sensu_go/plugins/modules/etcd_replicator.py",
            "has_action": false,
            "module": "etcd_replicator",
            "options": {
                "api_version": {
                    "description": [
                        "Sensu API version of the resource to replicate."
                    ],
                    "type": "str"
                },
                "auth": {
                    "description": [
                        "Authentication parameters. Can define each of them with ENV as well."
                    ],
                    "suboptions": {
                        "api_key": {
                            "description": [
                                "The API key that should be used when authenticating. If this is not set, the value of the SENSU_API_KEY environment variable will be checked.",
                                "This replaces I(auth.user) and I(auth.password) parameters.",
                                "For more information about the API key, refer to the official Sensu documentation at U(https://docs.sensu.io/sensu-go/latest/guides/use-apikey-feature/)."
                            ],
                            "type": "str",
                            "version_added": "1.3.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "ca_path": {
                            "description": [
                                "Path to the CA bundle that should be used to validate the backend certificate.",
                                "If this parameter is not set, module will use the CA bundle that python is using.",
                                "It is also possible to set this parameter via the I(SENSU_CA_PATH) environment variable."
                            ],
                            "type": "path",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "password": {
                            "default": "P@ssw0rd!",
                            "description": [
                                "The Sensu user's password. If this is not set the value of the SENSU_PASSWORD environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "default": "http://localhost:8080",
                            "description": [
                                "Location of the Sensu backend API. If this is not set the value of the SENSU_URL environment variable will be checked."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "default": "admin",
                            "description": [
                                "The username to use for connecting to the Sensu API. If this is not set the value of the SENSU_USER environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "verify": {
                            "default": true,
                            "description": [
                                "Flag that controls the certificate validation.",
                                "If you are using self-signed certificates, you can set this parameter to C(false).",
                                "ONLY USE THIS PARAMETER IN DEVELOPMENT SCENARIOS! In you use self-signed certificates in production, see the I(auth.ca_path) parameter.",
                                "It is also possible to set this parameter via the I(SENSU_VERIFY) environment variable."
                            ],
                            "type": "bool",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        }
                    },
                    "type": "dict"
                },
                "ca_cert": {
                    "description": [
                        "Path to an the PEM-format CA certificate to use for TLS client authentication.",
                        "Required if I(insecure) is C(false)."
                    ],
                    "type": "str"
                },
                "cert": {
                    "description": [
                        "Path to the PEM-format certificate to use for TLS client authentication. This certificate is required for secure client communication.",
                        "Required if I(insecure) is C(false)."
                    ],
                    "type": "str"
                },
                "insecure": {
                    "default": false,
                    "description": [
                        "Disable transport security.",
                        "Only set to C(true) in sandbox and experimental environments."
                    ],
                    "type": "bool"
                },
                "key": {
                    "description": [
                        "Path to the PEM-format key file associated with the cert to use for TLS client authentication. This key and its corresponding certificate are required for secure client communication.",
                        "Required if I(insecure) is C(false)."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The Sensu resource's name. This name (in combination with the namespace where applicable) uniquely identifies the resource that Ansible operates on.",
                        "If the resource with selected name already exists, Ansible module will update it to match the specification in the task.",
                        "Consult the I(name) metadata attribute specification in the upstream docs on U(https://docs.sensu.io/sensu-go/latest/reference/) for more details about valid names and other restrictions."
                    ],
                    "required": true,
                    "type": "str"
                },
                "namespace": {
                    "description": [
                        "Namespace to constrain replication to.",
                        "If you do not include namespace, all namespaces for a given resource are replicated."
                    ],
                    "type": "str"
                },
                "replication_interval": {
                    "description": [
                        "Interval at which the resource will be replicated. In seconds."
                    ],
                    "type": "int"
                },
                "resource": {
                    "description": [
                        "Name of the resource to replicate.",
                        "List of all resources is available at U(https://docs.sensu.io/sensu-go/latest/operations/control-access/rbac/#resources).",
                        "Required if I(state) is C(present)."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Target state of the Sensu object."
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "Destination cluster URLs.",
                        "Required if I(state) is C(present)."
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "requirements": [
                "python >= 2.7"
            ],
            "seealso": [
                {
                    "module": "sensu.sensu_go.etcd_replicator_info"
                }
            ],
            "short_description": "Manage Sensu Go etcd replicators",
            "version_added": "1.9.0",
            "version_added_collection": "sensu.sensu_go"
        },
        "examples": "\n- name: Create a minimal replicator\n  sensu.sensu_go.etcd_replicator:\n    name: cluster_role_replicator\n    ca_cert: /etc/sensu/certs/ca.pem\n    cert: /etc/sensu/certs/cert.pem\n    key: /etc/sensu/certs/key.pem\n    url: https://sensu.alpha.example.com:2379\n    resource: ClusterRole\n\n- name: Create an insecure minimal replicator\n  sensu.sensu_go.etcd_replicator:\n    name: role_replicator\n    insecure: true\n    url:\n      - https://sensu.beta.example.com:2379\n      - https://sensu.gamma.example.com:2379\n    resource: Role\n\n- name: Create a replicator with all parameters set\n  sensu.sensu_go.etcd_replicator:\n    name: role_binding_replicator\n    ca_cert: /etc/sensu/certs/ca.pem\n    cert: /etc/sensu/certs/cert.pem\n    key: /etc/sensu/certs/key.pem\n    insecure: false\n    url: https://127.0.0.1:2379\n    api_version: core/v2\n    resource: RoleBinding\n    namespace: default\n    replication_interval_seconds: 30\n\n- name: Delete a replicator\n  sensu.sensu_go.etcd_replicator:\n    name: my_replicator\n    state: absent\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "stableinterface"
            ],
            "supported_by": "certified"
        },
        "return": {
            "object": {
                "description": "Object representing Sensu etcd replicator.",
                "returned": "success",
                "sample": {
                    "api_version": "core/v2",
                    "ca_cert": "/etc/sensu/certs/ca.pem",
                    "cert": "/etc/sensu/certs/cert.pem",
                    "insecure": false,
                    "key": "/etc/sensu/certs/key.pem",
                    "metadata": {
                        "created_by": "admin",
                        "name": "cluster-role-replicator"
                    },
                    "namespace": "",
                    "replication_interval_seconds": 30,
                    "resource": "ClusterRole",
                    "url": "https://sensu.alpha.example.com:2379"
                },
                "type": "dict"
            }
        }
    }
}
