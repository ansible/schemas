{
    "community.network.ce_facts": {
        "doc": {
            "author": "wangdezhuang (@QijunPan)",
            "collection": "community.network",
            "description": [
                "Collects facts from CloudEngine devices running the CloudEngine operating system.  Fact collection is supported over Cli transport.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_facts.py",
            "has_action": false,
            "module": "ce_facts",
            "notes": [
                "Recommended connection is C(network_cli).",
                "This module also works with C(local) connections for legacy playbooks."
            ],
            "options": {
                "gather_subset": {
                    "default": "!config",
                    "description": [
                        "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, hardware, config, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(!) to specify that a specific subset should not be collected."
                    ],
                    "required": false
                }
            },
            "short_description": "Gets facts about HUAWEI CloudEngine switches."
        },
        "examples": "\n# Note: examples below use the following provider dict to handle\n#       transport and authentication to the node.\n\n- name: CloudEngine facts test\n  hosts: cloudengine\n  connection: local\n  gather_facts: no\n  vars:\n    cli:\n      host: \"{{ inventory_hostname }}\"\n      port: \"{{ ansible_ssh_port }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      transport: cli\n\n  tasks:\n\n  - name: \"Gather_subset is all\"\n    community.network.ce_facts:\n      gather_subset: all\n      provider: \"{{ cli }}\"\n\n  - name: \"Collect only the config facts\"\n    community.network.ce_facts:\n      gather_subset: config\n      provider: \"{{ cli }}\"\n\n  - name: \"Do not collect hardware facts\"\n    community.network.ce_facts:\n      gather_subset: \"!hardware\"\n      provider: \"{{ cli }}\"\n",
        "metadata": null,
        "return": {
            "BIOS Version": {
                "description": "The BIOS version running on the remote device",
                "returned": "always",
                "type": "str"
            },
            "Board Type": {
                "description": "The board type of the remote device",
                "returned": "always",
                "type": "str"
            },
            "CPLD1 Version": {
                "description": "The CPLD1 Version running the remote device",
                "returned": "always",
                "type": "str"
            },
            "CPLD2 Version": {
                "description": "The CPLD2 Version running the remote device",
                "returned": "always",
                "type": "str"
            },
            "FAN": {
                "description": "The fan state on the device",
                "returned": "when hardware is configured",
                "type": "str"
            },
            "MAB Version": {
                "description": "The MAB Version running the remote device",
                "returned": "always",
                "type": "str"
            },
            "PCB Version": {
                "description": "The PCB Version running the remote device",
                "returned": "always",
                "type": "str"
            },
            "PWR": {
                "description": "The power state on the device",
                "returned": "when hardware is configured",
                "type": "str"
            },
            "all_ipv4_addresses": {
                "description": "All IPv4 addresses configured on the device",
                "returned": "when interfaces is configured",
                "type": "list"
            },
            "config": {
                "description": "The current system configuration on the device",
                "returned": "when config is configured",
                "type": "str"
            },
            "filesystems": {
                "description": "The filesystems on the device",
                "returned": "when hardware is configured",
                "type": "str"
            },
            "flash_free": {
                "description": "The flash free space on the device",
                "returned": "when hardware is configured",
                "type": "str"
            },
            "flash_total": {
                "description": "The flash total space on the device",
                "returned": "when hardware is configured",
                "type": "str"
            },
            "gather_subset": {
                "description": "The list of fact subsets collected from the device",
                "returned": "always",
                "type": "list"
            },
            "hostname": {
                "description": "The hostname of the remote device",
                "returned": "always",
                "type": "str"
            },
            "interfaces": {
                "description": "A hash of all interfaces running on the system",
                "returned": "when interfaces is configured",
                "type": "dict"
            },
            "memory_free": {
                "description": "The memory free space on the remote device",
                "returned": "when hardware is configured",
                "type": "str"
            },
            "memory_total": {
                "description": "The memory total space on the remote device",
                "returned": "when hardware is configured",
                "type": "str"
            },
            "neighbors": {
                "description": "The list of LLDP neighbors from the remote device",
                "returned": "when interfaces is configured",
                "type": "dict"
            }
        }
    }
}
