{
    "netapp.aws.aws_netapp_cvs_filesystems": {
        "doc": {
            "author": "NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>",
            "collection": "netapp.aws",
            "description": [
                "Create, Update, Delete fileSystem on AWS Cloud Volumes Service."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netapp/aws/plugins/modules/aws_netapp_cvs_filesystems.py",
            "has_action": false,
            "module": "aws_netapp_cvs_filesystems",
            "notes": [
                "The modules prefixed with aws\\_cvs\\_netapp are built to Manage AWS Cloud Volumes Service ."
            ],
            "options": {
                "api_key": {
                    "description": [
                        "The access key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_url": {
                    "description": [
                        "The url to the AWSCVS Web Services Proxy or Embedded Web Services API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "creationToken": {
                    "description": [
                        "Name of the filesystem"
                    ],
                    "required": true,
                    "type": "str"
                },
                "exportPolicy": {
                    "description": [
                        "The policy rules to export the filesystem"
                    ],
                    "suboptions": {
                        "rules": {
                            "description": [
                                "Set of rules to export the filesystem",
                                "Requires allowedClients, access and protocol"
                            ],
                            "elements": "dict",
                            "suboptions": {
                                "allowedClients": {
                                    "description": [
                                        "Comma separated list of ip address blocks of the clients to access the fileSystem",
                                        "Each address block contains the starting IP address and size for the block"
                                    ],
                                    "type": "str"
                                },
                                "cifs": {
                                    "description": [
                                        "Enable or disable cifs filesystem"
                                    ],
                                    "type": "bool"
                                },
                                "nfsv3": {
                                    "description": [
                                        "Enable or disable nfsv3 fileSystem"
                                    ],
                                    "type": "bool"
                                },
                                "nfsv4": {
                                    "description": [
                                        "Enable or disable nfsv4 filesystem"
                                    ],
                                    "type": "bool"
                                },
                                "ruleIndex": {
                                    "description": [
                                        "Index number of the rule"
                                    ],
                                    "type": "int"
                                },
                                "unixReadOnly": {
                                    "description": [
                                        "Should fileSystem have read only permission or not"
                                    ],
                                    "type": "bool"
                                },
                                "unixReadWrite": {
                                    "description": [
                                        "Should fileSystem have read write permission or not"
                                    ],
                                    "type": "bool"
                                }
                            },
                            "type": "list"
                        }
                    },
                    "type": "dict"
                },
                "quotaInBytes": {
                    "description": [
                        "Size of the filesystem",
                        "Required for create"
                    ],
                    "type": "int"
                },
                "region": {
                    "description": [
                        "The region to which the filesystem belongs to."
                    ],
                    "required": true,
                    "type": "str"
                },
                "secret_key": {
                    "description": [
                        "The secret_key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "serviceLevel": {
                    "choices": [
                        "standard",
                        "premium",
                        "extreme"
                    ],
                    "description": [
                        "Service Level of a filesystem."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Whether the specified fileSystem should exist or not."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Should https certificates be validated?"
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "short_description": "NetApp AWS Cloud Volumes Service Manage FileSystem.",
            "version_added": "2.9.0",
            "version_added_collection": "netapp.aws"
        },
        "examples": "\n- name: Create FileSystem\n  aws_netapp_cvs_filesystems:\n    state: present\n    region: us-east-1\n    creationToken: newVolume-1\n    exportPolicy:\n        rules:\n          - allowedClients: 172.16.0.4\n            cifs: False\n            nfsv3: True\n            nfsv4: True\n            ruleIndex: 1\n            unixReadOnly: True\n            unixReadWrite: False\n    quotaInBytes: 100000000000\n    api_url : cds-aws-bundles.netapp.com\n    api_key: Q1ZRR0p0VGNuZ3VhMnJBYk5zczM1RkZ3Z0lCbUE3\n    secret_key : U1FwdHdKSGRQQUhIdkIwMktMU1ZCV2x6WUowZWRD\n\n- name: Update FileSystem\n  aws_netapp_cvs_filesystems:\n     state: present\n     region: us-east-1\n     creationToken: newVolume-1\n     exportPolicy:\n         rules:\n           - allowedClients: 172.16.0.4\n             cifs: False\n             nfsv3: True\n             nfsv4: True\n             ruleIndex: 1\n             unixReadOnly: True\n             unixReadWrite: False\n     quotaInBytes: 200000000000\n     api_url : cds-aws-bundles.netapp.com\n     api_key: Q1ZRR0p0VGNuZ3VhMnJBYk5zczM1RkZ3Z0lCbUE3\n     secret_key : U1FwdHdKSGRQQUhIdkIwMktMU1ZCV2x6WUowZWRD\n\n- name: Delete FileSystem\n  aws_netapp_cvs_filesystems:\n     state: present\n     region: us-east-1\n     creationToken: newVolume-1\n     quotaInBytes: 100000000000\n     api_url : cds-aws-bundles.netapp.com\n     api_key: Q1ZRR0p0VGNuZ3VhMnJBYk5zczM1RkZ3Z0lCbUE3\n     secret_key : U1FwdHdKSGRQQUhIdkIwMktMU1ZCV2x6WUowZWRD\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
