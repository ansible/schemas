{
    "community.aws.ec2_eip": {
        "doc": {
            "author": "Rick Mendes (@rickmendes) <rmendes@illumina.com>",
            "collection": "community.aws",
            "description": [
                "This module can allocate or release an EIP.",
                "This module can associate/disassociate an EIP with instances or network interfaces."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_eip.py",
            "has_action": false,
            "module": "ec2_eip",
            "notes": [
                "There may be a delay between the time the EIP is assigned and when the cloud instance is reachable via the new address. Use wait_for and pause to delay further playbook execution until the instance is reachable, if necessary.",
                "This module returns multiple changed statuses on disassociation or release. It returns an overall status based on any changes occurring. It also returns individual changed statuses for disassociation and release.",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "allow_reassociation": {
                    "default": false,
                    "description": [
                        "Specify this option to allow an Elastic IP address that is already associated with another network interface or instance to be re-associated with the specified instance or interface."
                    ],
                    "type": "bool"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "device_id": {
                    "aliases": [
                        "instance_id"
                    ],
                    "description": [
                        "The id of the device for the EIP. Can be an EC2 Instance id or Elastic Network Interface (ENI) id.",
                        "The I(instance_id) alias has been deprecated and will be removed after 2022-12-01."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "in_vpc": {
                    "default": false,
                    "description": [
                        "Allocate an EIP inside a VPC or not.",
                        "Required if specifying an ENI with I(device_id)."
                    ],
                    "type": "bool"
                },
                "private_ip_address": {
                    "description": [
                        "The primary or secondary private IP address to associate with the Elastic IP address."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "public_ip": {
                    "aliases": [
                        "ip"
                    ],
                    "description": [
                        "The IP address of a previously allocated EIP.",
                        "When I(public_ip=present) and device is specified, the EIP is associated with the device.",
                        "When I(public_ip=absent) and device is specified, the EIP is disassociated from the device."
                    ],
                    "type": "str"
                },
                "public_ipv4_pool": {
                    "description": [
                        "Allocates the new Elastic IP from the provided public IPv4 pool (BYOIP) only applies to newly allocated Elastic IPs, isn't validated when I(reuse_existing_ip_allowed=true)."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "release_on_disassociation": {
                    "default": false,
                    "description": [
                        "Whether or not to automatically release the EIP when it is disassociated."
                    ],
                    "type": "bool"
                },
                "reuse_existing_ip_allowed": {
                    "default": false,
                    "description": [
                        "Reuse an EIP that is not associated to a device (when available), instead of allocating a new one."
                    ],
                    "type": "bool"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "When C(state=present), allocate an EIP or associate an existing EIP with a device.",
                        "When C(state=absent), disassociate the EIP from the device and optionally release it."
                    ],
                    "type": "str"
                },
                "tag_name": {
                    "description": [
                        "When I(reuse_existing_ip_allowed=true), supplement with this option to only reuse an Elastic IP if it is tagged with I(tag_name)."
                    ],
                    "type": "str"
                },
                "tag_value": {
                    "description": [
                        "Supplements I(tag_name) but also checks that the value of the tag provided in I(tag_name) matches I(tag_value)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "description": [
                        "The I(wait_timeout) option does nothing and will be removed after 2022-06-01"
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "python >= 2.6",
                "boto"
            ],
            "short_description": "manages EC2 elastic IP (EIP) addresses.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: associate an elastic IP with an instance\n  community.aws.ec2_eip:\n    device_id: i-1212f003\n    ip: 93.184.216.119\n\n- name: associate an elastic IP with a device\n  community.aws.ec2_eip:\n    device_id: eni-c8ad70f3\n    ip: 93.184.216.119\n\n- name: associate an elastic IP with a device and allow reassociation\n  community.aws.ec2_eip:\n    device_id: eni-c8ad70f3\n    public_ip: 93.184.216.119\n    allow_reassociation: true\n\n- name: disassociate an elastic IP from an instance\n  community.aws.ec2_eip:\n    device_id: i-1212f003\n    ip: 93.184.216.119\n    state: absent\n\n- name: disassociate an elastic IP with a device\n  community.aws.ec2_eip:\n    device_id: eni-c8ad70f3\n    ip: 93.184.216.119\n    state: absent\n\n- name: allocate a new elastic IP and associate it with an instance\n  community.aws.ec2_eip:\n    device_id: i-1212f003\n\n- name: allocate a new elastic IP without associating it to anything\n  community.aws.ec2_eip:\n    state: present\n  register: eip\n\n- name: output the IP\n  ansible.builtin.debug:\n    msg: \"Allocated IP is {{ eip.public_ip }}\"\n\n- name: provision new instances with ec2\n  amazon.aws.ec2:\n    keypair: mykey\n    instance_type: c1.medium\n    image: ami-40603AD1\n    wait: true\n    group: webserver\n    count: 3\n  register: ec2\n\n- name: associate new elastic IPs with each of the instances\n  community.aws.ec2_eip:\n    device_id: \"{{ item }}\"\n  loop: \"{{ ec2.instance_ids }}\"\n\n- name: allocate a new elastic IP inside a VPC in us-west-2\n  community.aws.ec2_eip:\n    region: us-west-2\n    in_vpc: true\n  register: eip\n\n- name: output the IP\n  ansible.builtin.debug:\n    msg: \"Allocated IP inside a VPC is {{ eip.public_ip }}\"\n\n- name: allocate eip - reuse unallocated ips (if found) with FREE tag\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: FREE\n\n- name: allocate eip - reuse unallocated ips if tag reserved is nope\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: reserved\n    tag_value: nope\n\n- name: allocate new eip - from servers given ipv4 pool\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    public_ipv4_pool: ipv4pool-ec2-0588c9b75a25d1a02\n\n- name: allocate eip - from a given pool (if no free addresses where dev-servers tag is dynamic)\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: dev-servers\n    public_ipv4_pool: ipv4pool-ec2-0588c9b75a25d1a02\n\n- name: allocate eip from pool - check if tag reserved_for exists and value is our hostname\n  community.aws.ec2_eip:\n    region: us-east-1\n    in_vpc: true\n    reuse_existing_ip_allowed: true\n    tag_name: reserved_for\n    tag_value: \"{{ inventory_hostname }}\"\n    public_ipv4_pool: ipv4pool-ec2-0588c9b75a25d1a02\n",
        "metadata": null,
        "return": {
            "allocation_id": {
                "description": "allocation_id of the elastic ip",
                "returned": "on success",
                "sample": "eipalloc-51aa3a6c",
                "type": "str"
            },
            "public_ip": {
                "description": "an elastic ip address",
                "returned": "on success",
                "sample": "52.88.159.209",
                "type": "str"
            }
        }
    }
}
