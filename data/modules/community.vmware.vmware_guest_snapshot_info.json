{
    "community.vmware.vmware_guest_snapshot_info": {
        "doc": {
            "author": [
                "Abhijeet Kasurde (@Akasurde)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to gather information about virtual machine's snapshots.",
                "This module was called C(vmware_guest_snapshot_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_guest_snapshot_info.py",
            "has_action": false,
            "module": "vmware_guest_snapshot_info",
            "notes": [
                "Tested on vSphere 6.0 and 6.5"
            ],
            "options": {
                "datacenter": {
                    "description": [
                        "Name of the datacenter."
                    ],
                    "required": true,
                    "type": "str"
                },
                "folder": {
                    "description": [
                        "Destination folder, absolute or relative path to find an existing guest.",
                        "This is required only, if multiple virtual machines with same name are found on given vCenter.",
                        "The folder should include the datacenter. ESX's datacenter is ha-datacenter",
                        "Examples:",
                        "   folder: /ha-datacenter/vm",
                        "   folder: ha-datacenter/vm",
                        "   folder: /datacenter1/vm",
                        "   folder: datacenter1/vm",
                        "   folder: /datacenter1/vm/folder1",
                        "   folder: datacenter1/vm/folder1",
                        "   folder: /folder1/datacenter1/vm",
                        "   folder: folder1/datacenter1/vm",
                        "   folder: /folder1/datacenter1/vm/folder2"
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "moid": {
                    "description": [
                        "Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.",
                        "This is required if C(name) or C(uuid) is not supplied."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the VM to work with.",
                        "This is required if C(uuid) or C(moid) is not supplied."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "use_instance_uuid": {
                    "default": false,
                    "description": [
                        "Whether to use the VMware instance UUID rather than the BIOS UUID."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "uuid": {
                    "description": [
                        "UUID of the instance to manage if known, this is VMware's BIOS UUID by default.",
                        "This is required if C(name) or C(moid) parameter is not supplied.",
                        "The C(folder) is ignored, if C(uuid) is provided."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Gather info about virtual machine's snapshots in vCenter"
        },
        "examples": "\n- name: Gather snapshot information about the virtual machine in the given vCenter\n  community.vmware.vmware_guest_snapshot_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    datacenter: \"{{ datacenter_name }}\"\n    name: \"{{ guest_name }}\"\n  delegate_to: localhost\n  register: snapshot_info\n\n- name: Gather snapshot information about the virtual machine using MoID\n  community.vmware.vmware_guest_snapshot_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    datacenter: \"{{ datacenter_name }}\"\n    moid: vm-42\n  delegate_to: localhost\n  register: snapshot_info\n",
        "metadata": null,
        "return": {
            "guest_snapshots": {
                "description": "metadata about the snapshot information",
                "returned": "always",
                "sample": {
                    "current_snapshot": {
                        "creation_time": "2018-02-10T14:48:31.999459+00:00",
                        "description": "",
                        "id": 28,
                        "name": "snap_0003",
                        "state": "poweredOff"
                    },
                    "snapshots": [
                        {
                            "creation_time": "2018-02-10T14:48:31.999459+00:00",
                            "description": "",
                            "id": 28,
                            "name": "snap_0003",
                            "state": "poweredOff"
                        }
                    ]
                },
                "type": "dict"
            }
        }
    }
}
