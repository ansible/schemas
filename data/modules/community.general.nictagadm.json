{
    "community.general.nictagadm": {
        "doc": {
            "author": [
                "Bruce Smith (@SmithX10)"
            ],
            "collection": "community.general",
            "description": [
                "Create or delete nic tags on SmartOS systems."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/nictagadm.py",
            "has_action": false,
            "module": "nictagadm",
            "options": {
                "etherstub": {
                    "default": false,
                    "description": [
                        "Specifies that the nic tag will be attached to a created I(etherstub).",
                        "Parameter I(etherstub) is mutually exclusive with both I(mtu), and I(mac)."
                    ],
                    "type": "bool"
                },
                "force": {
                    "default": false,
                    "description": [
                        "When I(state) is absent set this switch will use the C(-f) parameter and delete the nic tag regardless of existing VMs."
                    ],
                    "type": "bool"
                },
                "mac": {
                    "description": [
                        "Specifies the I(mac) address to attach the nic tag to when not creating an I(etherstub).",
                        "Parameters I(mac) and I(etherstub) are mutually exclusive."
                    ],
                    "type": "str"
                },
                "mtu": {
                    "description": [
                        "Specifies the size of the I(mtu) of the desired nic tag.",
                        "Parameters I(mtu) and I(etherstub) are mutually exclusive."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "Name of the nic tag."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Create or delete a SmartOS nic tag."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage nic tags on SmartOS systems"
        },
        "examples": "\n- name: Create 'storage0' on '00:1b:21:a3:f5:4d'\n  community.general.nictagadm:\n    name: storage0\n    mac: 00:1b:21:a3:f5:4d\n    mtu: 9000\n    state: present\n\n- name: Remove 'storage0' nic tag\n  community.general.nictagadm:\n    name: storage0\n    state: absent\n",
        "metadata": null,
        "return": {
            "etherstub": {
                "description": "specifies if the nic tag will create and attach to an etherstub.",
                "returned": "always",
                "sample": false,
                "type": "bool"
            },
            "force": {
                "description": "Shows if -f was used during the deletion of a nic tag",
                "returned": "always",
                "sample": false,
                "type": "bool"
            },
            "mac": {
                "description": "MAC Address that the nic tag was attached to.",
                "returned": "always",
                "sample": "00:1b:21:a3:f5:4d",
                "type": "str"
            },
            "mtu": {
                "description": "specifies which MTU size was passed during the nictagadm add command. mtu and etherstub are mutually exclusive.",
                "returned": "always",
                "sample": 1500,
                "type": "int"
            },
            "name": {
                "description": "nic tag name",
                "returned": "always",
                "sample": "storage0",
                "type": "str"
            },
            "state": {
                "description": "state of the target",
                "returned": "always",
                "sample": "present",
                "type": "str"
            }
        }
    }
}
