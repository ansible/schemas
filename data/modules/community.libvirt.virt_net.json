{
    "community.libvirt.virt_net": {
        "doc": {
            "author": "Maciej Delmanowski (@drybjed)",
            "collection": "community.libvirt",
            "description": [
                "Manage I(libvirt) networks."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/libvirt/plugins/modules/virt_net.py",
            "has_action": false,
            "module": "virt_net",
            "options": {
                "autostart": {
                    "description": [
                        "Specify if a given network should be started automatically on system boot."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "command": {
                    "choices": [
                        "define",
                        "create",
                        "start",
                        "stop",
                        "destroy",
                        "undefine",
                        "get_xml",
                        "list_nets",
                        "facts",
                        "info",
                        "status",
                        "modify"
                    ],
                    "description": [
                        "in addition to state management, various non-idempotent commands are available. See examples. Modify was added in version 2.1"
                    ],
                    "required": false,
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "network"
                    ],
                    "description": [
                        "name of the network being managed. Note that network must be previously defined with xml."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "active",
                        "inactive",
                        "present",
                        "absent"
                    ],
                    "description": [
                        "specify which state you want a network to be in. If 'active', network will be started. If 'present', ensure that network is present but do not change its state; if it's missing, you need to specify xml argument. If 'inactive', network will be stopped. If 'undefined' or 'absent', network will be removed from I(libvirt) configuration."
                    ],
                    "required": false,
                    "type": "str"
                },
                "uri": {
                    "default": "qemu:///system",
                    "description": [
                        "libvirt connection uri."
                    ],
                    "required": false,
                    "type": "str"
                },
                "xml": {
                    "description": [
                        "XML document used with the define command."
                    ],
                    "required": false,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "python-libvirt",
                "python-lxml"
            ],
            "short_description": "Manage libvirt network configuration"
        },
        "examples": "\n# Define a new network\n- community.libvirt.virt_net:\n    command: define\n    name: br_nat\n    xml: '{{ lookup(\"template\", \"network/bridge.xml.j2\") }}'\n\n# Start a network\n- community.libvirt.virt_net:\n    command: create\n    name: br_nat\n\n# List available networks\n- community.libvirt.virt_net:\n    command: list_nets\n\n# Get XML data of a specified network\n- community.libvirt.virt_net:\n    command: get_xml\n    name: br_nat\n\n# Stop a network\n- community.libvirt.virt_net:\n    command: destroy\n    name: br_nat\n\n# Undefine a network\n- community.libvirt.virt_net:\n    command: undefine\n    name: br_nat\n\n# Gather facts about networks\n# Facts will be available as 'ansible_libvirt_networks'\n- community.libvirt.virt_net:\n    command: facts\n\n# Gather information about network managed by 'libvirt' remotely using uri\n- community.libvirt.virt_net:\n    command: info\n    uri: '{{ item }}'\n  with_items: '{{ libvirt_uris }}'\n  register: networks\n\n# Ensure that a network is active (needs to be defined and built first)\n- community.libvirt.virt_net:\n    state: active\n    name: br_nat\n\n# Ensure that a network is inactive\n- community.libvirt.virt_net:\n    state: inactive\n    name: br_nat\n\n# Ensure that a given network will be started at boot\n- community.libvirt.virt_net:\n    autostart: yes\n    name: br_nat\n\n# Disable autostart for a given network\n- community.libvirt.virt_net:\n    autostart: no\n    name: br_nat\n\n# Add a new host in the dhcp pool\n- community.libvirt.virt_net:\n    name: br_nat\n    command: modify\n    xml: \"<host mac='FC:C2:33:00:6c:3c' name='my_vm' ip='192.168.122.30'/>\"\n",
        "metadata": null,
        "return": null
    }
}
