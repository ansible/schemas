{
    "community.vmware.vmware_drs_group": {
        "doc": {
            "author": [
                "Karsten Kaj Jakobsen (@karstenjakobsen)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to create VM/Host groups in a given cluster. Creates a vm group if C(vms) is set. Creates a host group if C(hosts) is set."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_drs_group.py",
            "has_action": false,
            "module": "vmware_drs_group",
            "notes": [
                "Tested on vSphere 6.5 and 6.7"
            ],
            "options": {
                "cluster_name": {
                    "description": [
                        "Cluster to create vm/host group."
                    ],
                    "required": true,
                    "type": "str"
                },
                "datacenter": {
                    "aliases": [
                        "datacenter_name"
                    ],
                    "description": [
                        "Datacenter to search for given cluster. If not set, we use first cluster we encounter with C(cluster_name)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "group_name": {
                    "description": [
                        "The name of the group to create or remove."
                    ],
                    "required": true,
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "hosts": {
                    "description": [
                        "List of hosts to create in group.",
                        "Required only if C(vms) is not set."
                    ],
                    "required": false,
                    "type": "list"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "If set to C(present) and the group doesn't exists then the group will be created.",
                        "If set to C(absent) and the group exists then the group will be deleted."
                    ],
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                },
                "vms": {
                    "description": [
                        "List of vms to create in group.",
                        "Required only if C(hosts) is not set."
                    ],
                    "required": false,
                    "type": "list"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Creates vm/host group in a given cluster."
        },
        "examples": "\n---\n- name: \"Create DRS VM group\"\n  delegate_to: localhost\n  community.vmware.vmware_drs_group:\n    hostname: \"{{ vcenter_hostname }}\"\n    password: \"{{ vcenter_password }}\"\n    username: \"{{ vcenter_username }}\"\n    cluster_name: DC0_C0\n    datacenter_name: DC0\n    group_name: TEST_VM_01\n    vms:\n      - DC0_C0_RP0_VM0\n      - DC0_C0_RP0_VM1\n    state: present\n\n- name: \"Create DRS Host group\"\n  delegate_to: localhost\n  community.vmware.vmware_drs_group:\n    hostname: \"{{ vcenter_hostname }}\"\n    password: \"{{ vcenter_password }}\"\n    username: \"{{ vcenter_username }}\"\n    cluster_name: DC0_C0\n    datacenter_name: DC0\n    group_name: TEST_HOST_01\n    hosts:\n      - DC0_C0_H0\n      - DC0_C0_H1\n      - DC0_C0_H2\n    state: present\n\n- name: \"Delete DRS Host group\"\n  delegate_to: localhost\n  community.vmware.vmware_drs_group:\n    hostname: \"{{ vcenter_hostname }}\"\n    password: \"{{ vcenter_password }}\"\n    username: \"{{ vcenter_username }}\"\n    cluster_name: DC0_C0\n    datacenter_name: DC0\n    group_name: TEST_HOST_01\n    state: absent\n\n",
        "metadata": null,
        "return": {
            "drs_group_facts": {
                "description": "Metadata about DRS group created",
                "returned": "always",
                "sample": {
                    "drs_group_facts": {
                        "changed": true,
                        "failed": false,
                        "msg": "Created host group TEST_HOST_01 successfully",
                        "result": {
                            "DC0_C0": [
                                {
                                    "group_name": "TEST_HOST_01",
                                    "hosts": [
                                        "DC0_C0_H0",
                                        "DC0_C0_H1",
                                        "DC0_C0_H2"
                                    ],
                                    "type": "host"
                                }
                            ]
                        }
                    }
                },
                "type": "dict"
            }
        }
    }
}
