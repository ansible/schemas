{
    "community.general.zfs_delegate_admin": {
        "doc": {
            "author": [
                "Nate Coraor (@natefoo)"
            ],
            "collection": "community.general",
            "description": [
                "Manages ZFS file system delegated administration permissions, which allow unprivileged users to perform ZFS operations normally restricted to the superuser.",
                "See the C(zfs allow) section of C(zfs(1M)) for detailed explanations of options.",
                "This module attempts to adhere to the behavior of the command line tool as much as possible."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/zfs_delegate_admin.py",
            "has_action": false,
            "module": "zfs_delegate_admin",
            "options": {
                "descendents": {
                    "description": [
                        "Apply permissions to C(name)'s descendents (C(zfs allow -d))."
                    ],
                    "type": "bool"
                },
                "everyone": {
                    "default": false,
                    "description": [
                        "Apply permissions to everyone."
                    ],
                    "type": "bool"
                },
                "groups": {
                    "description": [
                        "List of groups to whom permission(s) should be granted."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "local": {
                    "description": [
                        "Apply permissions to C(name) locally (C(zfs allow -l))."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "File system or volume name e.g. C(rpool/myfs)."
                    ],
                    "required": true,
                    "type": "str"
                },
                "permissions": {
                    "choices": [
                        "allow",
                        "clone",
                        "create",
                        "destroy",
                        "diff",
                        "hold",
                        "mount",
                        "promote",
                        "readonly",
                        "receive",
                        "release",
                        "rename",
                        "rollback",
                        "send",
                        "share",
                        "snapshot",
                        "unallow"
                    ],
                    "description": [
                        "The list of permission(s) to delegate (required if C(state) is C(present))."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "recursive": {
                    "default": false,
                    "description": [
                        "Unallow permissions recursively (ignored when C(state) is C(present))."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to allow (C(present)), or unallow (C(absent)) a permission.",
                        "When set to C(present), at least one \"entity\" param of I(users), I(groups), or I(everyone) are required.",
                        "When set to C(absent), removes permissions from the specified entities, or removes all permissions if no entity params are specified."
                    ],
                    "type": "str"
                },
                "users": {
                    "description": [
                        "List of users to whom permission(s) should be granted."
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "requirements": [
                "A ZFS/OpenZFS implementation that supports delegation with `zfs allow`, including: Solaris >= 10, illumos (all versions), FreeBSD >= 8.0R, ZFS on Linux >= 0.7.0."
            ],
            "short_description": "Manage ZFS delegated administration (user admin privileges)"
        },
        "examples": "\n- name: Grant `zfs allow` and `unallow` permission to the `adm` user with the default local+descendents scope\n  community.general.zfs_delegate_admin:\n    name: rpool/myfs\n    users: adm\n    permissions: allow,unallow\n\n- name: Grant `zfs send` to everyone, plus the group `backup`\n  community.general.zfs_delegate_admin:\n    name: rpool/myvol\n    groups: backup\n    everyone: yes\n    permissions: send\n\n- name: Grant `zfs send,receive` to users `foo` and `bar` with local scope only\n  community.general.zfs_delegate_admin:\n    name: rpool/myfs\n    users: foo,bar\n    permissions: send,receive\n    local: yes\n\n- name: Revoke all permissions from everyone (permissions specifically assigned to users and groups remain)\n  community.general.zfs_delegate_admin:\n    name: rpool/myfs\n    everyone: yes\n    state: absent\n",
        "metadata": null,
        "return": null
    }
}
