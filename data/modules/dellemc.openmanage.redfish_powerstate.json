{
    "dellemc.openmanage.redfish_powerstate": {
        "doc": {
            "author": [
                "Sajna Shetty(@Sajna-Shetty)"
            ],
            "collection": "dellemc.openmanage",
            "description": [
                "This module allows to manage the different power states of the specified device."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/dellemc/openmanage/plugins/modules/redfish_powerstate.py",
            "has_action": false,
            "module": "redfish_powerstate",
            "notes": [
                "Run this module from a system that has direct access to Redfish APIs.",
                "This module supports C(check_mode)."
            ],
            "options": {
                "baseuri": {
                    "description": "IP address of the target out-of-band controller. For example- <ipaddress>:<port>.",
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "description": "Password of the target out-of-band controller.",
                    "required": true,
                    "type": "str"
                },
                "reset_type": {
                    "choices": [
                        "ForceOff",
                        "ForceOn",
                        "ForceRestart",
                        "GracefulRestart",
                        "GracefulShutdown",
                        "Nmi",
                        "On",
                        "PowerCycle",
                        "PushPowerButton"
                    ],
                    "description": [
                        "This option resets the device.",
                        "If C(ForceOff), Turns off the device immediately.",
                        "If C(ForceOn), Turns on the device immediately.",
                        "If C(ForceRestart), Turns off the device immediately, and then restarts the device.",
                        "If C(GracefulRestart), Performs graceful shutdown of the device, and then restarts the device.",
                        "If C(GracefulShutdown), Performs a graceful shutdown of the device, and the turns off the device.",
                        "If C(Nmi), Sends a diagnostic interrupt to the device. This is usually a non-maskable interrupt (NMI) on x86 device.",
                        "If C(On), Turns on the device.",
                        "If C(PowerCycle), Performs power cycle on the device.",
                        "If C(PushPowerButton), Simulates the pressing of a physical power button on the device.",
                        "When a power control operation is performed, which is not supported on the device, an error message is displayed with the list of operations that can be performed."
                    ],
                    "required": true,
                    "type": "str"
                },
                "resource_id": {
                    "description": [
                        "The unique identifier of the device being managed. For example- U(https://<I(baseuri)>/redfish/v1/Systems/<I(resource_id)>).",
                        "This option is mandatory for I(base_uri) with multiple devices.",
                        "To get the device details, use the API U(https://<I(baseuri)>/redfish/v1/Systems)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "username": {
                    "description": "Username of the target out-of-band controller.",
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7.5"
            ],
            "short_description": "Manage device power state",
            "version_added": "2.1.0",
            "version_added_collection": "dellemc.openmanage"
        },
        "examples": "\n---\n- name: Manage power state of the first device\n  dellemc.openmanage.redfish_powerstate:\n       baseuri: \"192.168.0.1\"\n       username: \"username\"\n       password: \"password\"\n       reset_type: \"On\"\n\n- name: Manage power state of a specified device\n  dellemc.openmanage.redfish_powerstate:\n       baseuri: \"192.168.0.1\"\n       username: \"username\"\n       password: \"password\"\n       reset_type: \"ForceOff\"\n       resource_id: \"System.Embedded.1\"\n",
        "metadata": null,
        "return": {
            "error_info": {
                "description": "Details of the HTTP error.",
                "returned": "on http error",
                "sample": {
                    "error": {
                        "@Message.ExtendedInfo": [
                            {
                                "Message": "Unable to complete the operation because the resource /redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset entered in not found.",
                                "MessageArgs": [
                                    "/redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset"
                                ],
                                "MessageArgs@odata.count": 1,
                                "MessageId": "IDRAC.2.1.SYS403",
                                "RelatedProperties": [],
                                "RelatedProperties@odata.count": 0,
                                "Resolution": "Enter the correct resource and retry the operation. For information about valid resource, see the Redfish Users Guide available on the support site.",
                                "Severity": "Critical"
                            }
                        ],
                        "code": "Base.1.5.GeneralError",
                        "message": "A general error has occurred. See ExtendedInfo for more information"
                    }
                },
                "type": "dict"
            },
            "msg": {
                "description": "Overall status of the reset operation.",
                "returned": "always",
                "sample": "Successfully performed the reset type operation 'On'.",
                "type": "str"
            }
        }
    }
}
