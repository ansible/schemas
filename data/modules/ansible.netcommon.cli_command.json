{
    "ansible.netcommon.cli_command": {
        "doc": {
            "author": "Nathaniel Case (@Qalthos)",
            "collection": "ansible.netcommon",
            "description": [
                "Sends a command to a network device and returns the result read from the device."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/ansible/netcommon/plugins/modules/cli_command.py",
            "has_action": true,
            "module": "cli_command",
            "notes": [
                "This module is supported on C(ansible_network_os) network platforms. See the :ref:`Network Platform Options <platform_options>` for details."
            ],
            "options": {
                "answer": {
                    "description": [
                        "The answer to reply with if I(prompt) is matched. The value can be a single answer or a list of answer for multiple prompts. In case the command execution results in multiple prompts the sequence of the prompt and excepted answer should be in same order."
                    ],
                    "required": false,
                    "type": "list"
                },
                "check_all": {
                    "default": false,
                    "description": [
                        "By default if any one of the prompts mentioned in C(prompt) option is matched it won't check for other prompts. This boolean flag, that when set to I(True) will check for all the prompts mentioned in C(prompt) option in the given order. If the option is set to I(True) all the prompts should be received from remote host if not it will result in timeout."
                    ],
                    "type": "bool"
                },
                "command": {
                    "description": [
                        "The command to send to the remote network device.  The resulting output from the command is returned, unless I(sendonly) is set."
                    ],
                    "required": true
                },
                "newline": {
                    "default": true,
                    "description": [
                        "The boolean value, that when set to false will send I(answer) to the device without a trailing newline."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "prompt": {
                    "description": [
                        "A single regex pattern or a sequence of patterns to evaluate the expected prompt from I(command)."
                    ],
                    "required": false,
                    "type": "list"
                },
                "sendonly": {
                    "default": false,
                    "description": [
                        "The boolean value, that when set to true will send I(command) to the device but not wait for a result."
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "short_description": "Run a cli command on cli-based network devices"
        },
        "examples": "\n- name: run show version on remote devices\n  cli_command:\n    command: show version\n\n- name: run command with json formatted output\n  cli_command:\n    command: show version | json\n\n- name: run command expecting user confirmation\n  cli_command:\n    command: commit replace\n    prompt: This commit will replace or remove the entire running configuration\n    answer: yes\n\n- name: run command expecting user confirmation\n  cli_command:\n    command: show interface summary\n    prompt: Press any key to continue\n    answer: y\n    newline: false\n\n- name: run config mode command and handle prompt/answer\n  cli_command:\n    command: \"{{ item }}\"\n    prompt:\n      - \"Exit with uncommitted changes\"\n    answer: 'y'\n  loop:\n    - configure\n    - set system syslog file test any any\n    - exit\n\n- name: multiple prompt, multiple answer (mandatory check for all prompts)\n  cli_command:\n    command: \"copy sftp sftp://user@host//user/test.img\"\n    check_all: True\n    prompt:\n      - \"Confirm download operation\"\n      - \"Password\"\n      - \"Do you want to change that to the standby image\"\n    answer:\n      - 'y'\n      - <password>\n      - 'y'\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "network"
        },
        "return": {
            "json": {
                "description": "A dictionary representing a JSON-formatted response",
                "returned": "when the device response is valid JSON",
                "sample": "{\n  \"architecture\": \"i386\",\n  \"bootupTimestamp\": 1532649700.56,\n  \"modelName\": \"vEOS\",\n  \"version\": \"4.15.9M\"\n  [...]\n}\n",
                "type": "dict"
            },
            "stdout": {
                "description": "The response from the command",
                "returned": "when sendonly is false",
                "sample": "Version:      VyOS 1.1.7[...]",
                "type": "str"
            }
        }
    }
}
