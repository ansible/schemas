{
    "community.aws.cloudfront_origin_access_identity": {
        "doc": {
            "author": "Willem van Ketwich (@wilvk)",
            "collection": "community.aws",
            "description": [
                "Allows for easy creation, updating and deletion of origin access identities."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/cloudfront_origin_access_identity.py",
            "has_action": false,
            "module": "cloudfront_origin_access_identity",
            "notes": [
                "Does not support check mode.",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "caller_reference": {
                    "description": [
                        "A unique identifier to reference the origin access identity by."
                    ],
                    "required": false,
                    "type": "str"
                },
                "comment": {
                    "description": [
                        "A comment to describe the CloudFront origin access identity."
                    ],
                    "required": false,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "origin_access_identity_id": {
                    "description": [
                        "The origin_access_identity_id of the CloudFront distribution."
                    ],
                    "required": false,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": "If the named resource should exist.",
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3 >= 1.0.0",
                "python >= 2.6"
            ],
            "short_description": "Create, update and delete origin access identities for a CloudFront distribution",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n\n- name: create an origin access identity\n  community.aws.cloudfront_origin_access_identity:\n    state: present\n    caller_reference: this is an example reference\n    comment: this is an example comment\n\n- name: update an existing origin access identity using caller_reference as an identifier\n  community.aws.cloudfront_origin_access_identity:\n     origin_access_identity_id: E17DRN9XUOAHZX\n     caller_reference: this is an example reference\n     comment: this is a new comment\n\n- name: delete an existing origin access identity using caller_reference as an identifier\n  community.aws.cloudfront_origin_access_identity:\n     state: absent\n     caller_reference: this is an example reference\n     comment: this is a new comment\n\n",
        "metadata": null,
        "return": {
            "cloud_front_origin_access_identity": {
                "contains": {
                    "cloud_front_origin_access_identity_config": {
                        "contains": {
                            "caller_reference": {
                                "description": "a caller reference for the oai",
                                "returned": "always",
                                "type": "str"
                            },
                            "comment": {
                                "description": "a comment describing the oai",
                                "returned": "always",
                                "type": "str"
                            }
                        },
                        "description": "describes a url specifying the origin access identity.",
                        "returned": "always",
                        "type": "complex"
                    },
                    "id": {
                        "description": "a unique identifier of the oai",
                        "returned": "always",
                        "type": "str"
                    },
                    "s3_canonical_user_id": {
                        "description": "the canonical user ID of the user who created the oai",
                        "returned": "always",
                        "type": "str"
                    }
                },
                "description": "The origin access identity's information.",
                "returned": "always",
                "type": "complex"
            },
            "e_tag": {
                "description": "The current version of the origin access identity created.",
                "returned": "always",
                "type": "str"
            },
            "location": {
                "description": "The fully qualified URI of the new origin access identity just created.",
                "returned": "when initially created",
                "type": "str"
            }
        }
    }
}
