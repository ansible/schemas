{
    "community.network.edgeos_facts": {
        "doc": {
            "author": [
                "Nathaniel Case (@Qalthos)",
                "Sam Doran (@samdoran)"
            ],
            "collection": "community.network",
            "description": [
                "Collects a base set of device facts from a remote device that is running EdgeOS. This module prepends all of the base network fact keys with U(ansible_net_<fact>). The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/edgeos_facts.py",
            "has_action": false,
            "module": "edgeos_facts",
            "notes": [
                "Tested against EdgeOS 1.9.7"
            ],
            "options": {
                "gather_subset": {
                    "default": "!config",
                    "description": [
                        "When supplied, this argument will restrict the facts collected to a given subset. Possible values for this argument include all, default, config, and neighbors. Can specify a list of values to include a larger subset. Values can also be used with an initial C(!) to specify that a specific subset should not be collected."
                    ],
                    "required": false
                }
            },
            "short_description": "Collect facts from remote devices running EdgeOS"
        },
        "examples": "\n- name: Collect all facts from the device\n  community.network.edgeos_facts:\n    gather_subset: all\n\n- name: Collect only the config and default facts\n  community.network.edgeos_facts:\n    gather_subset: config\n\n- name: Collect everything exception the config\n  community.network.edgeos_facts:\n    gather_subset: \"!config\"\n",
        "metadata": null,
        "return": {
            "ansible_net_commits": {
                "description": "The set of available configuration revisions",
                "returned": "when present",
                "type": "list"
            },
            "ansible_net_config": {
                "description": "The running-config from the device",
                "returned": "when config is configured",
                "type": "str"
            },
            "ansible_net_gather_subset": {
                "description": "The list of subsets gathered by the module",
                "returned": "always",
                "type": "list"
            },
            "ansible_net_hostname": {
                "description": "The configured system hostname",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_model": {
                "description": "The device model string",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_neighbors": {
                "description": "The set of LLDP neighbors",
                "returned": "when interface is configured",
                "type": "list"
            },
            "ansible_net_serialnum": {
                "description": "The serial number of the device",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_version": {
                "description": "The version of the software running",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
