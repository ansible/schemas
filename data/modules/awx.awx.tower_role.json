{
    "awx.awx.tower_role": {
        "doc": {
            "author": "Wayne Witzel III (@wwitzel3)",
            "collection": "awx.awx",
            "description": [
                "Roles are used for access control, this module is for managing user access to server resources.",
                "Grant or revoke Ansible Tower roles to users. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_role.py",
            "has_action": false,
            "module": "tower_role",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "credential": {
                    "description": [
                        "Credential the role acts on.",
                        "Deprecated, use 'credentials'."
                    ],
                    "type": "str"
                },
                "credentials": {
                    "description": [
                        "Credential the role acts on."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "inventories": {
                    "description": [
                        "Inventory the role acts on."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "inventory": {
                    "description": [
                        "Inventory the role acts on.",
                        "Deprecated, use 'inventories'."
                    ],
                    "type": "str"
                },
                "job_template": {
                    "description": [
                        "The job template the role acts on.",
                        "Deprecated, use 'job_templates'."
                    ],
                    "type": "str"
                },
                "job_templates": {
                    "description": [
                        "The job template the role acts on."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "lookup_organization": {
                    "description": [
                        "Organization the inventories, job templates, projects, or workflows the items exists in.",
                        "Used to help lookup the object, for organization roles see organization.",
                        "If not provided, will lookup by name only, which does not work with duplicates."
                    ],
                    "type": "str"
                },
                "organization": {
                    "description": [
                        "Organization the role acts on.",
                        "Deprecated, use 'organizations'."
                    ],
                    "type": "str"
                },
                "organizations": {
                    "description": [
                        "Organization the role acts on."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "project": {
                    "description": [
                        "Project the role acts on.",
                        "Deprecated, use 'projects'."
                    ],
                    "type": "str"
                },
                "projects": {
                    "description": [
                        "Project the role acts on."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "role": {
                    "choices": [
                        "admin",
                        "read",
                        "member",
                        "execute",
                        "adhoc",
                        "update",
                        "use",
                        "approval",
                        "auditor",
                        "project_admin",
                        "inventory_admin",
                        "credential_admin",
                        "workflow_admin",
                        "notification_admin",
                        "job_template_admin"
                    ],
                    "description": [
                        "The role type to grant/revoke."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state.",
                        "State of present indicates the user should have the role.",
                        "State of absent indicates the user should have the role taken away, if they have it."
                    ],
                    "type": "str"
                },
                "target_team": {
                    "description": [
                        "Team that the role acts on.",
                        "For example, make someone a member or an admin of a team.",
                        "Members of a team implicitly receive the permissions that the team has.",
                        "Deprecated, use 'target_teams'."
                    ],
                    "type": "str"
                },
                "target_teams": {
                    "description": [
                        "Team that the role acts on.",
                        "For example, make someone a member or an admin of a team.",
                        "Members of a team implicitly receive the permissions that the team has."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "team": {
                    "description": [
                        "Team that receives the permissions specified by the role."
                    ],
                    "type": "str"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "user": {
                    "description": [
                        "User that receives the permissions specified by the role."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "workflow": {
                    "description": [
                        "The workflow job template the role acts on.",
                        "Deprecated, use 'workflows'."
                    ],
                    "type": "str"
                },
                "workflows": {
                    "description": [
                        "The workflow job template the role acts on."
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "short_description": "grant or revoke an Ansible Tower role."
        },
        "examples": "\n- name: Add jdoe to the member role of My Team\n  tower_role:\n    user: jdoe\n    target_team: \"My Team\"\n    role: member\n    state: present\n\n- name: Add Joe to multiple job templates and a workflow\n  tower_role:\n    user: joe\n    role: execute\n    workflow: test-role-workflow\n    job_templates:\n      - jt1\n      - jt2\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
