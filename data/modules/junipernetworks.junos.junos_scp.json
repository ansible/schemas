{
    "junipernetworks.junos.junos_scp": {
        "doc": {
            "author": "Christian Giese (@GIC-de)",
            "collection": "junipernetworks.junos",
            "description": [
                "This module transfers files via SCP from or to remote devices running Junos."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/junipernetworks/junos/plugins/modules/junos_scp.py",
            "has_action": true,
            "module": "junos_scp",
            "notes": [
                "This module requires the netconf system service be enabled on the remote device being managed.",
                "Tested against vMX JUNOS version 17.3R1.10.",
                "Works with C(local) connections only.",
                "Since this module uses junos-eznc to establish connection with junos device the netconf configuration parameters needs to be passed using module options for example C(ssh_config) unlike other junos modules that uses C(netconf) connection type.",
                "For information on using CLI and netconf see the :ref:`Junos OS Platform Options guide <junos_platform_options>`",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Juniper network devices see U(https://www.ansible.com/ansible-juniper)."
            ],
            "options": {
                "dest": {
                    "default": ".",
                    "description": [
                        "The C(dest) argument specifies the path in which to receive the files."
                    ],
                    "type": "path"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli) or C(connection: netconf).",
                        "For more information please see the L(Junos OS Platform Options guide, ../network/user_guide/platform_junos.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device.  The port value will default to the well known SSH port of 22 (for C(transport=cli)) or port 830 (for C(transport=netconf)) device."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "path"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "cli",
                                "netconf"
                            ],
                            "default": "netconf",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "recursive": {
                    "default": false,
                    "description": [
                        "The C(recursive) argument enables recursive transfer of files and directories."
                    ],
                    "type": "bool"
                },
                "remote_src": {
                    "default": false,
                    "description": [
                        "The C(remote_src) argument enables the download of files (I(scp get)) from the remote device. The default behavior is to upload files (I(scp put)) to the remote device."
                    ],
                    "type": "bool"
                },
                "src": {
                    "description": [
                        "The C(src) argument takes a single path, or a list of paths to be transferred. The argument C(recursive) must be C(true) to transfer directories."
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                },
                "ssh_config": {
                    "description": [
                        "The C(ssh_config) argument is path to the SSH configuration file. This can be used to load SSH information from a configuration file. If this option is not given by default ~/.ssh/config is queried."
                    ],
                    "type": "path"
                },
                "ssh_private_key_file": {
                    "description": [
                        "The C(ssh_private_key_file) argument is path to the SSH private key file. This can be used if you need to provide a private key rather than loading the key into the ssh-key-ring/environment"
                    ],
                    "type": "path"
                }
            },
            "requirements": [
                "junos-eznc",
                "ncclient (>=v0.5.2)"
            ],
            "short_description": "Transfer files from or to remote devices running Junos",
            "version_added": "1.0.0",
            "version_added_collection": "junipernetworks.junos"
        },
        "examples": "\n# the required set of connection arguments have been purposely left off\n# the examples for brevity\n- name: upload local file to home directory on remote device\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n\n- name: upload local file to tmp directory on remote device\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n    dest: /tmp/\n\n- name: download file from remote device\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n    remote_src: true\n\n- name: ssh config file path for jumphost config\n  junipernetworks.junos.junos_scp:\n    src: test.tgz\n    remote_src: true\n    ssh_config: /home/user/customsshconfig\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "always true",
                "returned": "always",
                "type": "bool"
            }
        }
    }
}
