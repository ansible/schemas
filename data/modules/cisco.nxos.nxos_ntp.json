{
    "cisco.nxos.nxos_ntp": {
        "doc": {
            "author": [
                "Jason Edelman (@jedelman8)"
            ],
            "collection": "cisco.nxos",
            "description": [
                "Manages core NTP configuration."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nxos/plugins/modules/nxos_ntp.py",
            "has_action": true,
            "module": "nxos_ntp",
            "notes": [
                "For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "key_id": {
                    "description": [
                        "Authentication key identifier to use with given NTP server or peer or keyword 'default'."
                    ],
                    "type": "str"
                },
                "peer": {
                    "description": [
                        "Network address of NTP peer."
                    ],
                    "type": "str"
                },
                "prefer": {
                    "choices": [
                        "enabled",
                        "disabled"
                    ],
                    "description": [
                        "Makes given NTP server or peer the preferred NTP server or peer for the device."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "Starting with Ansible 2.6 we recommend using C(connection: httpapi) for NX-API.",
                        "This option will be removed in a release after 2022-06-01.",
                        "For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "str"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "cli",
                                "nxapi"
                            ],
                            "default": "cli",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                            ],
                            "type": "str"
                        },
                        "use_proxy": {
                            "default": true,
                            "description": [
                                "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored."
                            ],
                            "type": "bool"
                        },
                        "use_ssl": {
                            "default": false,
                            "description": [
                                "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=nxapi), otherwise this value is ignored."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": false,
                            "description": [
                                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "server": {
                    "description": [
                        "Network address of NTP server."
                    ],
                    "type": "str"
                },
                "source_addr": {
                    "description": [
                        "Local source address from which NTP messages are sent or keyword 'default'."
                    ],
                    "type": "str"
                },
                "source_int": {
                    "description": [
                        "Local source interface from which NTP messages are sent. Must be fully qualified interface name or keyword 'default'"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Manage the state of the resource."
                    ],
                    "type": "str"
                },
                "vrf_name": {
                    "description": [
                        "Makes the device communicate with the given NTP server or peer over a specific VRF or keyword 'default'."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages core NTP configuration.",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.nxos"
        },
        "examples": "\n# Set NTP Server with parameters\n- cisco.nxos.nxos_ntp:\n    server: 1.2.3.4\n    key_id: 32\n    prefer: enabled\n    host: '{{ inventory_hostname }}'\n    username: '{{ un }}'\n    password: '{{ pwd }}'\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of ntp info after module execution",
                "returned": "always",
                "sample": {
                    "address": "192.0.2.2",
                    "key_id": "48",
                    "peer_type": "server",
                    "prefer": "enabled",
                    "source": "192.0.2.3",
                    "source_type": "source"
                },
                "type": "dict"
            },
            "existing": {
                "description": [
                    "k/v pairs of existing ntp server/peer"
                ],
                "returned": "always",
                "sample": {
                    "address": "192.0.2.2",
                    "key_id": "32",
                    "peer_type": "server",
                    "prefer": "enabled",
                    "source": "ethernet2/1",
                    "source_type": "source-interface"
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "address": "192.0.2.2",
                    "key_id": "48",
                    "peer_type": "server",
                    "prefer": "enabled",
                    "source": "192.0.2.3",
                    "source_type": "source"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command sent to the device",
                "returned": "always",
                "sample": [
                    "ntp server 192.0.2.2 prefer key 48",
                    "no ntp source-interface ethernet2/1",
                    "ntp source 192.0.2.3"
                ],
                "type": "list"
            }
        }
    }
}
