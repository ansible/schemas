{
    "sensu.sensu_go.silence_info": {
        "doc": {
            "author": [
                "Paul Arthur (@flowerysong)",
                "Aljaz Kosir (@aljazkosir)",
                "Manca Bizjak (@mancabizjak)",
                "Tadej Borovsak (@tadeboro)"
            ],
            "collection": "sensu.sensu_go",
            "description": [
                "Retrieve information about Sensu silences.",
                "For more information, refer to the Sensu documentation at U(https://docs.sensu.io/sensu-go/latest/reference/silencing/)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/sensu/sensu_go/plugins/modules/silence_info.py",
            "has_action": false,
            "module": "silence_info",
            "options": {
                "auth": {
                    "description": [
                        "Authentication parameters. Can define each of them with ENV as well."
                    ],
                    "suboptions": {
                        "api_key": {
                            "description": [
                                "The API key that should be used when authenticating. If this is not set, the value of the SENSU_API_KEY environment variable will be checked.",
                                "This replaces I(auth.user) and I(auth.password) parameters.",
                                "For more information about the API key, refer to the official Sensu documentation at U(https://docs.sensu.io/sensu-go/latest/guides/use-apikey-feature/)."
                            ],
                            "type": "str",
                            "version_added": "1.3.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "ca_path": {
                            "description": [
                                "Path to the CA bundle that should be used to validate the backend certificate.",
                                "If this parameter is not set, module will use the CA bundle that python is using.",
                                "It is also possible to set this parameter via the I(SENSU_CA_PATH) environment variable."
                            ],
                            "type": "path",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "password": {
                            "default": "P@ssw0rd!",
                            "description": [
                                "The Sensu user's password. If this is not set the value of the SENSU_PASSWORD environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "default": "http://localhost:8080",
                            "description": [
                                "Location of the Sensu backend API. If this is not set the value of the SENSU_URL environment variable will be checked."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "default": "admin",
                            "description": [
                                "The username to use for connecting to the Sensu API. If this is not set the value of the SENSU_USER environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "verify": {
                            "default": true,
                            "description": [
                                "Flag that controls the certificate validation.",
                                "If you are using self-signed certificates, you can set this parameter to C(false).",
                                "ONLY USE THIS PARAMETER IN DEVELOPMENT SCENARIOS! In you use self-signed certificates in production, see the I(auth.ca_path) parameter.",
                                "It is also possible to set this parameter via the I(SENSU_VERIFY) environment variable."
                            ],
                            "type": "bool",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        }
                    },
                    "type": "dict"
                },
                "check": {
                    "description": [
                        "The name of the check the entry should match. If left empty a silencing entry will contain an asterisk in the check position."
                    ],
                    "type": "str"
                },
                "namespace": {
                    "default": "default",
                    "description": [
                        "RBAC namespace to operate in. If this is not set the value of the SENSU_NAMESPACE environment variable will be used."
                    ],
                    "type": "str"
                },
                "subscription": {
                    "description": [
                        "The name of the subscription the entry should match. If left empty a silencing entry will contain an asterisk in the subscription position."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7"
            ],
            "seealso": [
                {
                    "module": "sensu.sensu_go.silence"
                }
            ],
            "short_description": "List Sensu silence entries",
            "version_added": "1.0.0",
            "version_added_collection": "sensu.sensu_go"
        },
        "examples": "\n- name: List all Sensu silence entries\n  sensu.sensu_go.silence_info:\n  register: result\n\n- name: Fetch a specific silence with name proxy:awesome_check\n  sensu.sensu_go.silence_info:\n    subscription: proxy\n    check: awesome_check\n  register: result\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "stableinterface"
            ],
            "supported_by": "certified"
        },
        "return": {
            "objects": {
                "description": "List of Sensu silence entries.",
                "elements": "dict",
                "returned": "success",
                "sample": [
                    {
                        "begin": 1542671205,
                        "check": null,
                        "creator": "admin",
                        "expire": -1,
                        "expire_on_resolve": false,
                        "metadata": {
                            "annotations": null,
                            "labels": null,
                            "name": "entity:i-424242:*",
                            "namespace": "default"
                        },
                        "reason": null,
                        "subscription": "entity:i-424242"
                    }
                ],
                "type": "list"
            }
        }
    }
}
