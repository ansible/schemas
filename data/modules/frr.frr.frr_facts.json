{
    "frr.frr.frr_facts": {
        "doc": {
            "author": "Nilashish Chakraborty (@NilashishC)",
            "collection": "frr.frr",
            "description": [
                "Collects a base set of device facts from a remote device that is running FRR.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/frr/frr/plugins/modules/frr_facts.py",
            "has_action": false,
            "module": "frr_facts",
            "notes": [
                "Tested against FRR 6.0."
            ],
            "options": {
                "gather_subset": {
                    "default": "!config",
                    "description": [
                        "When supplied, this argument restricts the facts collected to a given subset.",
                        "Possible values for this argument include C(all), C(hardware), C(config), and C(interfaces).",
                        "Specify a list of values to include a larger subset.",
                        "Use a value with an initial C(!) to collect all facts except that subset."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                }
            },
            "short_description": "Collect facts from remote devices running Free Range Routing (FRR).",
            "version_added": "1.0.0",
            "version_added_collection": "frr.frr"
        },
        "examples": "\n- name: Collect all facts from the device\n  frr.frr.frr_facts:\n    gather_subset: all\n\n- name: Collect only the config and default facts\n  frr.frr.frr_facts:\n    gather_subset:\n    - config\n\n- name: Collect the config and hardware facts\n  frr.frr.frr_facts:\n    gather_subset:\n    - config\n    - hardware\n\n- name: Do not collect hardware facts\n  frr.frr.frr_facts:\n    gather_subset:\n    - '!hardware'\n",
        "metadata": null,
        "return": {
            "ansible_net_all_ipv4_addresses": {
                "description": "All IPv4 addresses configured on the device",
                "returned": "when interfaces is configured",
                "type": "list"
            },
            "ansible_net_all_ipv6_addresses": {
                "description": "All IPv6 addresses configured on the device",
                "returned": "when interfaces is configured",
                "type": "list"
            },
            "ansible_net_api": {
                "description": "The name of the transport",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_config": {
                "description": "The current active config from the device",
                "returned": "when config is configured",
                "type": "str"
            },
            "ansible_net_gather_subset": {
                "description": "The list of fact subsets collected from the device",
                "returned": "always",
                "type": "list"
            },
            "ansible_net_hostname": {
                "description": "The configured hostname of the device",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_interfaces": {
                "description": "A hash of all interfaces running on the system",
                "returned": "when interfaces is configured",
                "type": "dict"
            },
            "ansible_net_mem_stats": {
                "description": "The memory statistics fetched from the device",
                "returned": "when hardware is configured",
                "type": "dict"
            },
            "ansible_net_mpls_ldp_neighbors": {
                "description": "The list of MPLS LDP neighbors from the remote device",
                "returned": "when interfaces is configured and LDP daemon is running on the device",
                "type": "dict"
            },
            "ansible_net_python_version": {
                "description": "The Python version that the Ansible controller is using",
                "returned": "always",
                "type": "str"
            },
            "ansible_net_version": {
                "description": "The FRR version running on the remote device",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
