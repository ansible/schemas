{
    "cyberark.pas.cyberark_credential": {
        "doc": {
            "author": [
                "Edward Nunez (@enunez-cyberark)",
                "CyberArk BizDev (@cyberark-bizdev)",
                "Erasmo Acosta (@erasmix)",
                "James Stutes (@JimmyJamCABD)"
            ],
            "collection": "cyberark.pas",
            "description": [
                "Creates a URI for retrieving a credential from a password object stored in the Cyberark Vault.  The request uses the Privileged Account Security Web Services SDK through the Central Credential Provider by requesting access with an Application ID."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cyberark/pas/plugins/modules/cyberark_credential.py",
            "has_action": false,
            "module": "cyberark_credential",
            "options": {
                "api_base_url": {
                    "description": [
                        "A string containing the base URL of the server hosting the Central Credential Provider."
                    ],
                    "required": true,
                    "type": "str"
                },
                "app_id": {
                    "description": [
                        "A string containing the Application ID authorized for retrieving the credential."
                    ],
                    "required": true,
                    "type": "str"
                },
                "client_cert": {
                    "description": [
                        "A string containing the file location and name of the client certificate used for authentication."
                    ],
                    "required": false,
                    "type": "str"
                },
                "client_key": {
                    "description": [
                        "A string containing the file location and name of the private key of the client certificate used for authentication."
                    ],
                    "required": false,
                    "type": "str"
                },
                "connection_timeout": {
                    "default": "30",
                    "description": [
                        "An integer value of the allowed time before the request returns failed."
                    ],
                    "required": false,
                    "type": "int"
                },
                "fail_request_on_password_change": {
                    "default": false,
                    "description": [
                        "A boolean parameter for completing the request in the middle of a password change of the requested credential."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "query": {
                    "description": [
                        "A string containing details of the object being queried;",
                        "Possible parameters could be Safe, Folder, Object",
                        "(internal account name), UserName, Address, Database,",
                        "PolicyID."
                    ],
                    "required": true,
                    "type": "str"
                },
                "query_format": {
                    "choices": [
                        "Exact",
                        "Regexp"
                    ],
                    "default": "Exact",
                    "description": [
                        "The format for which your Query will be received by the CCP."
                    ],
                    "required": false,
                    "type": "str"
                },
                "reason": {
                    "description": [
                        "Reason for requesting credential if required by policy;",
                        "It must be specified if the Policy managing the object",
                        "requires it."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(false), SSL certificate chain will not be validated.  This should only set to C(true) if you have a root CA certificate installed on each node."
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "short_description": "Credential retrieval using AAM Central Credential Provider.",
            "version_added": 2.4,
            "version_added_collection": "cyberark.pas"
        },
        "examples": "\n  tasks:\n    - name: credential retrieval basic\n      cyberark_credential:\n        api_base_url: \"http://10.10.0.1\"\n        app_id: \"TestID\"\n        query: \"Safe=test;UserName=admin\"\n      register: result\n\n    - name: credential retrieval advanced\n      cyberark_credential:\n        api_base_url: \"https://components.cyberark.local\"\n        validate_certs: yes\n        client_cert: /etc/pki/ca-trust/source/client.pem\n        client_key: /etc/pki/ca-trust/source/priv-key.pem\n        app_id: \"TestID\"\n        query: \"Safe=test;UserName=admin\"\n        connection_timeout: 60\n        query_format: Exact\n        fail_request_on_password_change: True\n        reason: \"requesting credential for Ansible deployment\"\n      register: result\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "changed": {
                "description": [
                    "Identify if the playbook run resulted in a change to the account in any way."
                ],
                "returned": "always",
                "type": "bool"
            },
            "failed": {
                "description": "Whether playbook run resulted in a failure of any kind.",
                "returned": "always",
                "type": "bool"
            },
            "result": {
                "contains": {
                    "Address": {
                        "description": "The target address of the credential being queried",
                        "returned": "if required",
                        "type": "str"
                    },
                    "CPMDisabled": {
                        "description": [
                            "A description of why this vaulted credential is not being managed by the CPM."
                        ],
                        "returned": "if CPM management is disabled and a reason is given",
                        "type": "str"
                    },
                    "Content": {
                        "description": "The password for the object being queried",
                        "returned": "always",
                        "type": "str"
                    },
                    "CreationMethod": {
                        "description": "This is how the object was created in the Vault",
                        "returned": "always",
                        "type": "str"
                    },
                    "DeviceType": {
                        "description": [
                            "An internal File Category for more granular management of Platforms."
                        ],
                        "returned": "always",
                        "type": "str"
                    },
                    "Folder": {
                        "description": [
                            "The folder within the Safe where the credential is stored."
                        ],
                        "returned": "always",
                        "type": "str"
                    },
                    "LogonDomain": {
                        "description": "The Address friendly name resolved by the CPM",
                        "returned": "if populated",
                        "type": "str"
                    },
                    "Name": {
                        "description": [
                            "The Cyberark unique object ID of the credential being queried."
                        ],
                        "returned": "always",
                        "type": "str"
                    },
                    "PasswordChangeInProcess": {
                        "description": "If the password has a change flag placed by the CPM",
                        "returned": "always",
                        "type": "bool"
                    },
                    "PolicyID": {
                        "description": "Whether or not SSL certificates should be validated.",
                        "returned": "if assigned to a policy",
                        "type": "str"
                    },
                    "Safe": {
                        "description": "The safe where the queried credential is stored",
                        "returned": "always",
                        "type": "string"
                    },
                    "Username": {
                        "description": "The username of the credential being queried",
                        "returned": "if required",
                        "type": "str"
                    }
                },
                "description": "A json dump of the resulting action.",
                "returned": "success",
                "type": "complex"
            },
            "status_code": {
                "description": "Result HTTP Status code.",
                "returned": "success",
                "sample": "200, 201, -1, 204",
                "type": "int"
            }
        }
    }
}
