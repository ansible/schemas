{
    "azure.azcollection.azure_rm_virtualmachinescaleset": {
        "doc": {
            "author": [
                "Sertac Ozercan (@sozercan)"
            ],
            "collection": "azure.azcollection",
            "description": [
                "Create and update a virtual machine scale set.",
                "Note that this module was called M(azure_rm_virtualmachine_scaleset) before Ansible 2.8. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/azure/azcollection/plugins/modules/azure_rm_virtualmachinescaleset.py",
            "has_action": false,
            "module": "azure_rm_virtualmachinescaleset",
            "notes": [
                "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).",
                "Authentication is also possible using a service principal or Active Directory user.",
                "To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.",
                "To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.",
                "Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment."
            ],
            "options": {
                "ad_user": {
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "adfs_authority_url": {
                    "description": [
                        "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "admin_password": {
                    "description": [
                        "Password for the admin username.",
                        "Not required if the os_type is Linux and SSH password authentication is disabled by setting I(ssh_password_enabled=false)."
                    ]
                },
                "admin_username": {
                    "description": [
                        "Admin username used to access the host after it is created. Required when creating a VM."
                    ]
                },
                "api_profile": {
                    "default": "latest",
                    "description": [
                        "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "append_tags": {
                    "default": true,
                    "description": [
                        "Use to control if tags field is canonical or just appends to existing tags.",
                        "When canonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ],
                    "type": "bool"
                },
                "application_gateway": {
                    "description": [
                        "Application gateway name."
                    ]
                },
                "auth_source": {
                    "choices": [
                        "auto",
                        "cli",
                        "credential_file",
                        "env",
                        "msi"
                    ],
                    "default": "auto",
                    "description": [
                        "Controls the source of the credentials to use for authentication.",
                        "Can also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.",
                        "When set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).",
                        "When set to C(env), the credentials will be read from the environment variables",
                        "When set to C(credential_file), it will read the profile from C(~/.azure/credentials).",
                        "When set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.",
                        "When set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.",
                        "The C(msi) was added in Ansible 2.6."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "capacity": {
                    "default": 1,
                    "description": [
                        "Capacity of VMSS."
                    ]
                },
                "cert_validation_mode": {
                    "choices": [
                        "ignore",
                        "validate"
                    ],
                    "description": [
                        "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "client_id": {
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "cloud_environment": {
                    "default": "AzureCloud",
                    "description": [
                        "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "custom_data": {
                    "description": [
                        "Data which is made available to the virtual machine and used by e.g., C(cloud-init).",
                        "Many images in the marketplace are not cloud-init ready. Thus, data sent to I(custom_data) would be ignored.",
                        "If the image you are attempting to use is not listed in U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview), follow these steps U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image)."
                    ]
                },
                "data_disks": {
                    "description": [
                        "Describes list of data disks."
                    ],
                    "suboptions": {
                        "caching": {
                            "choices": [
                                "ReadOnly",
                                "ReadWrite"
                            ],
                            "default": "ReadOnly",
                            "description": [
                                "Type of data disk caching."
                            ]
                        },
                        "disk_size_gb": {
                            "description": [
                                "The initial disk size in GB for blank data disks."
                            ]
                        },
                        "lun": {
                            "default": 0,
                            "description": [
                                "The logical unit number for data disk."
                            ]
                        },
                        "managed_disk_type": {
                            "choices": [
                                "Standard_LRS",
                                "Premium_LRS"
                            ],
                            "description": [
                                "Managed data disk type."
                            ]
                        }
                    }
                },
                "enable_accelerated_networking": {
                    "description": [
                        "Indicates whether user wants to allow accelerated networking for virtual machines in scaleset being created."
                    ],
                    "type": "bool"
                },
                "ephemeral_os_disk": {
                    "description": [
                        "Parameters of ephemeral disk settings that can be specified for operating system disk.",
                        "Ephemeral OS disk is only supported for VMS Instances using Managed Disk."
                    ],
                    "type": "bool"
                },
                "image": {
                    "description": [
                        "Specifies the image used to build the VM.",
                        "If a string, the image is sourced from a custom image based on the name.",
                        "If a dict with the keys I(publisher), I(offer), I(sku), and I(version), the image is sourced from a Marketplace image. Note that set I(version=latest) to get the most recent version of a given image.",
                        "If a dict with the keys I(name) and I(resource_group), the image is sourced from a custom image based on the I(name) and I(resource_group) set. Note that the key I(resource_group) is optional and if omitted, all images in the subscription will be searched for by I(name).",
                        "Custom image support was added in Ansible 2.5."
                    ],
                    "required": true
                },
                "load_balancer": {
                    "description": [
                        "Load balancer name."
                    ]
                },
                "location": {
                    "description": [
                        "Valid Azure location. Defaults to location of the resource group."
                    ]
                },
                "managed_disk_type": {
                    "choices": [
                        "Standard_LRS",
                        "Premium_LRS"
                    ],
                    "description": [
                        "Managed disk type."
                    ]
                },
                "name": {
                    "description": [
                        "Name of the virtual machine."
                    ],
                    "required": true
                },
                "os_disk_caching": {
                    "aliases": [
                        "disk_caching"
                    ],
                    "choices": [
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "default": "ReadOnly",
                    "description": [
                        "Type of OS disk caching."
                    ]
                },
                "os_type": {
                    "choices": [
                        "Windows",
                        "Linux"
                    ],
                    "default": "Linux",
                    "description": [
                        "Base type of operating system."
                    ]
                },
                "overprovision": {
                    "default": true,
                    "description": [
                        "Specifies whether the Virtual Machine Scale Set should be overprovisioned."
                    ],
                    "type": "bool"
                },
                "password": {
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "plan": {
                    "description": [
                        "Third-party billing plan for the VM."
                    ],
                    "suboptions": {
                        "name": {
                            "description": [
                                "Billing plan name."
                            ],
                            "required": true
                        },
                        "product": {
                            "description": [
                                "Product name."
                            ],
                            "required": true
                        },
                        "promotion_code": {
                            "description": [
                                "Optional promotion code."
                            ]
                        },
                        "publisher": {
                            "description": [
                                "Publisher offering the plan."
                            ],
                            "required": true
                        }
                    },
                    "type": "dict"
                },
                "profile": {
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ],
                    "type": "str"
                },
                "public_ip_per_vm": {
                    "default": false,
                    "description": [
                        "Assign a public IP to each virtual machine of the scale set"
                    ],
                    "type": "bool"
                },
                "remove_on_absent": {
                    "default": [
                        "all"
                    ],
                    "description": [
                        "When removing a VM using I(state=absent), also remove associated resources.",
                        "It can be C(all) or a list with any of the following ['network_interfaces', 'virtual_storage', 'public_ips'].",
                        "Any other input will be ignored."
                    ]
                },
                "resource_group": {
                    "description": [
                        "Name of the resource group containing the virtual machine scale set."
                    ],
                    "required": true
                },
                "scale_in_policy": {
                    "choices": [
                        "Default",
                        "NewestVM",
                        "OldestVM"
                    ],
                    "description": [
                        "define the order in which vmss instances are scaled-in"
                    ]
                },
                "secret": {
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "security_group": {
                    "aliases": [
                        "security_group_name"
                    ],
                    "description": [
                        "Existing security group with which to associate the subnet.",
                        "It can be the security group name which is in the same resource group.",
                        "It can be the resource ID.",
                        "It can be a dict which contains I(name) and I(resource_group) of the security group."
                    ]
                },
                "short_hostname": {
                    "description": [
                        "Short host name."
                    ]
                },
                "single_placement_group": {
                    "default": true,
                    "description": [
                        "When true this limits the scale set to a single placement group, of max size 100 virtual machines."
                    ],
                    "type": "bool"
                },
                "ssh_password_enabled": {
                    "default": true,
                    "description": [
                        "When the os_type is Linux, setting I(ssh_password_enabled=false) will disable SSH password authentication and require use of SSH keys."
                    ],
                    "type": "bool"
                },
                "ssh_public_keys": {
                    "description": [
                        "For I(os_type=Linux) provide a list of SSH keys.",
                        "Each item in the list should be a dictionary where the dictionary contains two keys, C(path) and C(key_data).",
                        "Set the C(path) to the default location of the authorized_keys files.",
                        "On an Enterprise Linux host, for example, the I(path=/home/<admin username>/.ssh/authorized_keys). Set C(key_data) to the actual value of the public key."
                    ]
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Assert the state of the virtual machine scale set.",
                        "State C(present) will check that the machine exists with the requested configuration. If the configuration of the existing machine does not match, the machine will be updated.",
                        "State C(absent) will remove the virtual machine scale set."
                    ]
                },
                "subnet_name": {
                    "aliases": [
                        "subnet"
                    ],
                    "description": [
                        "Subnet name."
                    ]
                },
                "subscription_id": {
                    "description": [
                        "Your Azure subscription Id."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object.",
                        "Metadata tags on the object will be updated with any provided values.",
                        "To remove tags set append_tags option to false.",
                        "Currently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.",
                        "Azure Front Door doesn't support the use of",
                        "Azure Automation and Azure CDN only support 15 tags on resources."
                    ],
                    "type": "dict"
                },
                "tenant": {
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "terminate_event_timeout_minutes": {
                    "description": [
                        "timeout time for termination notification event",
                        "in range between 5 and 15"
                    ]
                },
                "tier": {
                    "choices": [
                        "Basic",
                        "Standard"
                    ],
                    "description": [
                        "SKU Tier."
                    ]
                },
                "upgrade_policy": {
                    "choices": [
                        "Manual",
                        "Automatic"
                    ],
                    "description": [
                        "Upgrade policy.",
                        "Required when creating the Azure virtual machine scale sets."
                    ]
                },
                "virtual_network_name": {
                    "aliases": [
                        "virtual_network"
                    ],
                    "description": [
                        "Virtual Network name."
                    ]
                },
                "virtual_network_resource_group": {
                    "description": [
                        "When creating a virtual machine, if a specific virtual network from another resource group should be used.",
                        "Use this parameter to specify the resource group to use."
                    ]
                },
                "vm_size": {
                    "description": [
                        "A valid Azure VM size value. For example, C(Standard_D4).",
                        "The list of choices varies depending on the subscription and location. Check your subscription for available choices."
                    ]
                },
                "zones": {
                    "description": [
                        "A list of Availability Zones for your virtual machine scale set."
                    ],
                    "type": "list"
                }
            },
            "requirements": [
                "python >= 2.7",
                "azure >= 2.0.0"
            ],
            "seealso": [
                {
                    "description": "How to authenticate using the C(az login) command.",
                    "link": "https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest",
                    "name": "Sign in with Azure CLI"
                }
            ],
            "short_description": "Manage Azure virtual machine scale sets",
            "version_added": "0.1.2",
            "version_added_collection": "azure.azcollection"
        },
        "examples": "\n\n- name: Create VMSS\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    terminate_event_timeout_minutes: 10\n    scale_in_policy: NewestVM\n    admin_username: adminUser\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: CoreOS\n      publisher: CoreOS\n      sku: Stable\n      version: latest\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create VMSS with an image that requires plan information\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 3\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n      sku: Stable\n      version: latest\n    plan:\n      name: cis-ubuntu-linux-1804-l1\n      product: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create a VMSS with a custom image\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with over 100 instances\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 120\n    single_placement_group: False\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with a custom image from a particular resource group\n  azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image:\n      name: customimage001\n      resource_group: myResourceGroup\n",
        "metadata": null,
        "return": {
            "azure_vmss": {
                "description": [
                    "Facts about the current state of the object.",
                    "Note that facts are not part of the registered output but available directly."
                ],
                "returned": "always",
                "sample": {
                    "properties": {
                        "overprovision": true,
                        "scaleInPolicy": {
                            "rules": [
                                "NewestVM"
                            ]
                        },
                        "singlePlacementGroup": true,
                        "upgradePolicy": {
                            "mode": "Manual"
                        },
                        "virtualMachineProfile": {
                            "networkProfile": {
                                "networkInterfaceConfigurations": [
                                    {
                                        "name": "testvmss",
                                        "properties": {
                                            "dnsSettings": {
                                                "dnsServers": []
                                            },
                                            "enableAcceleratedNetworking": false,
                                            "ipConfigurations": [
                                                {
                                                    "name": "default",
                                                    "properties": {
                                                        "privateIPAddressVersion": "IPv4",
                                                        "subnet": {
                                                            "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"
                                                        }
                                                    }
                                                }
                                            ],
                                            "primary": true
                                        }
                                    }
                                ]
                            },
                            "osProfile": {
                                "adminUsername": "testuser",
                                "computerNamePrefix": "testvmss",
                                "linuxConfiguration": {
                                    "disablePasswordAuthentication": true,
                                    "ssh": {
                                        "publicKeys": [
                                            {
                                                "keyData": "",
                                                "path": "/home/testuser/.ssh/authorized_keys"
                                            }
                                        ]
                                    }
                                },
                                "secrets": []
                            },
                            "scheduledEventsProfile": {
                                "terminateNotificationProfile": {
                                    "enable": true,
                                    "notBeforeTimeout": "PT10M"
                                }
                            },
                            "storageProfile": {
                                "dataDisks": [
                                    {
                                        "caching": "ReadWrite",
                                        "createOption": "empty",
                                        "diskSizeGB": 64,
                                        "lun": 0,
                                        "managedDisk": {
                                            "storageAccountType": "Standard_LRS"
                                        }
                                    }
                                ],
                                "imageReference": {
                                    "offer": "CoreOS",
                                    "publisher": "CoreOS",
                                    "sku": "Stable",
                                    "version": "899.17.0"
                                },
                                "osDisk": {
                                    "caching": "ReadWrite",
                                    "createOption": "fromImage",
                                    "managedDisk": {
                                        "storageAccountType": "Standard_LRS"
                                    }
                                }
                            }
                        }
                    },
                    "sku": {
                        "capacity": 2,
                        "name": "Standard_DS1_v2",
                        "tier": "Standard"
                    },
                    "tags": null,
                    "type": "Microsoft.Compute/virtualMachineScaleSets"
                },
                "type": "dict"
            }
        }
    }
}
