{
    "community.general.oneandone_server": {
        "doc": {
            "author": [
                "Amel Ajdinovic (@aajdinov)",
                "Ethan Devenport (@edevenport)"
            ],
            "collection": "community.general",
            "description": [
                "Create, destroy, update, start, stop, and reboot a 1&1 Host server. When the server is created it can optionally wait for it to be 'running' before returning."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/oneandone_server.py",
            "has_action": false,
            "module": "oneandone_server",
            "options": {
                "api_url": {
                    "description": [
                        "Custom API URL. Overrides the ONEANDONE_API_URL environment variable."
                    ],
                    "type": "str"
                },
                "appliance": {
                    "description": [
                        "The operating system name or ID for the server. It is required only for 'present' state."
                    ],
                    "type": "str"
                },
                "auth_token": {
                    "description": [
                        "Authenticating API token provided by 1&1. Overrides the ONEANDONE_AUTH_TOKEN environment variable."
                    ],
                    "type": "str"
                },
                "auto_increment": {
                    "default": "yes",
                    "description": [
                        "When creating multiple servers at once, whether to differentiate hostnames by appending a count after them or substituting the count where there is a %02d or %03d in the hostname string."
                    ],
                    "type": "bool"
                },
                "cores_per_processor": {
                    "description": [
                        "The number of cores per processor. It must be provided with vcore, ram, and hdds parameters."
                    ],
                    "type": "int"
                },
                "count": {
                    "default": 1,
                    "description": [
                        "The number of servers to create."
                    ],
                    "type": "int"
                },
                "datacenter": {
                    "choices": [
                        "US",
                        "ES",
                        "DE",
                        "GB"
                    ],
                    "default": "US",
                    "description": [
                        "The datacenter location."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "The description of the server."
                    ],
                    "type": "str"
                },
                "firewall_policy": {
                    "description": [
                        "The firewall policy name or ID."
                    ],
                    "type": "str"
                },
                "fixed_instance_size": {
                    "description": [
                        "The instance size name or ID of the server. It is required only for 'present' state, and it is mutually exclusive with vcore, cores_per_processor, ram, and hdds parameters.",
                        "The available choices are: C(S), C(M), C(L), C(XL), C(XXL), C(3XL), C(4XL), C(5XL)"
                    ],
                    "type": "str"
                },
                "hdds": {
                    "description": [
                        "A list of hard disks with nested \"size\" and \"is_main\" properties. It must be provided with vcore, cores_per_processor, and ram parameters."
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "hostname": {
                    "description": [
                        "The hostname or ID of the server. Only used when state is 'present'."
                    ],
                    "type": "str"
                },
                "load_balancer": {
                    "description": [
                        "The load balancer name or ID."
                    ],
                    "type": "str"
                },
                "monitoring_policy": {
                    "description": [
                        "The monitoring policy name or ID."
                    ],
                    "type": "str"
                },
                "private_network": {
                    "description": [
                        "The private network name or ID."
                    ],
                    "type": "str"
                },
                "ram": {
                    "description": [
                        "The amount of RAM memory. It must be provided with with vcore, cores_per_processor, and hdds parameters."
                    ],
                    "type": "float"
                },
                "server": {
                    "description": [
                        "Server identifier (ID or hostname). It is required for all states except 'running' and 'present'."
                    ],
                    "type": "str"
                },
                "server_type": {
                    "choices": [
                        "cloud",
                        "baremetal",
                        "k8s_node"
                    ],
                    "default": "cloud",
                    "description": [
                        "The type of server to be built."
                    ],
                    "type": "str"
                },
                "ssh_key": {
                    "description": [
                        "User's public SSH key (contents, not path)."
                    ],
                    "type": "raw"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "running",
                        "stopped"
                    ],
                    "default": "present",
                    "description": [
                        "Define a server's state to create, remove, start or stop it."
                    ],
                    "type": "str"
                },
                "vcore": {
                    "description": [
                        "The total number of processors. It must be provided with cores_per_processor, ram, and hdds parameters."
                    ],
                    "type": "int"
                },
                "wait": {
                    "default": "yes",
                    "description": [
                        "Wait for the server to be in state 'running' before returning. Also used for delete operation (set to 'false' if you don't want to wait for each individual server to be deleted before moving on with other tasks.)"
                    ],
                    "type": "bool"
                },
                "wait_interval": {
                    "default": 5,
                    "description": [
                        "Defines the number of seconds to wait when using the wait_for methods"
                    ],
                    "type": "int"
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "1and1",
                "python >= 2.6"
            ],
            "short_description": "Create, destroy, start, stop, and reboot a 1&1 Host server."
        },
        "examples": "\n- name: Create three servers and enumerate their names\n  community.general.oneandone_server:\n    auth_token: oneandone_private_api_key\n    hostname: node%02d\n    fixed_instance_size: XL\n    datacenter: US\n    appliance: C5A349786169F140BCBC335675014C08\n    auto_increment: true\n    count: 3\n\n- name: Create three servers, passing in an ssh_key\n  community.general.oneandone_server:\n    auth_token: oneandone_private_api_key\n    hostname: node%02d\n    vcore: 2\n    cores_per_processor: 4\n    ram: 8.0\n    hdds:\n      - size: 50\n        is_main: false\n    datacenter: ES\n    appliance: C5A349786169F140BCBC335675014C08\n    count: 3\n    wait: yes\n    wait_timeout: 600\n    wait_interval: 10\n    ssh_key: SSH_PUBLIC_KEY\n\n- name: Removing server\n  community.general.oneandone_server:\n    auth_token: oneandone_private_api_key\n    state: absent\n    server: 'node01'\n\n- name: Starting server\n  community.general.oneandone_server:\n    auth_token: oneandone_private_api_key\n    state: running\n    server: 'node01'\n\n- name: Stopping server\n  community.general.oneandone_server:\n    auth_token: oneandone_private_api_key\n    state: stopped\n    server: 'node01'\n",
        "metadata": null,
        "return": {
            "servers": {
                "description": "Information about each server that was processed",
                "returned": "always",
                "sample": "[{\"hostname\": \"my-server\", \"id\": \"server-id\"}]",
                "type": "list"
            }
        }
    }
}
