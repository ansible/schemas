{
    "community.aws.aws_direct_connect_link_aggregation_group": {
        "doc": {
            "author": "Sloane Hertel (@s-hertel)",
            "collection": "community.aws",
            "description": [
                "Create, delete, or modify a Direct Connect link aggregation group."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/aws_direct_connect_link_aggregation_group.py",
            "has_action": false,
            "module": "aws_direct_connect_link_aggregation_group",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "bandwidth": {
                    "description": [
                        "The bandwidth of the link aggregation group."
                    ],
                    "type": "str"
                },
                "connection_id": {
                    "description": [
                        "A connection ID to link with the link aggregation group upon creation."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "delete_with_disassociation": {
                    "default": false,
                    "description": [
                        "To be used with I(state=absent) to delete connections after disassociating them with the LAG."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "force_delete": {
                    "default": false,
                    "description": [
                        "This allows the minimum number of links to be set to 0, any hosted connections disassociated, and any virtual interfaces associated to the LAG deleted."
                    ],
                    "type": "bool"
                },
                "link_aggregation_group_id": {
                    "description": [
                        "The ID of the Direct Connect link aggregation group."
                    ],
                    "type": "str"
                },
                "location": {
                    "description": [
                        "The location of the link aggregation group."
                    ],
                    "type": "str"
                },
                "min_links": {
                    "description": [
                        "The minimum number of physical connections that must be operational for the LAG itself to be operational."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "The name of the Direct Connect link aggregation group."
                    ],
                    "type": "str"
                },
                "num_connections": {
                    "description": [
                        "The number of connections with which to initialize the link aggregation group."
                    ],
                    "type": "int"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "The state of the Direct Connect link aggregation group."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": false,
                    "description": [
                        "Whether or not to wait for the operation to complete.",
                        "May be useful when waiting for virtual interfaces to be deleted.",
                        "The time to wait can be controlled by setting I(wait_timeout)."
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 120,
                    "description": [
                        "The duration in seconds to wait if I(wait=true)."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore",
                "python >= 2.6"
            ],
            "short_description": "Manage Direct Connect LAG bundles",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n\n# create a Direct Connect connection\n- community.aws.aws_direct_connect_link_aggregation_group:\n  state: present\n  location: EqDC2\n  lag_id: dxlag-xxxxxxxx\n  bandwidth: 1Gbps\n\n",
        "metadata": null,
        "return": {
            "aws_device": {
                "description": "The AWS Direct Connection endpoint that hosts the LAG.",
                "returned": "when I(state=present)",
                "sample": "EqSe2-1bwfvazist2k0",
                "type": "str"
            },
            "changed": {
                "description": "Whether or not the LAG has changed.",
                "returned": "always",
                "type": "str"
            },
            "connections": {
                "description": "A list of connections bundled by this LAG.",
                "returned": "when I(state=present)",
                "sample": {
                    "connections": [
                        {
                            "aws_device": "EqSe2-1bwfvazist2k0",
                            "bandwidth": "1Gbps",
                            "connection_id": "dxcon-fgzjah5a",
                            "connection_name": "Requested Connection 1 for Lag dxlag-fgtoh97h",
                            "connection_state": "down",
                            "lag_id": "dxlag-fgnsp4rq",
                            "location": "EqSe2",
                            "owner_account": "448830907657",
                            "region": "us-west-2"
                        }
                    ]
                },
                "type": "list"
            },
            "connections_bandwidth": {
                "description": "The individual bandwidth of the physical connections bundled by the LAG.",
                "returned": "when I(state=present)",
                "sample": "1Gbps",
                "type": "str"
            },
            "lag_id": {
                "description": "Unique identifier for the link aggregation group.",
                "returned": "when I(state=present)",
                "sample": "dxlag-fgnsp4rq",
                "type": "str"
            },
            "lag_name": {
                "description": "User-provided name for the link aggregation group.",
                "returned": "when I(state=present)",
                "type": "str"
            },
            "lag_state": {
                "description": "State of the LAG.",
                "returned": "when I(state=present)",
                "sample": "pending",
                "type": "str"
            },
            "location": {
                "description": "Where the connection is located.",
                "returned": "when I(state=present)",
                "sample": "EqSe2",
                "type": "str"
            },
            "minimum_links": {
                "description": "The minimum number of physical connections that must be operational for the LAG itself to be operational.",
                "returned": "when I(state=present)",
                "type": "int"
            },
            "number_of_connections": {
                "description": "The number of physical connections bundled by the LAG.",
                "returned": "when I(state=present)",
                "type": "int"
            },
            "owner_account": {
                "description": "Owner account ID of the LAG.",
                "returned": "when I(state=present)",
                "type": "str"
            },
            "region": {
                "description": "The region in which the LAG exists.",
                "returned": "when I(state=present)",
                "type": "str"
            }
        }
    }
}
