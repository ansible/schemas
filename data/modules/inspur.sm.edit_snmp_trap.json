{
    "inspur.sm.edit_snmp_trap": {
        "doc": {
            "author": [
                "WangBaoshan (@ISIB-group)"
            ],
            "collection": "inspur.sm",
            "description": [
                "Set snmp trap on Inspur server."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/inspur/sm/plugins/modules/edit_snmp_trap.py",
            "has_action": false,
            "module": "edit_snmp_trap",
            "options": {
                "auth_password": {
                    "description": [
                        "Set auth password of V3 trap, password is a string of 8 to 16 alpha-numeric characters.",
                        "Required when I(auth_protocol) is either C(SHA) or C(MD5)."
                    ],
                    "type": "str"
                },
                "auth_protocol": {
                    "choices": [
                        "NONE",
                        "SHA",
                        "MD5"
                    ],
                    "description": [
                        "Choose authentication."
                    ],
                    "type": "str"
                },
                "community": {
                    "description": [
                        "Community of v1/v2c."
                    ],
                    "type": "str"
                },
                "contact": {
                    "description": [
                        "Set contact, can set NULL."
                    ],
                    "type": "str"
                },
                "engine_id": {
                    "description": [
                        "Set Engine ID of V3 trap, engine ID is a string of 10 to 48 hex characters, must even, can set NULL."
                    ],
                    "type": "str"
                },
                "event_severity": {
                    "choices": [
                        "all",
                        "warning",
                        "critical"
                    ],
                    "description": [
                        "Event Severity."
                    ],
                    "type": "str"
                },
                "host": {
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ],
                    "type": "str"
                },
                "location": {
                    "description": [
                        "Set host Location, can set NULL."
                    ],
                    "type": "str"
                },
                "os": {
                    "description": [
                        "Set host OS, can set NULL."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ],
                    "type": "str"
                },
                "priv_password": {
                    "description": [
                        "Set privacy password of V3 trap, password is a string of 8 to 16 alpha-numeric characters.",
                        "Required when I(priv_protocol) is either C(DES) or C(AES)."
                    ],
                    "type": "str"
                },
                "priv_protocol": {
                    "choices": [
                        "NONE",
                        "DES",
                        "AES"
                    ],
                    "description": [
                        "Choose Privacy."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "system_id": {
                    "description": [
                        "Set system ID, can set NULL."
                    ],
                    "type": "str"
                },
                "system_name": {
                    "description": [
                        "Set system name, can set NULL."
                    ],
                    "type": "str"
                },
                "trap_port": {
                    "description": [
                        "Set SNMP trap Port(1-65535)."
                    ],
                    "type": "int"
                },
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ],
                    "type": "str"
                },
                "v3username": {
                    "description": [
                        "Set user name of V3 trap."
                    ],
                    "type": "str"
                },
                "version": {
                    "choices": [
                        "1",
                        "2c",
                        "3"
                    ],
                    "description": [
                        "SNMP trap version."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Set snmp trap.",
            "version_added": "0.1.0",
            "version_added_collection": "inspur.sm"
        },
        "examples": "\n- name: Trap test\n  hosts: ism\n  no_log: true\n  connection: local\n  gather_facts: no\n  vars:\n    ism:\n      host: \"{{ ansible_ssh_host }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  tasks:\n\n  - name: \"Set snmp trap v2c\"\n    inspur.sm.edit_snmp_trap:\n      version: \"2c\"\n      event_severity: \"warning\"\n      inspur: \"test\"\n      system_name: \"Inspur\"\n      provider: \"{{ ism }}\"\n\n  - name: \"Set snmp trap v3\"\n    inspur.sm.edit_snmp_trap:\n      version: \"3\"\n      event_severity: \"all\"\n      v3username: \"Inspur\"\n      engine_id: \"1234567890\"\n      auth_protocol: \"SHA\"\n      auth_password: \"12345678\"\n      priv_protocol: \"AES\"\n      priv_password: \"123454678\"\n      trap_port: 162\n      provider: \"{{ ism }}\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "Check to see if a change was made on the device.",
                "returned": "always",
                "type": "bool"
            },
            "message": {
                "description": "Messages returned after module execution.",
                "returned": "always",
                "type": "str"
            },
            "state": {
                "description": "Status after module execution.",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
