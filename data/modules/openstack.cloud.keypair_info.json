{
    "openstack.cloud.keypair_info": {
        "doc": {
            "author": "OpenStack Ansible SIG",
            "collection": "openstack.cloud",
            "description": [
                "Get information about keypairs that are associated with the account"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/openstack/cloud/plugins/modules/keypair_info.py",
            "has_action": false,
            "module": "keypair_info",
            "notes": [
                "The standard OpenStack environment variables, such as C(OS_USERNAME) may be used instead of providing explicit values.",
                "Auth information is driven by openstacksdk, which means that values can come from a yaml config file in /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment variables, then finally by explicit parameters in plays. More information can be found at U(https://docs.openstack.org/openstacksdk/)"
            ],
            "options": {
                "api_timeout": {
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ],
                    "type": "int"
                },
                "auth": {
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains (for example, I(user_domain_name) or I(project_domain_name)) if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ],
                    "type": "dict"
                },
                "auth_type": {
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ],
                    "type": "str"
                },
                "availability_zone": {
                    "description": [
                        "Ignored. Present for backwards compatibility"
                    ],
                    "type": "str"
                },
                "ca_cert": {
                    "aliases": [
                        "cacert"
                    ],
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ],
                    "type": "str"
                },
                "client_cert": {
                    "aliases": [
                        "cert"
                    ],
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "client_key": {
                    "aliases": [
                        "key"
                    ],
                    "description": [
                        "A path to a client key to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "cloud": {
                    "description": [
                        "Named cloud or cloud config to operate against. If I(cloud) is a string, it references a named cloud config as defined in an OpenStack clouds.yaml file. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present. If I(cloud) is a dict, it contains a complete cloud configuration like would be in a section of clouds.yaml."
                    ],
                    "type": "raw"
                },
                "interface": {
                    "aliases": [
                        "endpoint_type"
                    ],
                    "choices": [
                        "admin",
                        "internal",
                        "public"
                    ],
                    "default": "public",
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "type": "str"
                },
                "limit": {
                    "description": [
                        "Requests a page size of items.",
                        "Returns a number of items up to a limit value."
                    ],
                    "type": "int"
                },
                "marker": {
                    "description": [
                        "The last-seen item."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name or ID of the keypair"
                    ],
                    "type": "str"
                },
                "region_name": {
                    "description": [
                        "Name of the region."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ],
                    "type": "int"
                },
                "user_id": {
                    "description": [
                        "It allows admin users to operate key-pairs of specified user ID."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify"
                    ],
                    "default": false,
                    "description": [
                        "Whether or not SSL API requests should be verified.",
                        "Before Ansible 2.3 this defaulted to C(yes)."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "openstacksdk",
                "openstacksdk >= 0.12.0",
                "python >= 3.6"
            ],
            "short_description": "Get information about keypairs from OpenStack"
        },
        "examples": "\n- name: Get information about keypairs\n  openstack.cloud.keypair_info:\n  register: result\n\n- name: Get information about keypairs using optional parameters\n  openstack.cloud.keypair_info:\n    name: \"test\"\n    user_id: \"fed75b36fd7a4078a769178d2b1bd844\"\n    limit: 10\n    marker: \"jdksl\"\n  register: result\n",
        "metadata": null,
        "return": {
            "openstack_keypairs": {
                "contains": {
                    "created_at": {
                        "description": [
                            "The date and time when the resource was created."
                        ],
                        "sample": "2021-01-19T14:52:07.261634",
                        "type": "str"
                    },
                    "fingerprint": {
                        "description": [
                            "The fingerprint for the keypair."
                        ],
                        "sample": "7e:eb:ab:24:ba:d1:e1:88:ae:9a:fb:66:53:df:d3:bd",
                        "type": "str"
                    },
                    "id": {
                        "description": [
                            "The id identifying the keypair"
                        ],
                        "sample": "keypair-5d935425-31d5-48a7-a0f1-e76e9813f2c3",
                        "type": "str"
                    },
                    "is_deleted": {
                        "description": [
                            "A boolean indicates whether this keypair is deleted or not."
                        ],
                        "type": "bool"
                    },
                    "name": {
                        "description": [
                            "A keypair name which will be used to reference it later."
                        ],
                        "sample": "keypair-5d935425-31d5-48a7-a0f1-e76e9813f2c3",
                        "type": "str"
                    },
                    "private_key": {
                        "description": [
                            "The private key for the keypair."
                        ],
                        "sample": "MIICXAIBAAKBgQCqGKukO ... hZj6+H0qtjTkVxwTCpvKe4eCZ0FPq",
                        "type": "str"
                    },
                    "public_key": {
                        "description": [
                            "The keypair public key."
                        ],
                        "sample": "ssh-rsa AAAAB3NzaC1yc ... 8rPsBUHNLQp Generated-by-Nova",
                        "type": "str"
                    },
                    "type": {
                        "description": [
                            "The type of the keypair.",
                            "Allowed values are ssh or x509."
                        ],
                        "sample": "ssh",
                        "type": "str"
                    },
                    "user_id": {
                        "description": [
                            "It allows admin users to operate key-pairs of specified user ID."
                        ],
                        "sample": "59b10f2a2138428ea9358e10c7e44444",
                        "type": "str"
                    }
                },
                "description": [
                    "Lists keypairs that are associated with the account."
                ],
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
