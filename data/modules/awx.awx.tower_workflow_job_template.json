{
    "awx.awx.tower_workflow_job_template": {
        "doc": {
            "author": "John Westcott IV (@john-westcott-iv)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower workflow job templates.",
                "Replaces the deprecated tower_workflow_template module.",
                "Use the tower_workflow_job_template_node after this to build the workflow's graph."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_workflow_job_template.py",
            "has_action": false,
            "module": "tower_workflow_job_template",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "allow_simultaneous": {
                    "description": [
                        "Allow simultaneous runs of the workflow job template."
                    ],
                    "type": "bool"
                },
                "ask_inventory_on_launch": {
                    "description": [
                        "Prompt user for inventory on launch of this workflow job template"
                    ],
                    "type": "bool"
                },
                "ask_limit_on_launch": {
                    "description": [
                        "Prompt user for limit on launch of this workflow job template"
                    ],
                    "type": "bool"
                },
                "ask_scm_branch_on_launch": {
                    "description": [
                        "Prompt user for SCM branch on launch of this workflow job template"
                    ],
                    "type": "bool"
                },
                "ask_variables_on_launch": {
                    "description": [
                        "Prompt user for C(extra_vars) on launch."
                    ],
                    "type": "bool"
                },
                "description": {
                    "description": [
                        "Optional description of this workflow job template."
                    ],
                    "type": "str"
                },
                "extra_vars": {
                    "description": [
                        "Variables which will be made available to jobs ran inside the workflow."
                    ],
                    "type": "dict"
                },
                "inventory": {
                    "description": [
                        "Inventory applied as a prompt, assuming job template prompts for inventory"
                    ],
                    "type": "str"
                },
                "labels": {
                    "description": [
                        "The labels applied to this job template"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "limit": {
                    "description": [
                        "Limit applied as a prompt, assuming job template prompts for limit"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of this workflow job template."
                    ],
                    "required": true,
                    "type": "str"
                },
                "new_name": {
                    "description": [
                        "Setting this option will change the existing name."
                    ],
                    "type": "str"
                },
                "notification_templates_approvals": {
                    "description": [
                        "list of notifications to send on start"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_error": {
                    "description": [
                        "list of notifications to send on error"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_started": {
                    "description": [
                        "list of notifications to send on start"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_success": {
                    "description": [
                        "list of notifications to send on success"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "organization": {
                    "description": [
                        "Organization the workflow job template exists in.",
                        "Used to help lookup the object, cannot be modified using this module.",
                        "If not provided, will lookup by name only, which does not work with duplicates."
                    ],
                    "type": "str"
                },
                "scm_branch": {
                    "description": [
                        "SCM branch applied as a prompt, assuming job template prompts for SCM branch"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the resource."
                    ],
                    "type": "str"
                },
                "survey_enabled": {
                    "description": [
                        "Setting that variable will prompt the user for job type on the workflow launch."
                    ],
                    "type": "bool"
                },
                "survey_spec": {
                    "aliases": [
                        "survey"
                    ],
                    "description": [
                        "The definition of the survey associated to the workflow."
                    ],
                    "type": "dict"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "webhook_credential": {
                    "description": [
                        "Personal Access Token for posting back the status to the service API"
                    ],
                    "type": "str"
                },
                "webhook_service": {
                    "choices": [
                        "github",
                        "gitlab"
                    ],
                    "description": [
                        "Service that webhook requests will be accepted from"
                    ],
                    "type": "str"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower workflow job templates."
        },
        "examples": "\n- name: Create a workflow job template\n  tower_workflow_job_template:\n    name: example-workflow\n    description: created by Ansible Playbook\n    organization: Default\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
