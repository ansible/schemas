{
    "community.vmware.vmware_dvswitch_uplink_pg": {
        "doc": {
            "author": [
                "Christian Kotte (@ckotte)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to configure the uplink portgroup of a Distributed Switch."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_dvswitch_uplink_pg.py",
            "has_action": false,
            "module": "vmware_dvswitch_uplink_pg",
            "notes": [
                "Tested on vSphere 6.5 and 6.7"
            ],
            "options": {
                "advanced": {
                    "aliases": [
                        "port_policy"
                    ],
                    "default": {
                        "block_override": true,
                        "netflow_override": false,
                        "port_config_reset_at_disconnect": true,
                        "traffic_filter_override": false,
                        "vendor_config_override": false,
                        "vlan_override": false
                    },
                    "description": [
                        "Dictionary which configures the advanced policy settings for the uplink portgroup.",
                        "Valid attributes are:",
                        "- C(port_config_reset_at_disconnect) (bool): indicates if the configuration of a port is reset automatically after disconnect. (default: true)",
                        "- C(block_override) (bool): indicates if the block policy can be changed per port. (default: true)",
                        "- C(netflow_override) (bool): indicates if the NetFlow policy can be changed per port. (default: false)",
                        "- C(traffic_filter_override) (bool): indicates if the traffic filter can be changed per port. (default: false)",
                        "- C(vendor_config_override) (bool): indicates if the vendor config can be changed per port. (default: false)",
                        "- C(vlan_override) (bool): indicates if the vlan can be changed per port. (default: false)"
                    ],
                    "required": false,
                    "type": "dict"
                },
                "block_all_ports": {
                    "default": false,
                    "description": [
                        "Indicates if all ports are blocked on the uplink portgroup."
                    ],
                    "type": "bool"
                },
                "description": {
                    "description": [
                        "The description of the uplink portgroup."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "lacp": {
                    "default": {
                        "mode": "passive",
                        "status": "disabled"
                    },
                    "description": [
                        "Dictionary which configures the LACP settings for the uplink portgroup.",
                        "The options are only used if the LACP support mode is set to 'basic'.",
                        "The following parameters are required:",
                        "- C(status) (str): Indicates if LACP is enabled. (default: disabled)",
                        "- C(mode) (str): The negotiating state of the uplinks/ports. (default: passive)"
                    ],
                    "required": false,
                    "type": "dict"
                },
                "name": {
                    "description": [
                        "The name of the uplink portgroup.",
                        "The current name will be used if not specified."
                    ],
                    "type": "str"
                },
                "netflow_enabled": {
                    "default": false,
                    "description": [
                        "Indicates if NetFlow is enabled on the uplink portgroup."
                    ],
                    "type": "bool"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "switch": {
                    "aliases": [
                        "dvswitch"
                    ],
                    "description": [
                        "The name of the Distributed Switch."
                    ],
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                },
                "vlan_trunk_range": {
                    "default": [
                        "0-4094"
                    ],
                    "description": [
                        "The VLAN trunk range that should be configured with the uplink portgroup.",
                        "This can be a combination of multiple ranges and numbers, example: [ 2-3967, 4049-4092 ]."
                    ],
                    "type": "list"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Manage uplink portproup configuration of a Distributed Switch"
        },
        "examples": "\n- name: Configure Uplink portgroup\n  community.vmware.vmware_dvswitch_uplink_pg:\n    hostname: '{{ inventory_hostname }}'\n    username: '{{ vcsa_username }}'\n    password: '{{ vcsa_password }}'\n    switch: dvSwitch\n    name: dvSwitch-DVUplinks\n    advanced:\n      port_config_reset_at_disconnect: True\n      block_override: True\n      vendor_config_override: False\n      vlan_override: False\n      netflow_override: False\n      traffic_filter_override: False\n    vlan_trunk_range:\n      - '0-4094'\n    netflow_enabled: False\n    block_all_ports: False\n  delegate_to: localhost\n\n- name: Enabled LACP on Uplink portgroup\n  community.vmware.vmware_dvswitch_uplink_pg:\n    hostname: '{{ inventory_hostname }}'\n    username: '{{ vcsa_username }}'\n    password: '{{ vcsa_password }}'\n    switch: dvSwitch\n    lacp:\n      status: enabled\n      mode: active\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "result": {
                "description": "information about performed operation",
                "returned": "always",
                "sample": {
                    "adv_block_ports": true,
                    "adv_netflow": false,
                    "adv_reset_at_disconnect": true,
                    "adv_traffic_filtering": false,
                    "adv_vendor_conf": false,
                    "adv_vlan": false,
                    "block_all_ports": false,
                    "changed": false,
                    "description": null,
                    "dvswitch": "dvSwitch",
                    "lacp_status": "disabled",
                    "lacp_status_previous": "enabled",
                    "name": "dvSwitch-DVUplinks",
                    "netflow_enabled": false,
                    "result": "Uplink portgroup already configured properly",
                    "vlan_trunk_range": [
                        "2-3967",
                        "4049-4092"
                    ]
                },
                "type": "str"
            }
        }
    }
}
