{
    "community.grafana.grafana_user": {
        "doc": {
            "author": [
                "Antoine Tanzilli (@Tailzip)",
                "Hong Viet LE (@pomverte)",
                "Julien Alexandre (@jual)",
                "Marc Cyprien (@LeFameux)"
            ],
            "collection": "community.grafana",
            "description": [
                "Create/update/delete Grafana User through the users and admin API.",
                "Tested with Grafana v6.4.3",
                "Password update is not supported at the time"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/grafana/plugins/modules/grafana_user.py",
            "has_action": false,
            "module": "grafana_user",
            "options": {
                "client_cert": {
                    "description": [
                        "PEM formatted certificate chain file to be used for SSL client authentication.",
                        "This file can also include the key as well, and if the key is included, I(client_key) is not required"
                    ],
                    "type": "path"
                },
                "client_key": {
                    "description": [
                        "PEM formatted file that contains your private key to be used for SSL client authentication.",
                        "If I(client_cert) contains both the certificate and key, this option is not required."
                    ],
                    "type": "path"
                },
                "email": {
                    "description": [
                        "The email of the Grafana User."
                    ],
                    "required": false,
                    "type": "str"
                },
                "is_admin": {
                    "default": false,
                    "description": [
                        "The Grafana User is an admin."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "login": {
                    "description": [
                        "The login of the Grafana User."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the Grafana User."
                    ],
                    "required": false,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password of the Grafana User.",
                        "At the moment, this field is not updated yet."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State if the user should be present in Grafana or not"
                    ],
                    "type": "str"
                },
                "url": {
                    "aliases": [
                        "grafana_url"
                    ],
                    "description": [
                        "The Grafana URL."
                    ],
                    "required": true,
                    "type": "str"
                },
                "url_password": {
                    "aliases": [
                        "grafana_password"
                    ],
                    "default": "admin",
                    "description": [
                        "The Grafana password for API authentication."
                    ],
                    "type": "str"
                },
                "url_username": {
                    "aliases": [
                        "grafana_user"
                    ],
                    "default": "admin",
                    "description": [
                        "The Grafana user for API authentication."
                    ],
                    "type": "str"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage Grafana User",
            "version_added": "1.0.0",
            "version_added_collection": "community.grafana"
        },
        "examples": "\n---\n- name: Create or update a Grafana user\n  community.grafana.grafana_user:\n    url: \"https://grafana.example.com\"\n    url_username: admin\n    url_password: changeme\n    name: \"Bruce Wayne\"\n    email: batman@gotham.city\n    login: batman\n    password: robin\n    is_admin: true\n    state: present\n\n- name: Delete a Grafana user\n  community.grafana.grafana_user:\n    url: \"https://grafana.example.com\"\n    url_username: admin\n    url_password: changeme\n    login: batman\n    state: absent\n",
        "metadata": null,
        "return": {
            "user": {
                "contains": {
                    "email": {
                        "description": "The User email address",
                        "returned": "always",
                        "sample": [
                            "foo.bar@example.com"
                        ],
                        "type": "str"
                    },
                    "id": {
                        "description": "The User id",
                        "returned": "always",
                        "sample": [
                            42
                        ],
                        "type": "int"
                    },
                    "isDisabled": {
                        "description": "The Grafana account status",
                        "returned": "always",
                        "sample": [
                            false
                        ],
                        "type": "bool"
                    },
                    "isExternal": {
                        "description": "The Grafana account information on external user provider",
                        "returned": "always",
                        "sample": [
                            false
                        ],
                        "type": "bool"
                    },
                    "isGrafanaAdmin": {
                        "description": "The Grafana user permission for admin",
                        "returned": "always",
                        "sample": [
                            false
                        ],
                        "type": "bool"
                    },
                    "login": {
                        "description": "The User login",
                        "returned": "always",
                        "sample": [
                            "batman"
                        ],
                        "type": "str"
                    },
                    "orgId": {
                        "description": "The organization id that the team is part of.",
                        "returned": "always",
                        "sample": [
                            1
                        ],
                        "type": "int"
                    },
                    "theme": {
                        "description": "The Grafana theme",
                        "returned": "always",
                        "sample": [
                            "light"
                        ],
                        "type": "str"
                    }
                },
                "description": "Information about the User",
                "returned": "when state present",
                "type": "complex"
            }
        }
    }
}
