{
    "google.cloud.gcp_cloudscheduler_job_info": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "Gather info for GCP Job"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_cloudscheduler_job_info.py",
            "has_action": false,
            "module": "gcp_cloudscheduler_job_info",
            "notes": [
                "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.",
                "for authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.",
                "For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.",
                "For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.",
                "For authentication, you can set scopes using the C(GCP_SCOPES) env variable.",
                "Environment variables values will only be used if the playbook values are not set.",
                "The I(service_account_email) and I(service_account_file) options are mutually exclusive."
            ],
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "region": {
                    "description": [
                        "Region where the scheduler job resides ."
                    ],
                    "required": true,
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Gather info for GCP Job"
        },
        "examples": "\n- name: get info on a job\n  gcp_cloudscheduler_job_info:\n    region: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "resources": {
                "contains": {
                    "appEngineHttpTarget": {
                        "contains": {
                            "appEngineRouting": {
                                "contains": {
                                    "instance": {
                                        "description": [
                                            "App instance.",
                                            "By default, the job is sent to an instance which is available when the job is attempted."
                                        ],
                                        "returned": "success",
                                        "type": "str"
                                    },
                                    "service": {
                                        "description": [
                                            "App service.",
                                            "By default, the job is sent to the service which is the default service when the job is attempted."
                                        ],
                                        "returned": "success",
                                        "type": "str"
                                    },
                                    "version": {
                                        "description": [
                                            "App version.",
                                            "By default, the job is sent to the version which is the default version when the job is attempted."
                                        ],
                                        "returned": "success",
                                        "type": "str"
                                    }
                                },
                                "description": [
                                    "App Engine Routing setting for the job."
                                ],
                                "returned": "success",
                                "type": "complex"
                            },
                            "body": {
                                "description": [
                                    "HTTP request body. A request body is allowed only if the HTTP method is POST or PUT. It will result in invalid argument error to set a body on a job with an incompatible HttpMethod.",
                                    "A base64-encoded string."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "headers": {
                                "description": [
                                    "HTTP request headers.",
                                    "This map contains the header field names and values. Headers can be set when the job is created."
                                ],
                                "returned": "success",
                                "type": "dict"
                            },
                            "httpMethod": {
                                "description": [
                                    "Which HTTP method to use for the request."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "relativeUri": {
                                "description": [
                                    "The relative URI."
                                ],
                                "returned": "success",
                                "type": "str"
                            }
                        },
                        "description": [
                            "App Engine HTTP target.",
                            "If the job providers a App Engine HTTP target the cron will send a request to the service instance ."
                        ],
                        "returned": "success",
                        "type": "complex"
                    },
                    "attemptDeadline": {
                        "description": [
                            "The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig.",
                            "The allowed duration for this deadline is: * For HTTP targets, between 15 seconds and 30 minutes.",
                            "* For App Engine HTTP targets, between 15 seconds and 24 hours.",
                            "* **Note**: For PubSub targets, this field is ignored - setting it will introduce an unresolvable diff.",
                            "A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\" ."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "description": {
                        "description": [
                            "A human-readable description for the job. This string must not contain more than 500 characters."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "httpTarget": {
                        "contains": {
                            "body": {
                                "description": [
                                    "HTTP request body. A request body is allowed only if the HTTP method is POST, PUT, or PATCH. It is an error to set body on a job with an incompatible HttpMethod.",
                                    "A base64-encoded string."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "headers": {
                                "description": [
                                    "This map contains the header field names and values. Repeated headers are not supported, but a header value can contain commas."
                                ],
                                "returned": "success",
                                "type": "dict"
                            },
                            "httpMethod": {
                                "description": [
                                    "Which HTTP method to use for the request."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "oauthToken": {
                                "contains": {
                                    "scope": {
                                        "description": [
                                            "OAuth scope to be used for generating OAuth access token. If not specified, \"U(https://www.googleapis.com/auth/cloud-platform\") will be used."
                                        ],
                                        "returned": "success",
                                        "type": "str"
                                    },
                                    "serviceAccountEmail": {
                                        "description": [
                                            "Service account email to be used for generating OAuth token.",
                                            "The service account must be within the same project as the job."
                                        ],
                                        "returned": "success",
                                        "type": "str"
                                    }
                                },
                                "description": [
                                    "Contains information needed for generating an OAuth token.",
                                    "This type of authorization should be used when sending requests to a GCP endpoint."
                                ],
                                "returned": "success",
                                "type": "complex"
                            },
                            "oidcToken": {
                                "contains": {
                                    "audience": {
                                        "description": [
                                            "Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used."
                                        ],
                                        "returned": "success",
                                        "type": "str"
                                    },
                                    "serviceAccountEmail": {
                                        "description": [
                                            "Service account email to be used for generating OAuth token.",
                                            "The service account must be within the same project as the job."
                                        ],
                                        "returned": "success",
                                        "type": "str"
                                    }
                                },
                                "description": [
                                    "Contains information needed for generating an OpenID Connect token.",
                                    "This type of authorization should be used when sending requests to third party endpoints or Cloud Run."
                                ],
                                "returned": "success",
                                "type": "complex"
                            },
                            "uri": {
                                "description": [
                                    "The full URI path that the request will be sent to."
                                ],
                                "returned": "success",
                                "type": "str"
                            }
                        },
                        "description": [
                            "HTTP target.",
                            "If the job providers a http_target the cron will send a request to the targeted url ."
                        ],
                        "returned": "success",
                        "type": "complex"
                    },
                    "name": {
                        "description": [
                            "The name of the job."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "pubsubTarget": {
                        "contains": {
                            "attributes": {
                                "description": [
                                    "Attributes for PubsubMessage.",
                                    "Pubsub message must contain either non-empty data, or at least one attribute."
                                ],
                                "returned": "success",
                                "type": "dict"
                            },
                            "data": {
                                "description": [
                                    "The message payload for PubsubMessage.",
                                    "Pubsub message must contain either non-empty data, or at least one attribute.",
                                    "A base64-encoded string."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "topicName": {
                                "description": [
                                    "The full resource name for the Cloud Pub/Sub topic to which messages will be published when a job is delivered. ~>**NOTE:** The topic name must be in the same format as required by PubSub's PublishRequest.name, e.g. `projects/my-project/topics/my-topic`."
                                ],
                                "returned": "success",
                                "type": "str"
                            }
                        },
                        "description": [
                            "Pub/Sub target If the job providers a Pub/Sub target the cron will publish a message to the provided topic ."
                        ],
                        "returned": "success",
                        "type": "complex"
                    },
                    "region": {
                        "description": [
                            "Region where the scheduler job resides ."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "retryConfig": {
                        "contains": {
                            "maxBackoffDuration": {
                                "description": [
                                    "The maximum amount of time to wait before retrying a job after it fails.",
                                    "A duration in seconds with up to nine fractional digits, terminated by 's'."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "maxDoublings": {
                                "description": [
                                    "The time between retries will double maxDoublings times.",
                                    "A job's retry interval starts at minBackoffDuration, then doubles maxDoublings times, then increases linearly, and finally retries retries at intervals of maxBackoffDuration up to retryCount times."
                                ],
                                "returned": "success",
                                "type": "int"
                            },
                            "maxRetryDuration": {
                                "description": [
                                    "The time limit for retrying a failed job, measured from time when an execution was first attempted. If specified with retryCount, the job will be retried until both limits are reached.",
                                    "A duration in seconds with up to nine fractional digits, terminated by 's'."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "minBackoffDuration": {
                                "description": [
                                    "The minimum amount of time to wait before retrying a job after it fails.",
                                    "A duration in seconds with up to nine fractional digits, terminated by 's'."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "retryCount": {
                                "description": [
                                    "The number of attempts that the system will make to run a job using the exponential backoff procedure described by maxDoublings.",
                                    "Values greater than 5 and negative values are not allowed."
                                ],
                                "returned": "success",
                                "type": "int"
                            }
                        },
                        "description": [
                            "By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler, then it will be retried with exponential backoff according to the settings ."
                        ],
                        "returned": "success",
                        "type": "complex"
                    },
                    "schedule": {
                        "description": [
                            "Describes the schedule on which the job will be executed."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "timeZone": {
                        "description": [
                            "Specifies the time zone to be used in interpreting schedule.",
                            "The value of this field must be a time zone name from the tz database."
                        ],
                        "returned": "success",
                        "type": "str"
                    }
                },
                "description": "List of resources",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
