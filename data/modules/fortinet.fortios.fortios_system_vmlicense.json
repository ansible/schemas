{
    "fortinet.fortios.fortios_system_vmlicense": {
        "doc": {
            "author": [
                "Frank Shen(@frankshen01)",
                "Link Zheng (@chillancezen)",
                "Miguel Angel Munoz (@mamunozgonzalez)",
                "Nicolas Thomas (@thomnico)"
            ],
            "collection": "fortinet.fortios",
            "description": [
                "This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the user to set and modify system feature and vmlicense category. Examples include all parameters and values need to be adjusted to datasources before usage. Tested with FOS v6.0.5"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortios/plugins/modules/fortios_system_vmlicense.py",
            "has_action": false,
            "module": "fortios_system_vmlicense",
            "notes": [
                "Legacy fortiosapi has been deprecated, httpapi is the preferred way to run playbooks"
            ],
            "options": {
                "host": {
                    "description": [
                        "FortiOS or FortiGate IP address."
                    ],
                    "required": false,
                    "type": "str"
                },
                "https": {
                    "default": true,
                    "description": [
                        "Indicates if the requests towards FortiGate must use HTTPS protocol."
                    ],
                    "type": "bool"
                },
                "password": {
                    "default": "",
                    "description": [
                        "FortiOS or FortiGate password."
                    ],
                    "type": "str"
                },
                "ssl_verify": {
                    "default": true,
                    "description": [
                        "Ensures FortiGate certificate must be verified by a proper CA."
                    ],
                    "type": "bool",
                    "version_added": 2.9,
                    "version_added_collection": "fortinet.fortios"
                },
                "system_vmlicense": {
                    "default": null,
                    "description": [
                        "Update VM license using uploaded file. Reboots immediately if successful."
                    ],
                    "suboptions": {
                        "file_content": {
                            "description": [
                                "Provided when uploading a file: base64 encoded file data. Must not contain whitespace or other invalid base64 characters. Must be included in HTTP body."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "username": {
                    "description": [
                        "FortiOS or FortiGate username."
                    ],
                    "required": false,
                    "type": "str"
                },
                "vdom": {
                    "default": "root",
                    "description": [
                        "Virtual domain, among those defined previously. A vdom is a virtual instance of the FortiGate that can be configured and used as a different unit."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "ansible>=2.9.0"
            ],
            "short_description": "Update VM license using uploaded file. Reboots immediately if successful in Fortinet's FortiOS and FortiGate.",
            "version_added": "2.8",
            "version_added_collection": "fortinet.fortios"
        },
        "examples": "\n- hosts: fortigates\n  collections:\n    - fortinet.fortios\n  connection: httpapi\n  vars:\n   vdom: \"root\"\n   ansible_httpapi_use_ssl: no\n   ansible_httpapi_validate_certs: no\n   ansible_httpapi_port: 80\n   license_file: ./FGVMXXXXXX-VM00.lic\n   license_file_content: \"{{ lookup( 'file', license_file) }}\"\n   encoded_license: \"{{ license_file_content | string | b64encode }}\"\n  tasks:\n  - name: Update VM license using uploaded file. Reboots immediately if successful.\n    fortios_system_vmlicense:\n      vdom:  \"{{ vdom }}\"\n      system_vmlicense:\n        file_content: \"{{ encoded_license }}\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "build": {
                "description": "Build number of the fortigate image",
                "returned": "always",
                "sample": "1547",
                "type": "str"
            },
            "http_method": {
                "description": "Last method used to provision the content into FortiGate",
                "returned": "always",
                "sample": "POST",
                "type": "str"
            },
            "http_status": {
                "description": "Last result given by FortiGate on last operation applied",
                "returned": "always",
                "sample": "200",
                "type": "str"
            },
            "mkey": {
                "description": "Master key (id) used in the last call to FortiGate",
                "returned": "success",
                "sample": "id",
                "type": "str"
            },
            "name": {
                "description": "Name of the table used to fulfill the request",
                "returned": "always",
                "sample": "vmlicense",
                "type": "str"
            },
            "path": {
                "description": "Path of the table used to fulfill the request",
                "returned": "always",
                "sample": "system",
                "type": "str"
            },
            "revision": {
                "description": "Internal revision number",
                "returned": "always",
                "sample": "17.0.2.10658",
                "type": "str"
            },
            "serial": {
                "description": "Serial number of the unit",
                "returned": "always",
                "sample": "FGVMEVYYQT3AB5352",
                "type": "str"
            },
            "status": {
                "description": "Indication of the operation's result",
                "returned": "always",
                "sample": "success",
                "type": "str"
            },
            "vdom": {
                "description": "Virtual domain used",
                "returned": "always",
                "sample": "root",
                "type": "str"
            },
            "version": {
                "description": "Version of the FortiGate",
                "returned": "always",
                "sample": "v5.6.3",
                "type": "str"
            }
        }
    }
}
