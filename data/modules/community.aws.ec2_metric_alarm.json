{
    "community.aws.ec2_metric_alarm": {
        "doc": {
            "author": "Zacharie Eakin (@Zeekin)",
            "collection": "community.aws",
            "description": [
                "Can create or delete AWS metric alarms.",
                "Metrics you wish to alarm on must already exist."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_metric_alarm.py",
            "has_action": false,
            "module": "ec2_metric_alarm",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "alarm_actions": {
                    "description": [
                        "A list of the names action(s) taken when the alarm is in the C(alarm) status, denoted as Amazon Resource Name(s)."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "comparison": {
                    "choices": [
                        "GreaterThanOrEqualToThreshold",
                        "GreaterThanThreshold",
                        "LessThanThreshold",
                        "LessThanOrEqualToThreshold",
                        "<=",
                        "<",
                        ">=",
                        ">"
                    ],
                    "description": [
                        "Determines how the threshold value is compared",
                        "Symbolic comparison operators have been deprecated, and will be removed after 2022-06-22."
                    ],
                    "required": false,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "description": {
                    "description": [
                        "A longer description of the alarm."
                    ],
                    "required": false,
                    "type": "str"
                },
                "dimensions": {
                    "description": [
                        "A dictionary describing which metric the alarm is applied to.",
                        "For more information see the AWS documentation:",
                        "U(https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension)"
                    ],
                    "required": false,
                    "type": "dict"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "evaluation_periods": {
                    "description": [
                        "The number of times in which the metric is evaluated before final calculation."
                    ],
                    "required": false,
                    "type": "int"
                },
                "insufficient_data_actions": {
                    "description": [
                        "A list of the names of action(s) to take when the alarm is in the C(insufficient_data) status."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "metric": {
                    "description": [
                        "Name of the monitored metric (e.g. C(CPUUtilization)).",
                        "Metric must already exist."
                    ],
                    "required": false,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Unique name for the alarm."
                    ],
                    "required": true,
                    "type": "str"
                },
                "namespace": {
                    "description": [
                        "Name of the appropriate namespace (C(AWS/EC2), C(System/Linux), etc.), which determines the category it will appear under in cloudwatch."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ok_actions": {
                    "description": [
                        "A list of the names of action(s) to take when the alarm is in the C(ok) status, denoted as Amazon Resource Name(s)."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "period": {
                    "description": [
                        "The time (in seconds) between metric evaluations."
                    ],
                    "required": false,
                    "type": "int"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Register or deregister the alarm."
                    ],
                    "type": "str"
                },
                "statistic": {
                    "choices": [
                        "SampleCount",
                        "Average",
                        "Sum",
                        "Minimum",
                        "Maximum"
                    ],
                    "description": [
                        "Operation applied to the metric.",
                        "Works in conjunction with I(period) and I(evaluation_periods) to determine the comparison value."
                    ],
                    "required": false,
                    "type": "str"
                },
                "threshold": {
                    "description": [
                        "Sets the min/max bound for triggering the alarm."
                    ],
                    "required": false,
                    "type": "float"
                },
                "treat_missing_data": {
                    "choices": [
                        "breaching",
                        "notBreaching",
                        "ignore",
                        "missing"
                    ],
                    "default": "missing",
                    "description": [
                        "Sets how the alarm handles missing data points."
                    ],
                    "required": false,
                    "type": "str"
                },
                "unit": {
                    "choices": [
                        "Seconds",
                        "Microseconds",
                        "Milliseconds",
                        "Bytes",
                        "Kilobytes",
                        "Megabytes",
                        "Gigabytes",
                        "Terabytes",
                        "Bits",
                        "Kilobits",
                        "Megabits",
                        "Gigabits",
                        "Terabits",
                        "Percent",
                        "Count",
                        "Bytes/Second",
                        "Kilobytes/Second",
                        "Megabytes/Second",
                        "Gigabytes/Second",
                        "Terabytes/Second",
                        "Bits/Second",
                        "Kilobits/Second",
                        "Megabits/Second",
                        "Gigabits/Second",
                        "Terabits/Second",
                        "Count/Second",
                        "None"
                    ],
                    "description": [
                        "The threshold's unit of measurement."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "boto"
            ],
            "short_description": "Create/update or delete AWS Cloudwatch 'metric alarms'",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n  - name: create alarm\n    community.aws.ec2_metric_alarm:\n      state: present\n      region: ap-southeast-2\n      name: \"cpu-low\"\n      metric: \"CPUUtilization\"\n      namespace: \"AWS/EC2\"\n      statistic: Average\n      comparison: \"LessThanOrEqualToThreshold\"\n      threshold: 5.0\n      period: 300\n      evaluation_periods: 3\n      unit: \"Percent\"\n      description: \"This will alarm when a instance's CPU usage average is lower than 5% for 15 minutes\"\n      dimensions: {'InstanceId':'i-XXX'}\n      alarm_actions: [\"action1\",\"action2\"]\n\n  - name: Create an alarm to recover a failed instance\n    community.aws.ec2_metric_alarm:\n      state: present\n      region: us-west-1\n      name: \"recover-instance\"\n      metric: \"StatusCheckFailed_System\"\n      namespace: \"AWS/EC2\"\n      statistic: \"Minimum\"\n      comparison: \">=\"\n      threshold: 1.0\n      period: 60\n      evaluation_periods: 2\n      unit: \"Count\"\n      description: \"This will recover an instance when it fails\"\n      dimensions: {\"InstanceId\":'i-XXX'}\n      alarm_actions: [\"arn:aws:automate:us-west-1:ec2:recover\"]\n\n",
        "metadata": null,
        "return": null
    }
}
