{
    "community.network.ce_ntp": {
        "doc": {
            "author": [
                "Zhijin Zhou (@QijunPan)"
            ],
            "collection": "community.network",
            "description": [
                "Manages core NTP configuration on HUAWEI CloudEngine switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_ntp.py",
            "has_action": false,
            "module": "ce_ntp",
            "notes": [
                "This module requires the netconf system service be enabled on the remote device being managed.",
                "Recommended connection is C(netconf).",
                "This module also works with C(local) connections for legacy playbooks."
            ],
            "options": {
                "is_preferred": {
                    "choices": [
                        "enable",
                        "disable"
                    ],
                    "description": [
                        "Makes given NTP server or peer the preferred NTP server or peer for the device."
                    ]
                },
                "key_id": {
                    "description": [
                        "Authentication key identifier to use with given NTP server or peer."
                    ]
                },
                "peer": {
                    "description": [
                        "Network address of NTP peer."
                    ]
                },
                "server": {
                    "description": [
                        "Network address of NTP server."
                    ]
                },
                "source_int": {
                    "description": [
                        "Local source interface from which NTP messages are sent. Must be fully qualified interface name, i.e. C(40GE1/0/22), C(vlanif10). Interface types, such as C(10GE), C(40GE), C(100GE), C(Eth-Trunk), C(LoopBack), C(MEth), C(NULL), C(Tunnel), C(Vlanif)."
                    ]
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Manage the state of the resource."
                    ]
                },
                "vpn_name": {
                    "default": "_public_",
                    "description": [
                        "Makes the device communicate with the given NTP server or peer over a specific vpn."
                    ]
                }
            },
            "short_description": "Manages core NTP configuration on HUAWEI CloudEngine switches."
        },
        "examples": "\n- name: NTP test\n  hosts: cloudengine\n  connection: local\n  gather_facts: no\n  vars:\n    cli:\n      host: \"{{ inventory_hostname }}\"\n      port: \"{{ ansible_ssh_port }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      transport: cli\n\n  tasks:\n\n  - name: \"Set NTP Server with parameters\"\n    community.network.ce_ntp:\n      server: 192.8.2.6\n      vpn_name: js\n      source_int: vlanif4001\n      is_preferred: enable\n      key_id: 32\n      provider: \"{{ cli }}\"\n\n  - name: \"Set NTP Peer with parameters\"\n    community.network.ce_ntp:\n      peer: 192.8.2.6\n      vpn_name: js\n      source_int: vlanif4001\n      is_preferred: enable\n      key_id: 32\n      provider: \"{{ cli }}\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of ntp info after module execution",
                "returned": "always",
                "sample": {
                    "is_preferred": "enable",
                    "key_id": "48",
                    "server": "2.2.2.2",
                    "source_int": "vlanif4002",
                    "vpn_name": "js"
                },
                "type": "dict"
            },
            "existing": {
                "description": "k/v pairs of existing ntp server/peer",
                "returned": "always",
                "sample": {
                    "is_preferred": "disable",
                    "key_id": "32",
                    "server": "2.2.2.2",
                    "source_int": "vlanif4002",
                    "vpn_name": "js"
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "is_preferred": "enable",
                    "key_id": "48",
                    "server": "2.2.2.2",
                    "source_int": "vlanif4002",
                    "state": "present",
                    "vpn_name": "js"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command sent to the device",
                "returned": "always",
                "sample": [
                    "ntp server 2.2.2.2 authentication-keyid 48 source-interface vlanif4002 vpn-instance js preferred"
                ],
                "type": "list"
            }
        }
    }
}
