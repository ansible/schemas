{
    "community.vmware.vmware_host_feature_info": {
        "doc": {
            "author": [
                "Abhijeet Kasurde (@Akasurde)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to gather information about an ESXi host's feature capability information when ESXi hostname or Cluster name is given."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_host_feature_info.py",
            "has_action": false,
            "module": "vmware_host_feature_info",
            "notes": [
                "Tested on vSphere 6.5"
            ],
            "options": {
                "cluster_name": {
                    "description": [
                        "Name of the cluster from all host systems to be used for information gathering.",
                        "If C(esxi_hostname) is not given, this parameter is required."
                    ],
                    "type": "str"
                },
                "esxi_hostname": {
                    "description": [
                        "ESXi hostname to gather information from.",
                        "If C(cluster_name) is not given, this parameter is required."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Gathers info about an ESXi host's feature capability information"
        },
        "examples": "\n- name: Gather feature capability info about all ESXi Hosts in given Cluster\n  community.vmware.vmware_host_feature_info:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    cluster_name: cluster_name\n  delegate_to: localhost\n  register: all_cluster_hosts_info\n\n- name: Check if ESXi is vulnerable for Speculative Store Bypass Disable (SSBD) vulnerability\n  community.vmware.vmware_host_feature_info:\n    hostname: \"{{ vcenter_server }}\"\n    username: \"{{ vcenter_user }}\"\n    password: \"{{ vcenter_pass }}\"\n    validate_certs: no\n    esxi_hostname: \"{{ esxi_hostname }}\"\n  register: features_set\n- set_fact:\n    ssbd : \"{{ item.value }}\"\n  loop: \"{{ features_set.host_feature_info[esxi_hostname] |json_query(name) }}\"\n  vars:\n    name: \"[?key=='cpuid.SSBD']\"\n- assert:\n    that:\n      - ssbd|int == 1\n  when: ssbd is defined\n",
        "metadata": null,
        "return": {
            "hosts_feature_info": {
                "description": "metadata about host's feature capability information",
                "returned": "always",
                "sample": {
                    "10.76.33.226": [
                        {
                            "feature_name": "cpuid.3DNOW",
                            "key": "cpuid.3DNOW",
                            "value": "0"
                        },
                        {
                            "feature_name": "cpuid.3DNOWPLUS",
                            "key": "cpuid.3DNOWPLUS",
                            "value": "0"
                        }
                    ]
                },
                "type": "dict"
            }
        }
    }
}
