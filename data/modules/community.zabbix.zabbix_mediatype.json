{
    "community.zabbix.zabbix_mediatype": {
        "doc": {
            "author": [
                "Ruben Tsirunyan (@rubentsirunyan)"
            ],
            "collection": "community.zabbix",
            "description": [
                "This module allows you to create, modify and delete Zabbix media types."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/zabbix/plugins/modules/zabbix_mediatype.py",
            "has_action": false,
            "module": "zabbix_mediatype",
            "notes": [
                "If you use I(login_password=zabbix), the word \"zabbix\" is replaced by \"********\" in all module output, because I(login_password) uses C(no_log). See L(this FAQ,https://docs.ansible.com/ansible/latest/network/user_guide/faq.html#why-is-my-output-sometimes-replaced-with) for more information."
            ],
            "options": {
                "attempt_interval": {
                    "default": 10,
                    "description": [
                        "The interval between retry attempts.",
                        "Possible range is 0-60.",
                        "Works only with Zabbix versions 3.4 or newer."
                    ],
                    "type": "int"
                },
                "description": {
                    "default": "",
                    "description": [
                        "Description of the media type.",
                        "Works only with Zabbix versions 4.4 or newer."
                    ],
                    "type": "str"
                },
                "event_menu": {
                    "default": false,
                    "description": [
                        "Can be used when I(type=webhook).",
                        "Includes entry in Event menu with link to created external ticket."
                    ],
                    "type": "bool"
                },
                "event_menu_name": {
                    "description": [
                        "Requred when I(event_menu=True).",
                        "Event menu entry name."
                    ],
                    "type": "str"
                },
                "event_menu_url": {
                    "description": [
                        "Requred when I(event_menu=True).",
                        "Event menu entry underlying URL."
                    ],
                    "type": "str"
                },
                "gsm_modem": {
                    "description": [
                        "Serial device name of the gsm modem.",
                        "Required when I(type=sms)."
                    ],
                    "type": "str"
                },
                "http_login_password": {
                    "description": [
                        "Basic Auth password"
                    ],
                    "type": "str"
                },
                "http_login_user": {
                    "description": [
                        "Basic Auth login"
                    ],
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "Zabbix user password."
                    ],
                    "required": true,
                    "type": "str"
                },
                "login_user": {
                    "description": [
                        "Zabbix user name."
                    ],
                    "required": true,
                    "type": "str"
                },
                "max_attempts": {
                    "default": 3,
                    "description": [
                        "The maximum number of attempts to send an alert.",
                        "Possible range is 0-10.",
                        "Works only with Zabbix versions 3.4 or newer."
                    ],
                    "type": "int"
                },
                "max_sessions": {
                    "default": 1,
                    "description": [
                        "The maximum number of alerts that can be processed in parallel.",
                        "Possible value is 1 when I(type=sms) and 0-100 otherwise.",
                        "Works only with Zabbix versions 3.4 or newer."
                    ],
                    "type": "int"
                },
                "message_templates": {
                    "default": [],
                    "description": [
                        "Default notification messages for the event types.",
                        "Works only with Zabbix versions 5.0 or newer."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "body": {
                            "default": "",
                            "description": [
                                "Body of the default message.",
                                "May contain macros."
                            ],
                            "type": "str"
                        },
                        "eventsource": {
                            "choices": [
                                "triggers",
                                "discovery",
                                "autoregistration",
                                "internal"
                            ],
                            "description": [
                                "Event source.",
                                "Required when I(recovery) is used."
                            ],
                            "type": "str"
                        },
                        "recovery": {
                            "choices": [
                                "operations",
                                "recovery_operations",
                                "update_operations"
                            ],
                            "description": [
                                "Operation mode.",
                                "Required when I(eventsource) is used."
                            ],
                            "type": "str"
                        },
                        "subject": {
                            "default": "",
                            "description": [
                                "Subject of the default message.",
                                "May contain macros and is limited to 255 characters."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "message_text_limit": {
                    "choices": [
                        "USA",
                        "Canada"
                    ],
                    "description": [
                        "The message text limit.",
                        "Required when I(type=ez_texting).",
                        "160 characters for USA and 136 characters for Canada."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the media type."
                    ],
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Authentication password.",
                        "Required when I(type=jabber) or I(type=ez_texting).",
                        "Required when I(type=email) and I(smtp_authentication=true)."
                    ],
                    "type": "str"
                },
                "process_tags": {
                    "default": false,
                    "description": [
                        "Can be used when I(type=webhook).",
                        "Process returned JSON property values as tags.",
                        "These tags are added to the already existing (if any) problem event tags in Zabbix."
                    ],
                    "type": "bool"
                },
                "script_name": {
                    "description": [
                        "The name of the executed script.",
                        "Required when I(type=script)."
                    ],
                    "type": "str"
                },
                "script_params": {
                    "description": [
                        "List of script parameters.",
                        "Required when I(type=script)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "server_url": {
                    "aliases": [
                        "url"
                    ],
                    "description": [
                        "URL of Zabbix server, with protocol (http or https). C(url) is an alias for C(server_url)."
                    ],
                    "required": true,
                    "type": "str"
                },
                "smtp_authentication": {
                    "default": false,
                    "description": [
                        "Whether SMTP authentication with username and password should be enabled or not.",
                        "If set to C(true), C(username) and C(password) should be specified."
                    ],
                    "type": "bool"
                },
                "smtp_email": {
                    "description": [
                        "Email address from which notifications will be sent.",
                        "Required when I(type=email)."
                    ],
                    "type": "str"
                },
                "smtp_helo": {
                    "default": "localhost",
                    "description": [
                        "SMTP HELO.",
                        "Required when I(type=email)."
                    ],
                    "type": "str"
                },
                "smtp_security": {
                    "choices": [
                        "None",
                        "STARTTLS",
                        "SSL/TLS"
                    ],
                    "description": [
                        "SMTP connection security level to use."
                    ],
                    "type": "str"
                },
                "smtp_server": {
                    "default": "localhost",
                    "description": [
                        "SMTP server host.",
                        "Required when I(type=email)."
                    ],
                    "type": "str"
                },
                "smtp_server_port": {
                    "default": 25,
                    "description": [
                        "SMTP server port.",
                        "Required when I(type=email)."
                    ],
                    "type": "int"
                },
                "smtp_verify_host": {
                    "default": false,
                    "description": [
                        "SSL verify host for SMTP.",
                        "Can be specified when I(smtp_security=STARTTLS) or I(smtp_security=SSL/TLS)"
                    ],
                    "type": "bool"
                },
                "smtp_verify_peer": {
                    "default": false,
                    "description": [
                        "SSL verify peer for SMTP.",
                        "Can be specified when I(smtp_security=STARTTLS) or I(smtp_security=SSL/TLS)"
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the mediatype.",
                        "On C(present), it will create a mediatype if it does not exist or update the mediatype if the associated data is different.",
                        "On C(absent), it will remove the mediatype if it exists."
                    ],
                    "type": "str"
                },
                "status": {
                    "choices": [
                        "enabled",
                        "disabled"
                    ],
                    "default": "enabled",
                    "description": [
                        "Whether the media type is enabled or no."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The timeout of API request (seconds)."
                    ],
                    "type": "int"
                },
                "type": {
                    "choices": [
                        "email",
                        "script",
                        "sms",
                        "webhook",
                        "jabber",
                        "ez_texting"
                    ],
                    "description": [
                        "Type of the media type.",
                        "Media types I(jabber) and I(ez_texting) works only with Zabbix versions 4.2 or older.",
                        "Media type I(webhook) works only with Zabbix versions 4.4 or newer."
                    ],
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Username or Jabber identifier.",
                        "Required when I(type=jabber) or I(type=ez_texting).",
                        "Required when I(type=email) and I(smtp_authentication=true)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to False, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                },
                "webhook_params": {
                    "default": [],
                    "description": [
                        "Can be used when I(type=webhook).",
                        "Webhook variables that are passed to webhook script when executed."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "name": {
                            "description": [
                                "Name of the parameter."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "value": {
                            "default": "",
                            "description": [
                                "Value of the parameter.",
                                "All macros that are supported in problem notifications are supported in the parameters.",
                                "Values are URL-encoded automatically. Values from macros are resolved and then URL-encoded automatically."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "webhook_script": {
                    "description": [
                        "Required when I(type=webhook).",
                        "JavaScript code that will perform webhook operation.",
                        "This code has access to all parameters in I(webhook_params).",
                        "It may perform HTTP GET, POST, PUT and DELETE requests and has control over HTTP headers and request body.",
                        "It may return OK status along with an optional list of tags and tag values or an error string.",
                        "Works only with Zabbix versions 4.4 or newer."
                    ],
                    "type": "str"
                },
                "webhook_timeout": {
                    "default": "30s",
                    "description": [
                        "Can be used when I(type=webhook).",
                        "Execution timeout for JavaScript code in I(webhook_script).",
                        "Possible values are 1-60s."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "zabbix-api >= 0.5.4"
            ],
            "short_description": "Create/Update/Delete Zabbix media types"
        },
        "examples": "\n- name: 'Create an email mediatype with SMTP authentication'\n  community.zabbix.zabbix_mediatype:\n    name: \"Ops email\"\n    server_url: \"http://example.com/zabbix/\"\n    login_user: Admin\n    login_password: \"zabbix\"\n    type: 'email'\n    smtp_server: 'example.com'\n    smtp_server_port: 2000\n    smtp_email: 'ops@example.com'\n    smtp_authentication: true\n    username: 'smtp_user'\n    password: 'smtp_pass'\n\n- name: 'Create a script mediatype'\n  community.zabbix.zabbix_mediatype:\n    name: \"my script\"\n    server_url: \"http://example.com/zabbix/\"\n    login_user: Admin\n    login_password: \"zabbix\"\n    type: 'script'\n    script_name: 'my_script.py'\n    script_params:\n      - 'arg1'\n      - 'arg2'\n\n- name: 'Create a jabber mediatype'\n  community.zabbix.zabbix_mediatype:\n    name: \"My jabber\"\n    server_url: \"http://example.com/zabbix/\"\n    login_user: Admin\n    login_password: \"zabbix\"\n    type: 'jabber'\n    username: 'jabber_id'\n    password: 'jabber_pass'\n\n- name: 'Create a SMS mediatype'\n  community.zabbix.zabbix_mediatype:\n    name: \"My SMS Mediatype\"\n    server_url: \"http://example.com/zabbix/\"\n    login_user: Admin\n    login_password: \"zabbix\"\n    type: 'sms'\n    gsm_modem: '/dev/ttyS0'\n\n# Supported since Zabbix 4.4\n- name: 'Create a webhook mediatype'\n  community.zabbix.zabbix_mediatype:\n    name: \"My webhook Mediatype\"\n    server_url: \"http://example.com/zabbix/\"\n    login_user: Admin\n    login_password: \"zabbix\"\n    type: 'webhook'\n    webhook_script: \"{{ lookup('file', 'slack.js') }}\"\n    webhook_params:\n      - name: alert_message\n        value: '{ALERT.MESSAGE}'\n      - name: zabbix_url\n        value: '{$ZABBIX.URL}'\n    process_tags: True\n    event_menu: true\n    event_menu_name: \"Open in Slack: '{EVENT.TAGS.__channel_name}'\"\n    event_menu_url: '{EVENT.TAGS.__message_link}'\n\n# Supported since Zabbix 5.0\n- name: 'Create an email mediatype with message templates'\n  community.zabbix.zabbix_mediatype:\n    name: \"Ops email\"\n    server_url: \"http://example.com/zabbix/\"\n    login_user: Admin\n    login_password: \"zabbix\"\n    type: 'email'\n    smtp_email: 'ops@example.com'\n    message_templates:\n      - eventsource: triggers\n        recovery: operations\n        subject: \"Problem: {EVENT.NAME}\"\n        body: \"Problem started at {EVENT.TIME} on {EVENT.DATE}\\r\\nProblem name: {EVENT.NAME}\\r\\n\"\n      - eventsource: triggers\n        recovery: recovery_operations\n        subject: \"Resolved: {EVENT.NAME}\"\n        body: \"Problem resolved at {EVENT.TIME} on {EVENT.DATE}\\r\\nProblem name: {EVENT.NAME}\\r\\n\"\n      - eventsource: triggers\n        recovery: update_operations\n        subject: \"Updated problem: {EVENT.NAME}\"\n        body: \"{USER.FULLNAME} {EVENT.UPDATE.ACTION} problem at {EVENT.UPDATE.DATE} {EVENT.UPDATE.TIME}.\\r\\n\"\n      - eventsource: discovery\n        recovery: operations\n        subject: \"Discovery: {DISCOVERY.DEVICE.STATUS} {DISCOVERY.DEVICE.IPADDRESS}\"\n        body: \"Discovery rule: {DISCOVERY.RULE.NAME}\\r\\n\\r\\nDevice IP: {DISCOVERY.DEVICE.IPADDRESS}\"\n      - eventsource: autoregistration\n        recovery: operations\n        subject: \"Autoregistration: {HOST.HOST}\"\n        body: \"Host name: {HOST.HOST}\\r\\nHost IP: {HOST.IP}\\r\\nAgent port: {HOST.PORT}\"\n",
        "metadata": null,
        "return": null
    }
}
