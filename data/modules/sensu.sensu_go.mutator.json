{
    "sensu.sensu_go.mutator": {
        "doc": {
            "author": [
                "Paul Arthur (@flowerysong)",
                "Aljaz Kosir (@aljazkosir)",
                "Miha Plesko (@miha-plesko)",
                "Tadej Borovsak (@tadeboro)"
            ],
            "collection": "sensu.sensu_go",
            "description": [
                "Create, update or delete Sensu mutator.",
                "For more information, refer to the Sensu documentation at U(https://docs.sensu.io/sensu-go/latest/reference/mutators/)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/sensu/sensu_go/plugins/modules/mutator.py",
            "has_action": false,
            "module": "mutator",
            "options": {
                "annotations": {
                    "description": [
                        "Custom metadata fields with fewer restrictions, as key/value pairs.",
                        "These are preserved by Sensu but not accessible as tokens or identifiers, and are mainly intended for use with external tools."
                    ],
                    "type": "dict"
                },
                "auth": {
                    "description": [
                        "Authentication parameters. Can define each of them with ENV as well."
                    ],
                    "suboptions": {
                        "api_key": {
                            "description": [
                                "The API key that should be used when authenticating. If this is not set, the value of the SENSU_API_KEY environment variable will be checked.",
                                "This replaces I(auth.user) and I(auth.password) parameters.",
                                "For more information about the API key, refer to the official Sensu documentation at U(https://docs.sensu.io/sensu-go/latest/guides/use-apikey-feature/)."
                            ],
                            "type": "str",
                            "version_added": "1.3.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "ca_path": {
                            "description": [
                                "Path to the CA bundle that should be used to validate the backend certificate.",
                                "If this parameter is not set, module will use the CA bundle that python is using.",
                                "It is also possible to set this parameter via the I(SENSU_CA_PATH) environment variable."
                            ],
                            "type": "path",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "password": {
                            "default": "P@ssw0rd!",
                            "description": [
                                "The Sensu user's password. If this is not set the value of the SENSU_PASSWORD environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "default": "http://localhost:8080",
                            "description": [
                                "Location of the Sensu backend API. If this is not set the value of the SENSU_URL environment variable will be checked."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "default": "admin",
                            "description": [
                                "The username to use for connecting to the Sensu API. If this is not set the value of the SENSU_USER environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "verify": {
                            "default": true,
                            "description": [
                                "Flag that controls the certificate validation.",
                                "If you are using self-signed certificates, you can set this parameter to C(false).",
                                "ONLY USE THIS PARAMETER IN DEVELOPMENT SCENARIOS! In you use self-signed certificates in production, see the I(auth.ca_path) parameter.",
                                "It is also possible to set this parameter via the I(SENSU_VERIFY) environment variable."
                            ],
                            "type": "bool",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        }
                    },
                    "type": "dict"
                },
                "command": {
                    "description": [
                        "The mutator command to be executed by the Sensu backend.",
                        "Required if I(state) is C(present)."
                    ],
                    "type": "str"
                },
                "env_vars": {
                    "description": [
                        "A mapping of environment variable names and values to use with command execution."
                    ],
                    "type": "dict"
                },
                "labels": {
                    "description": [
                        "Custom metadata fields that can be accessed within Sensu, as key/value pairs."
                    ],
                    "type": "dict"
                },
                "name": {
                    "description": [
                        "The Sensu resource's name. This name (in combination with the namespace where applicable) uniquely identifies the resource that Ansible operates on.",
                        "If the resource with selected name already exists, Ansible module will update it to match the specification in the task.",
                        "Consult the I(name) metadata attribute specification in the upstream docs on U(https://docs.sensu.io/sensu-go/latest/reference/) for more details about valid names and other restrictions."
                    ],
                    "required": true,
                    "type": "str"
                },
                "namespace": {
                    "default": "default",
                    "description": [
                        "RBAC namespace to operate in. If this is not set the value of the SENSU_NAMESPACE environment variable will be used."
                    ],
                    "type": "str"
                },
                "runtime_assets": {
                    "description": [
                        "List of runtime assets, required to run the mutator I(command)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "secrets": {
                    "description": [
                        "List of secrets that are available to the command."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "name": {
                            "description": [
                                "Variable name that will contain the sensitive data."
                            ],
                            "required": true,
                            "type": "str",
                            "version_added": "1.6.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "secret": {
                            "description": [
                                "Name of the secret that contains sensitive data."
                            ],
                            "required": true,
                            "type": "str",
                            "version_added": "1.6.0",
                            "version_added_collection": "sensu.sensu_go"
                        }
                    },
                    "type": "list",
                    "version_added": "1.6.0",
                    "version_added_collection": "sensu.sensu_go"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Target state of the Sensu object."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "description": [
                        "The mutator execution duration timeout in seconds (hard stop)."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "python >= 2.7"
            ],
            "seealso": [
                {
                    "module": "sensu.sensu_go.mutator_info"
                }
            ],
            "short_description": "Manage Sensu mutators",
            "version_added": "1.0.0",
            "version_added_collection": "sensu.sensu_go"
        },
        "examples": "\n- name: Create a mutator\n  sensu.sensu_go.mutator:\n    name: mutator\n    command: sensu-influxdb-mutator\n    timeout: 30\n    env_vars:\n      INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086\n      INFLUXDB_USER: sensu\n    runtime_assets:\n      - sensu-influxdb-mutator\n\n- name: Delete a mutator\n  sensu.sensu_go.mutator:\n    name: mutator\n    state: absent\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "stableinterface"
            ],
            "supported_by": "certified"
        },
        "return": {
            "object": {
                "description": "Object representing Sensu mutator.",
                "returned": "success",
                "sample": {
                    "command": "example_mutator.go",
                    "env_vars": [],
                    "metadata": {
                        "annotations": null,
                        "labels": null,
                        "name": "example-mutator",
                        "namespace": "default"
                    },
                    "runtime_assets": [],
                    "timeout": 0
                },
                "type": "dict"
            }
        }
    }
}
