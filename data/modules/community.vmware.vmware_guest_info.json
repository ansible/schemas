{
    "community.vmware.vmware_guest_info": {
        "doc": {
            "author": [
                "Loic Blot (@nerzhul) <loic.blot@unix-experience.fr>"
            ],
            "collection": "community.vmware",
            "description": [
                "Gather information about a single VM on a VMware ESX cluster.",
                "This module was called C(vmware_guest_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_guest_info.py",
            "has_action": false,
            "module": "vmware_guest_info",
            "notes": [
                "Tested on vSphere 5.5, 6.7"
            ],
            "options": {
                "datacenter": {
                    "description": [
                        "Destination datacenter for the deploy operation"
                    ],
                    "required": true,
                    "type": "str"
                },
                "folder": {
                    "description": [
                        "Destination folder, absolute or relative path to find an existing guest.",
                        "This is required if name is supplied.",
                        "The folder should include the datacenter. ESX's datacenter is ha-datacenter",
                        "Examples:",
                        "   folder: /ha-datacenter/vm",
                        "   folder: ha-datacenter/vm",
                        "   folder: /datacenter1/vm",
                        "   folder: datacenter1/vm",
                        "   folder: /datacenter1/vm/folder1",
                        "   folder: datacenter1/vm/folder1",
                        "   folder: /folder1/datacenter1/vm",
                        "   folder: folder1/datacenter1/vm",
                        "   folder: /folder1/datacenter1/vm/folder2"
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "moid": {
                    "description": [
                        "Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.",
                        "This is required if C(name) or C(uuid) is not supplied."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the VM to work with",
                        "This is required if C(uuid) or C(moid) is not supplied."
                    ],
                    "type": "str"
                },
                "name_match": {
                    "choices": [
                        "first",
                        "last"
                    ],
                    "default": "first",
                    "description": [
                        "If multiple VMs matching the name, use the first or last found"
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "properties": {
                    "description": [
                        "Specify the properties to retrieve.",
                        "If not specified, all properties are retrieved (deeply).",
                        "Results are returned in a structure identical to the vsphere API.",
                        "Example:",
                        "   properties: [",
                        "      \"config.hardware.memoryMB\",",
                        "      \"config.hardware.numCPU\",",
                        "      \"guest.disk\",",
                        "      \"overallStatus\"",
                        "   ]",
                        "Only valid when C(schema) is C(vsphere)."
                    ],
                    "required": false,
                    "type": "list"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "schema": {
                    "choices": [
                        "summary",
                        "vsphere"
                    ],
                    "default": "summary",
                    "description": [
                        "Specify the output schema desired.",
                        "The 'summary' output schema is the legacy output from the module",
                        "The 'vsphere' output schema is the vSphere API class definition which requires pyvmomi>6.7.1"
                    ],
                    "type": "str"
                },
                "tags": {
                    "default": "no",
                    "description": [
                        "Whether to show tags or not.",
                        "If set C(True), shows tag information.",
                        "If set C(False), hides tags information.",
                        "vSphere Automation SDK and vCloud Suite SDK is required."
                    ],
                    "type": "bool"
                },
                "use_instance_uuid": {
                    "default": false,
                    "description": [
                        "Whether to use the VMware instance UUID rather than the BIOS UUID."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "uuid": {
                    "description": [
                        "UUID of the instance to manage if known, this is VMware's unique identifier.",
                        "This is required if C(name) or C(moid) is not supplied."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Gather info about a single VM"
        },
        "examples": "\n- name: Gather info from standalone ESXi server having datacenter as 'ha-datacenter'\n  community.vmware.vmware_guest_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    datacenter: ha-datacenter\n    validate_certs: no\n    uuid: 421e4592-c069-924d-ce20-7e7533fab926\n  delegate_to: localhost\n  register: info\n\n- name: Gather some info from a guest using the vSphere API output schema\n  community.vmware.vmware_guest_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    datacenter: \"{{ datacenter_name }}\"\n    name: \"{{ vm_name }}\"\n    schema: \"vsphere\"\n    properties: [\"config.hardware.memoryMB\", \"guest.disk\", \"overallStatus\"]\n  delegate_to: localhost\n  register: info\n\n- name: Gather some information about a guest using MoID\n  community.vmware.vmware_guest_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    datacenter: \"{{ datacenter_name }}\"\n    moid: vm-42\n    schema: \"vsphere\"\n    properties: [\"config.hardware.memoryMB\", \"guest.disk\", \"overallStatus\"]\n  delegate_to: localhost\n  register: vm_moid_info\n\n- name: Gather Managed object ID (moid) from a guest using the vSphere API output schema for REST Calls\n  community.vmware.vmware_guest_info:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    datacenter: \"{{ datacenter_name }}\"\n    name: \"{{ vm_name }}\"\n    schema: \"vsphere\"\n    properties:\n      - _moId\n  delegate_to: localhost\n  register: moid_info\n",
        "metadata": null,
        "return": {
            "instance": {
                "description": "metadata about the virtual machine",
                "returned": "always",
                "sample": {
                    "annotation": "",
                    "current_snapshot": null,
                    "customvalues": {},
                    "guest_consolidation_needed": false,
                    "guest_question": null,
                    "guest_tools_status": "guestToolsNotRunning",
                    "guest_tools_version": "10247",
                    "hw_cores_per_socket": 1,
                    "hw_datastores": [
                        "ds_226_3"
                    ],
                    "hw_esxi_host": "10.76.33.226",
                    "hw_eth0": {
                        "addresstype": "assigned",
                        "ipaddresses": null,
                        "label": "Network adapter 1",
                        "macaddress": "00:50:56:87:a5:9a",
                        "macaddress_dash": "00-50-56-87-a5-9a",
                        "portgroup_key": null,
                        "portgroup_portkey": null,
                        "summary": "VM Network"
                    },
                    "hw_files": [
                        "[ds_226_3] ubuntu_t/ubuntu_t.vmx",
                        "[ds_226_3] ubuntu_t/ubuntu_t.nvram",
                        "[ds_226_3] ubuntu_t/ubuntu_t.vmsd",
                        "[ds_226_3] ubuntu_t/vmware.log",
                        "[ds_226_3] u0001/u0001.vmdk"
                    ],
                    "hw_folder": "/DC0/vm/Discovered virtual machine",
                    "hw_guest_full_name": null,
                    "hw_guest_ha_state": null,
                    "hw_guest_id": null,
                    "hw_interfaces": [
                        "eth0"
                    ],
                    "hw_is_template": false,
                    "hw_memtotal_mb": 1024,
                    "hw_name": "ubuntu_t",
                    "hw_power_status": "poweredOff",
                    "hw_processor_count": 1,
                    "hw_product_uuid": "4207072c-edd8-3bd5-64dc-903fd3a0db04",
                    "hw_version": "vmx-13",
                    "instance_uuid": "5007769d-add3-1e12-f1fe-225ae2a07caf",
                    "ipv4": null,
                    "ipv6": null,
                    "module_hw": true,
                    "moid": "vm-42",
                    "snapshots": [],
                    "tags": [
                        "backup"
                    ],
                    "vimref": "vim.VirtualMachine:vm-42",
                    "vnc": {}
                },
                "type": "dict"
            }
        }
    }
}
