{
    "package": {
        "doc": {
            "author": [
                "Ansible Core Team"
            ],
            "collection": "ansible.builtin",
            "description": [
                "Installs, upgrade and removes packages using the underlying OS package manager.",
                "For Windows targets, use the M(ansible.windows.win_package) module instead."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/package.py",
            "has_action": true,
            "module": "package",
            "notes": [
                "This module actually calls the pertinent package modules for each system (apt, yum, etc).",
                "For Windows targets, use the M(ansible.windows.win_package) module instead."
            ],
            "options": {
                "name": {
                    "description": [
                        "Package name, or package specifier with version.",
                        "Syntax varies with package manager. For example C(name-1.0) or C(name=1.0).",
                        "Package names also vary with package manager; this module will not \"translate\" them per distro. For example C(libyaml-dev), C(libyaml-devel)."
                    ],
                    "required": true
                },
                "state": {
                    "description": [
                        "Whether to install (C(present)), or remove (C(absent)) a package.",
                        "You can use other states like C(latest) ONLY if they are supported by the underlying package module(s) executed."
                    ],
                    "required": true
                },
                "use": {
                    "default": "auto",
                    "description": [
                        "The required package manager module to use (`yum`, `apt`, and so on). The default 'auto' will use existing facts or try to autodetect it.",
                        "You should only use this field if the automatic selection is not working for some reason."
                    ]
                }
            },
            "requirements": [
                "Whatever is required for the package plugins specific for each system."
            ],
            "short_description": "Generic OS package manager",
            "version_added": 2.0,
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- name: Install ntpdate\n  ansible.builtin.package:\n    name: ntpdate\n    state: present\n\n# This uses a variable as this changes per distribution.\n- name: Remove the apache package\n  ansible.builtin.package:\n    name: \"{{ apache }}\"\n    state: absent\n\n- name: Install the latest version of Apache and MariaDB\n  ansible.builtin.package:\n    name:\n      - httpd\n      - mariadb-server\n    state: latest\n",
        "metadata": null,
        "return": null
    }
}
