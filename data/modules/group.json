{
    "group": {
        "doc": {
            "author": [
                "Stephen Fromm (@sfromm)"
            ],
            "collection": "ansible.builtin",
            "description": [
                "Manage presence of groups on a host.",
                "For Windows targets, use the M(ansible.windows.win_group) module instead."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/group.py",
            "has_action": false,
            "module": "group",
            "notes": [
                "Supports C(check_mode)."
            ],
            "options": {
                "gid": {
                    "description": [
                        "Optional I(GID) to set for the group."
                    ],
                    "type": "int"
                },
                "local": {
                    "default": false,
                    "description": [
                        "Forces the use of \"local\" command alternatives on platforms that implement it.",
                        "This is useful in environments that use centralized authentication when you want to manipulate the local groups. (for example, it uses C(lgroupadd) instead of C(groupadd)).",
                        "This requires that these commands exist on the targeted host, otherwise it will be a fatal error."
                    ],
                    "type": "bool",
                    "version_added": "2.6",
                    "version_added_collection": "ansible.builtin"
                },
                "name": {
                    "description": [
                        "Name of the group to manage."
                    ],
                    "required": true,
                    "type": "str"
                },
                "non_unique": {
                    "default": false,
                    "description": [
                        "This option allows to change the group ID to a non-unique value. Requires C(gid).",
                        "Not supported on macOS or BusyBox distributions."
                    ],
                    "type": "bool",
                    "version_added": "2.8",
                    "version_added_collection": "ansible.builtin"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the group should be present or not on the remote host."
                    ],
                    "type": "str"
                },
                "system": {
                    "default": false,
                    "description": [
                        "If I(yes), indicates that the group created is a system group."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "groupadd",
                "groupdel",
                "groupmod"
            ],
            "seealso": [
                {
                    "module": "ansible.builtin.user"
                },
                {
                    "module": "ansible.windows.win_group"
                }
            ],
            "short_description": "Add or remove groups",
            "version_added": "0.0.2",
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- name: Ensure group \"somegroup\" exists\n  ansible.builtin.group:\n    name: somegroup\n    state: present\n\n- name: Ensure group \"docker\" exists with correct gid\n  ansible.builtin.group:\n    name: docker\n    state: present\n    gid: 1750\n",
        "metadata": null,
        "return": {
            "gid": {
                "description": "Group ID of the group.",
                "returned": "When C(state) is 'present'",
                "sample": 1001,
                "type": "int"
            },
            "name": {
                "description": "Group name.",
                "returned": "always",
                "sample": "users",
                "type": "str"
            },
            "state": {
                "description": "Whether the group is present or not.",
                "returned": "always",
                "sample": "absent",
                "type": "str"
            },
            "system": {
                "description": "Whether the group is a system group or not.",
                "returned": "When C(state) is 'present'",
                "sample": false,
                "type": "bool"
            }
        }
    }
}
