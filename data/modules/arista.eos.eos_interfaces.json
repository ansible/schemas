{
    "arista.eos.eos_interfaces": {
        "doc": {
            "author": [
                "Nathaniel Case (@qalthos)"
            ],
            "collection": "arista.eos",
            "description": [
                "This module manages the interface attributes of Arista EOS interfaces."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/arista/eos/plugins/modules/eos_interfaces.py",
            "has_action": true,
            "module": "eos_interfaces",
            "notes": [
                "Tested against Arista EOS 4.20.10M",
                "This module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html)."
            ],
            "options": {
                "config": {
                    "description": "The provided configuration",
                    "elements": "dict",
                    "suboptions": {
                        "description": {
                            "description": [
                                "Interface description"
                            ],
                            "type": "str"
                        },
                        "duplex": {
                            "description": [
                                "Interface link status. Applicable for Ethernet interfaces only.",
                                "Values other than C(auto) must also set I(speed).",
                                "Ignored when I(speed) is set above C(1000)."
                            ],
                            "type": "str"
                        },
                        "enabled": {
                            "default": true,
                            "description": [
                                "Administrative state of the interface.",
                                "Set the value to C(true) to administratively enable the interface or C(false) to disable it."
                            ],
                            "type": "bool"
                        },
                        "mode": {
                            "choices": [
                                "layer2",
                                "layer3"
                            ],
                            "description": [
                                "Manage Layer2 or Layer3 state of the interface. Applicable for Ethernet and port channel interfaces only."
                            ],
                            "type": "str"
                        },
                        "mtu": {
                            "description": [
                                "MTU for a specific interface. Must be an even number between 576 and 9216. Applicable for Ethernet interfaces only."
                            ],
                            "type": "int"
                        },
                        "name": {
                            "description": [
                                "Full name of the interface, e.g. GigabitEthernet1."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "speed": {
                            "description": [
                                "Interface link speed. Applicable for Ethernet interfaces only."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "running_config": {
                    "description": [
                        "This option is used only with state I(parsed).",
                        "The value of this option should be the output received from the EOS device by executing the command B(show running-config | section ^interface).",
                        "The state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "merged",
                        "replaced",
                        "overridden",
                        "deleted",
                        "parsed",
                        "rendered",
                        "gathered"
                    ],
                    "default": "merged",
                    "description": [
                        "The state of the configuration after module completion."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Interfaces resource module",
            "version_added": "1.0.0",
            "version_added_collection": "arista.eos"
        },
        "examples": "\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Merge provided configuration with device configuration\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n      mode: layer3\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: merged\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n#    no switchport\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: replaced\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Overrides all device configuration with provided configuration\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: overridden\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n# interface Management1\n#    ip address dhcp\n# !\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n#    description \"Interface 1\"\n#    no switchport\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n- name: Delete or return interface parameters to default settings\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n    state: deleted\n\n# After state:\n# ------------\n#\n# veos#show running-config | section interface\n# interface Ethernet1\n# !\n# interface Ethernet2\n# !\n# interface Management1\n#    description \"Management interface\"\n#    ip address dhcp\n# !\n\n# Using rendered\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_interfaces:\n    config:\n    - name: Ethernet1\n      enabled: true\n      mode: layer3\n    - name: Ethernet2\n      description: Configured by Ansible\n      enabled: false\n    state: merged\n\n# Output:\n# ------------\n\n# - \"interface Ethernet1\"\n# - \"description \"Interface 1\"\"\n# - \"no swithcport\"\n# - \"interface Ethernet2\"\n# - \"description \"Configured by Ansible\"\"\n# - \"shutdown\"\n# - \"interface Management1\"\n# - \"description \"Management interface\"\"\n# - \"ip address dhcp\"\n\n# Using parsed\n# parsed.cfg\n\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output\n# parsed:\n#     - name: Ethernet1\n#       enabled: True\n#       mode: layer2\n#     - name: Ethernet2\n#       description: 'Configured by Ansible'\n#       enabled: False\n#       mode: layer2\n\n# Using gathered:\n\n# Existing config on the device\n# -----------------------------\n# interface Ethernet1\n#    description \"Interface 1\"\n# !\n# interface Ethernet2\n#    description \"Configured by Ansible\"\n#    shutdown\n# !\n\n- name: Gather interfaces facts from the device\n  arista.eos.interfaces:\n    state: gathered\n\n# output\n# gathered:\n#      - name: Ethernet1\n#        enabled: True\n#        mode: layer2\n#      - name: Ethernet2\n#        description: 'Configured by Ansible'\n#        enabled: False\n#        mode: layer2\n",
        "metadata": null,
        "return": {
            "after": {
                "description": "The configuration as structured data after module completion.",
                "returned": "when changed",
                "sample": "The configuration returned will always be in the same format of the parameters above.",
                "type": "dict"
            },
            "before": {
                "description": "The configuration as structured data prior to module invocation.",
                "returned": "always",
                "sample": "The configuration returned will always be in the same format of the parameters above.",
                "type": "dict"
            },
            "commands": {
                "description": "The set of commands pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "interface Ethernet2",
                    "shutdown",
                    "speed 10full"
                ],
                "type": "list"
            }
        }
    }
}
