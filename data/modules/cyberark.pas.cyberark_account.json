{
    "cyberark.pas.cyberark_account": {
        "doc": {
            "author": [
                "CyberArk BizDev (@cyberark-bizdev)",
                "Edward Nunez (@enunez-cyberark)",
                "James Stutes (@jimmyjamcabd)"
            ],
            "collection": "cyberark.pas",
            "description": [
                "Creates a URI for adding, deleting, modifying a privileged credential within the Cyberark Vault.  The request uses the Privileged Account Security Web Services SDK."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cyberark/pas/plugins/modules/cyberark_account.py",
            "has_action": false,
            "module": "cyberark_account",
            "options": {
                "address": {
                    "description": [
                        "The address of the endpoint where the privileged account is located."
                    ],
                    "required": false,
                    "type": "str"
                },
                "api_base_url": {
                    "description": [
                        "A string containing the base URL of the server hosting CyberArk's Privileged Account Security Web Services SDK.",
                        "Example U(https://<IIS_Server_Ip>/PasswordVault/api/)"
                    ],
                    "required": true,
                    "type": "str"
                },
                "cyberark_session": {
                    "description": [
                        "Dictionary set by a CyberArk authentication containing the different values to perform actions on a logged-on CyberArk session, please see M(cyberark_authentication) module for an example of cyberark_session."
                    ],
                    "required": true,
                    "type": "dict"
                },
                "identified_by": {
                    "default": "username,address,platform_id",
                    "description": [
                        "When an API call is made to Get Accounts, often times the default parameters passed will identify more than one account. This parameter is used to confidently identify a single account when the default query can return multiple results."
                    ],
                    "required": false,
                    "type": "str"
                },
                "logging_file": {
                    "default": "/tmp/ansible_cyberark.log",
                    "description": [
                        "Setting the log file name and location for troubleshooting logs."
                    ],
                    "required": false,
                    "type": "str"
                },
                "logging_level": {
                    "choices": [
                        "NOTSET",
                        "DEBUG",
                        "INFO"
                    ],
                    "description": [
                        "Parameter used to define the level of troubleshooting output to the C(logging_file) value."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The ObjectID of the account"
                    ],
                    "required": false,
                    "type": "str"
                },
                "new_secret": {
                    "description": [
                        "The new secret/password to be stored in CyberArk Vault."
                    ],
                    "type": "str"
                },
                "platform_account_properties": {
                    "description": [
                        "Object containing key-value pairs to associate with the account, as defined by the account platform. These properties are validated against the mandatory and optional properties of the specified platform's definition. Optional properties that do not exist on the account will not be returned here. Internal properties are not returned."
                    ],
                    "required": false,
                    "suboptions": {
                        "KEY": {
                            "aliases": [
                                "Port",
                                "ExtrPass1Name",
                                "database"
                            ],
                            "description": [
                                "Freeform key value associated to the mandatory or optional property assigned to the specified Platform's definition."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "platform_id": {
                    "description": [
                        "The PolicyID of the Platform that is to be managing the account"
                    ],
                    "required": false,
                    "type": "str"
                },
                "remote_machines_access": {
                    "description": [
                        "Set of parameters for defining PSM endpoint access targets."
                    ],
                    "required": false,
                    "suboptions": {
                        "access_restricted_to_remote_machines": {
                            "description": [
                                "Whether or not to restrict access only to specified remote machines."
                            ],
                            "type": "bool"
                        },
                        "remote_machines": {
                            "description": [
                                "List of targets allowed for this account."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "safe": {
                    "description": [
                        "The safe in the Vault where the privileged account is to be located."
                    ],
                    "required": true,
                    "type": "str"
                },
                "secret": {
                    "description": [
                        "The initial password for the creation of the account"
                    ],
                    "required": false,
                    "type": "str"
                },
                "secret_management": {
                    "description": [
                        "Set of parameters associated with the management of the credential."
                    ],
                    "required": false,
                    "suboptions": {
                        "automatic_management_enabled": {
                            "default": false,
                            "description": [
                                "Parameter that indicates whether the CPM will manage the password or not."
                            ],
                            "type": "bool"
                        },
                        "management_action": {
                            "choices": [
                                "change",
                                "change_immediately",
                                "reconcile"
                            ],
                            "description": [
                                "CPM action flag to be placed on the account object for credential rotation."
                            ],
                            "type": "str"
                        },
                        "manual_management_reason": {
                            "description": [
                                "String value indicating why the CPM will NOT manage the password."
                            ],
                            "type": "str"
                        },
                        "new_secret": {
                            "description": [
                                "The actual password value that will be assigned for the CPM action to be taken."
                            ],
                            "type": "str"
                        },
                        "perform_management_action": {
                            "choices": [
                                "always",
                                "on_create"
                            ],
                            "default": "always",
                            "description": [
                                "C(always) will perform the management action in every action.",
                                "C(on_create) will only perform the management action right after the account is created."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "secret_type": {
                    "choices": [
                        "password",
                        "key"
                    ],
                    "default": "password",
                    "description": [
                        "The value that identifies what type of account it will be."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Assert the desired state of the account C(present) to creat or update and account object. Set to C(absent) for deletion of an account object."
                    ],
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "description": [
                        "The username associated with the account."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(false), SSL certificate chain will not be validated.  This should only set to C(true) if you have a root CA certificate installed on each node."
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "short_description": "Module for CyberArk Account object creation, deletion, and modification using PAS Web Services SDK.",
            "version_added": 2.4,
            "version_added_collection": "cyberark.pas"
        },
        "examples": "\n  collections:\n    - cyberark.pas\n\n  tasks:\n\n    - name: Logon to CyberArk Vault using PAS Web Services SDK\n      cyberark_authentication:\n        api_base_url: \"http://components.cyberark.local\"\n        validate_certs: no\n        username: \"bizdev\"\n        password: \"Cyberark1\"\n\n    - name: Creating an Account using the PAS WebServices SDK\n      cyberark_account:\n        logging_level: DEBUG\n        identified_by: \"address,username\"\n        safe: \"Test\"\n        address: \"cyberark.local\"\n        username: \"administrator-x\"\n        platform_id: WinServerLocal\n        secret: \"@N&Ibl3!\"\n        platform_account_properties:\n            LogonDomain: \"cyberark\"\n            OwnerName: \"ansible_user\"\n        secret_management:\n            automatic_management_enabled: true\n        state: present\n        cyberark_session: \"{{ cyberark_session }}\"\n      register: cyberarkaction\n\n    - name:\n        - Rotate credential via reconcile and providing the password to\n          bechanged to.\n      cyberark_account:\n        identified_by: \"address,username\"\n        safe: \"Domain_Admins\"\n        address: \"prod.cyberark.local\"\n        username: \"admin\"\n        platform_id: WinDomain\n        platform_account_properties:\n            LogonDomain: \"PROD\"\n        secret_management:\n            new_secret: \"Ama123ah12@#!Xaamdjbdkl@#112\"\n            management_action: \"reconcile\"\n            automatic_management_enabled: true\n        state: present\n        cyberark_session: \"{{ cyberark_session }}\"\n      register: reconcileaccount\n\n    - name: Logoff from CyberArk Vault\n      cyberark_authentication:\n        state: absent\n        cyberark_session: \"{{ cyberark_session }}\"\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "changed": {
                "description": [
                    "Identify if the playbook run resulted in a change to the account in any way."
                ],
                "returned": "always",
                "type": "bool"
            },
            "failed": {
                "description": "Whether playbook run resulted in a failure of any kind.",
                "returned": "always",
                "type": "bool"
            },
            "result": {
                "contains": {
                    "address": {
                        "description": [
                            "The adress of the endpoint where the privileged account is located."
                        ],
                        "returned": "successful addition and modification",
                        "sample": "dev.local",
                        "type": "str"
                    },
                    "createdTime": {
                        "description": [
                            "Timeframe calculation of the timestamp of account creation."
                        ],
                        "returned": "successful addition and modification",
                        "sample": "1567824520",
                        "type": "int"
                    },
                    "id": {
                        "description": "Internal ObjectID for the account object identified",
                        "returned": "successful addition and modification",
                        "sample": "25_21",
                        "type": "int"
                    },
                    "name": {
                        "description": "The external ObjectID of the account",
                        "returned": "successful addition and modification",
                        "sample": [
                            "Operating System-WinServerLocal-cyberark.local-administrator"
                        ],
                        "type": "str"
                    },
                    "platformAccountProperties": {
                        "contains": {
                            "KEY VALUE": {
                                "description": [
                                    "Object containing key-value pairs to associate with the account, as defined by the account platform."
                                ],
                                "returned": "successful addition and modification",
                                "sample": [
                                    {
                                        "LogonDomain": "cyberark"
                                    },
                                    {
                                        "Port": "22"
                                    }
                                ],
                                "type": "str"
                            }
                        },
                        "description": [
                            "Object containing key-value pairs to associate with the account, as defined by the account platform."
                        ],
                        "returned": "successful addition and modification",
                        "type": "complex"
                    },
                    "platformId": {
                        "description": [
                            "The PolicyID of the Platform that is to be managing the account."
                        ],
                        "returned": "successful addition and modification",
                        "sample": "WinServerLocal",
                        "type": "str"
                    },
                    "safeName": {
                        "description": [
                            "The safe in the Vault where the privileged account is to be located."
                        ],
                        "returned": "successful addition and modification",
                        "sample": "Domain_Admins",
                        "type": "str"
                    },
                    "secretManagement": {
                        "description": [
                            "Set of parameters associated with the management of the credential."
                        ],
                        "returned": "successful addition and modification",
                        "sample": {
                            "automaticManagementEnabled": {
                                "description": [
                                    "Parameter that indicates whether the CPM will manage the password or not."
                                ],
                                "returned": "successful addition and modification",
                                "type": "bool"
                            },
                            "lastModifiedTime": {
                                "description": [
                                    "Timeframe calculation of the timestamp of account modification."
                                ],
                                "returned": "successful addition and modification",
                                "sample": "1567824520",
                                "type": "int"
                            },
                            "manualManagementReason": {
                                "description": null,
                                "returned": "if C(automaticManagementEnabled) is set to false",
                                "sample": "This is a static account",
                                "type": "str"
                            }
                        },
                        "type": "complex"
                    },
                    "secretType": {
                        "description": [
                            "The value that identifies what type of account it will be"
                        ],
                        "returned": "successful addition and modification",
                        "sample": [
                            "key",
                            "password"
                        ],
                        "type": "list"
                    },
                    "userName": {
                        "description": "The username associated with the account",
                        "returned": "successful addition and modification",
                        "sample": "administrator",
                        "type": "str"
                    }
                },
                "description": "A json dump of the resulting action.",
                "returned": "success",
                "type": "complex"
            },
            "status_code": {
                "description": "Result HTTP Status code.",
                "returned": "success",
                "sample": "200, 201, -1, 204",
                "type": "int"
            }
        }
    }
}
