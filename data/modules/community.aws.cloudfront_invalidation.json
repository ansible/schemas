{
    "community.aws.cloudfront_invalidation": {
        "doc": {
            "author": "Willem van Ketwich (@wilvk)",
            "collection": "community.aws",
            "description": [
                "Allows for invalidation of a batch of paths for a CloudFront distribution."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/cloudfront_invalidation.py",
            "has_action": false,
            "module": "cloudfront_invalidation",
            "notes": [
                "does not support check mode",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "alias": {
                    "description": [
                        "The alias of the CloudFront distribution to invalidate paths for. Can be specified instead of distribution_id."
                    ],
                    "required": false,
                    "type": "str"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "caller_reference": {
                    "default": null,
                    "description": [
                        "A unique reference identifier for the invalidation paths.",
                        "Defaults to current datetime stamp."
                    ],
                    "required": false,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "distribution_id": {
                    "description": [
                        "The ID of the CloudFront distribution to invalidate paths for. Can be specified instead of the alias."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "target_paths": {
                    "description": [
                        "A list of paths on the distribution to invalidate. Each path should begin with '/'. Wildcards are allowed. eg. '/foo/bar/*'"
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3 >= 1.0.0",
                "python >= 2.6"
            ],
            "short_description": "create invalidations for AWS CloudFront distributions",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n\n- name: create a batch of invalidations using a distribution_id for a reference\n  community.aws.cloudfront_invalidation:\n    distribution_id: E15BU8SDCGSG57\n    caller_reference: testing 123\n    target_paths:\n      - /testpathone/test1.css\n      - /testpathtwo/test2.js\n      - /testpaththree/test3.ss\n\n- name: create a batch of invalidations using an alias as a reference and one path using a wildcard match\n  community.aws.cloudfront_invalidation:\n    alias: alias.test.com\n    caller_reference: testing 123\n    target_paths:\n      - /testpathone/test4.css\n      - /testpathtwo/test5.js\n      - /testpaththree/*\n\n",
        "metadata": null,
        "return": {
            "invalidation": {
                "contains": {
                    "create_time": {
                        "description": "The date and time the invalidation request was first made.",
                        "returned": "always",
                        "sample": "2018-02-01T15:50:41.159000+00:00",
                        "type": "str"
                    },
                    "id": {
                        "description": "The identifier for the invalidation request.",
                        "returned": "always",
                        "sample": "I2G9MOWJZFV612",
                        "type": "str"
                    },
                    "invalidation_batch": {
                        "contains": {
                            "caller_reference": {
                                "description": "The value used to uniquely identify an invalidation request.",
                                "returned": "always",
                                "sample": "testing 123",
                                "type": "str"
                            },
                            "paths": {
                                "contains": {
                                    "items": {
                                        "description": "A list of the paths that you want to invalidate.",
                                        "returned": "always",
                                        "sample": [
                                            "/testpathtwo/test2.js",
                                            "/testpathone/test1.css",
                                            "/testpaththree/test3.ss"
                                        ],
                                        "type": "list"
                                    },
                                    "quantity": {
                                        "description": "The number of objects that you want to invalidate.",
                                        "returned": "always",
                                        "sample": 3,
                                        "type": "int"
                                    }
                                },
                                "description": "A dict that contains information about the objects that you want to invalidate.",
                                "returned": "always",
                                "type": "complex"
                            }
                        },
                        "description": "The current invalidation information for the batch request.",
                        "returned": "always",
                        "type": "complex"
                    },
                    "status": {
                        "description": "The status of the invalidation request.",
                        "returned": "always",
                        "sample": "Completed",
                        "type": "str"
                    }
                },
                "description": "The invalidation's information.",
                "returned": "always",
                "type": "complex"
            },
            "location": {
                "description": "The fully qualified URI of the distribution and invalidation batch request.",
                "returned": "always",
                "sample": "https://cloudfront.amazonaws.com/2017-03-25/distribution/E1ZID6KZJECZY7/invalidation/I2G9MOWJZFV622",
                "type": "str"
            }
        }
    }
}
