{
    "fortinet.fortios.fortios_wireless_controller_timers": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Hongbin Lu (@fgtdev-hblu)",
                "Frank Shen (@frankshen01)",
                "Miguel Angel Munoz (@mamunozgonzalez)",
                "Nicolas Thomas (@thomnico)"
            ],
            "collection": "fortinet.fortios",
            "description": [
                "This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the user to set and modify wireless_controller feature and timers category. Examples include all parameters and values need to be adjusted to datasources before usage. Tested with FOS v6.0.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortios/plugins/modules/fortios_wireless_controller_timers.py",
            "has_action": false,
            "module": "fortios_wireless_controller_timers",
            "notes": [
                "Legacy fortiosapi has been deprecated, httpapi is the preferred way to run playbooks"
            ],
            "options": {
                "access_token": {
                    "description": [
                        "Token-based authentication. Generated from GUI of Fortigate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "vdom": {
                    "default": "root",
                    "description": [
                        "Virtual domain, among those defined previously. A vdom is a virtual instance of the FortiGate that can be configured and used as a different unit."
                    ],
                    "type": "str"
                },
                "wireless_controller_timers": {
                    "default": null,
                    "description": [
                        "Configure CAPWAP timers."
                    ],
                    "suboptions": {
                        "ble_scan_report_intv": {
                            "description": [
                                "Time between running Bluetooth Low Energy (BLE) reports (10 - 3600 sec)."
                            ],
                            "type": "int"
                        },
                        "client_idle_timeout": {
                            "description": [
                                "Time after which a client is considered idle and times out (20 - 3600 sec)."
                            ],
                            "type": "int"
                        },
                        "darrp_day": {
                            "choices": [
                                "sunday",
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday"
                            ],
                            "description": [
                                "Weekday on which to run DARRP optimization."
                            ],
                            "type": "str"
                        },
                        "darrp_optimize": {
                            "description": [
                                "Time for running Dynamic Automatic Radio Resource Provisioning (DARRP) optimizations (0 - 86400 sec)."
                            ],
                            "type": "int"
                        },
                        "darrp_time": {
                            "description": [
                                "Time at which DARRP optimizations run (you can add up to 8 times)."
                            ],
                            "suboptions": {
                                "time": {
                                    "description": [
                                        "Time."
                                    ],
                                    "required": true,
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "discovery_interval": {
                            "description": [
                                "Time between discovery requests (2 - 180 sec)."
                            ],
                            "type": "int"
                        },
                        "echo_interval": {
                            "description": [
                                "Time between echo requests sent by the managed WTP, AP, or FortiAP (1 - 255 sec)."
                            ],
                            "type": "int"
                        },
                        "fake_ap_log": {
                            "description": [
                                "Time between recording logs about fake APs if periodic fake AP logging is configured (0 - 1440 min)."
                            ],
                            "type": "int"
                        },
                        "ipsec_intf_cleanup": {
                            "description": [
                                "Time period to keep IPsec VPN interfaces up after WTP sessions are disconnected (30 - 3600 sec)."
                            ],
                            "type": "int"
                        },
                        "radio_stats_interval": {
                            "description": [
                                "Time between running radio reports (1 - 255 sec)."
                            ],
                            "type": "int"
                        },
                        "rogue_ap_log": {
                            "description": [
                                "Time between logging rogue AP messages if periodic rogue AP logging is configured (0 - 1440 min)."
                            ],
                            "type": "int"
                        },
                        "sta_capability_interval": {
                            "description": [
                                "Time between running station capability reports (1 - 255 sec)."
                            ],
                            "type": "int"
                        },
                        "sta_locate_timer": {
                            "description": [
                                "Time between running client presence flushes to remove clients that are listed but no longer present (0 - 86400 sec)."
                            ],
                            "type": "int"
                        },
                        "sta_stats_interval": {
                            "description": [
                                "Time between running client (station) reports (1 - 255 sec)."
                            ],
                            "type": "int"
                        },
                        "vap_stats_interval": {
                            "description": [
                                "Time between running Virtual Access Point (VAP) reports (1 - 255 sec)."
                            ],
                            "type": "int"
                        }
                    },
                    "type": "dict"
                }
            },
            "requirements": [
                "ansible>=2.9.0"
            ],
            "short_description": "Configure CAPWAP timers in Fortinet's FortiOS and FortiGate.",
            "version_added": "2.9",
            "version_added_collection": "fortinet.fortios"
        },
        "examples": "\n- hosts: fortigates\n  collections:\n    - fortinet.fortios\n  connection: httpapi\n  vars:\n   vdom: \"root\"\n   ansible_httpapi_use_ssl: yes\n   ansible_httpapi_validate_certs: no\n   ansible_httpapi_port: 443\n  tasks:\n  - name: Configure CAPWAP timers.\n    fortios_wireless_controller_timers:\n      vdom:  \"{{ vdom }}\"\n      wireless_controller_timers:\n        ble_scan_report_intv: \"3\"\n        client_idle_timeout: \"4\"\n        darrp_day: \"sunday\"\n        darrp_optimize: \"6\"\n        darrp_time:\n         -\n            time: \"<your_own_value>\"\n        discovery_interval: \"9\"\n        echo_interval: \"10\"\n        fake_ap_log: \"11\"\n        ipsec_intf_cleanup: \"12\"\n        radio_stats_interval: \"13\"\n        rogue_ap_log: \"14\"\n        sta_capability_interval: \"15\"\n        sta_locate_timer: \"16\"\n        sta_stats_interval: \"17\"\n        vap_stats_interval: \"18\"\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "build": {
                "description": "Build number of the fortigate image",
                "returned": "always",
                "sample": "1547",
                "type": "str"
            },
            "http_method": {
                "description": "Last method used to provision the content into FortiGate",
                "returned": "always",
                "sample": "PUT",
                "type": "str"
            },
            "http_status": {
                "description": "Last result given by FortiGate on last operation applied",
                "returned": "always",
                "sample": "200",
                "type": "str"
            },
            "mkey": {
                "description": "Master key (id) used in the last call to FortiGate",
                "returned": "success",
                "sample": "id",
                "type": "str"
            },
            "name": {
                "description": "Name of the table used to fulfill the request",
                "returned": "always",
                "sample": "urlfilter",
                "type": "str"
            },
            "path": {
                "description": "Path of the table used to fulfill the request",
                "returned": "always",
                "sample": "webfilter",
                "type": "str"
            },
            "revision": {
                "description": "Internal revision number",
                "returned": "always",
                "sample": "17.0.2.10658",
                "type": "str"
            },
            "serial": {
                "description": "Serial number of the unit",
                "returned": "always",
                "sample": "FGVMEVYYQT3AB5352",
                "type": "str"
            },
            "status": {
                "description": "Indication of the operation's result",
                "returned": "always",
                "sample": "success",
                "type": "str"
            },
            "vdom": {
                "description": "Virtual domain used",
                "returned": "always",
                "sample": "root",
                "type": "str"
            },
            "version": {
                "description": "Version of the FortiGate",
                "returned": "always",
                "sample": "v5.6.3",
                "type": "str"
            }
        }
    }
}
