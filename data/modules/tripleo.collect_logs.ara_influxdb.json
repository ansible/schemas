{
    "tripleo.collect_logs.ara_influxdb": {
        "doc": {
            "author": "Red Hat (@RedHatOfficial)",
            "collection": "tripleo.collect_logs",
            "description": "Python ansible module to send ARA stats to InfluxDB timeseries database\n",
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/tripleo/collect_logs/plugins/modules/ara_influxdb.py",
            "has_action": false,
            "module": "ara_influxdb",
            "options": {
                "ara_data": {
                    "description": "List of ARA results: ara result list --all -f json\n",
                    "required": true,
                    "type": "str"
                },
                "data_file": {
                    "description": "Path to file to save InfluxDB data in it\n",
                    "required": true,
                    "type": "str"
                },
                "influxdb_db": {
                    "description": "Database name in InfluxDB server for sending data to it\n",
                    "required": true,
                    "type": "str"
                },
                "influxdb_password": {
                    "description": "Password for authentication to InfluxDB server\n",
                    "required": false,
                    "type": "str"
                },
                "influxdb_port": {
                    "description": "The port of HTTP API of InfluxDB server, by default is 8086\n",
                    "required": true,
                    "type": "int"
                },
                "influxdb_url": {
                    "description": "The URL of HTTP API of InfluxDB server:\nfor example https://influxdb.example.com\n",
                    "required": true,
                    "type": "str"
                },
                "influxdb_user": {
                    "description": "User for authentication to InfluxDB server\n",
                    "required": false,
                    "type": "str"
                },
                "longest_tasks": {
                    "description": "Whether to to print only longest tasks and how many, by default 0.\n",
                    "required": false,
                    "type": "int"
                },
                "mapped_fields": {
                    "default": true,
                    "description": "Whether to use configured static map of fields and tasks,\nby default True.\n",
                    "required": false,
                    "type": "bool"
                },
                "measurement": {
                    "description": "Name of Influx measurement in database\n",
                    "required": true,
                    "type": "str"
                },
                "only_successful_tasks": {
                    "description": "Whether to send only successful tasks, ignoring skipped and failed,\nby default True.\n",
                    "required": true,
                    "type": "bool"
                },
                "standard_fields": {
                    "default": true,
                    "description": "Whether to send standard fields of each job, i.e. times, by default True.\n",
                    "required": false,
                    "type": "bool"
                }
            },
            "short_description": "Send ARA stats to InfluxDB",
            "version_added": "1.0.0",
            "version_added_collection": "tripleo.collect_logs"
        },
        "examples": "\n- name: Get ARA json data\n  shell: \"{{ local_working_dir }}/bin/ara result list --all -f json\"\n  register: ara_data\n\n- name: Collect and send data to InfluxDB\n  ara_influxdb:\n    influxdb_url: https://influxdb.example.com\n    influxdb_port: 8086\n    influxdb_user: db_user\n    influxdb_password: db_password\n    influxdb_db: db_name\n    ara_data: \"{{ ara_data.stdout }}\"\n    measurement: test\n    data_file: /tmp/test_data\n    only_successful_tasks: true\n    mapped_fields: false\n    standard_fields: false\n    longest_tasks: 15\n  when: ara_data.stdout != \"[]\"\n",
        "metadata": null,
        "return": null
    }
}
