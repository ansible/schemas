{
    "community.rabbitmq.rabbitmq_binding": {
        "doc": {
            "author": "Manuel Sousa (@manuel-sousa)",
            "collection": "community.rabbitmq",
            "description": [
                "This module uses rabbitMQ REST APIs to create / delete bindings."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_binding.py",
            "has_action": false,
            "module": "rabbitmq_binding",
            "options": {
                "arguments": {
                    "default": {},
                    "description": [
                        "extra arguments for exchange. If defined this argument is a key/value dictionary"
                    ],
                    "required": false,
                    "type": "dict"
                },
                "ca_cert": {
                    "aliases": [
                        "cacert"
                    ],
                    "description": [
                        "CA certificate to verify SSL connection to management API."
                    ],
                    "type": "path"
                },
                "client_cert": {
                    "aliases": [
                        "cert"
                    ],
                    "description": [
                        "Client certificate to send on SSL connections to management API."
                    ],
                    "type": "path"
                },
                "client_key": {
                    "aliases": [
                        "key"
                    ],
                    "description": [
                        "Private key matching the client certificate."
                    ],
                    "type": "path"
                },
                "destination": {
                    "aliases": [
                        "dst",
                        "dest"
                    ],
                    "description": [
                        "destination exchange or queue for the binding."
                    ],
                    "required": true,
                    "type": "str"
                },
                "destination_type": {
                    "aliases": [
                        "type",
                        "dest_type"
                    ],
                    "choices": [
                        "queue",
                        "exchange"
                    ],
                    "description": [
                        "Either queue or exchange."
                    ],
                    "required": true,
                    "type": "str"
                },
                "login_host": {
                    "default": "localhost",
                    "description": [
                        "RabbitMQ host for connection."
                    ],
                    "type": "str"
                },
                "login_password": {
                    "default": "guest",
                    "description": [
                        "RabbitMQ password for connection."
                    ],
                    "type": "str"
                },
                "login_port": {
                    "default": "15672",
                    "description": [
                        "RabbitMQ management API port."
                    ],
                    "type": "str"
                },
                "login_protocol": {
                    "choices": [
                        "http",
                        "https"
                    ],
                    "default": "http",
                    "description": [
                        "RabbitMQ management API protocol."
                    ],
                    "type": "str"
                },
                "login_user": {
                    "default": "guest",
                    "description": [
                        "RabbitMQ user for connection."
                    ],
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "src",
                        "source"
                    ],
                    "description": [
                        "source exchange to create binding on."
                    ],
                    "required": true,
                    "type": "str"
                },
                "routing_key": {
                    "default": "#",
                    "description": [
                        "routing key for the binding."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the bindings should be present or absent."
                    ],
                    "type": "str"
                },
                "vhost": {
                    "default": "/",
                    "description": [
                        "RabbitMQ virtual host."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "requests >= 1.0.0"
            ],
            "short_description": "Manage rabbitMQ bindings"
        },
        "examples": "\n# Bind myQueue to directExchange with routing key info\n- community.rabbitmq.rabbitmq_binding:\n    name: directExchange\n    destination: myQueue\n    type: queue\n    routing_key: info\n\n# Bind directExchange to topicExchange with routing key *.info\n- community.rabbitmq.rabbitmq_binding:\n    name: topicExchange\n    destination: topicExchange\n    type: exchange\n    routing_key: '*.info'\n",
        "metadata": null,
        "return": null
    }
}
