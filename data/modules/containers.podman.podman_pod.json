{
    "containers.podman.podman_pod": {
        "doc": {
            "author": [
                "Sagi Shnaidman (@sshnaidm)"
            ],
            "collection": "containers.podman",
            "description": [
                "Manage podman pods."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/containers/podman/plugins/modules/podman_pod.py",
            "has_action": false,
            "module": "podman_pod",
            "options": {
                "add_host": {
                    "description": [
                        "Add a host to the /etc/hosts file shared between all containers in the pod."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "cgroup_parent": {
                    "description": [
                        "Path to cgroups under which the cgroup for the pod will be created. If the path is not absolute, he path is considered to be relative to the cgroups path of the init process. Cgroups will be created if they do not already exist."
                    ],
                    "required": false,
                    "type": "str"
                },
                "debug": {
                    "default": false,
                    "description": [
                        "Return additional information which can be helpful for investigations."
                    ],
                    "type": "bool"
                },
                "dns": {
                    "description": [
                        "Set custom DNS servers in the /etc/resolv.conf file that will be shared between all containers in the pod. A special option, \"none\" is allowed which disables creation of /etc/resolv.conf for the pod."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "dns_opt": {
                    "description": [
                        "Set custom DNS options in the /etc/resolv.conf file that will be shared between all containers in the pod."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "dns_search": {
                    "description": [
                        "Set custom DNS search domains in the /etc/resolv.conf file that will be shared between all containers in the pod."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "executable": {
                    "default": "podman",
                    "description": [
                        "Path to C(podman) executable if it is not in the C($PATH) on the machine running C(podman)"
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "Set a hostname to the pod"
                    ],
                    "required": false,
                    "type": "str"
                },
                "infra": {
                    "description": [
                        "Create an infra container and associate it with the pod. An infra container is a lightweight container used to coordinate the shared kernel namespace of a pod. Default is true."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "infra_command": {
                    "description": [
                        "The command that will be run to start the infra container. Default is \"/pause\"."
                    ],
                    "required": false,
                    "type": "str"
                },
                "infra_conmon_pidfile": {
                    "description": [
                        "Write the pid of the infra container's conmon process to a file. As conmon runs in a separate process than Podman, this is necessary when using systemd to manage Podman containers and pods."
                    ],
                    "required": false,
                    "type": "str"
                },
                "infra_image": {
                    "description": [
                        "The image that will be created for the infra container. Default is \"k8s.gcr.io/pause:3.1\"."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ip": {
                    "description": [
                        "Set a static IP for the pod's shared network."
                    ],
                    "required": false,
                    "type": "str"
                },
                "label": {
                    "description": [
                        "Add metadata to a pod, pass dictionary of label keys and values."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "label_file": {
                    "description": [
                        "Read in a line delimited file of labels."
                    ],
                    "required": false,
                    "type": "str"
                },
                "mac_address": {
                    "description": [
                        "Set a static MAC address for the pod's shared network."
                    ],
                    "required": false,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Assign a name to the pod."
                    ],
                    "required": true,
                    "type": "str"
                },
                "network": {
                    "description": [
                        "Set network mode for the pod. Supported values are bridge (the default), host (do not create a network namespace, all containers in the pod will use the host's network), or a comma-separated list of the names of CNI networks the pod should join."
                    ],
                    "required": false,
                    "type": "str"
                },
                "no_hosts": {
                    "description": [
                        "Disable creation of /etc/hosts for the pod."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "pod_id_file": {
                    "description": [
                        "Write the pod ID to the file."
                    ],
                    "required": false,
                    "type": "str"
                },
                "publish": {
                    "aliases": [
                        "ports"
                    ],
                    "description": [
                        "Publish a port or range of ports from the pod to the host."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "recreate": {
                    "default": false,
                    "description": [
                        "Use with present and started states to force the re-creation of an existing pod."
                    ],
                    "type": "bool"
                },
                "share": {
                    "description": [
                        "A comma delimited list of kernel namespaces to share. If none or \"\" is specified, no namespaces will be shared. The namespaces to choose from are ipc, net, pid, user, uts."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "created",
                        "killed",
                        "restarted",
                        "absent",
                        "started",
                        "stopped",
                        "paused",
                        "unpaused"
                    ],
                    "default": "created",
                    "description": [
                        "This variable is set for state"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "podman"
            ],
            "short_description": "Manage Podman pods",
            "version_added": "1.0.0",
            "version_added_collection": "containers.podman"
        },
        "examples": "\n# What modules does for example\n- podman_pod:\n    name: pod1\n    state: started\n    ports:\n      - 4444:5555\n",
        "metadata": null,
        "return": {
            "pod": {
                "description": "Pod inspection results for the given pod built.",
                "returned": "always",
                "sample": {
                    "Config": {
                        "cgroupParent": "/libpod_parent",
                        "created": "2020-06-14T15:16:12.230818767+03:00",
                        "hostname": "newpod",
                        "id": "a5a5c6cdf8c72272fc5c33f787e8d7501e2fa0c1e92b2b602860defdafeeec58",
                        "infraConfig": {
                            "infraPortBindings": null,
                            "makeInfraContainer": true
                        },
                        "labels": {},
                        "lockID": 515,
                        "name": "newpod",
                        "sharesCgroup": true,
                        "sharesIpc": true,
                        "sharesNet": true,
                        "sharesUts": true
                    },
                    "Containers": [
                        {
                            "id": "dc70a947c7ae15198ec38b3c817587584085dee3919cbeb9969e3ab77ba10fd2",
                            "state": "configured"
                        }
                    ],
                    "State": {
                        "cgroupPath": "/libpod_parent/a5a5c6cdf8c72272fc5c33f787e8d7501e2fa0c1e92b2b602860defdafeeec58",
                        "infraContainerID": "dc70a947c7ae15198ec38b3c817587584085dee3919cbeb9969e3ab77ba10fd2",
                        "status": "Created"
                    }
                },
                "type": "dict"
            }
        }
    }
}
