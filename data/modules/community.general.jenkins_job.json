{
    "community.general.jenkins_job": {
        "doc": {
            "author": "Sergio Millan Rodriguez (@sermilrod)",
            "collection": "community.general",
            "description": [
                "Manage Jenkins jobs by using Jenkins REST API."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/jenkins_job.py",
            "has_action": false,
            "module": "jenkins_job",
            "options": {
                "config": {
                    "description": [
                        "config in XML format.",
                        "Required if job does not yet exist.",
                        "Mutually exclusive with C(enabled).",
                        "Considered if C(state=present)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "enabled": {
                    "description": [
                        "Whether the job should be enabled or disabled.",
                        "Mutually exclusive with C(config).",
                        "Considered if C(state=present)."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name of the Jenkins job."
                    ],
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Password to authenticate with the Jenkins server."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Attribute that specifies if the job has to be created or deleted."
                    ],
                    "required": false,
                    "type": "str"
                },
                "token": {
                    "description": [
                        "API token used to authenticate alternatively to password."
                    ],
                    "required": false,
                    "type": "str"
                },
                "url": {
                    "default": "http://localhost:8080",
                    "description": [
                        "URL where the Jenkins server is accessible."
                    ],
                    "required": false,
                    "type": "str"
                },
                "user": {
                    "description": [
                        "User to authenticate with the Jenkins server."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), the SSL certificates will not be validated. This should only set to C(no) used on personally controlled sites using self-signed certificates as it avoids verifying the source site.",
                        "The C(python-jenkins) library only handles this by using the environment variable C(PYTHONHTTPSVERIFY)."
                    ],
                    "type": "bool",
                    "version_added": "2.3.0",
                    "version_added_collection": "community.general"
                }
            },
            "requirements": [
                "python-jenkins >= 0.4.12"
            ],
            "short_description": "Manage jenkins jobs"
        },
        "examples": "\n- name: Create a jenkins job using basic authentication\n  community.general.jenkins_job:\n    config: \"{{ lookup('file', 'templates/test.xml') }}\"\n    name: test\n    password: admin\n    url: http://localhost:8080\n    user: admin\n\n- name: Create a jenkins job using the token\n  community.general.jenkins_job:\n    config: \"{{ lookup('template', 'templates/test.xml.j2') }}\"\n    name: test\n    token: asdfasfasfasdfasdfadfasfasdfasdfc\n    url: http://localhost:8080\n    user: admin\n\n- name: Delete a jenkins job using basic authentication\n  community.general.jenkins_job:\n    name: test\n    password: admin\n    state: absent\n    url: http://localhost:8080\n    user: admin\n\n- name: Delete a jenkins job using the token\n  community.general.jenkins_job:\n    name: test\n    token: asdfasfasfasdfasdfadfasfasdfasdfc\n    state: absent\n    url: http://localhost:8080\n    user: admin\n\n- name: Disable a jenkins job using basic authentication\n  community.general.jenkins_job:\n    name: test\n    password: admin\n    enabled: False\n    url: http://localhost:8080\n    user: admin\n\n- name: Disable a jenkins job using the token\n  community.general.jenkins_job:\n    name: test\n    token: asdfasfasfasdfasdfadfasfasdfasdfc\n    enabled: False\n    url: http://localhost:8080\n    user: admin\n",
        "metadata": null,
        "return": {
            "enabled": {
                "description": "Whether the jenkins job is enabled or not.",
                "returned": "success",
                "sample": true,
                "type": "bool"
            },
            "name": {
                "description": "Name of the jenkins job.",
                "returned": "success",
                "sample": "test-job",
                "type": "str"
            },
            "state": {
                "description": "State of the jenkins job.",
                "returned": "success",
                "sample": "present",
                "type": "str"
            },
            "url": {
                "description": "Url to connect to the Jenkins server.",
                "returned": "success",
                "sample": "https://jenkins.mydomain.com",
                "type": "str"
            },
            "user": {
                "description": "User used for authentication.",
                "returned": "success",
                "sample": "admin",
                "type": "str"
            }
        }
    }
}
