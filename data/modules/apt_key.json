{
    "apt_key": {
        "doc": {
            "author": [
                "Jayson Vantuyl (@jvantuyl)"
            ],
            "collection": "ansible.builtin",
            "description": [
                "Add or remove an I(apt) key, optionally downloading it."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/apt_key.py",
            "has_action": false,
            "module": "apt_key",
            "notes": [
                "Doesn't download the key unless it really needs it.",
                "As a sanity check, downloaded key id must match the one specified.",
                "Use full fingerprint (40 characters) key ids to avoid key collisions. To generate a full-fingerprint imported key: C(apt-key adv --list-public-keys --with-fingerprint --with-colons).",
                "If you specify both the key id and the URL with C(state=present), the task can verify or add the key as needed.",
                "Adding a new key requires an apt cache update (e.g. using the M(ansible.builtin.apt) module's update_cache option).",
                "Supports C(check_mode)."
            ],
            "options": {
                "data": {
                    "description": [
                        "The keyfile contents to add to the keyring."
                    ]
                },
                "file": {
                    "description": [
                        "The path to a keyfile on the remote server to add to the keyring."
                    ]
                },
                "id": {
                    "description": [
                        "The identifier of the key.",
                        "Including this allows check mode to correctly report the changed state.",
                        "If specifying a subkey's id be aware that apt-key does not understand how to remove keys via a subkey id.  Specify the primary key's id instead.",
                        "This parameter is required when C(state) is set to C(absent)."
                    ]
                },
                "keyring": {
                    "description": [
                        "The full path to specific keyring file in C(/etc/apt/trusted.gpg.d/)."
                    ],
                    "version_added": "1.3",
                    "version_added_collection": "ansible.builtin"
                },
                "keyserver": {
                    "description": [
                        "The keyserver to retrieve key from."
                    ],
                    "version_added": "1.6",
                    "version_added_collection": "ansible.builtin"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Ensures that the key is present (added) or absent (revoked)."
                    ]
                },
                "url": {
                    "description": [
                        "The URL to retrieve key from."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "description": [
                        "If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "gpg"
            ],
            "short_description": "Add or remove an apt key",
            "version_added": "1.0",
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- name: Add an apt key by id from a keyserver\n  ansible.builtin.apt_key:\n    keyserver: keyserver.ubuntu.com\n    id: 36A1D7869245C8950F966E92D8576A8BA88D21E9\n\n- name: Add an Apt signing key, uses whichever key is at the URL\n  ansible.builtin.apt_key:\n    url: https://ftp-master.debian.org/keys/archive-key-6.0.asc\n    state: present\n\n- name: Add an Apt signing key, will not download if present\n  ansible.builtin.apt_key:\n    id: 9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    url: https://ftp-master.debian.org/keys/archive-key-6.0.asc\n    state: present\n\n- name: Remove a Apt specific signing key, leading 0x is valid\n  ansible.builtin.apt_key:\n    id: 0x9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    state: absent\n\n# Use armored file since utf-8 string is expected. Must be of \"PGP PUBLIC KEY BLOCK\" type.\n- name: Add a key from a file on the Ansible server\n  ansible.builtin.apt_key:\n    data: \"{{ lookup('file', 'apt.asc') }}\"\n    state: present\n\n- name: Add an Apt signing key to a specific keyring file\n  ansible.builtin.apt_key:\n    id: 9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    url: https://ftp-master.debian.org/keys/archive-key-6.0.asc\n    keyring: /etc/apt/trusted.gpg.d/debian.gpg\n\n- name: Add Apt signing key on remote server to keyring\n  ansible.builtin.apt_key:\n    id: 9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    file: /tmp/apt.gpg\n    state: present\n",
        "metadata": null,
        "return": null
    }
}
