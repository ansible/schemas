{
    "ngine_io.cloudstack.cs_zone_info": {
        "doc": {
            "author": "Ren\u00e9 Moser (@resmo)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Gathering information from the API of a zone."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_zone_info.py",
            "has_action": false,
            "module": "cs_zone_info",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "zone": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Name of the zone.",
                        "If not specified information about all zones is gathered."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Gathering information about zones from Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: Gather information from a zone\n  ngine_io.cloudstack.cs_zone_info:\n    zone: ch-gva-1\n  register: zone\n\n- name: Show the returned results of the registered variable\n  debug:\n    msg: \"{{ zone }}\"\n\n- name: Gather information from all zones\n  ngine_io.cloudstack.cs_zone_info:\n  register: zones\n\n- name: Show information on all zones\n  debug:\n    msg: \"{{ zones }}\"\n",
        "metadata": null,
        "return": {
            "zones": {
                "contains": {
                    "allocation_state": {
                        "description": "State of the zone.",
                        "returned": "success",
                        "sample": "Enabled",
                        "type": "str"
                    },
                    "dhcp_provider": {
                        "description": "DHCP provider for the zone",
                        "returned": "success",
                        "sample": "VirtualRouter",
                        "type": "str"
                    },
                    "dns1": {
                        "description": "First DNS for the zone.",
                        "returned": "success",
                        "sample": "8.8.8.8",
                        "type": "str"
                    },
                    "dns1_ipv6": {
                        "description": "First IPv6 DNS for the zone.",
                        "returned": "success",
                        "sample": "2001:4860:4860::8888",
                        "type": "str"
                    },
                    "dns2": {
                        "description": "Second DNS for the zone.",
                        "returned": "success",
                        "sample": "8.8.4.4",
                        "type": "str"
                    },
                    "dns2_ipv6": {
                        "description": "Second IPv6 DNS for the zone.",
                        "returned": "success",
                        "sample": "2001:4860:4860::8844",
                        "type": "str"
                    },
                    "domain": {
                        "description": "Domain the zone is related to.",
                        "returned": "success",
                        "sample": "ROOT",
                        "type": "str"
                    },
                    "guest_cidr_address": {
                        "description": "Guest CIDR address for the zone",
                        "returned": "success",
                        "sample": "10.1.1.0/24",
                        "type": "str"
                    },
                    "id": {
                        "description": "UUID of the zone.",
                        "returned": "success",
                        "sample": "04589590-ac63-4ffc-93f5-b698b8ac38b6",
                        "type": "str"
                    },
                    "internal_dns1": {
                        "description": "First internal DNS for the zone.",
                        "returned": "success",
                        "sample": "8.8.8.8",
                        "type": "str"
                    },
                    "internal_dns2": {
                        "description": "Second internal DNS for the zone.",
                        "returned": "success",
                        "sample": "8.8.4.4",
                        "type": "str"
                    },
                    "local_storage_enabled": {
                        "description": "Local storage offering enabled.",
                        "returned": "success",
                        "sample": false,
                        "type": "bool"
                    },
                    "name": {
                        "description": "Name of the zone.",
                        "returned": "success",
                        "sample": "zone01",
                        "type": "str"
                    },
                    "network_domain": {
                        "description": "Network domain for the zone.",
                        "returned": "success",
                        "sample": "example.com",
                        "type": "str"
                    },
                    "network_type": {
                        "description": "Network type for the zone.",
                        "returned": "success",
                        "sample": "basic",
                        "type": "str"
                    },
                    "securitygroups_enabled": {
                        "description": "Security groups support is enabled.",
                        "returned": "success",
                        "sample": false,
                        "type": "bool"
                    },
                    "tags": {
                        "description": "List of resource tags associated with the zone.",
                        "returned": "success",
                        "sample": [
                            {
                                "key": "foo",
                                "value": "bar"
                            }
                        ],
                        "type": "list"
                    },
                    "zone_token": {
                        "description": "Zone token",
                        "returned": "success",
                        "sample": "ccb0a60c-79c8-3230-ab8b-8bdbe8c45bb7",
                        "type": "str"
                    }
                },
                "description": "A list of matching zones.",
                "returned": "success",
                "type": "list"
            }
        }
    }
}
