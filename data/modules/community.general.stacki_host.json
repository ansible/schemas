{
    "community.general.stacki_host": {
        "doc": {
            "author": [
                "Hugh Ma (@bbyhuy) <Hugh.Ma@flextronics.com>"
            ],
            "collection": "community.general",
            "description": [
                "Use this module to add or remove hosts to a stacki front-end via API.",
                "U(https://github.com/StackIQ/stacki)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/stacki_host.py",
            "has_action": false,
            "module": "stacki_host",
            "options": {
                "force_install": {
                    "default": false,
                    "description": [
                        "Set value to True to force node into install state if it already exists in stacki."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name of the host to be added to Stacki."
                    ],
                    "required": true,
                    "type": "str"
                },
                "prim_intf": {
                    "description": [
                        "Name of the primary network interface."
                    ],
                    "type": "str"
                },
                "prim_intf_ip": {
                    "description": [
                        "IP Address for the primary network interface."
                    ],
                    "type": "str"
                },
                "prim_intf_mac": {
                    "description": [
                        "MAC Address for the primary PXE boot network interface."
                    ],
                    "type": "str"
                },
                "stacki_endpoint": {
                    "description": [
                        "URL for the Stacki API Endpoint."
                    ],
                    "required": true,
                    "type": "str"
                },
                "stacki_password": {
                    "description": [
                        "Password for authenticating with Stacki API, but if not specified, the environment variable C(stacki_password) is used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "stacki_user": {
                    "description": [
                        "Username for authenticating with Stacki API, but if not specified, the environment variable C(stacki_user) is used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "description": [
                        "Set value to the desired state for the specified host."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Add or remove host to stacki front-end"
        },
        "examples": "\n- name: Add a host named test-1\n  community.general.stacki_host:\n    name: test-1\n    stacki_user: usr\n    stacki_password: pwd\n    stacki_endpoint: url\n    prim_intf_mac: mac_addr\n    prim_intf_ip: x.x.x.x\n    prim_intf: eth0\n\n- name: Remove a host named test-1\n  community.general.stacki_host:\n    name: test-1\n    stacki_user: usr\n    stacki_password: pwd\n    stacki_endpoint: url\n    state: absent\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "response to whether or not the api call completed successfully",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "stdout": {
                "description": "the set of responses from the commands",
                "returned": "always",
                "sample": [
                    "...",
                    "..."
                ],
                "type": "list"
            },
            "stdout_lines": {
                "description": "the value of stdout split into a list",
                "returned": "always",
                "sample": [
                    [
                        "...",
                        "..."
                    ],
                    [
                        "..."
                    ],
                    [
                        "..."
                    ]
                ],
                "type": "list"
            }
        }
    }
}
