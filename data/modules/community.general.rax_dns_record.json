{
    "community.general.rax_dns_record": {
        "doc": {
            "author": "Matt Martz (@sivel)",
            "collection": "community.general",
            "description": [
                "Manage DNS records on Rackspace Cloud DNS"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/rax_dns_record.py",
            "has_action": false,
            "module": "rax_dns_record",
            "notes": [
                "It is recommended that plays utilizing this module be run with C(serial: 1) to avoid exceeding the API request limit imposed by the Rackspace CloudDNS API",
                "To manipulate a C(PTR) record either C(loadbalancer) or C(server) must be supplied",
                "As of version 1.7, the C(type) field is required and no longer defaults to an C(A) record.",
                "C(PTR) record support was added in version 1.7",
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)",
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)"
            ],
            "options": {
                "api_key": {
                    "aliases": [
                        "password"
                    ],
                    "description": [
                        "Rackspace API key, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "auth_endpoint": {
                    "description": [
                        "The URI of the authentication service.",
                        "If not specified will be set to U(https://identity.api.rackspacecloud.com/v2.0/)"
                    ],
                    "type": "str"
                },
                "comment": {
                    "description": [
                        "Brief description of the domain. Maximum length of 160 characters"
                    ],
                    "type": "str"
                },
                "credentials": {
                    "aliases": [
                        "creds_file"
                    ],
                    "description": [
                        "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
                    ],
                    "type": "path"
                },
                "data": {
                    "description": [
                        "IP address for A/AAAA record, FQDN for CNAME/MX/NS, or text data for SRV/TXT"
                    ],
                    "required": true,
                    "type": "str"
                },
                "domain": {
                    "description": [
                        "Domain name to create the record in. This is an invalid option when type=PTR"
                    ],
                    "type": "str"
                },
                "env": {
                    "description": [
                        "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
                    ],
                    "type": "str"
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication mechanism to use, such as rackspace or keystone."
                    ],
                    "type": "str"
                },
                "loadbalancer": {
                    "description": [
                        "Load Balancer ID to create a PTR record for. Only used with type=PTR"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "FQDN record name to create"
                    ],
                    "required": true,
                    "type": "str"
                },
                "overwrite": {
                    "default": true,
                    "description": [
                        "Add new records if data doesn't match, instead of updating existing record with matching name. If there are already multiple records with matching name and overwrite=true, this module will fail."
                    ],
                    "type": "bool"
                },
                "priority": {
                    "description": [
                        "Required for MX and SRV records, but forbidden for other record types. If specified, must be an integer from 0 to 65535."
                    ],
                    "type": "int"
                },
                "region": {
                    "description": [
                        "Region to create an instance in."
                    ],
                    "type": "str"
                },
                "server": {
                    "description": [
                        "Server ID to create a PTR record for. Only used with type=PTR"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "type": "str"
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication."
                    ],
                    "type": "str"
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication."
                    ],
                    "type": "str"
                },
                "ttl": {
                    "default": 3600,
                    "description": [
                        "Time to live of record in seconds"
                    ],
                    "type": "int"
                },
                "type": {
                    "choices": [
                        "A",
                        "AAAA",
                        "CNAME",
                        "MX",
                        "NS",
                        "SRV",
                        "TXT",
                        "PTR"
                    ],
                    "description": [
                        "DNS record type"
                    ],
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Rackspace username, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify_ssl"
                    ],
                    "description": [
                        "Whether or not to require SSL validation of API endpoints."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "pyrax",
                "python >= 2.6"
            ],
            "short_description": "Manage DNS records on Rackspace Cloud DNS"
        },
        "examples": "\n- name: Create DNS Records\n  hosts: all\n  gather_facts: False\n  tasks:\n    - name: Create A record\n      local_action:\n        module: rax_dns_record\n        credentials: ~/.raxpub\n        domain: example.org\n        name: www.example.org\n        data: \"{{ rax_accessipv4 }}\"\n        type: A\n      register: a_record\n\n    - name: Create PTR record\n      local_action:\n        module: rax_dns_record\n        credentials: ~/.raxpub\n        server: \"{{ rax_id }}\"\n        name: \"{{ inventory_hostname }}\"\n        region: DFW\n      register: ptr_record\n",
        "metadata": null,
        "return": null
    }
}
