{
    "cisco.nso.nso_verify": {
        "doc": {
            "author": "Claes N\u00e4st\u00e9n (@cnasten)",
            "collection": "cisco.nso",
            "description": [
                "This module provides support for verifying Cisco NSO configuration is in compliance with specified values."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nso/plugins/modules/nso_verify.py",
            "has_action": false,
            "module": "nso_verify",
            "options": {
                "data": {
                    "description": "NSO data in format as C(| display json) converted to YAML. List entries can be annotated with a C(__state) entry. Set to in-sync/deep-in-sync for services to verify service is in sync with the network. Set to absent in list entries to ensure they are deleted if they exist in NSO.\n",
                    "required": true,
                    "type": "dict"
                },
                "password": {
                    "description": "NSO password",
                    "required": true,
                    "type": "str"
                },
                "timeout": {
                    "default": 300,
                    "description": "JSON-RPC request timeout in seconds",
                    "type": "int"
                },
                "url": {
                    "description": "NSO JSON-RPC URL, http://localhost:8080/jsonrpc",
                    "required": true,
                    "type": "str"
                },
                "username": {
                    "description": "NSO username",
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": false,
                    "description": "When set to true, validates the SSL certificate of NSO when using SSL",
                    "required": false,
                    "type": "bool"
                }
            },
            "requirements": [
                "Cisco NSO version 3.4.12 or higher, 4.2.7 or higher, 4.3.8 or higher, 4.4.3 or higher, 4.5 or higher."
            ],
            "seealso": [
                {
                    "description": "Provides a reservable pod with NSO, virtual network topology simulated with Cisco CML and a Linux host running Ansible",
                    "link": "https://blogs.cisco.com/developer/nso-learning-lab-and-sandbox",
                    "name": "Cisco DevNet NSO Sandbox"
                },
                {
                    "description": "Documentation for getting started using NSO",
                    "link": "https://developer.cisco.com/docs/nso/",
                    "name": "NSO Developer Resources on DevNet"
                },
                {
                    "description": "Collaboration community portal for NSO developers",
                    "link": "https://community.cisco.com/t5/nso-developer-hub/ct-p/5672j-dev-nso",
                    "name": "NSO Developer Hub"
                },
                {
                    "description": "Code for NSO on Github",
                    "link": "https://github.com/NSO-developer/",
                    "name": "NSO Developer Github"
                }
            ],
            "short_description": "Verifies Cisco NSO configuration."
        },
        "examples": "\n- name: VERIFY INTERFACE IS ADMINISTRATIVELY UP\n  cisco.nso.nso_verify:\n    url: http://localhost:8080/jsonrpc\n    username: username\n    password: password\n    data:\n      tailf-ncs:devices:\n        device:\n        - name: dist-sw01\n          config:\n            interface:\n              Ethernet:\n                - name: \"1/1\"\n                  shutdown: false\n",
        "metadata": null,
        "return": {
            "violations": {
                "contains": {
                    "expected-value": {
                        "description": "Expected value of path",
                        "returned": "always",
                        "type": "str"
                    },
                    "path": {
                        "description": "Path to the value in violation",
                        "returned": "always",
                        "type": "str"
                    },
                    "value": {
                        "description": "Current value of path",
                        "returned": "always",
                        "type": "str"
                    }
                },
                "description": "List of value violations",
                "returned": "failed",
                "sample": [
                    {
                        "expected-value": false,
                        "path": "/ncs:devices/device{dist-sw01}/config/interface/Ethernet{1/1}/shutdown",
                        "value": true
                    }
                ],
                "type": "complex"
            }
        }
    }
}
