{
    "awx.awx.tower_job_template": {
        "doc": {
            "author": "Wayne Witzel III (@wwitzel3)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower job templates. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_job_template.py",
            "has_action": false,
            "module": "tower_job_template",
            "notes": [
                "JSON for survey_spec can be found in Tower API Documentation. See U(https://docs.ansible.com/ansible-tower/latest/html/towerapi/api_ref.html#/Job_Templates/Job_Templates_job_templates_survey_spec_create) for POST operation payload example.",
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "allow_simultaneous": {
                    "aliases": [
                        "concurrent_jobs_enabled"
                    ],
                    "default": "no",
                    "description": [
                        "Allow simultaneous runs of the job template."
                    ],
                    "type": "bool"
                },
                "ask_credential_on_launch": {
                    "aliases": [
                        "ask_credential"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user for credential on launch."
                    ],
                    "type": "bool"
                },
                "ask_diff_mode_on_launch": {
                    "aliases": [
                        "ask_diff_mode"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user to enable diff mode (show changes) to files when supported by modules."
                    ],
                    "type": "bool"
                },
                "ask_inventory_on_launch": {
                    "aliases": [
                        "ask_inventory"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user for inventory on launch."
                    ],
                    "type": "bool"
                },
                "ask_job_type_on_launch": {
                    "aliases": [
                        "ask_job_type"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user for job type on launch."
                    ],
                    "type": "bool"
                },
                "ask_limit_on_launch": {
                    "aliases": [
                        "ask_limit"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user for a limit on launch."
                    ],
                    "type": "bool"
                },
                "ask_scm_branch_on_launch": {
                    "default": "False",
                    "description": [
                        "Prompt user for (scm branch) on launch."
                    ],
                    "type": "bool"
                },
                "ask_skip_tags_on_launch": {
                    "aliases": [
                        "ask_skip_tags"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user for job tags to skip on launch."
                    ],
                    "type": "bool"
                },
                "ask_tags_on_launch": {
                    "aliases": [
                        "ask_tags"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user for job tags on launch."
                    ],
                    "type": "bool"
                },
                "ask_variables_on_launch": {
                    "aliases": [
                        "ask_extra_vars"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user for (extra_vars) on launch."
                    ],
                    "type": "bool"
                },
                "ask_verbosity_on_launch": {
                    "aliases": [
                        "ask_verbosity"
                    ],
                    "default": "False",
                    "description": [
                        "Prompt user to choose a verbosity level on launch."
                    ],
                    "type": "bool"
                },
                "become_enabled": {
                    "default": "no",
                    "description": [
                        "Activate privilege escalation."
                    ],
                    "type": "bool"
                },
                "credential": {
                    "description": [
                        "Name of the credential to use for the job template.",
                        "Deprecated, use 'credentials'."
                    ],
                    "type": "str"
                },
                "credentials": {
                    "description": [
                        "List of credentials to use for the job template."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "custom_virtualenv": {
                    "description": [
                        "Local absolute file path containing a custom Python virtualenv to use."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Description to use for the job template."
                    ],
                    "type": "str"
                },
                "diff_mode": {
                    "aliases": [
                        "diff_mode_enabled"
                    ],
                    "default": "no",
                    "description": [
                        "Enable diff mode for the job template."
                    ],
                    "type": "bool"
                },
                "extra_vars": {
                    "description": [
                        "Specify C(extra_vars) for the template."
                    ],
                    "type": "dict"
                },
                "force_handlers": {
                    "aliases": [
                        "force_handlers_enabled"
                    ],
                    "default": "no",
                    "description": [
                        "Enable forcing playbook handlers to run even if a task fails."
                    ],
                    "type": "bool"
                },
                "forks": {
                    "description": [
                        "The number of parallel or simultaneous processes to use while executing the playbook."
                    ],
                    "type": "int"
                },
                "host_config_key": {
                    "description": [
                        "Allow provisioning callbacks using this host config key."
                    ],
                    "type": "str"
                },
                "inventory": {
                    "description": [
                        "Name of the inventory to use for the job template."
                    ],
                    "type": "str"
                },
                "job_slice_count": {
                    "default": "1",
                    "description": [
                        "The number of jobs to slice into at runtime. Will cause the Job Template to launch a workflow if value is greater than 1."
                    ],
                    "type": "int"
                },
                "job_tags": {
                    "description": [
                        "Comma separated list of the tags to use for the job template."
                    ],
                    "type": "str"
                },
                "job_type": {
                    "choices": [
                        "run",
                        "check"
                    ],
                    "description": [
                        "The job type to use for the job template."
                    ],
                    "type": "str"
                },
                "labels": {
                    "description": [
                        "The labels applied to this job template"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "limit": {
                    "description": [
                        "A host pattern to further constrain the list of hosts managed or affected by the playbook"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name to use for the job template."
                    ],
                    "required": true,
                    "type": "str"
                },
                "new_name": {
                    "description": [
                        "Setting this option will change the existing name (looed up via the name field."
                    ],
                    "type": "str"
                },
                "notification_templates_error": {
                    "description": [
                        "list of notifications to send on error"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_started": {
                    "description": [
                        "list of notifications to send on start"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_success": {
                    "description": [
                        "list of notifications to send on success"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "organization": {
                    "description": [
                        "Organization the job template exists in.",
                        "Used to help lookup the object, cannot be modified using this module.",
                        "The Organization is inferred from the associated project",
                        "If not provided, will lookup by name only, which does not work with duplicates.",
                        "Requires Tower Version 3.7.0 or AWX 10.0.0 IS NOT backwards compatible with earlier versions."
                    ],
                    "type": "str"
                },
                "playbook": {
                    "description": [
                        "Path to the playbook to use for the job template within the project provided."
                    ],
                    "type": "str"
                },
                "project": {
                    "description": [
                        "Name of the project to use for the job template."
                    ],
                    "type": "str"
                },
                "scm_branch": {
                    "default": "",
                    "description": [
                        "Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true."
                    ],
                    "type": "str"
                },
                "skip_tags": {
                    "description": [
                        "Comma separated list of the tags to skip for the job template."
                    ],
                    "type": "str"
                },
                "start_at_task": {
                    "description": [
                        "Start the playbook at the task matching this name."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the resource."
                    ],
                    "type": "str"
                },
                "survey_enabled": {
                    "default": "no",
                    "description": [
                        "Enable a survey on the job template."
                    ],
                    "type": "bool"
                },
                "survey_spec": {
                    "description": [
                        "JSON/YAML dict formatted survey definition."
                    ],
                    "type": "dict"
                },
                "timeout": {
                    "description": [
                        "Maximum time in seconds to wait for a job to finish (server-side)."
                    ],
                    "type": "int"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "use_fact_cache": {
                    "aliases": [
                        "fact_caching_enabled"
                    ],
                    "default": "no",
                    "description": [
                        "Enable use of fact caching for the job template."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "vault_credential": {
                    "description": [
                        "Name of the vault credential to use for the job template.",
                        "Deprecated, use 'credentials'."
                    ],
                    "type": "str"
                },
                "verbosity": {
                    "choices": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ],
                    "default": 0,
                    "description": [
                        "Control the output level Ansible produces as the playbook runs. 0 - Normal, 1 - Verbose, 2 - More Verbose, 3 - Debug, 4 - Connection Debug."
                    ],
                    "type": "int"
                },
                "webhook_credential": {
                    "description": [
                        "Personal Access Token for posting back the status to the service API"
                    ],
                    "type": "str"
                },
                "webhook_service": {
                    "choices": [
                        "",
                        "github",
                        "gitlab"
                    ],
                    "description": [
                        "Service that webhook requests will be accepted from"
                    ],
                    "type": "str"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower job templates."
        },
        "examples": "\n- name: Create Tower Ping job template\n  tower_job_template:\n    name: \"Ping\"\n    job_type: \"run\"\n    organization: \"Default\"\n    inventory: \"Local\"\n    project: \"Demo\"\n    playbook: \"ping.yml\"\n    credentials:\n      - \"Local\"\n    state: \"present\"\n    tower_config_file: \"~/tower_cli.cfg\"\n    survey_enabled: yes\n    survey_spec: \"{{ lookup('file', 'my_survey.json') }}\"\n    custom_virtualenv: \"/var/lib/awx/venv/custom-venv/\"\n\n- name: Add start notification to Job Template\n  tower_job_template:\n    name: \"Ping\"\n    notification_templates_started:\n      - Notification1\n      - Notification2\n\n- name: Remove Notification1 start notification from Job Template\n  tower_job_template:\n    name: \"Ping\"\n    notification_templates_started:\n      - Notification2\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
