{
    "community.routeros.facts": {
        "doc": {
            "author": "Egor Zaitsev (@heuels)",
            "collection": "community.routeros",
            "description": [
                "Collects a base set of device facts from a remote device that is running RotuerOS.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/routeros/plugins/modules/facts.py",
            "has_action": false,
            "module": "facts",
            "options": {
                "gather_subset": {
                    "default": "!config",
                    "description": [
                        "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include C(all), C(hardware), C(config), and C(interfaces).  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(!) to specify that a specific subset should not be collected."
                    ],
                    "required": false
                }
            },
            "short_description": "Collect facts from remote devices running MikroTik RouterOS"
        },
        "examples": "\n- name: Collect all facts from the device\n  community.routeros.facts:\n    gather_subset: all\n\n- name: Collect only the config and default facts\n  community.routeros.facts:\n    gather_subset:\n      - config\n\n- name: Do not collect hardware facts\n  community.routeros.facts:\n    gather_subset:\n      - \"!hardware\"\n",
        "metadata": null,
        "return": {
            "ansible_facts": {
                "contains": {
                    "ansible_net_all_ipv4_addresses": {
                        "description": "All IPv4 addresses configured on the device",
                        "returned": "when interfaces is configured",
                        "type": "list"
                    },
                    "ansible_net_all_ipv6_addresses": {
                        "description": "All IPv6 addresses configured on the device",
                        "returned": "when interfaces is configured",
                        "type": "list"
                    },
                    "ansible_net_arch": {
                        "description": "The CPU architecture of the device",
                        "returned": "always",
                        "type": "str"
                    },
                    "ansible_net_bgp_instance": {
                        "description": "The dict bgp instance",
                        "returned": "bgp instance information",
                        "type": "dict"
                    },
                    "ansible_net_bgp_peer": {
                        "description": "The dict bgp peer",
                        "returned": "peer information",
                        "type": "dict"
                    },
                    "ansible_net_bgp_vpnv4_route": {
                        "description": "The dict bgp vpnv4 route",
                        "returned": "vpnv4 route information",
                        "type": "dict"
                    },
                    "ansible_net_config": {
                        "description": "The current active config from the device",
                        "returned": "when config is configured",
                        "type": "str"
                    },
                    "ansible_net_cpu_load": {
                        "description": "Current CPU load",
                        "returned": "always",
                        "type": "str"
                    },
                    "ansible_net_gather_subset": {
                        "description": "The list of fact subsets collected from the device",
                        "returned": "always",
                        "type": "list"
                    },
                    "ansible_net_hostname": {
                        "description": "The configured hostname of the device",
                        "returned": "always",
                        "type": "str"
                    },
                    "ansible_net_interfaces": {
                        "description": "A hash of all interfaces running on the system",
                        "returned": "when interfaces is configured",
                        "type": "dict"
                    },
                    "ansible_net_memfree_mb": {
                        "description": "The available free memory on the remote device in MiB",
                        "returned": "when hardware is configured",
                        "type": "int"
                    },
                    "ansible_net_memtotal_mb": {
                        "description": "The total memory on the remote device in MiB",
                        "returned": "when hardware is configured",
                        "type": "int"
                    },
                    "ansible_net_model": {
                        "description": "The model name returned from the device",
                        "returned": "always",
                        "type": "str"
                    },
                    "ansible_net_neighbors": {
                        "description": "The list of neighbors from the remote device",
                        "returned": "when interfaces is configured",
                        "type": "dict"
                    },
                    "ansible_net_ospf_instance": {
                        "description": "The dict ospf instance",
                        "returned": "ospf instance information",
                        "type": "dict"
                    },
                    "ansible_net_ospf_neighbor": {
                        "description": "The dict ospf neighbor",
                        "returned": "ospf neighbor information",
                        "type": "dict"
                    },
                    "ansible_net_route": {
                        "description": "The dict routes in all routing table",
                        "returned": "routes information in all routing table",
                        "type": "dict"
                    },
                    "ansible_net_serialnum": {
                        "description": "The serial number of the remote device",
                        "returned": "always",
                        "type": "str"
                    },
                    "ansible_net_spacefree_mb": {
                        "description": "The available disk space on the remote device in MiB",
                        "returned": "when hardware is configured",
                        "type": "dict"
                    },
                    "ansible_net_spacetotal_mb": {
                        "description": "The total disk space on the remote device in MiB",
                        "returned": "when hardware is configured",
                        "type": "dict"
                    },
                    "ansible_net_uptime": {
                        "description": "The uptime of the device",
                        "returned": "always",
                        "type": "str"
                    },
                    "ansible_net_version": {
                        "description": "The operating system version running on the remote device",
                        "returned": "always",
                        "type": "str"
                    }
                },
                "description": "Dictionary of ip geolocation facts for a host's IP address",
                "returned": "always",
                "type": "dict"
            }
        }
    }
}
