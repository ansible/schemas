{
    "community.aws.elb_application_lb": {
        "doc": {
            "author": "Rob White (@wimnat)",
            "collection": "community.aws",
            "description": [
                "Manage an AWS Application Elastic Load Balancer. See U(https://aws.amazon.com/blogs/aws/new-aws-application-load-balancer/) for details."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/elb_application_lb.py",
            "has_action": false,
            "module": "elb_application_lb",
            "notes": [
                "Listeners are matched based on port. If a listener's port is changed then a new listener will be created.",
                "Listener rules are matched based on priority. If a rule's priority is changed then a new rule will be created.",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "access_logs_enabled": {
                    "description": [
                        "Whether or not to enable access logs.",
                        "When set, I(access_logs_s3_bucket) must also be set."
                    ],
                    "type": "bool"
                },
                "access_logs_s3_bucket": {
                    "description": [
                        "The name of the S3 bucket for the access logs.",
                        "The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permission to write to the bucket.",
                        "Required if access logs in Amazon S3 are enabled.",
                        "When set, I(access_logs_enabled) must also be set."
                    ],
                    "type": "str"
                },
                "access_logs_s3_prefix": {
                    "description": [
                        "The prefix for the log location in the S3 bucket.",
                        "If you don't specify a prefix, the access logs are stored in the root of the bucket.",
                        "Cannot begin or end with a slash."
                    ],
                    "type": "str"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "deletion_protection": {
                    "description": [
                        "Indicates whether deletion protection for the ELB is enabled.",
                        "Defaults to C(false)."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "http2": {
                    "description": [
                        "Indicates whether to enable HTTP2 routing.",
                        "Defaults to C(false)."
                    ],
                    "type": "bool"
                },
                "idle_timeout": {
                    "description": [
                        "The number of seconds to wait before an idle connection is closed."
                    ],
                    "type": "int"
                },
                "ip_address_type": {
                    "choices": [
                        "ipv4",
                        "dualstack"
                    ],
                    "description": [
                        "Sets the type of IP addresses used by the subnets of the specified Application Load Balancer."
                    ],
                    "type": "str"
                },
                "listeners": {
                    "description": [
                        "A list of dicts containing listeners to attach to the ELB. See examples for detail of the dict required. Note that listener keys are CamelCased."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "Certificates": {
                            "description": "The SSL server certificate.",
                            "elements": "dict",
                            "suboptions": {
                                "CertificateArn": {
                                    "description": "The Amazon Resource Name (ARN) of the certificate.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "DefaultActions": {
                            "description": "The default actions for the listener.",
                            "elements": "dict",
                            "required": true,
                            "suboptions": {
                                "TargetGroupArn": {
                                    "description": "The Amazon Resource Name (ARN) of the target group.",
                                    "type": "str"
                                },
                                "Type": {
                                    "description": "The type of action.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "Port": {
                            "description": "The port on which the load balancer is listening.",
                            "required": true,
                            "type": "int"
                        },
                        "Protocol": {
                            "description": "The protocol for connections from clients to the load balancer.",
                            "required": true,
                            "type": "str"
                        },
                        "Rules": {
                            "description": [
                                "A list of ALB Listener Rules.",
                                "For the complete documentation of possible Conditions and Actions please see the boto3 documentation:",
                                "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/elbv2.html#ElasticLoadBalancingv2.Client.create_rule"
                            ],
                            "elements": "dict",
                            "suboptions": {
                                "Actions": {
                                    "description": "Actions to apply if all of the rule's conditions are met.",
                                    "type": "list"
                                },
                                "Conditions": {
                                    "description": "Conditions which must be met for the actions to be applied.",
                                    "type": "list"
                                },
                                "Priority": {
                                    "description": "The rule priority.",
                                    "type": "int"
                                }
                            },
                            "type": "list"
                        },
                        "SslPolicy": {
                            "description": "The security policy that defines which ciphers and protocols are supported.",
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "name": {
                    "description": [
                        "The name of the load balancer. This name must be unique within your AWS account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "purge_listeners": {
                    "default": true,
                    "description": [
                        "If C(yes), existing listeners will be purged from the ELB to match exactly what is defined by I(listeners) parameter.",
                        "If the I(listeners) parameter is not set then listeners will not be modified."
                    ],
                    "type": "bool"
                },
                "purge_rules": {
                    "default": true,
                    "description": [
                        "When set to C(no), keep the existing load balancer rules in place. Will modify and add, but will not delete."
                    ],
                    "type": "bool"
                },
                "purge_tags": {
                    "default": true,
                    "description": [
                        "If yes, existing tags will be purged from the resource to match exactly what is defined by I(tags) parameter.",
                        "If the I(tags) parameter is not set then tags will not be modified."
                    ],
                    "type": "bool"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "scheme": {
                    "choices": [
                        "internet-facing",
                        "internal"
                    ],
                    "default": "internet-facing",
                    "description": [
                        "Internet-facing or internal load balancer. An ELB scheme can not be modified after creation."
                    ],
                    "type": "str"
                },
                "security_groups": {
                    "default": [],
                    "description": [
                        "A list of the names or IDs of the security groups to assign to the load balancer.",
                        "Required if I(state=present)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Create or destroy the load balancer."
                    ],
                    "type": "str"
                },
                "subnets": {
                    "description": [
                        "A list of the IDs of the subnets to attach to the load balancer. You can specify only one subnet per Availability Zone. You must specify subnets from at least two Availability Zones.",
                        "Required if I(state=present)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "tags": {
                    "description": [
                        "A dictionary of one or more tags to assign to the load balancer."
                    ],
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": false,
                    "description": [
                        "Wait for the load balancer to have a state of 'active' before completing. A status check is performed every 15 seconds until a successful state is reached. An error is returned after 40 failed checks."
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "description": [
                        "The time in seconds to use in conjunction with I(wait)."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Manage an Application Load Balancer",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Create an ELB and attach a listener\n- community.aws.elb_application_lb:\n    name: myelb\n    security_groups:\n      - sg-12345678\n      - my-sec-group\n    subnets:\n      - subnet-012345678\n      - subnet-abcdef000\n    listeners:\n      - Protocol: HTTP # Required. The protocol for connections from clients to the load balancer (HTTP or HTTPS) (case-sensitive).\n        Port: 80 # Required. The port on which the load balancer is listening.\n        # The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.\n        SslPolicy: ELBSecurityPolicy-2015-05\n        Certificates: # The ARN of the certificate (only one certficate ARN should be provided)\n          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com\n        DefaultActions:\n          - Type: forward # Required.\n            TargetGroupName: # Required. The name of the target group\n    state: present\n\n# Create an ELB and attach a listener with logging enabled\n- community.aws.elb_application_lb:\n    access_logs_enabled: yes\n    access_logs_s3_bucket: mybucket\n    access_logs_s3_prefix: \"logs\"\n    name: myelb\n    security_groups:\n      - sg-12345678\n      - my-sec-group\n    subnets:\n      - subnet-012345678\n      - subnet-abcdef000\n    listeners:\n      - Protocol: HTTP # Required. The protocol for connections from clients to the load balancer (HTTP or HTTPS) (case-sensitive).\n        Port: 80 # Required. The port on which the load balancer is listening.\n        # The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.\n        SslPolicy: ELBSecurityPolicy-2015-05\n        Certificates: # The ARN of the certificate (only one certficate ARN should be provided)\n          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com\n        DefaultActions:\n          - Type: forward # Required.\n            TargetGroupName: # Required. The name of the target group\n    state: present\n\n# Create an ALB with listeners and rules\n- community.aws.elb_application_lb:\n    name: test-alb\n    subnets:\n      - subnet-12345678\n      - subnet-87654321\n    security_groups:\n      - sg-12345678\n    scheme: internal\n    listeners:\n      - Protocol: HTTPS\n        Port: 443\n        DefaultActions:\n          - Type: forward\n            TargetGroupName: test-target-group\n        Certificates:\n          - CertificateArn: arn:aws:iam::12345678987:server-certificate/test.domain.com\n        SslPolicy: ELBSecurityPolicy-2015-05\n        Rules:\n          - Conditions:\n              - Field: path-pattern\n                Values:\n                  - '/test'\n            Priority: '1'\n            Actions:\n              - TargetGroupName: test-target-group\n                Type: forward\n          - Conditions:\n              - Field: path-pattern\n                Values:\n                  - \"/redirect-path/*\"\n            Priority: '2'\n            Actions:\n              - Type: redirect\n                RedirectConfig:\n                  Host: \"#{host}\"\n                  Path: \"/example/redir\" # or /#{path}\n                  Port: \"#{port}\"\n                  Protocol: \"#{protocol}\"\n                  Query: \"#{query}\"\n                  StatusCode: \"HTTP_302\" # or HTTP_301\n          - Conditions:\n              - Field: path-pattern\n                Values:\n                  - \"/fixed-response-path/\"\n            Priority: '3'\n            Actions:\n              - Type: fixed-response\n                FixedResponseConfig:\n                  ContentType: \"text/plain\"\n                  MessageBody: \"This is the page you're looking for\"\n                  StatusCode: \"200\"\n          - Conditions:\n              - Field: host-header\n                Values:\n                  - \"hostname.domain.com\"\n                  - \"alternate.domain.com\"\n            Priority: '4'\n            Actions:\n              - TargetGroupName: test-target-group\n                Type: forward\n    state: present\n\n# Remove an ELB\n- community.aws.elb_application_lb:\n    name: myelb\n    state: absent\n\n",
        "metadata": null,
        "return": {
            "access_logs_s3_bucket": {
                "description": "The name of the S3 bucket for the access logs.",
                "returned": "when state is present",
                "sample": "mys3bucket",
                "type": "str"
            },
            "access_logs_s3_enabled": {
                "description": "Indicates whether access logs stored in Amazon S3 are enabled.",
                "returned": "when state is present",
                "sample": true,
                "type": "str"
            },
            "access_logs_s3_prefix": {
                "description": "The prefix for the location in the S3 bucket.",
                "returned": "when state is present",
                "sample": "my/logs",
                "type": "str"
            },
            "availability_zones": {
                "description": "The Availability Zones for the load balancer.",
                "returned": "when state is present",
                "sample": "[{'subnet_id': 'subnet-aabbccddff', 'zone_name': 'ap-southeast-2a'}]",
                "type": "list"
            },
            "canonical_hosted_zone_id": {
                "description": "The ID of the Amazon Route 53 hosted zone associated with the load balancer.",
                "returned": "when state is present",
                "sample": "ABCDEF12345678",
                "type": "str"
            },
            "created_time": {
                "description": "The date and time the load balancer was created.",
                "returned": "when state is present",
                "sample": "2015-02-12T02:14:02+00:00",
                "type": "str"
            },
            "deletion_protection_enabled": {
                "description": "Indicates whether deletion protection is enabled.",
                "returned": "when state is present",
                "sample": true,
                "type": "str"
            },
            "dns_name": {
                "description": "The public DNS name of the load balancer.",
                "returned": "when state is present",
                "sample": "internal-my-elb-123456789.ap-southeast-2.elb.amazonaws.com",
                "type": "str"
            },
            "idle_timeout_timeout_seconds": {
                "description": "The idle timeout value, in seconds.",
                "returned": "when state is present",
                "sample": 60,
                "type": "int"
            },
            "ip_address_type": {
                "description": "The type of IP addresses used by the subnets for the load balancer.",
                "returned": "when state is present",
                "sample": "ipv4",
                "type": "str"
            },
            "listeners": {
                "contains": {
                    "certificates": {
                        "contains": {
                            "certificate_arn": {
                                "description": "The Amazon Resource Name (ARN) of the certificate.",
                                "returned": "when state is present",
                                "sample": "",
                                "type": "str"
                            }
                        },
                        "description": "The SSL server certificate.",
                        "returned": "when state is present",
                        "type": "complex"
                    },
                    "default_actions": {
                        "contains": {
                            "target_group_arn": {
                                "description": "The Amazon Resource Name (ARN) of the target group.",
                                "returned": "when state is present",
                                "sample": "",
                                "type": "str"
                            },
                            "type": {
                                "description": "The type of action.",
                                "returned": "when state is present",
                                "sample": "",
                                "type": "str"
                            }
                        },
                        "description": "The default actions for the listener.",
                        "returned": "when state is present",
                        "type": "str"
                    },
                    "listener_arn": {
                        "description": "The Amazon Resource Name (ARN) of the listener.",
                        "returned": "when state is present",
                        "sample": "",
                        "type": "str"
                    },
                    "load_balancer_arn": {
                        "description": "The Amazon Resource Name (ARN) of the load balancer.",
                        "returned": "when state is present",
                        "sample": "",
                        "type": "str"
                    },
                    "port": {
                        "description": "The port on which the load balancer is listening.",
                        "returned": "when state is present",
                        "sample": 80,
                        "type": "int"
                    },
                    "protocol": {
                        "description": "The protocol for connections from clients to the load balancer.",
                        "returned": "when state is present",
                        "sample": "HTTPS",
                        "type": "str"
                    },
                    "ssl_policy": {
                        "description": "The security policy that defines which ciphers and protocols are supported.",
                        "returned": "when state is present",
                        "sample": "",
                        "type": "str"
                    }
                },
                "description": "Information about the listeners.",
                "returned": "when state is present",
                "type": "complex"
            },
            "load_balancer_arn": {
                "description": "The Amazon Resource Name (ARN) of the load balancer.",
                "returned": "when state is present",
                "sample": "arn:aws:elasticloadbalancing:ap-southeast-2:0123456789:loadbalancer/app/my-elb/001122334455",
                "type": "str"
            },
            "load_balancer_name": {
                "description": "The name of the load balancer.",
                "returned": "when state is present",
                "sample": "my-elb",
                "type": "str"
            },
            "routing_http2_enabled": {
                "description": "Indicates whether HTTP/2 is enabled.",
                "returned": "when state is present",
                "sample": true,
                "type": "str"
            },
            "scheme": {
                "description": "Internet-facing or internal load balancer.",
                "returned": "when state is present",
                "sample": "internal",
                "type": "str"
            },
            "security_groups": {
                "description": "The IDs of the security groups for the load balancer.",
                "returned": "when state is present",
                "sample": [
                    "sg-0011223344"
                ],
                "type": "list"
            },
            "state": {
                "description": "The state of the load balancer.",
                "returned": "when state is present",
                "sample": "{'code': 'active'}",
                "type": "dict"
            },
            "tags": {
                "description": "The tags attached to the load balancer.",
                "returned": "when state is present",
                "sample": "{ 'Tag': 'Example' }",
                "type": "dict"
            },
            "type": {
                "description": "The type of load balancer.",
                "returned": "when state is present",
                "sample": "application",
                "type": "str"
            },
            "vpc_id": {
                "description": "The ID of the VPC for the load balancer.",
                "returned": "when state is present",
                "sample": "vpc-0011223344",
                "type": "str"
            }
        }
    }
}
