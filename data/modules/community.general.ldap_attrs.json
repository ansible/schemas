{
    "community.general.ldap_attrs": {
        "doc": {
            "author": [
                "Jiri Tyr (@jtyr)",
                "Alexander Korinek (@noles)",
                "Maciej Delmanowski (@drybjed)"
            ],
            "collection": "community.general",
            "description": [
                "Add or remove multiple LDAP attribute values."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/ldap_attrs.py",
            "has_action": false,
            "module": "ldap_attrs",
            "notes": [
                "This only deals with attributes on existing entries. To add or remove whole entries, see M(community.general.ldap_entry).",
                "The default authentication settings will attempt to use a SASL EXTERNAL bind over a UNIX domain socket. This works well with the default Ubuntu install for example, which includes a cn=peercred,cn=external,cn=auth ACL rule allowing root to modify the server configuration. If you need to use a simple bind to access your server, pass the credentials in I(bind_dn) and I(bind_pw).",
                "For I(state=present) and I(state=absent), all value comparisons are performed on the server for maximum accuracy. For I(state=exact), values have to be compared in Python, which obviously ignores LDAP matching rules. This should work out in most cases, but it is theoretically possible to see spurious changes when target and actual values are semantically identical but lexically distinct."
            ],
            "options": {
                "attributes": {
                    "description": [
                        "The attribute(s) and value(s) to add or remove. The complex argument format is required in order to pass a list of strings (see examples)."
                    ],
                    "required": true,
                    "type": "dict"
                },
                "bind_dn": {
                    "description": [
                        "A DN to bind with. If this is omitted, we'll try a SASL bind with the EXTERNAL mechanism as default.",
                        "If this is blank, we'll use an anonymous bind."
                    ],
                    "type": "str"
                },
                "bind_pw": {
                    "description": [
                        "The password to use with I(bind_dn)."
                    ],
                    "type": "str"
                },
                "dn": {
                    "description": [
                        "The DN of the entry to add or remove."
                    ],
                    "required": true,
                    "type": "str"
                },
                "ordered": {
                    "default": "no",
                    "description": [
                        "If C(yes), prepend list values with X-ORDERED index numbers in all attributes specified in the current task. This is useful mostly with I(olcAccess) attribute to easily manage LDAP Access Control Lists."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "referrals_chasing": {
                    "choices": [
                        "disabled",
                        "anonymous"
                    ],
                    "default": "anonymous",
                    "description": [
                        "Set the referrals chasing behavior.",
                        "C(anonymous) follow referrals anonymously. This is the default behavior.",
                        "C(disabled) disable referrals chasing. This sets C(OPT_REFERRALS) to off."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "sasl_class": {
                    "choices": [
                        "external",
                        "gssapi"
                    ],
                    "default": "external",
                    "description": [
                        "The class to use for SASL authentication.",
                        "possible choices are C(external), C(gssapi)."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "server_uri": {
                    "default": "ldapi:///",
                    "description": [
                        "A URI to the LDAP server.",
                        "The default value lets the underlying LDAP client library look for a UNIX domain socket in its default location."
                    ],
                    "type": "str"
                },
                "start_tls": {
                    "default": false,
                    "description": [
                        "If true, we'll use the START_TLS LDAP extension."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "exact"
                    ],
                    "default": "present",
                    "description": [
                        "The state of the attribute values. If C(present), all given attribute values will be added if they're missing. If C(absent), all given attribute values will be removed if present. If C(exact), the set of attribute values will be forced to exactly those provided and no others. If I(state=exact) and the attribute I(value) is empty, all values for this attribute will be removed."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), SSL certificates will not be validated.",
                        "This should only be used on sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python-ldap"
            ],
            "short_description": "Add or remove multiple LDAP attribute values",
            "version_added": "0.2.0",
            "version_added_collection": "community.general"
        },
        "examples": "\n- name: Configure directory number 1 for example.com\n  community.general.ldap_attrs:\n    dn: olcDatabase={1}hdb,cn=config\n    attributes:\n        olcSuffix: dc=example,dc=com\n    state: exact\n\n# The complex argument format is required here to pass a list of ACL strings.\n- name: Set up the ACL\n  community.general.ldap_attrs:\n    dn: olcDatabase={1}hdb,cn=config\n    attributes:\n        olcAccess:\n          - >-\n            {0}to attrs=userPassword,shadowLastChange\n            by self write\n            by anonymous auth\n            by dn=\"cn=admin,dc=example,dc=com\" write\n            by * none'\n          - >-\n            {1}to dn.base=\"dc=example,dc=com\"\n            by dn=\"cn=admin,dc=example,dc=com\" write\n            by * read\n    state: exact\n\n# An alternative approach with automatic X-ORDERED numbering\n- name: Set up the ACL\n  community.general.ldap_attrs:\n    dn: olcDatabase={1}hdb,cn=config\n    attributes:\n        olcAccess:\n          - >-\n            to attrs=userPassword,shadowLastChange\n            by self write\n            by anonymous auth\n            by dn=\"cn=admin,dc=example,dc=com\" write\n            by * none'\n          - >-\n            to dn.base=\"dc=example,dc=com\"\n            by dn=\"cn=admin,dc=example,dc=com\" write\n            by * read\n    ordered: yes\n    state: exact\n\n- name: Declare some indexes\n  community.general.ldap_attrs:\n    dn: olcDatabase={1}hdb,cn=config\n    attributes:\n        olcDbIndex:\n            - objectClass eq\n            - uid eq\n\n- name: Set up a root user, which we can use later to bootstrap the directory\n  community.general.ldap_attrs:\n    dn: olcDatabase={1}hdb,cn=config\n    attributes:\n        olcRootDN: cn=root,dc=example,dc=com\n        olcRootPW: \"{SSHA}tabyipcHzhwESzRaGA7oQ/SDoBZQOGND\"\n    state: exact\n\n- name: Remove an attribute with a specific value\n  community.general.ldap_attrs:\n    dn: uid=jdoe,ou=people,dc=example,dc=com\n    attributes:\n        description: \"An example user account\"\n    state: absent\n    server_uri: ldap://localhost/\n    bind_dn: cn=admin,dc=example,dc=com\n    bind_pw: password\n\n- name: Remove specified attribute(s) from an entry\n  community.general.ldap_attrs:\n    dn: uid=jdoe,ou=people,dc=example,dc=com\n    attributes:\n        description: []\n    state: exact\n    server_uri: ldap://localhost/\n    bind_dn: cn=admin,dc=example,dc=com\n    bind_pw: password\n",
        "metadata": null,
        "return": {
            "modlist": {
                "description": "list of modified parameters",
                "returned": "success",
                "sample": "[[2, \"olcRootDN\", [\"cn=root,dc=example,dc=com\"]]]",
                "type": "list"
            }
        }
    }
}
