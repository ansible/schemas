{
    "community.general.smartos_image_facts": {
        "doc": {
            "author": "Adam \u0160tevko (@xen0l)",
            "collection": "community.general",
            "description": [
                "Retrieve information about all installed images on SmartOS.",
                "This module was called C(smartos_image_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.general.smartos_image_info) module no longer returns C(ansible_facts)!"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/smartos_image_facts.py",
            "has_action": false,
            "module": "smartos_image_info",
            "options": {
                "filters": {
                    "description": [
                        "Criteria for selecting image. Can be any value from image manifest and 'published_date', 'published', 'source', 'clones', and 'size'. More information can be found at U(https://smartos.org/man/1m/imgadm) under 'imgadm list'."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Get SmartOS image details."
        },
        "examples": "\n- name: Return information about all installed images\n  community.general.smartos_image_info:\n  register: result\n\n- name: Return all private active Linux images\n  community.general.smartos_image_info:\n    filters: \"os=linux state=active public=false\"\n  register: result\n\n- name: Show, how many clones does every image have\n  community.general.smartos_image_info:\n  register: result\n\n- name: Print information\n  ansible.builtin.debug:\n    msg: \"{{ result.smartos_images[item]['name'] }}-{{ result.smartos_images[item]['version'] }}\n         has {{ result.smartos_images[item]['clones'] }} VM(s)\"\n  with_items: \"{{ result.smartos_images.keys() | list }}\"\n\n# When the module is called as smartos_image_facts, return values are published\n# in ansible_facts['smartos_images'] and can be used as follows.\n# Note that this is deprecated and will stop working in community.general 3.0.0.\n- name: Print information\n  ansible.builtin.debug:\n    msg: \"{{ smartos_images[item]['name'] }}-{{ smartos_images[item]['version'] }}\n         has {{ smartos_images[item]['clones'] }} VM(s)\"\n  with_items: \"{{ smartos_images.keys() | list }}\"\n",
        "metadata": null,
        "return": null
    }
}
