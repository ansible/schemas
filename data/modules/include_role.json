{
    "include_role": {
        "doc": {
            "author": "Ansible Core Team (@ansible)",
            "collection": "ansible.builtin",
            "description": [
                "Dynamically loads and executes a specified role as a task.",
                "May be used only where Ansible tasks are allowed - inside C(pre_tasks), C(tasks), or C(post_tasks) playbook objects, or as a task inside a role.",
                "Task-level keywords, loops, and conditionals apply only to the C(include_role) statement itself.",
                "To apply keywords to the tasks within the role, pass them using the C(apply) option or use M(ansible.builtin.import_role) instead.",
                "Ignores some keywords, like C(until) and C(retries).",
                "This module is also supported for Windows targets."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/include_role.py",
            "has_action": false,
            "module": "include_role",
            "notes": [
                "Handlers are made available to the whole play.",
                "Before Ansible 2.4, as with C(include), this task could be static or dynamic, If static, it implied that it won't need templating, loops or conditionals and will show included tasks in the C(--list) options. Ansible would try to autodetect what is needed, but you can set C(static) to C(yes) or C(no) at task level to control this.",
                "After Ansible 2.4, you can use M(ansible.builtin.import_role) for C(static) behaviour and this action for C(dynamic) one."
            ],
            "options": {
                "allow_duplicates": {
                    "default": true,
                    "description": [
                        "Overrides the role's metadata setting to allow using a role more than once with the same parameters."
                    ],
                    "type": "bool"
                },
                "apply": {
                    "description": [
                        "Accepts a hash of task keywords (e.g. C(tags), C(become)) that will be applied to all tasks within the included role."
                    ],
                    "version_added": "2.7",
                    "version_added_collection": "ansible.builtin"
                },
                "defaults_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(defaults/) directory."
                    ],
                    "type": "str"
                },
                "handlers_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(handlers/) directory."
                    ],
                    "type": "str",
                    "version_added": "2.8",
                    "version_added_collection": "ansible.builtin"
                },
                "name": {
                    "description": [
                        "The name of the role to be executed."
                    ],
                    "required": true,
                    "type": "str"
                },
                "public": {
                    "default": false,
                    "description": [
                        "This option dictates whether the role's C(vars) and C(defaults) are exposed to the playbook. If set to C(yes) the variables will be available to tasks following the C(include_role) task. This functionality differs from standard variable exposure for roles listed under the C(roles) header or C(import_role) as they are exposed at playbook parsing time, and available to earlier roles and tasks as well."
                    ],
                    "type": "bool",
                    "version_added": "2.7",
                    "version_added_collection": "ansible.builtin"
                },
                "tasks_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(tasks/) directory."
                    ],
                    "type": "str"
                },
                "vars_from": {
                    "default": "main",
                    "description": [
                        "File to load from a role's C(vars/) directory."
                    ],
                    "type": "str"
                }
            },
            "seealso": [
                {
                    "module": "ansible.builtin.import_playbook"
                },
                {
                    "module": "ansible.builtin.import_role"
                },
                {
                    "module": "ansible.builtin.import_tasks"
                },
                {
                    "module": "ansible.builtin.include_tasks"
                },
                {
                    "description": "More information related to including and importing playbooks, roles and tasks.",
                    "ref": "playbooks_reuse_includes"
                }
            ],
            "short_description": "Load and execute a role",
            "version_added": "2.2",
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- include_role:\n    name: myrole\n\n- name: Run tasks/other.yaml instead of 'main'\n  include_role:\n    name: myrole\n    tasks_from: other\n\n- name: Pass variables to role\n  include_role:\n    name: myrole\n  vars:\n    rolevar1: value from task\n\n- name: Use role in loop\n  include_role:\n    name: '{{ roleinputvar }}'\n  loop:\n    - '{{ roleinput1 }}'\n    - '{{ roleinput2 }}'\n  loop_control:\n    loop_var: roleinputvar\n\n- name: Conditional role\n  include_role:\n    name: myrole\n  when: not idontwanttorun\n\n- name: Apply tags to tasks within included file\n  include_role:\n    name: install\n    apply:\n      tags:\n        - install\n  tags:\n    - always\n",
        "metadata": null,
        "return": null
    }
}
