{
    "awx.awx.tower_inventory_source": {
        "doc": {
            "author": "Adrien Fleury (@fleu42)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower inventory source. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_inventory_source.py",
            "has_action": false,
            "module": "tower_inventory_source",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "credential": {
                    "description": [
                        "Credential to use for the source."
                    ],
                    "type": "str"
                },
                "custom_virtualenv": {
                    "description": [
                        "Local absolute file path containing a custom Python virtualenv to use."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "The description to use for the inventory source."
                    ],
                    "type": "str"
                },
                "enabled_value": {
                    "description": [
                        "Value when the host is considered enabled, e.g., \"powered_on\""
                    ],
                    "type": "str"
                },
                "enabled_var": {
                    "description": [
                        "The variable to use to determine enabled state e.g., \"status.power_state\""
                    ],
                    "type": "str"
                },
                "host_filter": {
                    "description": [
                        "If specified, AWX will only import hosts that match this regular expression."
                    ],
                    "type": "str"
                },
                "inventory": {
                    "description": [
                        "Inventory the group should be made a member of."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name to use for the inventory source."
                    ],
                    "required": true,
                    "type": "str"
                },
                "new_name": {
                    "description": [
                        "A new name for this assets (will rename the asset)"
                    ],
                    "type": "str"
                },
                "notification_templates_error": {
                    "description": [
                        "list of notifications to send on error"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_started": {
                    "description": [
                        "list of notifications to send on start"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_success": {
                    "description": [
                        "list of notifications to send on success"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "organization": {
                    "description": [
                        "Name of the inventory source's inventory's organization."
                    ],
                    "type": "str"
                },
                "overwrite": {
                    "description": [
                        "Delete child groups and hosts not found in source."
                    ],
                    "type": "bool"
                },
                "overwrite_vars": {
                    "description": [
                        "Override vars in child groups and hosts with those from external source."
                    ],
                    "type": "bool"
                },
                "source": {
                    "choices": [
                        "scm",
                        "ec2",
                        "gce",
                        "azure_rm",
                        "vmware",
                        "satellite6",
                        "openstack",
                        "rhv",
                        "tower",
                        "custom"
                    ],
                    "description": [
                        "The source to use for this group."
                    ],
                    "type": "str"
                },
                "source_path": {
                    "description": [
                        "For an SCM based inventory source, the source path points to the file within the repo to use as an inventory."
                    ],
                    "type": "str"
                },
                "source_project": {
                    "description": [
                        "Project to use as source with scm option"
                    ],
                    "type": "str"
                },
                "source_script": {
                    "description": [
                        "Inventory script to be used when group type is C(custom)."
                    ],
                    "type": "str"
                },
                "source_vars": {
                    "description": [
                        "The variables or environment fields to apply to this source type."
                    ],
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the resource."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "description": "The amount of time (in seconds) to run before the task is canceled.",
                    "type": "int"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "update_cache_timeout": {
                    "description": [
                        "Time in seconds to consider an inventory sync to be current."
                    ],
                    "type": "int"
                },
                "update_on_launch": {
                    "description": [
                        "Refresh inventory data from its source each time a job is run."
                    ],
                    "type": "bool"
                },
                "update_on_project_update": {
                    "description": "Update this source when the related project updates if source is C(scm)",
                    "type": "bool"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "verbosity": {
                    "choices": [
                        0,
                        1,
                        2
                    ],
                    "description": "The verbosity level to run this inventory source under.",
                    "type": "int"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower inventory source."
        },
        "examples": "\n- name: Add an inventory source\n  tower_inventory_source:\n    name: \"source-inventory\"\n    description: Source for inventory\n    inventory: previously-created-inventory\n    credential: previously-created-credential\n    overwrite: True\n    update_on_launch: True\n    organization: Default\n    source_vars:\n      private: false\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
