{
    "fortinet.fortios.fortios_log_eventfilter": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Hongbin Lu (@fgtdev-hblu)",
                "Frank Shen (@frankshen01)",
                "Miguel Angel Munoz (@mamunozgonzalez)",
                "Nicolas Thomas (@thomnico)"
            ],
            "collection": "fortinet.fortios",
            "description": [
                "This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the user to set and modify log feature and eventfilter category. Examples include all parameters and values need to be adjusted to datasources before usage. Tested with FOS v6.0.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortios/plugins/modules/fortios_log_eventfilter.py",
            "has_action": false,
            "module": "fortios_log_eventfilter",
            "notes": [
                "Legacy fortiosapi has been deprecated, httpapi is the preferred way to run playbooks"
            ],
            "options": {
                "access_token": {
                    "description": [
                        "Token-based authentication. Generated from GUI of Fortigate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "log_eventfilter": {
                    "default": null,
                    "description": [
                        "Configure log event filters."
                    ],
                    "suboptions": {
                        "compliance_check": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable PCI DSS compliance check logging."
                            ],
                            "type": "str"
                        },
                        "endpoint": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable endpoint event logging."
                            ],
                            "type": "str"
                        },
                        "event": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable event logging."
                            ],
                            "type": "str"
                        },
                        "ha": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable ha event logging."
                            ],
                            "type": "str"
                        },
                        "router": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable router event logging."
                            ],
                            "type": "str"
                        },
                        "security_rating": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable Security Rating result logging."
                            ],
                            "type": "str"
                        },
                        "system": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable system event logging."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable user authentication event logging."
                            ],
                            "type": "str"
                        },
                        "vpn": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable VPN event logging."
                            ],
                            "type": "str"
                        },
                        "wan_opt": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable WAN optimization event logging."
                            ],
                            "type": "str"
                        },
                        "wireless_activity": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable wireless event logging."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "vdom": {
                    "default": "root",
                    "description": [
                        "Virtual domain, among those defined previously. A vdom is a virtual instance of the FortiGate that can be configured and used as a different unit."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "ansible>=2.9.0"
            ],
            "short_description": "Configure log event filters in Fortinet's FortiOS and FortiGate.",
            "version_added": "2.8",
            "version_added_collection": "fortinet.fortios"
        },
        "examples": "\n- hosts: fortigates\n  collections:\n    - fortinet.fortios\n  connection: httpapi\n  vars:\n   vdom: \"root\"\n   ansible_httpapi_use_ssl: yes\n   ansible_httpapi_validate_certs: no\n   ansible_httpapi_port: 443\n  tasks:\n  - name: Configure log event filters.\n    fortios_log_eventfilter:\n      vdom:  \"{{ vdom }}\"\n      log_eventfilter:\n        compliance_check: \"enable\"\n        endpoint: \"enable\"\n        event: \"enable\"\n        ha: \"enable\"\n        router: \"enable\"\n        security_rating: \"enable\"\n        system: \"enable\"\n        user: \"enable\"\n        vpn: \"enable\"\n        wan_opt: \"enable\"\n        wireless_activity: \"enable\"\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "build": {
                "description": "Build number of the fortigate image",
                "returned": "always",
                "sample": "1547",
                "type": "str"
            },
            "http_method": {
                "description": "Last method used to provision the content into FortiGate",
                "returned": "always",
                "sample": "PUT",
                "type": "str"
            },
            "http_status": {
                "description": "Last result given by FortiGate on last operation applied",
                "returned": "always",
                "sample": "200",
                "type": "str"
            },
            "mkey": {
                "description": "Master key (id) used in the last call to FortiGate",
                "returned": "success",
                "sample": "id",
                "type": "str"
            },
            "name": {
                "description": "Name of the table used to fulfill the request",
                "returned": "always",
                "sample": "urlfilter",
                "type": "str"
            },
            "path": {
                "description": "Path of the table used to fulfill the request",
                "returned": "always",
                "sample": "webfilter",
                "type": "str"
            },
            "revision": {
                "description": "Internal revision number",
                "returned": "always",
                "sample": "17.0.2.10658",
                "type": "str"
            },
            "serial": {
                "description": "Serial number of the unit",
                "returned": "always",
                "sample": "FGVMEVYYQT3AB5352",
                "type": "str"
            },
            "status": {
                "description": "Indication of the operation's result",
                "returned": "always",
                "sample": "success",
                "type": "str"
            },
            "vdom": {
                "description": "Virtual domain used",
                "returned": "always",
                "sample": "root",
                "type": "str"
            },
            "version": {
                "description": "Version of the FortiGate",
                "returned": "always",
                "sample": "v5.6.3",
                "type": "str"
            }
        }
    }
}
