{
    "community.aws.aws_direct_connect_gateway": {
        "doc": {
            "author": "Gobin Sougrakpam (@gobins)",
            "collection": "community.aws",
            "description": [
                "Creates AWS Direct Connect Gateway.",
                "Deletes AWS Direct Connect Gateway.",
                "Attaches Virtual Gateways to Direct Connect Gateway.",
                "Detaches Virtual Gateways to Direct Connect Gateway."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/aws_direct_connect_gateway.py",
            "has_action": false,
            "module": "aws_direct_connect_gateway",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "amazon_asn": {
                    "description": [
                        "The Amazon side ASN.",
                        "Required when I(state=present)."
                    ],
                    "type": "str"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "direct_connect_gateway_id": {
                    "description": [
                        "The ID of an existing Direct Connect Gateway.",
                        "Required when I(state=absent)."
                    ],
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the Direct Connect Gateway to be created or deleted."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Set I(state=present) to ensure a resource is created.",
                        "Set I(state=absent) to remove a resource."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "virtual_gateway_id": {
                    "description": [
                        "The VPN gateway ID of an existing virtual gateway."
                    ],
                    "type": "str"
                },
                "wait_timeout": {
                    "default": 320,
                    "description": [
                        "How long to wait for the association to be deleted."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Manage AWS Direct Connect gateway",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Create a new direct connect gateway attached to virtual private gateway\n  community.aws.aws_direct_connect_gateway:\n    state: present\n    name: my-dx-gateway\n    amazon_asn: 7224\n    virtual_gateway_id: vpg-12345\n  register: created_dxgw\n\n- name: Create a new unattached dxgw\n  community.aws.aws_direct_connect_gateway:\n    state: present\n    name: my-dx-gateway\n    amazon_asn: 7224\n  register: created_dxgw\n\n",
        "metadata": null,
        "return": {
            "result": {
                "contains": {
                    "amazon_side_asn": {
                        "description": "ASN on the amazon side.",
                        "type": "str"
                    },
                    "direct_connect_gateway_id": {
                        "description": "The ID of the direct connect gateway.",
                        "type": "str"
                    },
                    "direct_connect_gateway_name": {
                        "description": "The name of the direct connect gateway.",
                        "type": "str"
                    },
                    "direct_connect_gateway_state": {
                        "description": "The state of the direct connect gateway.",
                        "type": "str"
                    },
                    "owner_account": {
                        "description": "The AWS account ID of the owner of the direct connect gateway.",
                        "type": "str"
                    }
                },
                "description": [
                    "The attributes of the Direct Connect Gateway"
                ],
                "returned": "I(state=present)",
                "type": "complex"
            }
        }
    }
}
