{
    "community.aws.cloudfront_info": {
        "doc": {
            "author": "Willem van Ketwich (@wilvk)",
            "collection": "community.aws",
            "description": [
                "Gets information about an AWS CloudFront distribution.",
                "This module was called C(cloudfront_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(community.aws.cloudfront_info) module no longer returns C(ansible_facts)!"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/cloudfront_info.py",
            "has_action": false,
            "module": "cloudfront_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "all_lists": {
                    "default": false,
                    "description": [
                        "Get all CloudFront lists that do not require parameters."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "distribution": {
                    "default": false,
                    "description": [
                        "Get information about a distribution.",
                        "Requires I(distribution_id) or I(domain_name_alias) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "distribution_config": {
                    "default": false,
                    "description": [
                        "Get the configuration information about a distribution.",
                        "Requires I(distribution_id) or I(domain_name_alias) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "distribution_id": {
                    "description": [
                        "The id of the CloudFront distribution. Used with I(distribution), I(distribution_config), I(invalidation), I(streaming_distribution), I(streaming_distribution_config), I(list_invalidations)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "domain_name_alias": {
                    "description": [
                        "Can be used instead of I(distribution_id) - uses the aliased CNAME for the CloudFront distribution to get the distribution id where required."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "invalidation": {
                    "default": false,
                    "description": [
                        "Get information about an invalidation.",
                        "Requires I(invalidation_id) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "invalidation_id": {
                    "description": [
                        "The id of the invalidation to get information about.",
                        "Used with I(invalidation)."
                    ],
                    "required": false,
                    "type": "str"
                },
                "list_distributions": {
                    "default": false,
                    "description": [
                        "Get a list of CloudFront distributions."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "list_distributions_by_web_acl_id": {
                    "default": false,
                    "description": [
                        "Get a list of distributions using web acl id as a filter.",
                        "Requires I(web_acl_id) to be set."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "list_invalidations": {
                    "default": false,
                    "description": [
                        "Get a list of invalidations.",
                        "Requires I(distribution_id) or I(domain_name_alias) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "list_origin_access_identities": {
                    "default": false,
                    "description": [
                        "Get a list of CloudFront origin access identities.",
                        "Requires I(origin_access_identity_id) to be set."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "list_streaming_distributions": {
                    "default": false,
                    "description": [
                        "Get a list of streaming distributions."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "origin_access_identity": {
                    "default": false,
                    "description": [
                        "Get information about an origin access identity.",
                        "Requires I(origin_access_identity_id) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "origin_access_identity_config": {
                    "default": false,
                    "description": [
                        "Get the configuration information about an origin access identity.",
                        "Requires I(origin_access_identity_id) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "origin_access_identity_id": {
                    "description": [
                        "The id of the CloudFront origin access identity to get information about."
                    ],
                    "required": false,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "streaming_distribution": {
                    "default": false,
                    "description": [
                        "Get information about a specified RTMP distribution.",
                        "Requires I(distribution_id) or I(domain_name_alias) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "streaming_distribution_config": {
                    "default": false,
                    "description": [
                        "Get the configuration information about a specified RTMP distribution.",
                        "Requires I(distribution_id) or I(domain_name_alias) to be specified."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "summary": {
                    "default": false,
                    "description": [
                        "Returns a summary of all distributions, streaming distributions and origin_access_identities.",
                        "This is the default behaviour if no option is selected."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3 >= 1.0.0",
                "python >= 2.6"
            ],
            "short_description": "Obtain facts about an AWS CloudFront distribution",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Get a summary of distributions\n  community.aws.cloudfront_info:\n    summary: true\n  register: result\n\n- name: Get information about a distribution\n  community.aws.cloudfront_info:\n    distribution: true\n    distribution_id: my-cloudfront-distribution-id\n  register: result_did\n- ansible.builtin.debug:\n    msg: \"{{ result_did['cloudfront']['my-cloudfront-distribution-id'] }}\"\n\n- name: Get information about a distribution using the CNAME of the cloudfront distribution.\n  community.aws.cloudfront_info:\n    distribution: true\n    domain_name_alias: www.my-website.com\n  register: result_website\n- ansible.builtin.debug:\n    msg: \"{{ result_website['cloudfront']['www.my-website.com'] }}\"\n\n# When the module is called as cloudfront_facts, return values are published\n# in ansible_facts['cloudfront'][<id>] and can be used as follows.\n# Note that this is deprecated and will stop working in Ansible 2.13.\n- name: Gather facts\n  community.aws.cloudfront_facts:\n    distribution: true\n    distribution_id: my-cloudfront-distribution-id\n- ansible.builtin.debug:\n    msg: \"{{ ansible_facts['cloudfront']['my-cloudfront-distribution-id'] }}\"\n\n- community.aws.cloudfront_facts:\n    distribution: true\n    domain_name_alias: www.my-website.com\n- ansible.builtin.debug:\n    msg: \"{{ ansible_facts['cloudfront']['www.my-website.com'] }}\"\n\n- name: Get all information about an invalidation for a distribution.\n  community.aws.cloudfront_info:\n    invalidation: true\n    distribution_id: my-cloudfront-distribution-id\n    invalidation_id: my-cloudfront-invalidation-id\n\n- name: Get all information about a CloudFront origin access identity.\n  community.aws.cloudfront_info:\n    origin_access_identity: true\n    origin_access_identity_id: my-cloudfront-origin-access-identity-id\n\n- name: Get all information about lists not requiring parameters (ie. list_origin_access_identities, list_distributions, list_streaming_distributions)\n  community.aws.cloudfront_info:\n    origin_access_identity: true\n    origin_access_identity_id: my-cloudfront-origin-access-identity-id\n\n- name: Get all information about lists not requiring parameters (ie. list_origin_access_identities, list_distributions, list_streaming_distributions)\n  community.aws.cloudfront_info:\n    all_lists: true\n",
        "metadata": null,
        "return": {
            "distribution": {
                "description": "Facts about a CloudFront distribution. Requires I(distribution_id) or I(domain_name_alias) to be specified. Requires I(origin_access_identity_id) to be set.\n",
                "returned": "only if distribution is true",
                "type": "dict"
            },
            "distribution_config": {
                "description": "Facts about a CloudFront distribution's config. Requires I(distribution_id) or I(domain_name_alias) to be specified.\n",
                "returned": "only if I(distribution_config) is true",
                "type": "dict"
            },
            "invalidation": {
                "description": "Describes the invalidation information for the distribution. Requires I(invalidation_id) to be specified and either I(distribution_id) or I(domain_name_alias.)\n",
                "returned": "only if invalidation is true",
                "type": "dict"
            },
            "origin_access_identity": {
                "description": "Describes the origin access identity information. Requires I(origin_access_identity_id) to be set.",
                "returned": "only if I(origin_access_identity) is true",
                "type": "dict"
            },
            "origin_access_identity_configuration": {
                "description": "Describes the origin access identity information configuration information. Requires I(origin_access_identity_id) to be set.",
                "returned": "only if I(origin_access_identity_configuration) is true",
                "type": "dict"
            },
            "result": {
                "description": "Result dict not nested under the CloudFront ID to access results of module without the knowledge of that id as figuring out the DistributionId is usually the reason one uses this module in the first place.\n",
                "returned": "always",
                "type": "dict"
            },
            "streaming_distribution": {
                "description": "Describes the streaming information for the distribution. Requires I(distribution_id) or I(domain_name_alias) to be specified.\n",
                "returned": "only if I(streaming_distribution) is true",
                "type": "dict"
            },
            "streaming_distribution_config": {
                "description": "Describes the streaming configuration information for the distribution. Requires I(distribution_id) or I(domain_name_alias) to be specified.\n",
                "returned": "only if I(streaming_distribution_config) is true",
                "type": "dict"
            },
            "summary": {
                "description": "Gives a summary of distributions, streaming distributions and origin access identities.",
                "returned": "as default or if summary is true",
                "type": "dict"
            }
        }
    }
}
