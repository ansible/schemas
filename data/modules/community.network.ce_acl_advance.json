{
    "community.network.ce_acl_advance": {
        "doc": {
            "author": [
                "wangdezhuang (@QijunPan)"
            ],
            "collection": "community.network",
            "description": [
                "Manages advanced ACL configurations on HUAWEI CloudEngine switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_acl_advance.py",
            "has_action": false,
            "module": "ce_acl_advance",
            "notes": [
                "This module requires the netconf system service be enabled on the remote device being managed.",
                "Recommended connection is C(netconf).",
                "This module also works with C(local) connections for legacy playbooks."
            ],
            "options": {
                "acl_description": {
                    "description": [
                        "ACL description. The value is a string of 1 to 127 characters."
                    ]
                },
                "acl_name": {
                    "description": [
                        "ACL number or name. For a numbered rule group, the value ranging from 3000 to 3999 indicates a advance ACL. For a named rule group, the value is a string of 1 to 32 case-sensitive characters starting with a letter, spaces not supported."
                    ],
                    "required": true
                },
                "acl_num": {
                    "description": [
                        "ACL number. The value is an integer ranging from 3000 to 3999."
                    ]
                },
                "acl_step": {
                    "description": [
                        "ACL step. The value is an integer ranging from 1 to 20. The default value is 5."
                    ]
                },
                "dest_ip": {
                    "description": [
                        "Destination IP address. The value is a string of 0 to 255 characters.The default value is 0.0.0.0. The value is in dotted decimal notation."
                    ]
                },
                "dest_mask": {
                    "description": [
                        "Destination IP address mask. The value is an integer ranging from 1 to 32."
                    ]
                },
                "dest_pool_name": {
                    "description": [
                        "Name of a destination pool. The value is a string of 1 to 32 characters."
                    ]
                },
                "dest_port_begin": {
                    "description": [
                        "Start port number of the destination port. The value is an integer ranging from 0 to 65535."
                    ]
                },
                "dest_port_end": {
                    "description": [
                        "End port number of the destination port. The value is an integer ranging from 0 to 65535."
                    ]
                },
                "dest_port_op": {
                    "choices": [
                        "lt",
                        "eq",
                        "gt",
                        "range"
                    ],
                    "description": [
                        "Range type of the destination port."
                    ]
                },
                "dest_port_pool_name": {
                    "description": [
                        "Name of a destination port pool. The value is a string of 1 to 32 characters."
                    ]
                },
                "dscp": {
                    "description": [
                        "Differentiated Services Code Point. The value is an integer ranging from 0 to 63."
                    ]
                },
                "established": {
                    "default": "no",
                    "description": [
                        "Match established connections."
                    ],
                    "type": "bool"
                },
                "frag_type": {
                    "choices": [
                        "fragment",
                        "clear_fragment"
                    ],
                    "description": [
                        "Type of packet fragmentation."
                    ]
                },
                "icmp_code": {
                    "description": [
                        "ICMP message code. Data packets can be filtered based on the ICMP message code. The value is an integer ranging from 0 to 255."
                    ]
                },
                "icmp_name": {
                    "choices": [
                        "unconfiged",
                        "echo",
                        "echo-reply",
                        "fragmentneed-DFset",
                        "host-redirect",
                        "host-tos-redirect",
                        "host-unreachable",
                        "information-reply",
                        "information-request",
                        "net-redirect",
                        "net-tos-redirect",
                        "net-unreachable",
                        "parameter-problem",
                        "port-unreachable",
                        "protocol-unreachable",
                        "reassembly-timeout",
                        "source-quench",
                        "source-route-failed",
                        "timestamp-reply",
                        "timestamp-request",
                        "ttl-exceeded",
                        "address-mask-reply",
                        "address-mask-request",
                        "custom"
                    ],
                    "description": [
                        "ICMP name."
                    ]
                },
                "icmp_type": {
                    "description": [
                        "ICMP type. This parameter is available only when the packet protocol is ICMP. The value is an integer ranging from 0 to 255."
                    ]
                },
                "igmp_type": {
                    "choices": [
                        "host-query",
                        "mrouter-adver",
                        "mrouter-solic",
                        "mrouter-termi",
                        "mtrace-resp",
                        "mtrace-route",
                        "v1host-report",
                        "v2host-report",
                        "v2leave-group",
                        "v3host-report"
                    ],
                    "description": [
                        "Internet Group Management Protocol."
                    ]
                },
                "log_flag": {
                    "default": "no",
                    "description": [
                        "Flag of logging matched data packets."
                    ],
                    "type": "bool"
                },
                "precedence": {
                    "description": [
                        "Data packets can be filtered based on the priority field. The value is an integer ranging from 0 to 7."
                    ]
                },
                "protocol": {
                    "choices": [
                        "ip",
                        "icmp",
                        "igmp",
                        "ipinip",
                        "tcp",
                        "udp",
                        "gre",
                        "ospf"
                    ],
                    "description": [
                        "Protocol type."
                    ]
                },
                "rule_action": {
                    "choices": [
                        "permit",
                        "deny"
                    ],
                    "description": [
                        "Matching mode of basic ACL rules."
                    ]
                },
                "rule_description": {
                    "description": [
                        "Description about an ACL rule."
                    ]
                },
                "rule_id": {
                    "description": [
                        "ID of a basic ACL rule in configuration mode. The value is an integer ranging from 0 to 4294967294."
                    ]
                },
                "rule_name": {
                    "description": [
                        "Name of a basic ACL rule. The value is a string of 1 to 32 characters."
                    ]
                },
                "source_ip": {
                    "description": [
                        "Source IP address. The value is a string of 0 to 255 characters.The default value is 0.0.0.0. The value is in dotted decimal notation."
                    ]
                },
                "src_mask": {
                    "description": [
                        "Source IP address mask. The value is an integer ranging from 1 to 32."
                    ]
                },
                "src_pool_name": {
                    "description": [
                        "Name of a source pool. The value is a string of 1 to 32 characters."
                    ]
                },
                "src_port_begin": {
                    "description": [
                        "Start port number of the source port. The value is an integer ranging from 0 to 65535."
                    ]
                },
                "src_port_end": {
                    "description": [
                        "End port number of the source port. The value is an integer ranging from 0 to 65535."
                    ]
                },
                "src_port_op": {
                    "choices": [
                        "lt",
                        "eq",
                        "gt",
                        "range"
                    ],
                    "description": [
                        "Range type of the source port."
                    ]
                },
                "src_port_pool_name": {
                    "description": [
                        "Name of a source port pool. The value is a string of 1 to 32 characters."
                    ]
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "delete_acl"
                    ],
                    "default": "present",
                    "description": [
                        "Specify desired state of the resource."
                    ],
                    "required": false
                },
                "syn_flag": {
                    "description": [
                        "TCP flag value. The value is an integer ranging from 0 to 63."
                    ]
                },
                "tcp_flag_mask": {
                    "description": [
                        "TCP flag mask value. The value is an integer ranging from 0 to 63."
                    ]
                },
                "time_range": {
                    "description": [
                        "Name of a time range in which an ACL rule takes effect."
                    ]
                },
                "tos": {
                    "description": [
                        "ToS value on which data packet filtering is based. The value is an integer ranging from 0 to 15."
                    ]
                },
                "ttl_expired": {
                    "default": "no",
                    "description": [
                        "Whether TTL Expired is matched, with the TTL value of 1."
                    ],
                    "type": "bool"
                },
                "vrf_name": {
                    "description": [
                        "VPN instance name. The value is a string of 1 to 31 characters.The default value is _public_."
                    ]
                }
            },
            "short_description": "Manages advanced ACL configuration on HUAWEI CloudEngine switches."
        },
        "examples": "\n\n- name: CloudEngine advance acl test\n  hosts: cloudengine\n  connection: local\n  gather_facts: no\n  vars:\n    cli:\n      host: \"{{ inventory_hostname }}\"\n      port: \"{{ ansible_ssh_port }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      transport: cli\n\n  tasks:\n\n  - name: \"Config ACL\"\n    community.network.ce_acl_advance:\n      state: present\n      acl_name: 3200\n      provider: \"{{ cli }}\"\n\n  - name: \"Undo ACL\"\n    community.network.ce_acl_advance:\n      state: delete_acl\n      acl_name: 3200\n      provider: \"{{ cli }}\"\n\n  - name: \"Config ACL advance rule\"\n    community.network.ce_acl_advance:\n      state: present\n      acl_name: test\n      rule_name: test_rule\n      rule_id: 111\n      rule_action: permit\n      protocol: tcp\n      source_ip: 10.10.10.10\n      src_mask: 24\n      frag_type: fragment\n      provider: \"{{ cli }}\"\n\n  - name: \"Undo ACL advance rule\"\n    community.network.ce_acl_advance:\n      state: absent\n      acl_name: test\n      rule_name: test_rule\n      rule_id: 111\n      rule_action: permit\n      protocol: tcp\n      source_ip: 10.10.10.10\n      src_mask: 24\n      frag_type: fragment\n      provider: \"{{ cli }}\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of aaa params after module execution",
                "returned": "always",
                "sample": {},
                "type": "dict"
            },
            "existing": {
                "description": "k/v pairs of existing aaa server",
                "returned": "always",
                "sample": {
                    "aclNumOrName": "test",
                    "aclType": "Advance"
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "acl_name": "test",
                    "state": "delete_acl"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command sent to the device",
                "returned": "always",
                "sample": [
                    "undo acl name test"
                ],
                "type": "list"
            }
        }
    }
}
