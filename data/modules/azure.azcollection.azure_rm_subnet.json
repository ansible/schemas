{
    "azure.azcollection.azure_rm_subnet": {
        "doc": {
            "author": [
                "Chris Houseknecht (@chouseknecht)",
                "Matt Davis (@nitzmahone)"
            ],
            "collection": "azure.azcollection",
            "description": [
                "Create, update or delete a subnet within a given virtual network.",
                "Allows setting and updating the address prefix CIDR, which must be valid within the context of the virtual network.",
                "Use the M(azure_rm_networkinterface) module to associate interfaces with the subnet and assign specific IP addresses."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/azure/azcollection/plugins/modules/azure_rm_subnet.py",
            "has_action": false,
            "module": "azure_rm_subnet",
            "notes": [
                "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).",
                "Authentication is also possible using a service principal or Active Directory user.",
                "To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.",
                "To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.",
                "Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment."
            ],
            "options": {
                "ad_user": {
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "address_prefix_cidr": {
                    "aliases": [
                        "address_prefix"
                    ],
                    "description": [
                        "CIDR defining the IPv4 address space of the subnet. Must be valid within the context of the virtual network."
                    ]
                },
                "address_prefixes_cidr": {
                    "aliases": [
                        "address_prefixes"
                    ],
                    "description": [
                        "CIDR defining the IPv4 and IPv6 address space of the subnet. Must be valid within the context of the virtual network.",
                        "If set I(address_prefix), It will not set."
                    ],
                    "type": "list",
                    "version_added": "1.0.0",
                    "version_added_collection": "azure.azcollection"
                },
                "adfs_authority_url": {
                    "description": [
                        "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "api_profile": {
                    "default": "latest",
                    "description": [
                        "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "auth_source": {
                    "choices": [
                        "auto",
                        "cli",
                        "credential_file",
                        "env",
                        "msi"
                    ],
                    "default": "auto",
                    "description": [
                        "Controls the source of the credentials to use for authentication.",
                        "Can also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.",
                        "When set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).",
                        "When set to C(env), the credentials will be read from the environment variables",
                        "When set to C(credential_file), it will read the profile from C(~/.azure/credentials).",
                        "When set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.",
                        "When set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.",
                        "The C(msi) was added in Ansible 2.6."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "cert_validation_mode": {
                    "choices": [
                        "ignore",
                        "validate"
                    ],
                    "description": [
                        "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "client_id": {
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "cloud_environment": {
                    "default": "AzureCloud",
                    "description": [
                        "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable."
                    ],
                    "type": "str",
                    "version_added": "0.0.1",
                    "version_added_collection": "azure.azcollection"
                },
                "delegations": {
                    "description": [
                        "An array of delegations."
                    ],
                    "suboptions": {
                        "actions": {
                            "description": [
                                "A list of actions."
                            ],
                            "type": "list"
                        },
                        "name": {
                            "description": [
                                "The name of delegation."
                            ],
                            "required": true
                        },
                        "serviceName": {
                            "choices": [
                                "Microsoft.Web/serverFarms",
                                "Microsoft.ContainerInstance/containerGroups",
                                "Microsoft.Netapp/volumes",
                                "Microsoft.HardwareSecurityModules/dedicatedHSMs",
                                "Microsoft.ServiceFabricMesh/networks",
                                "Microsoft.Logic/integrationServiceEnvironments",
                                "Microsoft.Batch/batchAccounts",
                                "Microsoft.Sql/managedInstances",
                                "Microsoft.Web/hostingEnvironments",
                                "Microsoft.BareMetal/CrayServers",
                                "Microsoft.BareMetal/MonitoringServers",
                                "Microsoft.Databricks/workspaces",
                                "Microsoft.BareMetal/AzureHostedService",
                                "Microsoft.BareMetal/AzureVMware",
                                "Microsoft.BareMetal/AzureHPC",
                                "Microsoft.BareMetal/AzurePaymentHSM",
                                "Microsoft.StreamAnalytics/streamingJobs",
                                "Microsoft.DBforPostgreSQL/serversv2",
                                "Microsoft.AzureCosmosDB/clusters",
                                "Microsoft.MachineLearningServices/workspaces",
                                "Microsoft.DBforPostgreSQL/singleServers",
                                "Microsoft.DBforPostgreSQL/flexibleServers",
                                "Microsoft.DBforMySQL/serversv2",
                                "Microsoft.DBforMySQL/flexibleServers",
                                "Microsoft.ApiManagement/service",
                                "Microsoft.Synapse/workspaces",
                                "Microsoft.PowerPlatform/vnetaccesslinks",
                                "Microsoft.Network/managedResolvers",
                                "Microsoft.Kusto/clusters"
                            ],
                            "description": [
                                "The type of the endpoint service."
                            ],
                            "required": true
                        }
                    },
                    "type": "list"
                },
                "name": {
                    "description": [
                        "Name of the subnet."
                    ],
                    "required": true
                },
                "password": {
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ],
                    "type": "str"
                },
                "private_endpoint_network_policies": {
                    "choices": [
                        "Enabled",
                        "Disabled"
                    ],
                    "default": "Enabled",
                    "description": [
                        "C(Enabled) or C(Disabled) apply network policies on private endpoints in the subnet."
                    ],
                    "type": "str"
                },
                "private_link_service_network_policies": {
                    "choices": [
                        "Enabled",
                        "Disabled"
                    ],
                    "default": "Enabled",
                    "description": [
                        "C(Enabled) or C(Disabled) apply network policies on private link service in the subnet."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ],
                    "type": "str"
                },
                "resource_group": {
                    "description": [
                        "Name of resource group."
                    ],
                    "required": true
                },
                "route_table": {
                    "description": [
                        "The reference of the RouteTable resource.",
                        "Can be the name or resource ID of the route table.",
                        "Can be a dict containing the I(name) and I(resource_group) of the route table."
                    ]
                },
                "secret": {
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "security_group": {
                    "aliases": [
                        "security_group_name"
                    ],
                    "description": [
                        "Existing security group with which to associate the subnet.",
                        "It can be the security group name which is in the same resource group.",
                        "Can be the resource ID of the security group.",
                        "Can be a dict containing the I(name) and I(resource_group) of the security group."
                    ]
                },
                "service_endpoints": {
                    "description": [
                        "An array of service endpoints."
                    ],
                    "suboptions": {
                        "locations": {
                            "description": [
                                "A list of locations."
                            ],
                            "type": "list"
                        },
                        "service": {
                            "description": [
                                "The type of the endpoint service."
                            ],
                            "required": true
                        }
                    },
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Assert the state of the subnet. Use C(present) to create or update a subnet and use C(absent) to delete a subnet."
                    ]
                },
                "subscription_id": {
                    "description": [
                        "Your Azure subscription Id."
                    ],
                    "type": "str"
                },
                "tenant": {
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ],
                    "type": "str"
                },
                "virtual_network_name": {
                    "aliases": [
                        "virtual_network"
                    ],
                    "description": [
                        "Name of an existing virtual network with which the subnet is or will be associated."
                    ],
                    "required": true
                }
            },
            "requirements": [
                "python >= 2.7",
                "azure >= 2.0.0"
            ],
            "seealso": [
                {
                    "description": "How to authenticate using the C(az login) command.",
                    "link": "https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest",
                    "name": "Sign in with Azure CLI"
                }
            ],
            "short_description": "Manage Azure subnets",
            "version_added": "0.1.0",
            "version_added_collection": "azure.azcollection"
        },
        "examples": "\n    - name: Create a subnet\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/24\"\n\n    - name: Create a subnet refer nsg from other resource group\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/16\"\n        security_group:\n          name: secgroupfoo\n          resource_group: mySecondResourceGroup\n        route_table: route\n\n    - name: Create a subnet with service endpoint\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/16\"\n        service_endpoints:\n          - service: \"Microsoft.Sql\"\n            locations:\n              - \"eastus\"\n\n    - name: Create a subnet with delegations\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        address_prefix_cidr: \"10.1.0.0/16\"\n        delegations:\n          - name: 'mydeleg'\n            serviceName: 'Microsoft.ContainerInstance/containerGroups'\n\n    - name: Delete a subnet\n      azure_rm_subnet:\n        resource_group: myResourceGroup\n        virtual_network_name: myVirtualNetwork\n        name: mySubnet\n        state: absent\n",
        "metadata": null,
        "return": {
            "state": {
                "contains": {
                    "address_prefix": {
                        "description": [
                            "IP address CIDR."
                        ],
                        "returned": "always",
                        "sample": "10.1.0.0/16",
                        "type": "str"
                    },
                    "address_prefixes": {
                        "description": [
                            "IP address for IPv4 and IPv6 CIDR."
                        ],
                        "returned": "always",
                        "sample": [
                            "10.2.0.0/24",
                            "fdda:e69b:1587:495e::/64"
                        ],
                        "type": "list"
                    },
                    "delegations": {
                        "contains": {
                            "actions": {
                                "description": [
                                    "list of actions associated with service of delegation"
                                ],
                                "returned": "when delegation is present",
                                "sample": [
                                    "Microsoft.Network/virtualNetworks/subnets/action"
                                ],
                                "type": "list"
                            },
                            "name": {
                                "description": [
                                    "name of delegation"
                                ],
                                "returned": "when delegation is present",
                                "sample": "delegationname",
                                "type": "str"
                            },
                            "serviceName": {
                                "description": [
                                    "service associated to delegation"
                                ],
                                "returned": "when delegation is present",
                                "sample": "Microsoft.ContainerInstance/containerGroups",
                                "type": "str"
                            }
                        },
                        "description": [
                            "Associated delegation of subnets"
                        ],
                        "returned": "always",
                        "type": "list"
                    },
                    "id": {
                        "description": [
                            "Subnet resource path."
                        ],
                        "returned": "always",
                        "sample": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/mySubnet",
                        "type": "str"
                    },
                    "name": {
                        "description": [
                            "Subnet name."
                        ],
                        "returned": "always",
                        "sample": "foobar",
                        "type": "str"
                    },
                    "network_security_group": {
                        "contains": {
                            "id": {
                                "description": [
                                    "Security group resource identifier."
                                ],
                                "returned": "always",
                                "sample": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkSecurityGroups/secgroupfoo",
                                "type": "str"
                            },
                            "name": {
                                "description": [
                                    "Name of the security group."
                                ],
                                "returned": "always",
                                "sample": "secgroupfoo",
                                "type": "str"
                            }
                        },
                        "description": [
                            "Associated network security group of subnets."
                        ],
                        "returned": "always",
                        "type": "complex"
                    },
                    "private_endpoint_network_policies": {
                        "description": [
                            "C(Enabled) or C(Disabled) apply network policies on private endpoints in the subnet."
                        ],
                        "returned": "always",
                        "sample": "Enabled",
                        "type": "str"
                    },
                    "private_link_service_network_policies": {
                        "description": [
                            "C(Enabled) or C(Disabled) apply network policies on private link service in the subnet."
                        ],
                        "returned": "always",
                        "sample": "Disabled",
                        "type": "str"
                    },
                    "provisioning_state": {
                        "description": [
                            "Success or failure of the provisioning event."
                        ],
                        "returned": "always",
                        "sample": "Succeeded",
                        "type": "str"
                    }
                },
                "description": [
                    "Current state of the subnet."
                ],
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
