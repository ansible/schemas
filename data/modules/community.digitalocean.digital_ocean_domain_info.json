{
    "community.digitalocean.digital_ocean_domain_info": {
        "doc": {
            "author": "Abhijeet Kasurde (@Akasurde)",
            "collection": "community.digitalocean",
            "description": [
                "This module can be used to gather information about DigitalOcean provided Domains.",
                "This module was called C(digital_ocean_domain_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/digitalocean/plugins/modules/digital_ocean_domain_info.py",
            "has_action": false,
            "module": "digital_ocean_domain_info",
            "options": {
                "domain_name": {
                    "description": [
                        "Name of the domain to gather information for."
                    ],
                    "required": false,
                    "type": "str"
                },
                "oauth_token": {
                    "aliases": [
                        "api_token"
                    ],
                    "description": [
                        "DigitalOcean OAuth token.",
                        "There are several other environment variables which can be used to provide this value.",
                        "i.e., - 'DO_API_TOKEN', 'DO_API_KEY', 'DO_OAUTH_TOKEN' and 'OAUTH_TOKEN'"
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "The timeout in seconds used for polling DigitalOcean's API."
                    ],
                    "type": "int"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6"
            ],
            "short_description": "Gather information about DigitalOcean Domains"
        },
        "examples": "\n- name: Gather information about all domains\n  community.digitalocean.digital_ocean_domain_info:\n    oauth_token: \"{{ oauth_token }}\"\n\n- name: Gather information about domain with given name\n  community.digitalocean.digital_ocean_domain_info:\n    oauth_token: \"{{ oauth_token }}\"\n    domain_name: \"example.com\"\n\n- name: Get ttl from domain\n  community.digitalocean.digital_ocean_domain_info:\n  register: resp_out\n- set_fact:\n    domain_ttl: \"{{ item.ttl }}\"\n  loop: \"{{ resp_out.data | community.general.json_query(name) }}\"\n  vars:\n    name: \"[?name=='example.com']\"\n- debug:\n    var: domain_ttl\n",
        "metadata": null,
        "return": {
            "data": {
                "description": "DigitalOcean Domain information",
                "returned": "success",
                "sample": [
                    {
                        "domain_records": [
                            {
                                "data": "ns1.digitalocean.com",
                                "flags": null,
                                "id": 37826823,
                                "name": "@",
                                "port": null,
                                "priority": null,
                                "tag": null,
                                "ttl": 1800,
                                "type": "NS",
                                "weight": null
                            }
                        ],
                        "name": "myexample123.com",
                        "ttl": 1800,
                        "zone_file": "myexample123.com. IN SOA ns1.digitalocean.com. hostmaster.myexample123.com. 1520702984 10800 3600 604800 1800\n"
                    }
                ],
                "type": "list"
            }
        }
    }
}
