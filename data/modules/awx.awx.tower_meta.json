{
    "awx.awx.tower_meta": {
        "doc": {
            "author": "Alan Rominger (@alancoding)",
            "collection": "awx.awx",
            "description": [
                "Allows a user to find out what collection this module exists in.",
                "This takes common module parameters, but does nothing with them."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_meta.py",
            "has_action": false,
            "module": "tower_meta",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Returns metadata about the collection this module lives in."
        },
        "examples": "\n- tower_meta:\n  register: result\n\n- name: Show details about the collection\n  debug: var=result\n\n- name: Load the UI setting without hard-coding the collection name\n  debug:\n    msg: \"{{ lookup(result.prefix + '.tower_api', 'settings/ui') }}\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "name": {
                "description": "Collection name",
                "returned": "success",
                "sample": "awx",
                "type": "str"
            },
            "namespace": {
                "description": "Collection namespace",
                "returned": "success",
                "sample": "awx",
                "type": "str"
            },
            "prefix": {
                "description": "Collection namespace and name in the namespace.name format",
                "returned": "success",
                "sample": "awx.awx",
                "type": "str"
            },
            "version": {
                "description": "Version of the collection",
                "returned": "success",
                "sample": "0.0.1-devel",
                "type": "str"
            }
        }
    }
}
