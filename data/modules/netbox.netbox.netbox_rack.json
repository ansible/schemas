{
    "netbox.netbox.netbox_rack": {
        "doc": {
            "author": [
                "Mikhail Yohman (@FragmentedPacket)"
            ],
            "collection": "netbox.netbox",
            "description": [
                "Creates, updates or removes racks from Netbox"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netbox/netbox/plugins/modules/netbox_rack.py",
            "has_action": false,
            "module": "netbox_rack",
            "notes": [
                "Tags should be defined as a YAML list",
                "This should be ran with connection C(local) and hosts C(localhost)"
            ],
            "options": {
                "data": {
                    "description": [
                        "Defines the rack configuration"
                    ],
                    "required": true,
                    "suboptions": {
                        "asset_tag": {
                            "description": [
                                "Asset tag that is associated to the rack"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "comments": {
                            "description": [
                                "Comments that may include additional information in regards to the rack"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "custom_fields": {
                            "description": [
                                "must exist in Netbox"
                            ],
                            "required": false,
                            "type": "dict"
                        },
                        "desc_units": {
                            "description": [
                                "Rack units will be numbered top-to-bottom"
                            ],
                            "required": false,
                            "type": "bool"
                        },
                        "facility_id": {
                            "description": [
                                "The unique rack ID assigned by the facility"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "name": {
                            "description": [
                                "The name of the rack"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "outer_depth": {
                            "description": [
                                "The outer depth of the rack"
                            ],
                            "required": false,
                            "type": "int"
                        },
                        "outer_unit": {
                            "choices": [
                                "Millimeters",
                                "Inches"
                            ],
                            "description": [
                                "Whether the rack unit is in Millimeters or Inches and is I(required) if outer_width/outer_depth is specified"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "outer_width": {
                            "description": [
                                "The outer width of the rack"
                            ],
                            "required": false,
                            "type": "int"
                        },
                        "rack_group": {
                            "description": [
                                "The rack group the rack will be associated to"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "rack_role": {
                            "description": [
                                "The rack role the rack will be associated to"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "serial": {
                            "description": [
                                "Serial number of the rack"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "site": {
                            "description": [
                                "Required if I(state=present) and the rack does not exist yet"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "status": {
                            "description": [
                                "The status of the rack"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "tags": {
                            "description": [
                                "Any tags that the rack may need to be associated with"
                            ],
                            "required": false,
                            "type": "list"
                        },
                        "tenant": {
                            "description": [
                                "The tenant that the device will be assigned to"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "type": {
                            "choices": [
                                "2-post frame",
                                "4-post frame",
                                "4-post cabinet",
                                "Wall-mounted frame",
                                "Wall-mounted cabinet"
                            ],
                            "description": [
                                "The type of rack"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "u_height": {
                            "description": [
                                "The height of the rack in rack units"
                            ],
                            "required": false,
                            "type": "int"
                        },
                        "width": {
                            "choices": [
                                10,
                                19,
                                21,
                                23
                            ],
                            "description": [
                                "The rail-to-rail width"
                            ],
                            "required": false,
                            "type": "int"
                        }
                    },
                    "type": "dict"
                },
                "netbox_token": {
                    "description": [
                        "The token created within Netbox to authorize API access"
                    ],
                    "required": true,
                    "type": "str"
                },
                "netbox_url": {
                    "description": [
                        "URL of the Netbox instance resolvable by Ansible control host"
                    ],
                    "required": true,
                    "type": "str"
                },
                "query_params": {
                    "description": [
                        "This can be used to override the specified values in ALLOWED_QUERY_PARAMS that is defined",
                        "in plugins/module_utils/netbox_utils.py and provides control to users on what may make",
                        "an object unique in their environment."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Use C(present) or C(absent) for adding or removing."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "raw"
                }
            },
            "requirements": [
                "pynetbox"
            ],
            "short_description": "Create, update or delete racks within Netbox",
            "version_added": "0.1.0",
            "version_added_collection": "netbox.netbox"
        },
        "examples": "\n- name: \"Test Netbox modules\"\n  connection: local\n  hosts: localhost\n  gather_facts: False\n\n  tasks:\n    - name: Create rack within Netbox with only required information\n      netbox_rack:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          name: Test rack\n          site: Test Site\n        state: present\n\n    - name: Delete rack within netbox\n      netbox_rack:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          name: Test Rack\n        state: absent\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "msg": {
                "description": "Message indicating failure or info about what has been achieved",
                "returned": "always",
                "type": "str"
            },
            "rack": {
                "description": "Serialized object as created or already existent within Netbox",
                "returned": "success (when I(state=present))",
                "type": "dict"
            }
        }
    }
}
