{
    "community.mongodb.mongodb_stepdown": {
        "doc": {
            "author": "Rhys Campbell (@rhysmeister)",
            "collection": "community.mongodb",
            "description": "Step down the MongoDB node from the PRIMARY state if it has that status. Returns OK immediately if the member is already in the SECONDARY or ARBITER states. Will wait until a timeout for the member state to reach SECONDARY or PRIMARY, if the member state is currently STARTUP, RECOVERING, STARTUP2 or ROLLBACK, before taking any needed action.\n",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/mongodb/plugins/modules/mongodb_stepdown.py",
            "has_action": false,
            "module": "mongodb_stepdown",
            "notes": [
                "Requires the pymongo Python package on the remote host, version 2.4.2+. This can be installed using pip or the OS package manager. @see U(http://api.mongodb.org/python/current/installation.html)"
            ],
            "options": {
                "auth_mechanism": {
                    "choices": [
                        "SCRAM-SHA-256",
                        "SCRAM-SHA-1",
                        "MONGODB-X509",
                        "GSSAPI",
                        "PLAIN"
                    ],
                    "description": [
                        "Authentication type."
                    ],
                    "required": false,
                    "type": "str"
                },
                "connection_options": {
                    "description": [
                        "Additional connection options.",
                        "Supply as a list of dicts or strings containing key value pairs seperated with '='."
                    ],
                    "elements": "raw",
                    "required": false,
                    "type": "list"
                },
                "force": {
                    "default": false,
                    "description": [
                        "Optional. A boolean that determines whether the primary steps down if no electable and up-to-date secondary exists within the wait period."
                    ],
                    "type": "bool"
                },
                "interval": {
                    "default": 30,
                    "description": [
                        "The number of seconds to wait between poll executions."
                    ],
                    "type": "int"
                },
                "login_database": {
                    "default": "admin",
                    "description": [
                        "The database where login credentials are stored."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_host": {
                    "default": "localhost",
                    "description": [
                        "The host running MongoDB instance to login to."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate with.",
                        "Required when I(login_user) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_port": {
                    "default": 27017,
                    "description": [
                        "The MongoDB server port to login to."
                    ],
                    "required": false,
                    "type": "int"
                },
                "login_user": {
                    "description": [
                        "The MongoDB user to login with.",
                        "Required when I(login_password) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "poll": {
                    "default": 1,
                    "description": [
                        "The maximum number of times query for the member status."
                    ],
                    "type": "int"
                },
                "secondary_catch_up": {
                    "default": 10,
                    "description": [
                        "The secondaryCatchUpPeriodSecs parameter for the stepDown command.",
                        "The number of seconds that mongod will wait for an electable secondary to catch up to the primary."
                    ],
                    "type": "int"
                },
                "ssl": {
                    "default": false,
                    "description": [
                        "Whether to use an SSL connection when connecting to the database."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "ssl_ca_certs": {
                    "description": [
                        "The ssl_ca_certs option takes a path to a CA file."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_cert_reqs": {
                    "choices": [
                        "CERT_NONE",
                        "CERT_OPTIONAL",
                        "CERT_REQUIRED"
                    ],
                    "default": "CERT_REQUIRED",
                    "description": [
                        "Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_certfile": {
                    "description": [
                        "Present a client certificate using the ssl_certfile option."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_crlfile": {
                    "description": [
                        "The ssl_crlfile option takes a path to a CRL file."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_keyfile": {
                    "description": [
                        "Private key for the client certificate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_pem_passphrase": {
                    "description": [
                        "Passphrase to decrypt encrypted private keys."
                    ],
                    "required": false,
                    "type": "str"
                },
                "stepdown_seconds": {
                    "default": 60,
                    "description": [
                        "The number of seconds to step down the primary, during which time the stepdown member is ineligible for becoming primary."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "pymongo"
            ],
            "short_description": "Step down the MongoDB node from a PRIMARY state.",
            "version_added": "1.0.0",
            "version_added_collection": "community.mongodb"
        },
        "examples": "\n- name: Step down the current MongoDB member\n  community.mongodb.mongodb_stepdown:\n    login_user: admin\n    login_password: secret\n\n- name: Step down the current MongoDB member, poll a maximum of 5 times if member state is recovering\n  community.mongodb.mongodb_stepdown:\n    login_user: admin\n    login_password: secret\n    poll: 5\n    interval: 10\n",
        "metadata": null,
        "return": {
            "failed": {
                "description": "If the module had failed or not.",
                "returned": "always",
                "type": "bool"
            },
            "iteration": {
                "description": "Number of times the module has queried the replicaset status.",
                "returned": "always",
                "type": "int"
            },
            "msg": {
                "description": "Status message.",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
