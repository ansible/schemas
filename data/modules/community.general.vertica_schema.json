{
    "community.general.vertica_schema": {
        "doc": {
            "author": "Dariusz Owczarek (@dareko)",
            "collection": "community.general",
            "description": [
                "Adds or removes Vertica database schema and, optionally, roles with schema access privileges.",
                "A schema will not be removed until all the objects have been dropped.",
                "In such a situation, if the module tries to remove the schema it will fail and only remove roles created for the schema if they have no dependencies."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/vertica_schema.py",
            "has_action": false,
            "module": "vertica_schema",
            "notes": [
                "The default authentication assumes that you are either logging in as or sudo'ing to the C(dbadmin) account on the host.",
                "This module uses C(pyodbc), a Python ODBC database adapter. You must ensure that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.",
                "Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so) to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini) and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16) to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini)."
            ],
            "options": {
                "cluster": {
                    "default": "localhost",
                    "description": [
                        "Name of the Vertica cluster."
                    ],
                    "type": "str"
                },
                "create_roles": {
                    "aliases": [
                        "create_role"
                    ],
                    "description": [
                        "Comma separated list of roles to create and grant usage and create access to the schema."
                    ],
                    "type": "str"
                },
                "db": {
                    "description": [
                        "Name of the Vertica database."
                    ],
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate with."
                    ],
                    "type": "str"
                },
                "login_user": {
                    "default": "dbadmin",
                    "description": [
                        "The username used to authenticate with."
                    ],
                    "type": "str"
                },
                "owner": {
                    "description": [
                        "Name of the user to set as owner of the schema."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 5433,
                    "description": [
                        "Vertica cluster port to connect to."
                    ],
                    "type": "str"
                },
                "schema": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Name of the schema to add or remove."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to create C(present), or drop C(absent) a schema."
                    ],
                    "type": "str"
                },
                "usage_roles": {
                    "aliases": [
                        "usage_role"
                    ],
                    "description": [
                        "Comma separated list of roles to create and grant usage access to the schema."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "unixODBC",
                "pyodbc"
            ],
            "short_description": "Adds or removes Vertica database schema and roles."
        },
        "examples": "\n- name: Creating a new vertica schema\n  community.general.vertica_schema: name=schema_name db=db_name state=present\n\n- name: Creating a new schema with specific schema owner\n  community.general.vertica_schema: name=schema_name owner=dbowner db=db_name state=present\n\n- name: Creating a new schema with roles\n  community.general.vertica_schema:\n    name=schema_name\n    create_roles=schema_name_all\n    usage_roles=schema_name_ro,schema_name_rw\n    db=db_name\n    state=present\n",
        "metadata": null,
        "return": null
    }
}
