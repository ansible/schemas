{
    "community.aws.ec2_vpc_endpoint": {
        "doc": {
            "author": "Karen Cheng (@Etherdaemon)",
            "collection": "community.aws",
            "description": [
                "Creates AWS VPC endpoints.",
                "Deletes AWS VPC endpoints.",
                "This module supports check mode."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_vpc_endpoint.py",
            "has_action": false,
            "module": "ec2_vpc_endpoint",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "client_token": {
                    "description": [
                        "Optional client token to ensure idempotency"
                    ],
                    "required": false,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "policy": {
                    "description": [
                        "A properly formatted json policy as string, see U(https://github.com/ansible/ansible/issues/7005#issuecomment-42894813). Cannot be used with I(policy_file).",
                        "Option when creating an endpoint. If not provided AWS will utilise a default policy which provides full access to the service."
                    ],
                    "required": false,
                    "type": "json"
                },
                "policy_file": {
                    "aliases": [
                        "policy_path"
                    ],
                    "description": [
                        "The path to the properly json formatted policy file, see U(https://github.com/ansible/ansible/issues/7005#issuecomment-42894813) on how to use it properly. Cannot be used with I(policy).",
                        "Option when creating an endpoint. If not provided AWS will utilise a default policy which provides full access to the service.",
                        "This option has been deprecated and will be removed after 2022-12-01 to maintain the existing functionality please use the I(policy) option and a file lookup."
                    ],
                    "required": false,
                    "type": "path"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "purge_tags": {
                    "default": false,
                    "description": [
                        "Delete any tags not specified in the task that are on the instance. This means you have to specify all the desired tags on each task affecting an instance."
                    ],
                    "type": "bool",
                    "version_added": "1.5.0",
                    "version_added_collection": "community.aws"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "route_table_ids": {
                    "description": [
                        "List of one or more route table ids to attach to the endpoint. A route is added to the route table with the destination of the endpoint if provided."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "service": {
                    "description": [
                        "An AWS supported vpc endpoint service. Use the M(community.aws.ec2_vpc_endpoint_info) module to describe the supported endpoint services.",
                        "Required when creating an endpoint."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "present to ensure resource is created.",
                        "absent to remove resource"
                    ],
                    "required": false,
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "A dict of tags to apply to the internet gateway.",
                        "To remove all tags set I(tags={}) and I(purge_tags=true)."
                    ],
                    "type": "dict",
                    "version_added": "1.5.0",
                    "version_added_collection": "community.aws"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "vpc_endpoint_id": {
                    "description": [
                        "One or more vpc endpoint ids to remove from the AWS account"
                    ],
                    "required": false,
                    "type": "str"
                },
                "vpc_endpoint_type": {
                    "choices": [
                        "Interface",
                        "Gateway",
                        "GatewayLoadBalancer"
                    ],
                    "default": "Gateway",
                    "description": [
                        "The type of endpoint."
                    ],
                    "required": false,
                    "type": "str",
                    "version_added": "1.5.0",
                    "version_added_collection": "community.aws"
                },
                "vpc_id": {
                    "description": [
                        "Required when creating a VPC endpoint."
                    ],
                    "required": false,
                    "type": "str"
                },
                "wait": {
                    "default": false,
                    "description": [
                        "When specified, will wait for either available status for state present. Unfortunately this is ignored for delete actions due to a difference in behaviour from AWS."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 320,
                    "description": [
                        "Used in conjunction with wait. Number of seconds to wait for status. Unfortunately this is ignored for delete actions due to a difference in behaviour from AWS."
                    ],
                    "required": false,
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Create and delete AWS VPC Endpoints.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Create new vpc endpoint with a json template for policy\n  community.aws.ec2_vpc_endpoint:\n    state: present\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    service: com.amazonaws.ap-southeast-2.s3\n    policy: \" {{ lookup( 'template', 'endpoint_policy.json.j2') }} \"\n    route_table_ids:\n      - rtb-12345678\n      - rtb-87654321\n  register: new_vpc_endpoint\n\n- name: Create new vpc endpoint with the default policy\n  community.aws.ec2_vpc_endpoint:\n    state: present\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    service: com.amazonaws.ap-southeast-2.s3\n    route_table_ids:\n      - rtb-12345678\n      - rtb-87654321\n  register: new_vpc_endpoint\n\n- name: Create new vpc endpoint with json file\n  community.aws.ec2_vpc_endpoint:\n    state: present\n    region: ap-southeast-2\n    vpc_id: vpc-12345678\n    service: com.amazonaws.ap-southeast-2.s3\n    policy_file: \"{{ role_path }}/files/endpoint_policy.json\"\n    route_table_ids:\n      - rtb-12345678\n      - rtb-87654321\n  register: new_vpc_endpoint\n\n- name: Delete newly created vpc endpoint\n  community.aws.ec2_vpc_endpoint:\n    state: absent\n    vpc_endpoint_id: \"{{ new_vpc_endpoint.result['VpcEndpointId'] }}\"\n    region: ap-southeast-2\n",
        "metadata": null,
        "return": {
            "endpoints": {
                "description": "The resulting endpoints from the module call",
                "returned": "success",
                "sample": [
                    {
                        "creation_timestamp": "2017-02-20T05:04:15+00:00",
                        "policy_document": {
                            "Id": "Policy1450910922815",
                            "Statement": [
                                {
                                    "Action": "s3:*",
                                    "Effect": "Allow",
                                    "Principal": "*",
                                    "Resource": [
                                        "arn:aws:s3:::*/*",
                                        "arn:aws:s3:::*"
                                    ],
                                    "Sid": "Stmt1450910920641"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "route_table_ids": [
                            "rtb-abcd1234"
                        ],
                        "service_name": "com.amazonaws.ap-southeast-2.s3",
                        "vpc_endpoint_id": "vpce-a1b2c3d4",
                        "vpc_id": "vpc-abbad0d0"
                    }
                ],
                "type": "list"
            }
        }
    }
}
