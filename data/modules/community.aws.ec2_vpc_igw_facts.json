{
    "community.aws.ec2_vpc_igw_facts": {
        "doc": {
            "author": "Nick Aslanidis (@naslanidis)",
            "collection": "community.aws",
            "description": [
                "Gather information about internet gateways in AWS.",
                "This module was called C(ec2_vpc_igw_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_vpc_igw_facts.py",
            "has_action": false,
            "module": "ec2_vpc_igw_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "convert_tags": {
                    "description": [
                        "Convert tags from boto3 format (list of dictionaries) to the standard dictionary format.",
                        "This currently defaults to C(False).  The default will be changed to C(True) after 2022-06-22."
                    ],
                    "type": "bool",
                    "version_added": "1.3.0",
                    "version_added_collection": "community.aws"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "filters": {
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html) for possible filters."
                    ],
                    "type": "dict"
                },
                "internet_gateway_ids": {
                    "description": [
                        "Get details of specific Internet Gateway ID. Provide this value as a list."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Gather information about internet gateways in AWS",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all Internet Gateways for an account or profile\n  community.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n  register: igw_info\n\n- name: Gather information about a filtered list of Internet Gateways\n  community.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"igw-123\"\n  register: igw_info\n\n- name: Gather information about a specific internet gateway by InternetGatewayId\n  community.aws.ec2_vpc_igw_info:\n    region: ap-southeast-2\n    profile: production\n    internet_gateway_ids: igw-c1231234\n  register: igw_info\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "True if listing the internet gateways succeeds.",
                "returned": "always",
                "sample": "false",
                "type": "bool"
            },
            "internet_gateways": {
                "contains": {
                    "attachments": {
                        "contains": {
                            "state": {
                                "description": "The current state of the attachment",
                                "returned": "I(state=present)",
                                "sample": "available",
                                "type": "str"
                            },
                            "vpc_id": {
                                "description": "The ID of the VPC.",
                                "returned": "I(state=present)",
                                "sample": "vpc-02123b67",
                                "type": "str"
                            }
                        },
                        "description": "Any VPCs attached to the internet gateway",
                        "returned": "I(state=present)",
                        "type": "complex"
                    },
                    "internet_gateway_id": {
                        "description": "The ID of the internet gateway",
                        "returned": "I(state=present)",
                        "sample": "igw-2123634d",
                        "type": "str"
                    },
                    "tags": {
                        "description": "Any tags assigned to the internet gateway",
                        "returned": "I(state=present)",
                        "sample": {
                            "tags": {
                                "Ansible": "Test"
                            }
                        },
                        "type": "dict"
                    }
                },
                "description": "The internet gateways for the account.",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
