{
    "awx.awx.tower_ad_hoc_command_cancel": {
        "doc": {
            "author": "John Westcott IV (@john-westcott-iv)",
            "collection": "awx.awx",
            "description": [
                "Cancel Ansible Tower ad hoc command. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_ad_hoc_command_cancel.py",
            "has_action": false,
            "module": "tower_ad_hoc_command_cancel",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "command_id": {
                    "description": [
                        "ID of the command to cancel"
                    ],
                    "required": true,
                    "type": "int"
                },
                "fail_if_not_running": {
                    "default": false,
                    "description": [
                        "Fail loudly if the I(command_id) can not be canceled"
                    ],
                    "type": "bool"
                },
                "interval": {
                    "default": 1,
                    "description": [
                        "The interval in seconds, to request an update from Tower."
                    ],
                    "required": false,
                    "type": "float"
                },
                "timeout": {
                    "description": [
                        "Maximum time in seconds to wait for a job to finish.",
                        "Not specifying means the task will wait until Tower cancels the command."
                    ],
                    "type": "int"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Cancel an Ansible Tower Ad Hoc Command."
        },
        "examples": "\n- name: Cancel command\n  tower_ad_hoc_command_cancel:\n    command_id: command.id\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "id": {
                "description": "command id requesting to cancel",
                "returned": "success",
                "sample": 94,
                "type": "int"
            }
        }
    }
}
