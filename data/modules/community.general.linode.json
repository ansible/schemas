{
    "community.general.linode": {
        "doc": {
            "author": [
                "Vincent Viallet (@zbal)"
            ],
            "collection": "community.general",
            "description": [
                "Manage Linode Public Cloud instances and optionally wait for it to be 'running'."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/linode.py",
            "has_action": false,
            "module": "linode",
            "notes": [
                "Please note, linode-python does not have python 3 support.",
                "This module uses the now deprecated v3 of the Linode API.",
                "C(LINODE_API_KEY) env variable can be used instead.",
                "Please review U(https://www.linode.com/api/linode) for determining the required parameters."
            ],
            "options": {
                "additional_disks": {
                    "description": [
                        "List of dictionaries for creating additional disks that are added to the Linode configuration settings.",
                        "Dictionary takes Size, Label, Type. Size is in MB."
                    ],
                    "type": "list"
                },
                "alert_bwin_enabled": {
                    "description": [
                        "Set status of bandwidth in alerts."
                    ],
                    "type": "bool"
                },
                "alert_bwin_threshold": {
                    "description": [
                        "Set threshold in MB of bandwidth in alerts."
                    ],
                    "type": "int"
                },
                "alert_bwout_enabled": {
                    "description": [
                        "Set status of bandwidth out alerts."
                    ],
                    "type": "bool"
                },
                "alert_bwout_threshold": {
                    "description": [
                        "Set threshold in MB of bandwidth out alerts."
                    ],
                    "type": "int"
                },
                "alert_bwquota_enabled": {
                    "description": [
                        "Set status of bandwidth quota alerts as percentage of network transfer quota."
                    ],
                    "type": "bool"
                },
                "alert_bwquota_threshold": {
                    "description": [
                        "Set threshold in MB of bandwidth quota alerts."
                    ],
                    "type": "int"
                },
                "alert_cpu_enabled": {
                    "description": [
                        "Set status of receiving CPU usage alerts."
                    ],
                    "type": "bool"
                },
                "alert_cpu_threshold": {
                    "description": [
                        "Set percentage threshold for receiving CPU usage alerts. Each CPU core adds 100% to total."
                    ],
                    "type": "int"
                },
                "alert_diskio_enabled": {
                    "description": [
                        "Set status of receiving disk IO alerts."
                    ],
                    "type": "bool"
                },
                "alert_diskio_threshold": {
                    "description": [
                        "Set threshold for average IO ops/sec over 2 hour period."
                    ],
                    "type": "int"
                },
                "api_key": {
                    "description": [
                        "Linode API key"
                    ],
                    "type": "str"
                },
                "backupweeklyday": {
                    "description": [
                        "Integer value for what day of the week to store weekly backups."
                    ],
                    "type": "int"
                },
                "datacenter": {
                    "description": [
                        "datacenter to create an instance in (Linode Datacenter)"
                    ],
                    "type": "int"
                },
                "displaygroup": {
                    "description": [
                        "Add the instance to a Display Group in Linode Manager."
                    ],
                    "type": "str"
                },
                "distribution": {
                    "description": [
                        "distribution to use for the instance (Linode Distribution)"
                    ],
                    "type": "int"
                },
                "kernel_id": {
                    "description": [
                        "kernel to use for the instance (Linode Kernel)"
                    ],
                    "type": "int"
                },
                "linode_id": {
                    "aliases": [
                        "lid"
                    ],
                    "description": [
                        "Unique ID of a linode server. This value is read-only in the sense that if you specify it on creation of a Linode it will not be used. The Linode API generates these IDs and we can those generated value here to reference a Linode more specifically. This is useful for idempotence."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "Name to give the instance (alphanumeric, dashes, underscore).",
                        "To keep sanity on the Linode Web Console, name is prepended with C(LinodeID-)."
                    ],
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "root password to apply to a new server (auto generated if missing)"
                    ],
                    "type": "str"
                },
                "payment_term": {
                    "choices": [
                        1,
                        12,
                        24
                    ],
                    "default": 1,
                    "description": [
                        "payment term to use for the instance (payment term in months)"
                    ],
                    "type": "int"
                },
                "plan": {
                    "description": [
                        "plan to use for the instance (Linode plan)"
                    ],
                    "type": "int"
                },
                "private_ip": {
                    "description": [
                        "Add private IPv4 address when Linode is created.",
                        "Default is C(false)."
                    ],
                    "type": "bool"
                },
                "ssh_pub_key": {
                    "description": [
                        "SSH public key applied to root user"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "active",
                        "deleted",
                        "present",
                        "restarted",
                        "started",
                        "stopped"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "type": "str"
                },
                "swap": {
                    "default": 512,
                    "description": [
                        "swap size in MB"
                    ],
                    "type": "int"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "wait for the instance to be in state C(running) before returning"
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "type": "int"
                },
                "watchdog": {
                    "default": "True",
                    "description": [
                        "Set status of Lassie watchdog."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "linode-python"
            ],
            "short_description": "Manage instances on the Linode Public Cloud"
        },
        "examples": "\n\n- name: Create a new Linode\n  community.general.linode:\n    name: linode-test1\n    plan: 1\n    datacenter: 7\n    distribution: 129\n    state: present\n  register: linode_creation\n\n- name: Create a server with a private IP Address\n  community.general.linode:\n     module: linode\n     api_key: 'longStringFromLinodeApi'\n     name: linode-test1\n     plan: 1\n     datacenter: 2\n     distribution: 99\n     password: 'superSecureRootPassword'\n     private_ip: yes\n     ssh_pub_key: 'ssh-rsa qwerty'\n     swap: 768\n     wait: yes\n     wait_timeout: 600\n     state: present\n  delegate_to: localhost\n  register: linode_creation\n\n- name: Fully configure new server\n  community.general.linode:\n     api_key: 'longStringFromLinodeApi'\n     name: linode-test1\n     plan: 4\n     datacenter: 2\n     distribution: 99\n     kernel_id: 138\n     password: 'superSecureRootPassword'\n     private_ip: yes\n     ssh_pub_key: 'ssh-rsa qwerty'\n     swap: 768\n     wait: yes\n     wait_timeout: 600\n     state: present\n     alert_bwquota_enabled: True\n     alert_bwquota_threshold: 80\n     alert_bwin_enabled: True\n     alert_bwin_threshold: 10\n     alert_cpu_enabled: True\n     alert_cpu_threshold: 210\n     alert_bwout_enabled: True\n     alert_bwout_threshold: 10\n     alert_diskio_enabled: True\n     alert_diskio_threshold: 10000\n     backupweeklyday: 1\n     backupwindow: 2\n     displaygroup: 'test'\n     additional_disks:\n      - {Label: 'disk1', Size: 2500, Type: 'raw'}\n      - {Label: 'newdisk', Size: 2000}\n     watchdog: True\n  delegate_to: localhost\n  register: linode_creation\n\n- name: Ensure a running server (create if missing)\n  community.general.linode:\n     api_key: 'longStringFromLinodeApi'\n     name: linode-test1\n     plan: 1\n     datacenter: 2\n     distribution: 99\n     password: 'superSecureRootPassword'\n     ssh_pub_key: 'ssh-rsa qwerty'\n     swap: 768\n     wait: yes\n     wait_timeout: 600\n     state: present\n  delegate_to: localhost\n  register: linode_creation\n\n- name: Delete a server\n  community.general.linode:\n     api_key: 'longStringFromLinodeApi'\n     name: linode-test1\n     linode_id: \"{{ linode_creation.instance.id }}\"\n     state: absent\n  delegate_to: localhost\n\n- name: Stop a server\n  community.general.linode:\n     api_key: 'longStringFromLinodeApi'\n     name: linode-test1\n     linode_id: \"{{ linode_creation.instance.id }}\"\n     state: stopped\n  delegate_to: localhost\n\n- name: Reboot a server\n  community.general.linode:\n     api_key: 'longStringFromLinodeApi'\n     name: linode-test1\n     linode_id: \"{{ linode_creation.instance.id }}\"\n     state: restarted\n  delegate_to: localhost\n",
        "metadata": null,
        "return": null
    }
}
