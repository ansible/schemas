{
    "community.network.cnos_user": {
        "doc": {
            "author": "Anil Kumar Muraleedharan (@amuraleedhar)",
            "collection": "community.network",
            "description": [
                "This module provides declarative management of the local usernames configured on Lenovo CNOS devices.  It allows playbooks to manage either individual usernames or the collection of usernames in the current running config.  It also supports purging usernames from the configuration that are not explicitly defined."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/cnos_user.py",
            "has_action": false,
            "module": "cnos_user",
            "options": {
                "aggregate": {
                    "aliases": [
                        "users",
                        "collection"
                    ],
                    "description": [
                        "The set of username objects to be configured on the remote Lenovo CNOS device.  The list entries can either be the username or a hash of username and properties.  This argument is mutually exclusive with the C(name) argument."
                    ]
                },
                "configured_password": {
                    "description": [
                        "The password to be configured on the network device. The password needs to be provided in cleartext and it will be encrypted on the device. Please note that this option is not same as C(provider password)."
                    ]
                },
                "name": {
                    "description": [
                        "The username to be configured on the remote Lenovo CNOS device.  This argument accepts a string value and is mutually exclusive with the C(aggregate) argument."
                    ]
                },
                "purge": {
                    "default": "no",
                    "description": [
                        "The C(purge) argument instructs the module to consider the resource definition absolute.  It will remove any previously configured usernames on the device with the exception of the `admin` user which cannot be deleted per cnos constraints."
                    ],
                    "type": "bool"
                },
                "role": {
                    "aliases": [
                        "roles"
                    ],
                    "description": [
                        "The C(role) argument configures the role for the username in the device running configuration.  The argument accepts a string value defining the role name.  This argument does not check if the role has been configured on the device."
                    ]
                },
                "sshkey": {
                    "description": [
                        "The C(sshkey) argument defines the SSH public key to configure for the username.  This argument accepts a valid SSH key value."
                    ]
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "The C(state) argument configures the state of the username definition as it relates to the device operational configuration.  When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration"
                    ]
                },
                "update_password": {
                    "choices": [
                        "on_create",
                        "always"
                    ],
                    "default": "always",
                    "description": [
                        "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created."
                    ]
                }
            },
            "short_description": "Manage the collection of local users on Lenovo CNOS devices"
        },
        "examples": "\n- name: Create a new user\n  community.network.cnos_user:\n    name: ansible\n    sshkey: \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\"\n    state: present\n\n- name: Remove all users except admin\n  community.network.cnos_user:\n    purge: yes\n\n- name: Set multiple users role\n  aggregate:\n    - name: Netop\n    - name: Netend\n  role: network-operator\n  state: present\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "The list of configuration mode commands to send to the device",
                "returned": "always",
                "sample": [
                    "name ansible",
                    "name ansible password password"
                ],
                "type": "list"
            },
            "delta": {
                "description": "The time elapsed to perform all operations",
                "returned": "always",
                "sample": "0:00:10.469466",
                "type": "str"
            },
            "end": {
                "description": "The time the job ended",
                "returned": "always",
                "sample": "2016-11-16 10:38:25.595612",
                "type": "str"
            },
            "start": {
                "description": "The time the job started",
                "returned": "always",
                "sample": "2016-11-16 10:38:15.126146",
                "type": "str"
            }
        }
    }
}
