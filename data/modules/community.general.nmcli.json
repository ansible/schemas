{
    "community.general.nmcli": {
        "doc": {
            "author": [
                "Chris Long (@alcamie101)"
            ],
            "collection": "community.general",
            "description": [
                "Manage the network devices. Create, modify and manage various connection and device type e.g., ethernet, teams, bonds, vlans etc.",
                "On CentOS 8 and Fedora >=29 like systems, the requirements can be met by installing the following packages: NetworkManager.",
                "On CentOS 7 and Fedora <=28 like systems, the requirements can be met by installing the following packages: NetworkManager-tui.",
                "On Ubuntu and Debian like systems, the requirements can be met by installing the following packages: network-manager",
                "On openSUSE, the requirements can be met by installing the following packages: NetworkManager."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/nmcli.py",
            "has_action": false,
            "module": "nmcli",
            "options": {
                "ageingtime": {
                    "default": 300,
                    "description": [
                        "This is only used with bridge - [ageing-time <0-1000000>] the Ethernet MAC address aging time, in seconds."
                    ],
                    "type": "int"
                },
                "arp_interval": {
                    "description": [
                        "This is only used with bond - ARP interval."
                    ],
                    "type": "int"
                },
                "arp_ip_target": {
                    "description": [
                        "This is only used with bond - ARP IP target."
                    ],
                    "type": "str"
                },
                "autoconnect": {
                    "default": true,
                    "description": [
                        "Whether the connection should start on boot.",
                        "Whether the connection profile can be automatically activated"
                    ],
                    "type": "bool"
                },
                "conn_name": {
                    "description": [
                        "The name used to call the connection. Pattern is <type>[-<ifname>][-<num>]."
                    ],
                    "required": true,
                    "type": "str"
                },
                "dhcp_client_id": {
                    "description": [
                        "DHCP Client Identifier sent to the DHCP server."
                    ],
                    "type": "str"
                },
                "dns4": {
                    "description": [
                        "A list of up to 3 dns servers.",
                        "IPv4 format e.g. to add two IPv4 DNS server addresses, use C(192.0.2.53 198.51.100.53)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "dns4_search": {
                    "description": [
                        "A list of DNS search domains."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "dns6": {
                    "description": [
                        "A list of up to 3 dns servers.",
                        "IPv6 format e.g. to add two IPv6 DNS server addresses, use C(2001:4860:4860::8888 2001:4860:4860::8844)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "dns6_search": {
                    "description": [
                        "A list of DNS search domains."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "downdelay": {
                    "description": [
                        "This is only used with bond - downdelay."
                    ],
                    "type": "int"
                },
                "egress": {
                    "description": [
                        "This is only used with VLAN - VLAN egress priority mapping."
                    ],
                    "type": "str"
                },
                "flags": {
                    "description": [
                        "This is only used with VLAN - flags."
                    ],
                    "type": "str"
                },
                "forwarddelay": {
                    "default": 15,
                    "description": [
                        "This is only used with bridge - [forward-delay <2-30>] STP forwarding delay, in seconds."
                    ],
                    "type": "int"
                },
                "gw4": {
                    "description": [
                        "The IPv4 gateway for this interface.",
                        "Use the format C(192.0.2.1).",
                        "This parameter is mutually_exclusive with never_default4 parameter."
                    ],
                    "type": "str"
                },
                "gw6": {
                    "description": [
                        "The IPv6 gateway for this interface.",
                        "Use the format C(2001:db8::1)."
                    ],
                    "type": "str"
                },
                "hairpin": {
                    "default": true,
                    "description": [
                        "This is only used with 'bridge-slave' - 'hairpin mode' for the slave, which allows frames to be sent back out through the slave the frame was received on."
                    ],
                    "type": "bool"
                },
                "hellotime": {
                    "default": 2,
                    "description": [
                        "This is only used with bridge - [hello-time <1-10>] STP hello time, in seconds."
                    ],
                    "type": "int"
                },
                "ifname": {
                    "description": [
                        "The interface to bind the connection to.",
                        "The connection will only be applicable to this interface name.",
                        "A special value of C('*') can be used for interface-independent connections.",
                        "The ifname argument is mandatory for all connection types except bond, team, bridge and vlan.",
                        "This parameter defaults to C(conn_name) when left unset."
                    ],
                    "type": "str"
                },
                "ingress": {
                    "description": [
                        "This is only used with VLAN - VLAN ingress priority mapping."
                    ],
                    "type": "str"
                },
                "ip4": {
                    "description": [
                        "The IPv4 address to this interface.",
                        "Use the format C(192.0.2.24/24).",
                        "If defined and I(method4) is not specified, automatically set C(ipv4.method) to C(manual)."
                    ],
                    "type": "str"
                },
                "ip6": {
                    "description": [
                        "The IPv6 address to this interface.",
                        "Use the format C(abbe::cafe).",
                        "If defined and I(method6) is not specified, automatically set C(ipv6.method) to C(manual)."
                    ],
                    "type": "str"
                },
                "ip_tunnel_dev": {
                    "description": [
                        "This is used with IPIP/SIT - parent device this IPIP/SIT tunnel, can use ifname."
                    ],
                    "type": "str"
                },
                "ip_tunnel_local": {
                    "description": [
                        "This is used with IPIP/SIT - IPIP/SIT local IP address."
                    ],
                    "type": "str"
                },
                "ip_tunnel_remote": {
                    "description": [
                        "This is used with IPIP/SIT - IPIP/SIT destination IP address."
                    ],
                    "type": "str"
                },
                "mac": {
                    "description": [
                        "This is only used with bridge - MAC address of the bridge.",
                        "Note this requires a recent kernel feature, originally introduced in 3.15 upstream kernel."
                    ],
                    "type": "str"
                },
                "master": {
                    "description": [
                        "Master <master (ifname, or connection UUID or conn_name) of bridge, team, bond master connection profile."
                    ],
                    "type": "str"
                },
                "maxage": {
                    "default": 20,
                    "description": [
                        "This is only used with bridge - [max-age <6-42>] STP maximum message age, in seconds."
                    ],
                    "type": "int"
                },
                "method4": {
                    "choices": [
                        "auto",
                        "link-local",
                        "manual",
                        "shared",
                        "disabled"
                    ],
                    "description": [
                        "Configuration method to be used for IPv4.",
                        "If I(ip4) is set, C(ipv4.method) is automatically set to C(manual) and this parameter is not needed."
                    ],
                    "type": "str",
                    "version_added": "2.2.0",
                    "version_added_collection": "community.general"
                },
                "method6": {
                    "choices": [
                        "ignore",
                        "auto",
                        "dhcp",
                        "link-local",
                        "manual",
                        "shared"
                    ],
                    "description": [
                        "Configuration method to be used for IPv6",
                        "If I(ip6) is set, C(ipv6.method) is automatically set to C(manual) and this parameter is not needed."
                    ],
                    "type": "str",
                    "version_added": "2.2.0",
                    "version_added_collection": "community.general"
                },
                "miimon": {
                    "description": [
                        "This is only used with bond - miimon.",
                        "This parameter defaults to C(100) when unset."
                    ],
                    "type": "int"
                },
                "mode": {
                    "choices": [
                        "802.3ad",
                        "active-backup",
                        "balance-alb",
                        "balance-rr",
                        "balance-tlb",
                        "balance-xor",
                        "broadcast"
                    ],
                    "default": "balance-rr",
                    "description": [
                        "This is the type of device or network connection that you wish to create for a bond, team or bridge."
                    ],
                    "type": "str"
                },
                "mtu": {
                    "description": [
                        "The connection MTU, e.g. 9000. This can't be applied when creating the interface and is done once the interface has been created.",
                        "Can be used when modifying Team, VLAN, Ethernet (Future plans to implement wifi, pppoe, infiniband)",
                        "This parameter defaults to C(1500) when unset."
                    ],
                    "type": "int"
                },
                "never_default4": {
                    "default": false,
                    "description": [
                        "Set as default route.",
                        "This parameter is mutually_exclusive with gw4 parameter."
                    ],
                    "type": "bool",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "path_cost": {
                    "default": 100,
                    "description": [
                        "This is only used with 'bridge-slave' - [<1-65535>] - STP port cost for destinations via this slave."
                    ],
                    "type": "int"
                },
                "primary": {
                    "description": [
                        "This is only used with bond and is the primary interface name (for \"active-backup\" mode), this is the usually the 'ifname'."
                    ],
                    "type": "str"
                },
                "priority": {
                    "default": 128,
                    "description": [
                        "This is only used with 'bridge' - sets STP priority."
                    ],
                    "type": "int"
                },
                "route_metric4": {
                    "description": [
                        "Set metric level of ipv4 routes configured on interface."
                    ],
                    "type": "int",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "routes4": {
                    "description": [
                        "The list of ipv4 routes.",
                        "Use the format '192.0.3.0/24 192.0.2.1'"
                    ],
                    "elements": "str",
                    "type": "list",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                },
                "slavepriority": {
                    "default": 32,
                    "description": [
                        "This is only used with 'bridge-slave' - [<0-63>] - STP priority of this slave."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "description": [
                        "Whether the device should exist or not, taking action if the state is different from what is stated."
                    ],
                    "required": true,
                    "type": "str"
                },
                "stp": {
                    "default": true,
                    "description": [
                        "This is only used with bridge and controls whether Spanning Tree Protocol (STP) is enabled for this bridge."
                    ],
                    "type": "bool"
                },
                "type": {
                    "choices": [
                        "bond",
                        "bond-slave",
                        "bridge",
                        "bridge-slave",
                        "ethernet",
                        "generic",
                        "infiniband",
                        "ipip",
                        "sit",
                        "team",
                        "team-slave",
                        "vlan",
                        "vxlan"
                    ],
                    "description": [
                        "This is the type of device or network connection that you wish to create or modify.",
                        "Type C(generic) is added in Ansible 2.5.",
                        "Type C(infiniband) is added in community.general 2.0.0."
                    ],
                    "type": "str"
                },
                "updelay": {
                    "description": [
                        "This is only used with bond - updelay."
                    ],
                    "type": "int"
                },
                "vlandev": {
                    "description": [
                        "This is only used with VLAN - parent device this VLAN is on, can use ifname."
                    ],
                    "type": "str"
                },
                "vlanid": {
                    "description": [
                        "This is only used with VLAN - VLAN ID in range <0-4095>."
                    ],
                    "type": "int"
                },
                "vxlan_id": {
                    "description": [
                        "This is only used with VXLAN - VXLAN ID."
                    ],
                    "type": "int"
                },
                "vxlan_local": {
                    "description": [
                        "This is only used with VXLAN - VXLAN local IP address."
                    ],
                    "type": "str"
                },
                "vxlan_remote": {
                    "description": [
                        "This is only used with VXLAN - VXLAN destination IP address."
                    ],
                    "type": "str"
                },
                "zone": {
                    "description": [
                        "The trust level of the connection.",
                        "When updating this property on a currently activated connection, the change takes effect immediately."
                    ],
                    "type": "str",
                    "version_added": "2.0.0",
                    "version_added_collection": "community.general"
                }
            },
            "requirements": [
                "nmcli"
            ],
            "short_description": "Manage Networking"
        },
        "examples": "\n# These examples are using the following inventory:\n#\n# ## Directory layout:\n#\n# |_/inventory/cloud-hosts\n# |           /group_vars/openstack-stage.yml\n# |           /host_vars/controller-01.openstack.host.com\n# |           /host_vars/controller-02.openstack.host.com\n# |_/playbook/library/nmcli.py\n# |          /playbook-add.yml\n# |          /playbook-del.yml\n# ```\n#\n# ## inventory examples\n# ### groups_vars\n# ```yml\n# ---\n# #devops_os_define_network\n# storage_gw: \"192.0.2.254\"\n# external_gw: \"198.51.100.254\"\n# tenant_gw: \"203.0.113.254\"\n#\n# #Team vars\n# nmcli_team:\n#   - conn_name: tenant\n#     ip4: '{{ tenant_ip }}'\n#     gw4: '{{ tenant_gw }}'\n#   - conn_name: external\n#     ip4: '{{ external_ip }}'\n#     gw4: '{{ external_gw }}'\n#   - conn_name: storage\n#     ip4: '{{ storage_ip }}'\n#     gw4: '{{ storage_gw }}'\n# nmcli_team_slave:\n#   - conn_name: em1\n#     ifname: em1\n#     master: tenant\n#   - conn_name: em2\n#     ifname: em2\n#     master: tenant\n#   - conn_name: p2p1\n#     ifname: p2p1\n#     master: storage\n#   - conn_name: p2p2\n#     ifname: p2p2\n#     master: external\n#\n# #bond vars\n# nmcli_bond:\n#   - conn_name: tenant\n#     ip4: '{{ tenant_ip }}'\n#     gw4: ''\n#     mode: balance-rr\n#   - conn_name: external\n#     ip4: '{{ external_ip }}'\n#     gw4: ''\n#     mode: balance-rr\n#   - conn_name: storage\n#     ip4: '{{ storage_ip }}'\n#     gw4: '{{ storage_gw }}'\n#     mode: balance-rr\n# nmcli_bond_slave:\n#   - conn_name: em1\n#     ifname: em1\n#     master: tenant\n#   - conn_name: em2\n#     ifname: em2\n#     master: tenant\n#   - conn_name: p2p1\n#     ifname: p2p1\n#     master: storage\n#   - conn_name: p2p2\n#     ifname: p2p2\n#     master: external\n#\n# #ethernet vars\n# nmcli_ethernet:\n#   - conn_name: em1\n#     ifname: em1\n#     ip4: '{{ tenant_ip }}'\n#     gw4: '{{ tenant_gw }}'\n#   - conn_name: em2\n#     ifname: em2\n#     ip4: '{{ tenant_ip1 }}'\n#     gw4: '{{ tenant_gw }}'\n#   - conn_name: p2p1\n#     ifname: p2p1\n#     ip4: '{{ storage_ip }}'\n#     gw4: '{{ storage_gw }}'\n#   - conn_name: p2p2\n#     ifname: p2p2\n#     ip4: '{{ external_ip }}'\n#     gw4: '{{ external_gw }}'\n# ```\n#\n# ### host_vars\n# ```yml\n# ---\n# storage_ip: \"192.0.2.91/23\"\n# external_ip: \"198.51.100.23/21\"\n# tenant_ip: \"203.0.113.77/23\"\n# ```\n\n\n\n## playbook-add.yml example\n\n---\n- hosts: openstack-stage\n  remote_user: root\n  tasks:\n\n  - name: Install needed network manager libs\n    ansible.builtin.package:\n      name:\n        - NetworkManager-libnm\n        - nm-connection-editor\n        - libsemanage-python\n        - policycoreutils-python\n      state: present\n\n##### Working with all cloud nodes - Teaming\n  - name: Try nmcli add team - conn_name only & ip4 gw4\n    community.general.nmcli:\n      type: team\n      conn_name: '{{ item.conn_name }}'\n      ip4: '{{ item.ip4 }}'\n      gw4: '{{ item.gw4 }}'\n      state: present\n    with_items:\n      - '{{ nmcli_team }}'\n\n  - name: Try nmcli add teams-slave\n    community.general.nmcli:\n      type: team-slave\n      conn_name: '{{ item.conn_name }}'\n      ifname: '{{ item.ifname }}'\n      master: '{{ item.master }}'\n      state: present\n    with_items:\n      - '{{ nmcli_team_slave }}'\n\n###### Working with all cloud nodes - Bonding\n  - name: Try nmcli add bond - conn_name only & ip4 gw4 mode\n    community.general.nmcli:\n      type: bond\n      conn_name: '{{ item.conn_name }}'\n      ip4: '{{ item.ip4 }}'\n      gw4: '{{ item.gw4 }}'\n      mode: '{{ item.mode }}'\n      state: present\n    with_items:\n      - '{{ nmcli_bond }}'\n\n  - name: Try nmcli add bond-slave\n    community.general.nmcli:\n      type: bond-slave\n      conn_name: '{{ item.conn_name }}'\n      ifname: '{{ item.ifname }}'\n      master: '{{ item.master }}'\n      state: present\n    with_items:\n      - '{{ nmcli_bond_slave }}'\n\n##### Working with all cloud nodes - Ethernet\n  - name: Try nmcli add Ethernet - conn_name only & ip4 gw4\n    community.general.nmcli:\n      type: ethernet\n      conn_name: '{{ item.conn_name }}'\n      ip4: '{{ item.ip4 }}'\n      gw4: '{{ item.gw4 }}'\n      state: present\n    with_items:\n      - '{{ nmcli_ethernet }}'\n\n## playbook-del.yml example\n- hosts: openstack-stage\n  remote_user: root\n  tasks:\n\n  - name: Try nmcli del team - multiple\n    community.general.nmcli:\n      conn_name: '{{ item.conn_name }}'\n      state: absent\n    with_items:\n      - conn_name: em1\n      - conn_name: em2\n      - conn_name: p1p1\n      - conn_name: p1p2\n      - conn_name: p2p1\n      - conn_name: p2p2\n      - conn_name: tenant\n      - conn_name: storage\n      - conn_name: external\n      - conn_name: team-em1\n      - conn_name: team-em2\n      - conn_name: team-p1p1\n      - conn_name: team-p1p2\n      - conn_name: team-p2p1\n      - conn_name: team-p2p2\n\n  - name: Add an Ethernet connection with static IP configuration\n    community.general.nmcli:\n      conn_name: my-eth1\n      ifname: eth1\n      type: ethernet\n      ip4: 192.0.2.100/24\n      gw4: 192.0.2.1\n      state: present\n\n  - name: Add an Team connection with static IP configuration\n    community.general.nmcli:\n      conn_name: my-team1\n      ifname: my-team1\n      type: team\n      ip4: 192.0.2.100/24\n      gw4: 192.0.2.1\n      state: present\n      autoconnect: yes\n\n  - name: Optionally, at the same time specify IPv6 addresses for the device\n    community.general.nmcli:\n      conn_name: my-eth1\n      ifname: eth1\n      type: ethernet\n      ip4: 192.0.2.100/24\n      gw4: 192.0.2.1\n      ip6: 2001:db8::cafe\n      gw6: 2001:db8::1\n      state: present\n\n  - name: Add two IPv4 DNS server addresses\n    community.general.nmcli:\n      conn_name: my-eth1\n      type: ethernet\n      dns4:\n      - 192.0.2.53\n      - 198.51.100.53\n      state: present\n\n  - name: Make a profile usable for all compatible Ethernet interfaces\n    community.general.nmcli:\n      ctype: ethernet\n      name: my-eth1\n      ifname: '*'\n      state: present\n\n  - name: Change the property of a setting e.g. MTU\n    community.general.nmcli:\n      conn_name: my-eth1\n      mtu: 9000\n      type: ethernet\n      state: present\n\n  - name: Add VxLan\n    community.general.nmcli:\n      type: vxlan\n      conn_name: vxlan_test1\n      vxlan_id: 16\n      vxlan_local: 192.168.1.2\n      vxlan_remote: 192.168.1.5\n\n  - name: Add ipip\n    community.general.nmcli:\n      type: ipip\n      conn_name: ipip_test1\n      ip_tunnel_dev: eth0\n      ip_tunnel_local: 192.168.1.2\n      ip_tunnel_remote: 192.168.1.5\n\n  - name: Add sit\n    community.general.nmcli:\n      type: sit\n      conn_name: sit_test1\n      ip_tunnel_dev: eth0\n      ip_tunnel_local: 192.168.1.2\n      ip_tunnel_remote: 192.168.1.5\n\n  - name: Add zone\n    community.general.nmcli:\n      type: ethernet\n      conn_name: my-eth1\n      zone: external\n      state: present\n\n# nmcli exits with status 0 if it succeeds and exits with a status greater\n# than zero when there is a failure. The following list of status codes may be\n# returned:\n#\n#     - 0 Success - indicates the operation succeeded\n#     - 1 Unknown or unspecified error\n#     - 2 Invalid user input, wrong nmcli invocation\n#     - 3 Timeout expired (see --wait option)\n#     - 4 Connection activation failed\n#     - 5 Connection deactivation failed\n#     - 6 Disconnecting device failed\n#     - 7 Connection deletion failed\n#     - 8 NetworkManager is not running\n#     - 9 nmcli and NetworkManager versions mismatch\n#     - 10 Connection, device, or access point does not exist.\n",
        "metadata": null,
        "return": null
    }
}
