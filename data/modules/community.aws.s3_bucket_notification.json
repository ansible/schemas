{
    "community.aws.s3_bucket_notification": {
        "doc": {
            "author": [
                "XLAB d.o.o. (@xlab-si)",
                "Aljaz Kosir (@aljazkosir)",
                "Miha Plesko (@miha-plesko)"
            ],
            "collection": "community.aws",
            "description": [
                "This module allows the management of AWS Lambda function bucket event mappings via the Ansible framework. Use module M(community.aws.lambda) to manage the lambda function itself, M(community.aws.lambda_alias) to manage function aliases and M(community.aws.lambda_policy) to modify lambda permissions."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/s3_bucket_notification.py",
            "has_action": false,
            "module": "s3_bucket_notification",
            "notes": [
                "This module heavily depends on M(community.aws.lambda_policy) as you need to allow C(lambda:InvokeFunction) permission for your lambda function.",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "bucket_name": {
                    "description": [
                        "S3 bucket name."
                    ],
                    "required": true,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "event_name": {
                    "description": [
                        "Unique name for event notification on bucket."
                    ],
                    "required": true,
                    "type": "str"
                },
                "events": {
                    "choices": [
                        "s3:ObjectCreated:*",
                        "s3:ObjectCreated:Put",
                        "s3:ObjectCreated:Post",
                        "s3:ObjectCreated:Copy",
                        "s3:ObjectCreated:CompleteMultipartUpload",
                        "s3:ObjectRemoved:*",
                        "s3:ObjectRemoved:Delete",
                        "s3:ObjectRemoved:DeleteMarkerCreated",
                        "s3:ObjectRestore:Post",
                        "s3:ObjectRestore:Completed",
                        "s3:ReducedRedundancyLostObject"
                    ],
                    "description": [
                        "Events that you want to be triggering notifications. You can select multiple events to send to the same destination, you can set up different events to send to different destinations, and you can set up a prefix or suffix for an event. However, for each bucket, individual events cannot have multiple configurations with overlapping prefixes or suffixes that could match the same object key.",
                        "Required when I(state=present)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "lambda_alias": {
                    "description": [
                        "Name of the Lambda function alias.",
                        "Mutually exclusive with I(lambda_version)."
                    ],
                    "type": "str"
                },
                "lambda_function_arn": {
                    "aliases": [
                        "function_arn"
                    ],
                    "description": [
                        "The ARN of the lambda function."
                    ],
                    "type": "str"
                },
                "lambda_version": {
                    "description": [
                        "Version of the Lambda function.",
                        "Mutually exclusive with I(lambda_alias)."
                    ],
                    "type": "int"
                },
                "prefix": {
                    "description": [
                        "Optional prefix to limit the notifications to objects with keys that start with matching characters."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Describes the desired state."
                    ],
                    "type": "str"
                },
                "suffix": {
                    "description": [
                        "Optional suffix to limit the notifications to objects with keys that end with matching characters."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Creates, updates or deletes S3 Bucket notification for lambda",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n---\n# Example that creates a lambda event notification for a bucket\n- name: Process jpg image\n  community.aws.s3_bucket_notification:\n    state: present\n    event_name: on_file_add_or_remove\n    bucket_name: test-bucket\n    function_name: arn:aws:lambda:us-east-2:526810320200:function:test-lambda\n    events: [\"s3:ObjectCreated:*\", \"s3:ObjectRemoved:*\"]\n    prefix: images/\n    suffix: .jpg\n",
        "metadata": null,
        "return": {
            "notification_configuration": {
                "description": "list of currently applied notifications",
                "returned": "success",
                "type": "list"
            }
        }
    }
}
