{
    "community.aws.iam_role_facts": {
        "doc": {
            "author": [
                "Will Thames (@willthames)"
            ],
            "collection": "community.aws",
            "description": [
                "Gathers information about IAM roles.",
                "This module was called C(iam_role_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/iam_role_facts.py",
            "has_action": false,
            "module": "iam_role_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "role_name"
                    ],
                    "description": [
                        "Name of a role to search for.",
                        "Mutually exclusive with I(path_prefix)."
                    ],
                    "type": "str"
                },
                "path_prefix": {
                    "description": [
                        "Prefix of role to restrict IAM role search for.",
                        "Mutually exclusive with I(name)."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Gather information on IAM roles",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: find all existing IAM roles\n  community.aws.iam_role_info:\n  register: result\n\n- name: describe a single role\n  community.aws.iam_role_info:\n    name: MyIAMRole\n\n- name: describe all roles matching a path prefix\n  community.aws.iam_role_info:\n    path_prefix: /application/path\n",
        "metadata": null,
        "return": {
            "iam_roles": {
                "contains": {
                    "arn": {
                        "description": "Amazon Resource Name for IAM role.",
                        "returned": "always",
                        "sample": "arn:aws:iam::123456789012:role/AnsibleTestRole",
                        "type": "str"
                    },
                    "assume_role_policy_document": {
                        "description": "Policy Document describing what can assume the role.",
                        "returned": "always",
                        "type": "str"
                    },
                    "create_date": {
                        "description": "Date IAM role was created.",
                        "returned": "always",
                        "sample": "2017-10-23T00:05:08+00:00",
                        "type": "str"
                    },
                    "inline_policies": {
                        "description": "List of names of inline policies.",
                        "returned": "always",
                        "sample": [],
                        "type": "list"
                    },
                    "instance_profiles": {
                        "contains": {
                            "arn": {
                                "description": "Amazon Resource Name for the instance profile.",
                                "returned": "always",
                                "sample": "arn:aws:iam::123456789012:instance-profile/AnsibleTestEC2Policy",
                                "type": "str"
                            },
                            "create_date": {
                                "description": "Date instance profile was created.",
                                "returned": "always",
                                "sample": "2017-10-23T00:05:08+00:00",
                                "type": "str"
                            },
                            "instance_profile_id": {
                                "description": "Amazon Identifier for the instance profile.",
                                "returned": "always",
                                "sample": "AROAII7ABCD123456EFGH",
                                "type": "str"
                            },
                            "instance_profile_name": {
                                "description": "Name of instance profile.",
                                "returned": "always",
                                "sample": "AnsibleTestEC2Policy",
                                "type": "str"
                            },
                            "path": {
                                "description": "Path of instance profile.",
                                "returned": "always",
                                "sample": "/",
                                "type": "str"
                            },
                            "roles": {
                                "description": "List of roles associated with this instance profile.",
                                "returned": "always",
                                "sample": [],
                                "type": "list"
                            }
                        },
                        "description": "List of attached instance profiles.",
                        "returned": "always",
                        "type": "complex"
                    },
                    "managed_policies": {
                        "contains": {
                            "policy_arn": {
                                "description": "Amazon Resource Name for the policy.",
                                "returned": "always",
                                "sample": "arn:aws:iam::123456789012:policy/AnsibleTestEC2Policy",
                                "type": "str"
                            },
                            "policy_name": {
                                "description": "Name of managed policy.",
                                "returned": "always",
                                "sample": "AnsibleTestEC2Policy",
                                "type": "str"
                            }
                        },
                        "description": "List of attached managed policies.",
                        "returned": "always",
                        "type": "complex"
                    },
                    "path": {
                        "description": "Path of role.",
                        "returned": "always",
                        "sample": "/",
                        "type": "str"
                    },
                    "role_id": {
                        "description": "Amazon Identifier for the role.",
                        "returned": "always",
                        "sample": "AROAII7ABCD123456EFGH",
                        "type": "str"
                    },
                    "role_name": {
                        "description": "Name of the role.",
                        "returned": "always",
                        "sample": "AnsibleTestRole",
                        "type": "str"
                    },
                    "tags": {
                        "description": "Role tags.",
                        "returned": "always",
                        "sample": "{\"Env\": \"Prod\"}",
                        "type": "dict"
                    }
                },
                "description": "List of IAM roles",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
