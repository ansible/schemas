{
    "community.aws.ecs_attribute": {
        "doc": {
            "author": "Andrej Svenke (@anryko)",
            "collection": "community.aws",
            "description": [
                "Create, update or delete ECS container instance attributes."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ecs_attribute.py",
            "has_action": false,
            "module": "ecs_attribute",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "attributes": {
                    "description": [
                        "List of attributes."
                    ],
                    "elements": "dict",
                    "required": true,
                    "suboptions": {
                        "name": {
                            "description": [
                                "The name of the attribute. Up to 128 letters (uppercase and lowercase), numbers, hyphens, underscores, and periods are allowed."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "value": {
                            "description": [
                                "The value of the attribute. Up to 128 letters (uppercase and lowercase), numbers, hyphens, underscores, periods, at signs (@), forward slashes, colons, and spaces are allowed."
                            ],
                            "required": false,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "cluster": {
                    "description": [
                        "The short name or full Amazon Resource Name (ARN) of the cluster that contains the resource to apply attributes."
                    ],
                    "required": true,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_instance_id": {
                    "description": [
                        "EC2 instance ID of ECS cluster container instance."
                    ],
                    "required": true,
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "The desired state of the attributes."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore",
                "python >= 2.6"
            ],
            "short_description": "manage ecs attributes",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Set attributes\n  community.aws.ecs_attribute:\n    state: present\n    cluster: test-cluster\n    ec2_instance_id: \"{{ ec2_id }}\"\n    attributes:\n      - flavor: test\n      - migrated\n  delegate_to: localhost\n\n- name: Delete attributes\n  community.aws.ecs_attribute:\n    state: absent\n    cluster: test-cluster\n    ec2_instance_id: \"{{ ec2_id }}\"\n    attributes:\n      - flavor: test\n      - migrated\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "attributes": {
                "contains": {
                    "attributes": {
                        "contains": {
                            "name": {
                                "description": "name of the attribute",
                                "type": "str"
                            },
                            "value": {
                                "description": "value of the attribute",
                                "returned": "if present",
                                "type": "str"
                            }
                        },
                        "description": "list of attributes",
                        "elements": "dict",
                        "type": "list"
                    },
                    "cluster": {
                        "description": "cluster name",
                        "type": "str"
                    },
                    "ec2_instance_id": {
                        "description": "ec2 instance id of ecs container instance",
                        "type": "str"
                    }
                },
                "description": "attributes",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
