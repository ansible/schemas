{
    "openstack.cloud.security_group_info": {
        "doc": {
            "author": "OpenStack Ansible SIG",
            "collection": "openstack.cloud",
            "description": [
                "List security groups"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/openstack/cloud/plugins/modules/security_group_info.py",
            "has_action": false,
            "module": "security_group_info",
            "notes": [
                "The standard OpenStack environment variables, such as C(OS_USERNAME) may be used instead of providing explicit values.",
                "Auth information is driven by openstacksdk, which means that values can come from a yaml config file in /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment variables, then finally by explicit parameters in plays. More information can be found at U(https://docs.openstack.org/openstacksdk/)"
            ],
            "options": {
                "any_tags": {
                    "description": [
                        "A list of tags to filter the list result by.",
                        "Resources that match any tag in this list will be returned."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "api_timeout": {
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ],
                    "type": "int"
                },
                "auth": {
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains (for example, I(user_domain_name) or I(project_domain_name)) if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ],
                    "type": "dict"
                },
                "auth_type": {
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ],
                    "type": "str"
                },
                "availability_zone": {
                    "description": [
                        "Ignored. Present for backwards compatibility"
                    ],
                    "type": "str"
                },
                "ca_cert": {
                    "aliases": [
                        "cacert"
                    ],
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ],
                    "type": "str"
                },
                "client_cert": {
                    "aliases": [
                        "cert"
                    ],
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "client_key": {
                    "aliases": [
                        "key"
                    ],
                    "description": [
                        "A path to a client key to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "cloud": {
                    "description": [
                        "Named cloud or cloud config to operate against. If I(cloud) is a string, it references a named cloud config as defined in an OpenStack clouds.yaml file. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present. If I(cloud) is a dict, it contains a complete cloud configuration like would be in a section of clouds.yaml."
                    ],
                    "type": "raw"
                },
                "description": {
                    "description": [
                        "Description of the security group"
                    ],
                    "type": "str"
                },
                "interface": {
                    "aliases": [
                        "endpoint_type"
                    ],
                    "choices": [
                        "admin",
                        "internal",
                        "public"
                    ],
                    "default": "public",
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name or id of the security group."
                    ],
                    "type": "str"
                },
                "not_any_tags": {
                    "description": [
                        "A list of tags to filter the list result by.",
                        "Resources that match any tag in this list will be excluded."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "not_tags": {
                    "description": [
                        "A list of tags to filter the list result by.",
                        "Resources that match all tags in this list will be excluded."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "project_id": {
                    "description": [
                        "Specifies the project id as filter criteria"
                    ],
                    "type": "str"
                },
                "region_name": {
                    "description": [
                        "Name of the region."
                    ],
                    "type": "str"
                },
                "revision_number": {
                    "description": [
                        "Filter the list result by the revision number of the",
                        "resource."
                    ],
                    "type": "int"
                },
                "tags": {
                    "description": [
                        "A list of tags to filter the list result by.",
                        "Resources that match all tags in this list will be returned."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ],
                    "type": "int"
                },
                "validate_certs": {
                    "aliases": [
                        "verify"
                    ],
                    "default": false,
                    "description": [
                        "Whether or not SSL API requests should be verified.",
                        "Before Ansible 2.3 this defaulted to C(yes)."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "openstacksdk",
                "openstacksdk >= 0.12.0",
                "python >= 3.6"
            ],
            "short_description": "Lists security groups"
        },
        "examples": "\n# Get specific security group\n- openstack.cloud.security_group_info:\n    cloud: \"{{ cloud }}\"\n    name: \"{{ my_sg }}\"\n  register: sg\n# Get all security groups\n- openstack.cloud.security_group_info:\n    cloud: \"{{ cloud }}\"\n  register: sg\n",
        "metadata": null,
        "return": {
            "security_groups": {
                "contains": {
                    "created_at": {
                        "description": "Creation time of the security group",
                        "sample": "yyyy-mm-dd hh:mm:ss",
                        "type": "str"
                    },
                    "description": {
                        "description": "Description of the security group",
                        "sample": "My security group",
                        "type": "str"
                    },
                    "id": {
                        "description": "ID of the security group",
                        "sample": "d90e55ba-23bd-4d97-b722-8cb6fb485d69",
                        "type": "str"
                    },
                    "name": {
                        "description": "Name of the security group.",
                        "sample": "my-sg",
                        "type": "str"
                    },
                    "project_id": {
                        "description": "Project ID where the security group is located in.",
                        "sample": "25d24fc8-d019-4a34-9fff-0a09fde6a567",
                        "type": "str"
                    },
                    "security_group_rules": {
                        "description": "Specifies the security group rule list",
                        "sample": [
                            {
                                "description": null,
                                "direction": "ingress",
                                "ethertype": "IPv4",
                                "id": "d90e55ba-23bd-4d97-b722-8cb6fb485d69",
                                "port_range_max": null,
                                "port_range_min": null,
                                "protocol": null,
                                "remote_group_id": "0431c9c5-1660-42e0-8a00-134bec7f03e2",
                                "remote_ip_prefix": null,
                                "security_group_id": "0431c9c5-1660-42e0-8a00-134bec7f03e2",
                                "tenant_id": "bbfe8c41dd034a07bebd592bf03b4b0c"
                            },
                            {
                                "description": null,
                                "direction": "egress",
                                "ethertype": "IPv4",
                                "id": "aecff4d4-9ce9-489c-86a3-803aedec65f7",
                                "port_range_max": null,
                                "port_range_min": null,
                                "protocol": null,
                                "remote_group_id": null,
                                "remote_ip_prefix": null,
                                "security_group_id": "0431c9c5-1660-42e0-8a00-134bec7f03e2",
                                "tenant_id": "bbfe8c41dd034a07bebd592bf03b4b0c"
                            }
                        ],
                        "type": "list"
                    },
                    "updated_at": {
                        "description": "Update time of the security group",
                        "sample": "yyyy-mm-dd hh:mm:ss",
                        "type": "str"
                    }
                },
                "description": "List of dictionaries describing security groups.",
                "returned": "On Success.",
                "type": "complex"
            }
        }
    }
}
