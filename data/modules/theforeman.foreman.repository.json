{
    "theforeman.foreman.repository": {
        "doc": {
            "author": "Eric D Helms (@ehelms)",
            "collection": "theforeman.foreman",
            "description": [
                "Crate and manage repositories"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/theforeman/foreman/plugins/modules/repository.py",
            "has_action": false,
            "module": "repository",
            "notes": [
                "You can configure certain aspects of existing Red Hat Repositories (like I(download_policy)) using this module, but you can't create (enable) or delete (disable) them.",
                "If you want to enable or disable Red Hat Repositories available through your subscription, please use the M(theforeman.foreman.repository_set) module instead."
            ],
            "options": {
                "ansible_collection_requirements": {
                    "description": [
                        "Contents of requirement yaml file to sync from URL"
                    ],
                    "required": false,
                    "type": "str"
                },
                "auto_enabled": {
                    "description": [
                        "repositories will be automatically enabled on a registered host subscribed to this product"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "checksum_type": {
                    "choices": [
                        "sha1",
                        "sha256"
                    ],
                    "description": [
                        "Checksum of the repository"
                    ],
                    "required": false,
                    "type": "str"
                },
                "content_type": {
                    "choices": [
                        "deb",
                        "docker",
                        "file",
                        "ostree",
                        "puppet",
                        "yum",
                        "ansible_collection"
                    ],
                    "description": [
                        "The content type of the repository"
                    ],
                    "required": true,
                    "type": "str"
                },
                "deb_architectures": {
                    "description": [
                        "comma separated list of architectures to be synced from deb-archive",
                        "only available for I(content_type=deb)"
                    ],
                    "type": "str"
                },
                "deb_components": {
                    "description": [
                        "comma separated list of repo components to be synced from deb-archive",
                        "only available for I(content_type=deb)"
                    ],
                    "type": "str"
                },
                "deb_errata_url": {
                    "description": [
                        "URL to sync Debian or Ubuntu errata information from",
                        "only available on Orcharhino",
                        "only available for I(content_type=deb)"
                    ],
                    "required": false,
                    "type": "str"
                },
                "deb_releases": {
                    "description": [
                        "comma separated list of releases to be synced from deb-archive",
                        "only available for I(content_type=deb)"
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Description of the repository"
                    ],
                    "required": false,
                    "type": "str"
                },
                "docker_tags_whitelist": {
                    "description": [
                        "list of tags to sync for Container Image repository",
                        "only available for I(content_type=docker)"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "docker_upstream_name": {
                    "description": [
                        "name of the upstream docker repository",
                        "only available for I(content_type=docker)"
                    ],
                    "type": "str"
                },
                "download_policy": {
                    "choices": [
                        "background",
                        "immediate",
                        "on_demand"
                    ],
                    "description": [
                        "download policy for sync from upstream"
                    ],
                    "required": false,
                    "type": "str"
                },
                "gpg_key": {
                    "description": [
                        "Repository GPG key"
                    ],
                    "required": false,
                    "type": "str"
                },
                "http_proxy": {
                    "description": [
                        "Name of the http proxy to use for content synching",
                        "Should be combined with I(http_proxy_policy='use_selected_http_proxy')"
                    ],
                    "required": false,
                    "type": "str"
                },
                "http_proxy_policy": {
                    "choices": [
                        "global_default_http_proxy",
                        "none",
                        "use_selected_http_proxy"
                    ],
                    "description": [
                        "Which proxy to use for content synching"
                    ],
                    "required": false,
                    "type": "str"
                },
                "ignorable_content": {
                    "description": [
                        "List of content units to ignore while syncing a yum repository.",
                        "Must be subset of rpm,drpm,srpm,distribution,erratum."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "ignore_global_proxy": {
                    "description": [
                        "Whether content sync should use or ignore the global http proxy setting",
                        "This is deprecated with Katello 3.13",
                        "It has been superseeded by I(http_proxy_policy)"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "label": {
                    "description": [
                        "label of the repository"
                    ],
                    "type": "str"
                },
                "mirror_on_sync": {
                    "default": true,
                    "description": [
                        "toggle \"mirror on sync\" where the state of the repository mirrors that of the upstream repository at sync time"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name of the repository"
                    ],
                    "required": true,
                    "type": "str"
                },
                "organization": {
                    "description": [
                        "Organization that the entity is in"
                    ],
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Password of the user accessing the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "product": {
                    "description": [
                        "Product to which the repository lives in"
                    ],
                    "required": true,
                    "type": "str"
                },
                "server_url": {
                    "description": [
                        "URL of the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "ssl_ca_cert": {
                    "description": [
                        "Repository SSL CA certificate"
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_client_cert": {
                    "description": [
                        "Repository SSL client certificate"
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_client_key": {
                    "description": [
                        "Repository SSL client private key"
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "present_with_defaults",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the entity",
                        "C(present_with_defaults) will ensure the entity exists, but won't update existing ones"
                    ],
                    "type": "str"
                },
                "unprotected": {
                    "description": [
                        "publish the repository via HTTP"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "upstream_password": {
                    "description": [
                        "password to access upstream repository"
                    ],
                    "type": "str"
                },
                "upstream_username": {
                    "description": [
                        "username to access upstream repository"
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "Repository URL to sync from"
                    ],
                    "required": false,
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Username accessing the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether or not to verify the TLS certificates of the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                },
                "verify_ssl_on_sync": {
                    "description": [
                        "verify the upstream certifcates are signed by a trusted CA"
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "requirements": [
                "requests"
            ],
            "short_description": "Manage Repositories",
            "version_added": "1.0.0",
            "version_added_collection": "theforeman.foreman"
        },
        "examples": "\n- name: \"Create repository\"\n  theforeman.foreman.repository:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My repository\"\n    state: present\n    content_type: \"yum\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n    url: \"http://yum.theforeman.org/plugins/latest/el7/x86_64/\"\n    mirror_on_sync: true\n    download_policy: background\n\n- name: \"Create repository with content credentials\"\n  theforeman.foreman.repository:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My repository 2\"\n    state: present\n    content_type: \"yum\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n    url: \"http://yum.theforeman.org/releases/latest/el7/x86_64/\"\n    download_policy: background\n    mirror_on_sync: true\n    gpg_key: RPM-GPG-KEY-my-product2\n",
        "metadata": null,
        "return": {
            "entity": {
                "contains": {
                    "repositories": {
                        "description": "List of repositories.",
                        "elements": "dict",
                        "type": "list"
                    }
                },
                "description": "Final state of the affected entities grouped by their type.",
                "returned": "success",
                "type": "dict"
            }
        }
    }
}
