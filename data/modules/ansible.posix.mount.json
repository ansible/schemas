{
    "ansible.posix.mount": {
        "doc": {
            "author": [
                "Ansible Core Team",
                "Seth Vidal (@skvidal)"
            ],
            "collection": "ansible.posix",
            "description": [
                "This module controls active and configured mount points in C(/etc/fstab)."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/ansible/posix/plugins/modules/mount.py",
            "has_action": false,
            "module": "mount",
            "notes": [
                "As of Ansible 2.3, the I(name) option has been changed to I(path) as default, but I(name) still works as well.",
                "Using C(remounted) with I(opts) set may create unexpected results based on the existing options already defined on mount, so care should be taken to ensure that conflicting options are not present before hand."
            ],
            "options": {
                "backup": {
                    "default": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "type": "bool"
                },
                "boot": {
                    "default": true,
                    "description": [
                        "Determines if the filesystem should be mounted on boot.",
                        "Only applies to Solaris systems."
                    ],
                    "type": "bool"
                },
                "dump": {
                    "default": 0,
                    "description": [
                        "Dump (see fstab(5)).",
                        "Note that if set to C(null) and I(state) set to C(present), it will cease to work and duplicate entries will be made with subsequent runs.",
                        "Has no effect on Solaris systems."
                    ],
                    "type": "str"
                },
                "fstab": {
                    "description": [
                        "File to use instead of C(/etc/fstab).",
                        "You should not use this option unless you really know what you are doing.",
                        "This might be useful if you need to configure mountpoints in a chroot environment.",
                        "OpenBSD does not allow specifying alternate fstab files with mount so do not use this on OpenBSD with any state that operates on the live filesystem.",
                        "This parameter defaults to /etc/fstab or /etc/vfstab on Solaris."
                    ],
                    "type": "str"
                },
                "fstype": {
                    "description": [
                        "Filesystem type.",
                        "Required when I(state) is C(present) or C(mounted)."
                    ],
                    "type": "str"
                },
                "opts": {
                    "description": [
                        "Mount options (see fstab(5), or vfstab(4) on Solaris)."
                    ],
                    "type": "str"
                },
                "passno": {
                    "default": 0,
                    "description": [
                        "Passno (see fstab(5)).",
                        "Note that if set to C(null) and I(state) set to C(present), it will cease to work and duplicate entries will be made with subsequent runs.",
                        "Deprecated on Solaris systems."
                    ],
                    "type": "str"
                },
                "path": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Path to the mount point (e.g. C(/mnt/files)).",
                        "Before Ansible 2.3 this option was only usable as I(dest), I(destfile) and I(name)."
                    ],
                    "required": true,
                    "type": "path"
                },
                "src": {
                    "description": [
                        "Device (or NFS volume, or something else) to be mounted on I(path).",
                        "Required when I(state) set to C(present) or C(mounted)."
                    ],
                    "type": "path"
                },
                "state": {
                    "choices": [
                        "absent",
                        "mounted",
                        "present",
                        "unmounted",
                        "remounted"
                    ],
                    "description": [
                        "If C(mounted), the device will be actively mounted and appropriately configured in I(fstab). If the mount point is not present, the mount point will be created.",
                        "If C(unmounted), the device will be unmounted without changing I(fstab).",
                        "C(present) only specifies that the device is to be configured in I(fstab) and does not trigger or require a mount.",
                        "C(absent) specifies that the device mount's entry will be removed from I(fstab) and will also unmount the device and remove the mount point.",
                        "C(remounted) specifies that the device will be remounted for when you want to force a refresh on the mount itself (added in 2.9). This will always return changed=true. If I(opts) is set, the options will be applied to the remount, but will not change I(fstab).  Additionally, if I(opts) is set, and the remount command fails, the module will error to prevent unexpected mount changes.  Try using C(mounted) instead to work around this issue."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "short_description": "Control active and configured mount points",
            "version_added": "1.0.0",
            "version_added_collection": "ansible.posix"
        },
        "examples": "\n# Before 2.3, option 'name' was used instead of 'path'\n- name: Mount DVD read-only\n  ansible.posix.mount:\n    path: /mnt/dvd\n    src: /dev/sr0\n    fstype: iso9660\n    opts: ro,noauto\n    state: present\n\n- name: Mount up device by label\n  ansible.posix.mount:\n    path: /srv/disk\n    src: LABEL=SOME_LABEL\n    fstype: ext4\n    state: present\n\n- name: Mount up device by UUID\n  ansible.posix.mount:\n    path: /home\n    src: UUID=b3e48f45-f933-4c8e-a700-22a159ec9077\n    fstype: xfs\n    opts: noatime\n    state: present\n\n- name: Unmount a mounted volume\n  ansible.posix.mount:\n    path: /tmp/mnt-pnt\n    state: unmounted\n\n- name: Remount a mounted volume\n  ansible.posix.mount:\n    path: /tmp/mnt-pnt\n    state: remounted\n\n# The following will not save changes to fstab, and only be temporary until\n# a reboot, or until calling \"state: unmounted\" followed by \"state: mounted\"\n# on the same \"path\"\n- name: Remount a mounted volume and append exec to the existing options\n  ansible.posix.mount:\n    path: /tmp\n    state: remounted\n    opts: exec\n\n- name: Mount and bind a volume\n  ansible.posix.mount:\n    path: /system/new_volume/boot\n    src: /boot\n    opts: bind\n    state: mounted\n    fstype: none\n\n- name: Mount an NFS volume\n  ansible.posix.mount:\n    src: 192.168.1.100:/nfs/ssd/shared_data\n    path: /mnt/shared_data\n    opts: rw,sync,hard,intr\n    state: mounted\n    fstype: nfs\n",
        "metadata": null,
        "return": null
    }
}
