{
    "community.network.avi_httppolicyset": {
        "doc": {
            "author": "Gaurav Rastogi (@grastogi23) <grastogi@avinetworks.com>",
            "collection": "community.network",
            "description": [
                "This module is used to configure HTTPPolicySet object",
                "more examples at U(https://github.com/avinetworks/devops)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/avi_httppolicyset.py",
            "has_action": false,
            "module": "avi_httppolicyset",
            "notes": [
                "For more information on using Ansible to manage Avi Network devices see U(https://www.ansible.com/ansible-avi-networks)."
            ],
            "options": {
                "api_context": {
                    "description": [
                        "Avi API context that includes current session ID and CSRF Token.",
                        "This allows user to perform single login and re-use the session."
                    ],
                    "type": "dict"
                },
                "api_version": {
                    "default": "16.4.4",
                    "description": [
                        "Avi API version of to use for Avi API and objects."
                    ],
                    "type": "str"
                },
                "avi_api_patch_op": {
                    "choices": [
                        "add",
                        "replace",
                        "delete"
                    ],
                    "description": [
                        "Patch operation to use when using avi_api_update_method as patch."
                    ]
                },
                "avi_api_update_method": {
                    "choices": [
                        "put",
                        "patch"
                    ],
                    "default": "put",
                    "description": [
                        "Default method for object update is HTTP PUT.",
                        "Setting to patch will override that behavior to use HTTP PATCH."
                    ]
                },
                "avi_credentials": {
                    "description": [
                        "Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details."
                    ],
                    "suboptions": {
                        "api_version": {
                            "default": "16.4.4",
                            "description": [
                                "Avi controller version"
                            ]
                        },
                        "controller": {
                            "description": [
                                "Avi controller IP or SQDN"
                            ]
                        },
                        "csrftoken": {
                            "description": [
                                "Avi controller API csrftoken to reuse existing session with session id"
                            ]
                        },
                        "password": {
                            "description": [
                                "Avi controller password"
                            ]
                        },
                        "port": {
                            "description": [
                                "Avi controller port"
                            ]
                        },
                        "session_id": {
                            "description": [
                                "Avi controller API session id to reuse existing session with csrftoken"
                            ]
                        },
                        "tenant": {
                            "default": "admin",
                            "description": [
                                "Avi controller tenant"
                            ]
                        },
                        "tenant_uuid": {
                            "description": [
                                "Avi controller tenant UUID"
                            ]
                        },
                        "timeout": {
                            "default": 300,
                            "description": [
                                "Avi controller request timeout"
                            ]
                        },
                        "token": {
                            "description": [
                                "Avi controller API token"
                            ]
                        },
                        "username": {
                            "description": [
                                "Avi controller username"
                            ]
                        }
                    },
                    "type": "dict"
                },
                "avi_disable_session_cache_as_fact": {
                    "default": false,
                    "description": [
                        "It disables avi session information to be cached as a fact."
                    ],
                    "type": "bool"
                },
                "cloud_config_cksum": {
                    "description": [
                        "Checksum of cloud configuration for pool.",
                        "Internally set by cloud connector."
                    ]
                },
                "controller": {
                    "default": "",
                    "description": [
                        "IP address or hostname of the controller. The default value is the environment variable C(AVI_CONTROLLER)."
                    ],
                    "type": "str"
                },
                "created_by": {
                    "description": [
                        "Creator name."
                    ]
                },
                "description": {
                    "description": [
                        "User defined description for the object."
                    ]
                },
                "http_request_policy": {
                    "description": [
                        "Http request policy for the virtual service."
                    ]
                },
                "http_response_policy": {
                    "description": [
                        "Http response policy for the virtual service."
                    ]
                },
                "http_security_policy": {
                    "description": [
                        "Http security policy for the virtual service."
                    ]
                },
                "is_internal_policy": {
                    "description": [
                        "Boolean flag to set is_internal_policy.",
                        "Default value when not specified in API or module is interpreted by Avi Controller as False."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name of the http policy set."
                    ],
                    "required": true
                },
                "password": {
                    "default": "",
                    "description": [
                        "Password of Avi user in Avi controller. The default value is the environment variable C(AVI_PASSWORD)."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "The state that should be applied on the entity."
                    ]
                },
                "tenant": {
                    "default": "admin",
                    "description": [
                        "Name of tenant used for all Avi API calls and context of object."
                    ],
                    "type": "str"
                },
                "tenant_ref": {
                    "description": [
                        "It is a reference to an object of type tenant."
                    ]
                },
                "tenant_uuid": {
                    "default": "",
                    "description": [
                        "UUID of tenant used for all Avi API calls and context of object."
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "Avi controller URL of the object."
                    ]
                },
                "username": {
                    "default": "",
                    "description": [
                        "Username used for accessing Avi controller. The default value is the environment variable C(AVI_USERNAME)."
                    ],
                    "type": "str"
                },
                "uuid": {
                    "description": [
                        "Uuid of the http policy set."
                    ]
                }
            },
            "requirements": [
                "avisdk"
            ],
            "short_description": "Module for setup of HTTPPolicySet Avi RESTful Object"
        },
        "examples": "\n- name: Create a HTTP Policy set two switch between testpool1 and testpool2\n  community.network.avi_httppolicyset:\n    controller: 10.10.27.90\n    username: admin\n    password: AviNetworks123!\n    name: test-HTTP-Policy-Set\n    tenant_ref: admin\n    http_request_policy:\n    rules:\n      - index: 1\n        enable: true\n        name: test-test1\n        match:\n          path:\n            match_case: INSENSITIVE\n            match_str:\n              - /test1\n            match_criteria: EQUALS\n        switching_action:\n          action: HTTP_SWITCHING_SELECT_POOL\n          status_code: HTTP_LOCAL_RESPONSE_STATUS_CODE_200\n          pool_ref: \"/api/pool?name=testpool1\"\n      - index: 2\n        enable: true\n        name: test-test2\n        match:\n          path:\n            match_case: INSENSITIVE\n            match_str:\n              - /test2\n            match_criteria: CONTAINS\n        switching_action:\n          action: HTTP_SWITCHING_SELECT_POOL\n          status_code: HTTP_LOCAL_RESPONSE_STATUS_CODE_200\n          pool_ref: \"/api/pool?name=testpool2\"\n    is_internal_policy: false\n",
        "metadata": null,
        "return": {
            "obj": {
                "description": "HTTPPolicySet (api/httppolicyset) object",
                "returned": "success, changed",
                "type": "dict"
            }
        }
    }
}
