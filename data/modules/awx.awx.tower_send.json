{
    "awx.awx.tower_send": {
        "doc": {
            "author": "John Westcott IV (@john-westcott-iv)",
            "collection": "awx.awx",
            "deprecated": {
                "alternative": "Once published, use M(tower_import) instead.",
                "removed_from_collection": "awx.awx",
                "removed_in": "14.0.0",
                "why": "Deprecated in favor of upcoming C(_import) module."
            },
            "description": [
                "Send assets to Ansible Tower. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_send.py",
            "has_action": false,
            "module": "tower_send",
            "notes": [
                "One of assets or files needs to be passed in",
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "assets": {
                    "description": [
                        "The assets to import.",
                        "This can be the output of tower_receive or loaded from a file"
                    ],
                    "type": "str"
                },
                "files": {
                    "default": [],
                    "description": [
                        "List of files to import."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "password_management": {
                    "choices": [
                        "default",
                        "random"
                    ],
                    "default": "default",
                    "description": [
                        "The password management option to use.",
                        "The prompt option is not supported."
                    ],
                    "type": "str"
                },
                "prevent": {
                    "default": [],
                    "description": [
                        "A list of asset types to prevent import for"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "ansible-tower-cli >= 3.3.0",
                "six.moves.StringIO",
                "sys"
            ],
            "short_description": "Send assets to Ansible Tower."
        },
        "examples": "\n- name: Import all tower assets\n  tower_send:\n    assets: \"{{ export_output.assets }}\"\n    tower_config_file: \"~/tower_cli.cfg\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "deprecated"
            ],
            "supported_by": "community"
        },
        "return": {
            "output": {
                "description": "The import messages",
                "returned": "success, fail",
                "sample": [
                    "Message 1",
                    "Message 2"
                ],
                "type": "list"
            }
        }
    }
}
