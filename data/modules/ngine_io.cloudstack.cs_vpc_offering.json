{
    "ngine_io.cloudstack.cs_vpc_offering": {
        "doc": {
            "author": "David Passante (@dpassante)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Create, update, enable, disable and remove CloudStack VPC offerings."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_vpc_offering.py",
            "has_action": false,
            "module": "cs_vpc_offering",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "display_text": {
                    "description": [
                        "Display text of the vpc offerings"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the vpc offering"
                    ],
                    "required": true,
                    "type": "str"
                },
                "poll_async": {
                    "default": true,
                    "description": [
                        "Poll async jobs until job has finished."
                    ],
                    "type": "bool"
                },
                "service_capabilities": {
                    "aliases": [
                        "service_capability"
                    ],
                    "description": [
                        "Desired service capabilities as part of vpc offering."
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "service_offering": {
                    "description": [
                        "The name or ID of the service offering for the VPC router appliance."
                    ],
                    "type": "str"
                },
                "service_providers": {
                    "aliases": [
                        "service_provider"
                    ],
                    "description": [
                        "provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network"
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "enabled",
                        "present",
                        "disabled",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the vpc offering."
                    ],
                    "type": "str"
                },
                "supported_services": {
                    "aliases": [
                        "supported_service"
                    ],
                    "description": [
                        "Services supported by the vpc offering"
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Manages vpc offerings on Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: Create a vpc offering and enable it\n  ngine_io.cloudstack.cs_vpc_offering:\n    name: my_vpc_offering\n    display_text: vpc offering description\n    state: enabled\n    supported_services: [ Dns, Dhcp ]\n    service_providers:\n      - {service: 'dns', provider: 'VpcVirtualRouter'}\n      - {service: 'dhcp', provider: 'VpcVirtualRouter'}\n\n- name: Create a vpc offering with redundant router\n  ngine_io.cloudstack.cs_vpc_offering:\n    name: my_vpc_offering\n    display_text: vpc offering description\n    supported_services: [ Dns, Dhcp, SourceNat ]\n    service_providers:\n      - {service: 'dns', provider: 'VpcVirtualRouter'}\n      - {service: 'dhcp', provider: 'VpcVirtualRouter'}\n      - {service: 'SourceNat', provider: 'VpcVirtualRouter'}\n    service_capabilities:\n      - {service: 'SourceNat', capabilitytype: 'RedundantRouter', capabilityvalue: true}\n\n- name: Create a region level vpc offering with distributed router\n  ngine_io.cloudstack.cs_vpc_offering:\n    name: my_vpc_offering\n    display_text: vpc offering description\n    state: present\n    supported_services: [ Dns, Dhcp, SourceNat ]\n    service_providers:\n      - {service: 'dns', provider: 'VpcVirtualRouter'}\n      - {service: 'dhcp', provider: 'VpcVirtualRouter'}\n      - {service: 'SourceNat', provider: 'VpcVirtualRouter'}\n    service_capabilities:\n      - {service: 'Connectivity', capabilitytype: 'DistributedRouter', capabilityvalue: true}\n      - {service: 'Connectivity', capabilitytype: 'RegionLevelVPC', capabilityvalue: true}\n\n- name: Remove a vpc offering\n  ngine_io.cloudstack.cs_vpc_offering:\n    name: my_vpc_offering\n    state: absent\n",
        "metadata": null,
        "return": {
            "display_text": {
                "description": "The display text of the vpc offering",
                "returned": "success",
                "sample": "My vpc offering",
                "type": "str"
            },
            "distributed": {
                "description": "Indicates if the vpc offering supports distributed router for one-hop forwarding.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "id": {
                "description": "UUID of the vpc offering.",
                "returned": "success",
                "sample": "a6f7a5fc-43f8-11e5-a151-feff819cdc9f",
                "type": "str"
            },
            "is_default": {
                "description": "Whether VPC offering is the default offering or not.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "name": {
                "description": "The name of the vpc offering",
                "returned": "success",
                "sample": "MyCustomVPCOffering",
                "type": "str"
            },
            "region_level": {
                "description": "Indicated if the offering can support region level vpc.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "service_offering_id": {
                "description": "The service offering ID.",
                "returned": "success",
                "sample": "c5f7a5fc-43f8-11e5-a151-feff819cdc9f",
                "type": "str"
            },
            "state": {
                "description": "The state of the vpc offering",
                "returned": "success",
                "sample": "Enabled",
                "type": "str"
            }
        }
    }
}
