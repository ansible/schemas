{
    "community.general.ipa_service": {
        "doc": {
            "author": "C\u00e9dric Parent (@cprh)",
            "collection": "community.general",
            "description": [
                "Add and delete an IPA service using IPA API."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/ipa_service.py",
            "has_action": false,
            "module": "ipa_service",
            "options": {
                "force": {
                    "description": [
                        "Force principal name even if host is not in DNS."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "hosts": {
                    "description": [
                        "Defines the list of 'ManagedBy' hosts."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "ipa_host": {
                    "default": "ipa.example.com",
                    "description": [
                        "IP or hostname of IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_HOST) will be used instead.",
                        "If both the environment variable C(IPA_HOST) and the value are not specified in the task, then DNS will be used to try to discover the FreeIPA server.",
                        "The relevant entry needed in FreeIPA is the 'ipa-ca' entry.",
                        "If neither the DNS entry, nor the environment C(IPA_HOST), nor the value are available in the task, then the default value will be used.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_pass": {
                    "description": [
                        "Password of administrative user.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PASS) will be used instead.",
                        "Note that if the 'urllib_gssapi' library is available, it is possible to use GSSAPI to authenticate to FreeIPA.",
                        "If the environment variable C(KRB5CCNAME) is available, the module will use this kerberos credentials cache to authenticate to the FreeIPA server.",
                        "If the environment variable C(KRB5_CLIENT_KTNAME) is available, and C(KRB5CCNAME) is not; the module will use this kerberos keytab to authenticate.",
                        "If GSSAPI is not available, the usage of 'ipa_pass' is required.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_port": {
                    "default": 443,
                    "description": [
                        "Port of FreeIPA / IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PORT) will be used instead.",
                        "If both the environment variable C(IPA_PORT) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "int"
                },
                "ipa_prot": {
                    "choices": [
                        "http",
                        "https"
                    ],
                    "default": "https",
                    "description": [
                        "Protocol used by IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PROT) will be used instead.",
                        "If both the environment variable C(IPA_PROT) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_timeout": {
                    "default": 10,
                    "description": [
                        "Specifies idle timeout (in seconds) for the connection.",
                        "For bulk operations, you may want to increase this in order to avoid timeout from IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_TIMEOUT) will be used instead.",
                        "If both the environment variable C(IPA_TIMEOUT) and the value are not specified in the task, then default value is set."
                    ],
                    "type": "int"
                },
                "ipa_user": {
                    "default": "admin",
                    "description": [
                        "Administrative account used on IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_USER) will be used instead.",
                        "If both the environment variable C(IPA_USER) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "krbcanonicalname": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Principal of the service.",
                        "Can not be changed as it is the unique identifier."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": "State to ensure.",
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "This only applies if C(ipa_prot) is I(https).",
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage FreeIPA service"
        },
        "examples": "\n- name: Ensure service is present\n  community.general.ipa_service:\n    name: http/host01.example.com\n    state: present\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n\n- name: Ensure service is absent\n  community.general.ipa_service:\n    name: http/host01.example.com\n    state: absent\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n\n- name: Changing Managing hosts list\n  community.general.ipa_service:\n    name: http/host01.example.com\n    hosts:\n       - host01.example.com\n       - host02.example.com\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n",
        "metadata": null,
        "return": {
            "service": {
                "description": "Service as returned by IPA API.",
                "returned": "always",
                "type": "dict"
            }
        }
    }
}
