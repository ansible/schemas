{
    "awx.awx.tower_ad_hoc_command": {
        "doc": {
            "author": "John Westcott IV (@john-westcott-iv)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower ad hoc commands. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_ad_hoc_command.py",
            "has_action": false,
            "module": "tower_ad_hoc_command",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "become_enabled": {
                    "description": [
                        "If the become flag should be set."
                    ],
                    "type": "bool"
                },
                "credential": {
                    "description": [
                        "Credential to use for ad hoc command."
                    ],
                    "required": true,
                    "type": "str"
                },
                "diff_mode": {
                    "description": [
                        "Show the changes made by Ansible tasks where supported"
                    ],
                    "type": "bool"
                },
                "extra_vars": {
                    "description": [
                        "Extra variables to use for the ad hoc command.."
                    ],
                    "type": "dict"
                },
                "forks": {
                    "description": [
                        "The number of forks to use for this ad hoc execution."
                    ],
                    "type": "int"
                },
                "interval": {
                    "default": 1,
                    "description": [
                        "The interval to request an update from Tower."
                    ],
                    "type": "float"
                },
                "inventory": {
                    "description": [
                        "Inventory to use for the ad hoc command."
                    ],
                    "required": true,
                    "type": "str"
                },
                "job_type": {
                    "choices": [
                        "run",
                        "check"
                    ],
                    "description": [
                        "Job_type to use for the ad hoc command."
                    ],
                    "type": "str"
                },
                "limit": {
                    "description": [
                        "Limit to use for the ad hoc command."
                    ],
                    "type": "str"
                },
                "module_args": {
                    "default": "",
                    "description": [
                        "The arguments to pass to the module."
                    ],
                    "type": "str"
                },
                "module_name": {
                    "description": [
                        "The Ansible module to execute."
                    ],
                    "required": true,
                    "type": "str"
                },
                "timeout": {
                    "description": [
                        "If waiting for the command to complete this will abort after this amount of seconds"
                    ],
                    "type": "int"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "verbosity": {
                    "choices": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "description": [
                        "Verbosity level for this ad hoc command run"
                    ],
                    "type": "int"
                },
                "wait": {
                    "default": false,
                    "description": [
                        "Wait for the command to complete."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower ad hoc commands.",
            "version_added": "4.0",
            "version_added_collection": "awx.awx"
        },
        "examples": "\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "id": {
                "description": "id of the newly launched command",
                "returned": "success",
                "sample": 86,
                "type": "int"
            },
            "status": {
                "description": "status of newly launched command",
                "returned": "success",
                "sample": "pending",
                "type": "str"
            }
        }
    }
}
