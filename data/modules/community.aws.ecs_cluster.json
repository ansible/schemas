{
    "community.aws.ecs_cluster": {
        "doc": {
            "author": "Mark Chance (@Java1Guy)",
            "collection": "community.aws",
            "description": [
                "Creates or terminates ecs clusters."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ecs_cluster.py",
            "has_action": false,
            "module": "ecs_cluster",
            "notes": [
                "When deleting a cluster, the information returned is the state of the cluster prior to deletion.",
                "It will also wait for a cluster to have instances registered to it.",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "delay": {
                    "default": 10,
                    "description": [
                        "Number of seconds to wait."
                    ],
                    "required": false,
                    "type": "int"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The cluster name."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "repeat": {
                    "default": 10,
                    "description": [
                        "The number of times to wait for the cluster to have an instance."
                    ],
                    "required": false,
                    "type": "int"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "has_instances"
                    ],
                    "description": [
                        "The desired state of the cluster."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Create or terminate ECS clusters.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Cluster creation\n  community.aws.ecs_cluster:\n    name: default\n    state: present\n\n- name: Cluster deletion\n  community.aws.ecs_cluster:\n    name: default\n    state: absent\n\n- name: Wait for register\n  community.aws.ecs_cluster:\n    name: \"{{ new_cluster }}\"\n    state: has_instances\n    delay: 10\n    repeat: 10\n  register: task_output\n\n",
        "metadata": null,
        "return": {
            "activeServicesCount": {
                "description": "how many services are active in this cluster",
                "returned": "0 if a new cluster",
                "type": "int"
            },
            "clusterArn": {
                "description": "the ARN of the cluster just created",
                "returned": "0 if a new cluster",
                "sample": "arn:aws:ecs:us-west-2:172139249013:cluster/test-cluster-mfshcdok",
                "type": "str"
            },
            "clusterName": {
                "description": "name of the cluster just created (should match the input argument)",
                "returned": "always",
                "sample": "test-cluster-mfshcdok",
                "type": "str"
            },
            "pendingTasksCount": {
                "description": "how many tasks are waiting to run in this cluster",
                "returned": "0 if a new cluster",
                "type": "int"
            },
            "registeredContainerInstancesCount": {
                "description": "how many container instances are available in this cluster",
                "returned": "0 if a new cluster",
                "type": "int"
            },
            "runningTasksCount": {
                "description": "how many tasks are running in this cluster",
                "returned": "0 if a new cluster",
                "type": "int"
            },
            "status": {
                "description": "the status of the new cluster",
                "returned": "always",
                "sample": "ACTIVE",
                "type": "str"
            }
        }
    }
}
