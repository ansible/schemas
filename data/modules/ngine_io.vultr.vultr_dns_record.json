{
    "ngine_io.vultr.vultr_dns_record": {
        "doc": {
            "author": "Ren\u00e9 Moser (@resmo)",
            "collection": "ngine_io.vultr",
            "description": [
                "Create, update and remove DNS records."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/vultr/plugins/modules/vultr_dns_record.py",
            "has_action": false,
            "module": "vultr_dns_record",
            "notes": [
                "Also see the API documentation on https://www.vultr.com/api/."
            ],
            "options": {
                "api_account": {
                    "default": "default",
                    "description": [
                        "Name of the ini section in the C(vultr.ini) file.",
                        "The ENV variable C(VULTR_API_ACCOUNT) is used as default, when defined."
                    ],
                    "type": "str"
                },
                "api_endpoint": {
                    "description": [
                        "URL to API endpint (without trailing slash).",
                        "The ENV variable C(VULTR_API_ENDPOINT) is used as default, when defined.",
                        "Fallback value is U(https://api.vultr.com) if not specified."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the Vultr API.",
                        "The ENV variable C(VULTR_API_KEY) is used as default, when defined."
                    ],
                    "type": "str"
                },
                "api_retries": {
                    "description": [
                        "Amount of retries in case of the Vultr API retuns an HTTP 503 code.",
                        "The ENV variable C(VULTR_API_RETRIES) is used as default, when defined.",
                        "Fallback value is 5 retries if not specified."
                    ],
                    "type": "int"
                },
                "api_retry_max_delay": {
                    "description": [
                        "Retry backoff delay in seconds is exponential up to this max. value, in seconds.",
                        "The ENV variable C(VULTR_API_RETRY_MAX_DELAY) is used as default, when defined.",
                        "Fallback value is 12 seconds."
                    ],
                    "type": "int"
                },
                "api_timeout": {
                    "description": [
                        "HTTP timeout to Vultr API.",
                        "The ENV variable C(VULTR_API_TIMEOUT) is used as default, when defined.",
                        "Fallback value is 60 seconds if not specified."
                    ],
                    "type": "int"
                },
                "data": {
                    "description": [
                        "Data of the record.",
                        "Required if C(state=present) or C(multiple=yes)."
                    ],
                    "type": "str"
                },
                "domain": {
                    "description": [
                        "The domain the record is related to."
                    ],
                    "required": true,
                    "type": "str"
                },
                "multiple": {
                    "default": false,
                    "description": [
                        "Whether to use more than one record with similar C(name) including no name and C(record_type).",
                        "Only allowed for a few record types, e.g. C(record_type=A), C(record_type=NS) or C(record_type=MX).",
                        "C(data) will not be updated, instead it is used as a key to find existing records."
                    ],
                    "type": "bool"
                },
                "name": {
                    "aliases": [
                        "subrecord"
                    ],
                    "default": "",
                    "description": [
                        "The record name (subrecord)."
                    ],
                    "type": "str"
                },
                "priority": {
                    "default": 0,
                    "description": [
                        "Priority of the record."
                    ],
                    "type": "int"
                },
                "record_type": {
                    "aliases": [
                        "type"
                    ],
                    "choices": [
                        "A",
                        "AAAA",
                        "CNAME",
                        "MX",
                        "SRV",
                        "CAA",
                        "TXT",
                        "NS",
                        "SSHFP"
                    ],
                    "default": "A",
                    "description": [
                        "Type of the record."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the DNS record."
                    ],
                    "type": "str"
                },
                "ttl": {
                    "default": 300,
                    "description": [
                        "TTL of the record."
                    ],
                    "type": "int"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Validate SSL certs of the Vultr API."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6"
            ],
            "short_description": "Manages DNS records on Vultr.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.vultr"
        },
        "examples": "\n- name: Ensure an A record exists\n  ngine_io.vultr.vultr_dns_record:\n    name: www\n    domain: example.com\n    data: 10.10.10.10\n    ttl: 3600\n\n- name: Ensure a second A record exists for round robin LB\n  ngine_io.vultr.vultr_dns_record:\n    name: www\n    domain: example.com\n    data: 10.10.10.11\n    ttl: 60\n    multiple: yes\n\n- name: Ensure a CNAME record exists\n  ngine_io.vultr.vultr_dns_record:\n    name: web\n    record_type: CNAME\n    domain: example.com\n    data: www.example.com\n\n- name: Ensure MX record exists\n  ngine_io.vultr.vultr_dns_record:\n    record_type: MX\n    domain: example.com\n    data: \"{{ item.data }}\"\n    priority: \"{{ item.priority }}\"\n    multiple: yes\n  with_items:\n  - { data: mx1.example.com, priority: 10 }\n  - { data: mx2.example.com, priority: 10 }\n  - { data: mx3.example.com, priority: 20 }\n\n- name: Ensure a record is absent\n  ngine_io.vultr.vultr_dns_record:\n    name: www\n    domain: example.com\n    state: absent\n\n- name: Ensure MX record is absent in case multiple exists\n  ngine_io.vultr.vultr_dns_record:\n    record_type: MX\n    domain: example.com\n    data: mx1.example.com\n    multiple: yes\n    state: absent\n",
        "metadata": null,
        "return": {
            "vultr_api": {
                "contains": {
                    "api_account": {
                        "description": "Account used in the ini file to select the key",
                        "returned": "success",
                        "sample": "default",
                        "type": "str"
                    },
                    "api_endpoint": {
                        "description": "Endpoint used for the API requests",
                        "returned": "success",
                        "sample": "https://api.vultr.com",
                        "type": "str"
                    },
                    "api_retries": {
                        "description": "Amount of max retries for the API requests",
                        "returned": "success",
                        "sample": 5,
                        "type": "int"
                    },
                    "api_retry_max_delay": {
                        "description": "Exponential backoff delay in seconds between retries up to this max delay value.",
                        "returned": "success",
                        "sample": 12,
                        "type": "int"
                    },
                    "api_timeout": {
                        "description": "Timeout used for the API requests",
                        "returned": "success",
                        "sample": 60,
                        "type": "int"
                    }
                },
                "description": "Response from Vultr API with a few additions/modification",
                "returned": "success",
                "type": "complex"
            },
            "vultr_dns_record": {
                "contains": {
                    "data": {
                        "description": "Data of the DNS record.",
                        "returned": "success",
                        "sample": "10.10.10.10",
                        "type": "str"
                    },
                    "domain": {
                        "description": "Domain the DNS record is related to.",
                        "returned": "success",
                        "sample": "example.com",
                        "type": "str"
                    },
                    "id": {
                        "description": "The ID of the DNS record.",
                        "returned": "success",
                        "sample": 1265277,
                        "type": "int"
                    },
                    "name": {
                        "description": "The name of the DNS record.",
                        "returned": "success",
                        "sample": "web",
                        "type": "str"
                    },
                    "priority": {
                        "description": "Priority of the DNS record.",
                        "returned": "success",
                        "sample": 10,
                        "type": "int"
                    },
                    "record_type": {
                        "description": "The name of the DNS record.",
                        "returned": "success",
                        "sample": "web",
                        "type": "str"
                    },
                    "ttl": {
                        "description": "Time to live of the DNS record.",
                        "returned": "success",
                        "sample": 300,
                        "type": "int"
                    }
                },
                "description": "Response from Vultr API",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
