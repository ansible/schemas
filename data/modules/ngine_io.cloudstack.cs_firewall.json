{
    "ngine_io.cloudstack.cs_firewall": {
        "doc": {
            "author": "Ren\u00e9 Moser (@resmo)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Creates and removes firewall rules."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_firewall.py",
            "has_action": false,
            "module": "cs_firewall",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "account": {
                    "description": [
                        "Account the firewall rule is related to."
                    ],
                    "type": "str"
                },
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "cidrs": {
                    "aliases": [
                        "cidr"
                    ],
                    "default": "0.0.0.0/0",
                    "description": [
                        "List of CIDRs (full notation) to be used for firewall rule.",
                        "Since version 2.5, it is a list of CIDR."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "domain": {
                    "description": [
                        "Domain the firewall rule is related to."
                    ],
                    "type": "str"
                },
                "end_port": {
                    "description": [
                        "End port for this rule. Considered if I(protocol=tcp) or I(protocol=udp).",
                        "If not specified, equal I(start_port)."
                    ],
                    "type": "int"
                },
                "icmp_code": {
                    "description": [
                        "Error code for this icmp message.",
                        "Considered if I(protocol=icmp)."
                    ],
                    "type": "int"
                },
                "icmp_type": {
                    "description": [
                        "Type of the icmp message being sent.",
                        "Considered if I(protocol=icmp)."
                    ],
                    "type": "int"
                },
                "ip_address": {
                    "description": [
                        "Public IP address the ingress rule is assigned to.",
                        "Required if I(type=ingress)."
                    ],
                    "type": "str"
                },
                "network": {
                    "description": [
                        "Network the egress rule is related to.",
                        "Required if I(type=egress)."
                    ],
                    "type": "str"
                },
                "poll_async": {
                    "default": true,
                    "description": [
                        "Poll async jobs until job has finished."
                    ],
                    "type": "bool"
                },
                "project": {
                    "description": [
                        "Name of the project the firewall rule is related to."
                    ],
                    "type": "str"
                },
                "protocol": {
                    "choices": [
                        "tcp",
                        "udp",
                        "icmp",
                        "all"
                    ],
                    "default": "tcp",
                    "description": [
                        "Protocol of the firewall rule.",
                        "C(all) is only available if I(type=egress)."
                    ],
                    "type": "str"
                },
                "start_port": {
                    "aliases": [
                        "port"
                    ],
                    "description": [
                        "Start port for this rule.",
                        "Considered if I(protocol=tcp) or I(protocol=udp)."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the firewall rule."
                    ],
                    "type": "str"
                },
                "tags": {
                    "aliases": [
                        "tag"
                    ],
                    "description": [
                        "List of tags. Tags are a list of dictionaries having keys I(key) and I(value).",
                        "To delete all tags, set an empty list e.g. I(tags: [])."
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "type": {
                    "choices": [
                        "ingress",
                        "egress"
                    ],
                    "default": "ingress",
                    "description": [
                        "Type of the firewall rule."
                    ],
                    "type": "str"
                },
                "zone": {
                    "description": [
                        "Name of the zone in which the virtual machine is in."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Manages firewall rules on Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: Allow inbound port 80/tcp from 1.2.3.4 to 4.3.2.1\n  ngine_io.cloudstack.cs_firewall:\n    ip_address: 4.3.2.1\n    zone: zone01\n    port: 80\n    cidr: 1.2.3.4/32\n\n- name: Allow inbound tcp/udp port 53 to 4.3.2.1\n  ngine_io.cloudstack.cs_firewall:\n    ip_address: 4.3.2.1\n    zone: zone01\n    port: 53\n    protocol: '{{ item }}'\n  with_items:\n  - tcp\n  - udp\n\n- name: Ensure firewall rule is removed\n  ngine_io.cloudstack.cs_firewall:\n    ip_address: 4.3.2.1\n    zone: zone01\n    start_port: 8000\n    end_port: 8888\n    cidr: 17.0.0.0/8\n    state: absent\n\n- name: Allow all outbound traffic\n  ngine_io.cloudstack.cs_firewall:\n    network: my_network\n    zone: zone01\n    type: egress\n    protocol: all\n\n- name: Allow only HTTP outbound traffic for an IP\n  ngine_io.cloudstack.cs_firewall:\n    network: my_network\n    zone: zone01\n    type: egress\n    port: 80\n    cidr: 10.101.1.20\n",
        "metadata": null,
        "return": {
            "cidr": {
                "description": "CIDR string of the rule.",
                "returned": "success",
                "sample": "0.0.0.0/0",
                "type": "str"
            },
            "cidrs": {
                "description": "CIDR list of the rule.",
                "returned": "success",
                "sample": [
                    "0.0.0.0/0"
                ],
                "type": "list"
            },
            "end_port": {
                "description": "End port of the rule.",
                "returned": "success",
                "sample": 80,
                "type": "int"
            },
            "icmp_code": {
                "description": "ICMP code of the rule.",
                "returned": "success",
                "sample": 1,
                "type": "int"
            },
            "icmp_type": {
                "description": "ICMP type of the rule.",
                "returned": "success",
                "sample": 1,
                "type": "int"
            },
            "id": {
                "description": "UUID of the rule.",
                "returned": "success",
                "sample": "04589590-ac63-4ffc-93f5-b698b8ac38b6",
                "type": "str"
            },
            "ip_address": {
                "description": "IP address of the rule if C(type=ingress)",
                "returned": "success",
                "sample": "10.100.212.10",
                "type": "str"
            },
            "network": {
                "description": "Name of the network if C(type=egress)",
                "returned": "success",
                "sample": "my_network",
                "type": "str"
            },
            "protocol": {
                "description": "Protocol of the rule.",
                "returned": "success",
                "sample": "tcp",
                "type": "str"
            },
            "start_port": {
                "description": "Start port of the rule.",
                "returned": "success",
                "sample": 80,
                "type": "int"
            },
            "type": {
                "description": "Type of the rule.",
                "returned": "success",
                "sample": "ingress",
                "type": "str"
            }
        }
    }
}
