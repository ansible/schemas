{
    "netbox.netbox.netbox_ip_address": {
        "doc": {
            "author": [
                "Mikhail Yohman (@FragmentedPacket)",
                "Anthony Ruhier (@Anthony25)"
            ],
            "collection": "netbox.netbox",
            "description": [
                "Creates or removes IP addresses from Netbox"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netbox/netbox/plugins/modules/netbox_ip_address.py",
            "has_action": false,
            "module": "netbox_ip_address",
            "notes": [
                "Tags should be defined as a YAML list",
                "This should be ran with connection C(local) and hosts C(localhost)"
            ],
            "options": {
                "data": {
                    "description": [
                        "Defines the IP address configuration"
                    ],
                    "required": true,
                    "suboptions": {
                        "address": {
                            "description": [
                                "Required if state is C(present)"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "assigned_object": {
                            "description": [
                                "Definition of the assigned object."
                            ],
                            "required": false,
                            "suboptions": {
                                "device": {
                                    "description": [
                                        "The device the interface is attached to."
                                    ],
                                    "required": false,
                                    "type": "str"
                                },
                                "name": {
                                    "description": [
                                        "The name of the interface"
                                    ],
                                    "required": false,
                                    "type": "str"
                                },
                                "virtual_machine": {
                                    "description": [
                                        "The virtual machine the interface is attached to."
                                    ],
                                    "required": false,
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "custom_fields": {
                            "description": [
                                "must exist in Netbox"
                            ],
                            "required": false,
                            "type": "dict"
                        },
                        "description": {
                            "description": [
                                "The description of the interface"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "dns_name": {
                            "description": [
                                "Hostname or FQDN"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "family": {
                            "choices": [
                                4,
                                6
                            ],
                            "description": [
                                "(DEPRECATED) - NetBox now handles determining the IP family natively.",
                                "Specifies with address family the IP address belongs to"
                            ],
                            "required": false,
                            "type": "int"
                        },
                        "interface": {
                            "description": [
                                "The name and device of the interface that the IP address should be assigned to\nRequired if state is C(present) and a prefix specified.\n"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "nat_inside": {
                            "description": [
                                "The inside IP address this IP is assigned to"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "prefix": {
                            "description": [
                                "With state C(present), if an interface is given, it will ensure\nthat an IP inside this prefix (and vrf, if given) is attached\nto this interface. Otherwise, it will get the next available IP\nof this prefix and attach it.\nWith state C(new), it will force to get the next available IP in\nthis prefix. If an interface is given, it will also force to attach\nit.\nRequired if state is C(present) or C(new) when no address is given.\nUnused if an address is specified.\n"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "role": {
                            "choices": [
                                "Loopback",
                                "Secondary",
                                "Anycast",
                                "VIP",
                                "VRRP",
                                "HSRP",
                                "GLBP",
                                "CARP"
                            ],
                            "description": [
                                "The role of the IP address"
                            ],
                            "required": false,
                            "type": "str"
                        },
                        "status": {
                            "description": [
                                "The status of the IP address"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "tags": {
                            "description": [
                                "Any tags that the IP address may need to be associated with"
                            ],
                            "required": false,
                            "type": "list"
                        },
                        "tenant": {
                            "description": [
                                "The tenant that the device will be assigned to"
                            ],
                            "required": false,
                            "type": "raw"
                        },
                        "vrf": {
                            "description": [
                                "VRF that IP address is associated with"
                            ],
                            "required": false,
                            "type": "raw"
                        }
                    },
                    "type": "dict"
                },
                "netbox_token": {
                    "description": [
                        "The token created within Netbox to authorize API access"
                    ],
                    "required": true,
                    "type": "str"
                },
                "netbox_url": {
                    "description": [
                        "URL of the Netbox instance resolvable by Ansible control host"
                    ],
                    "required": true,
                    "type": "str"
                },
                "query_params": {
                    "description": [
                        "This can be used to override the specified values in ALLOWED_QUERY_PARAMS that is defined",
                        "in plugins/module_utils/netbox_utils.py and provides control to users on what may make",
                        "an object unique in their environment."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "new",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Use C(present), C(new) or C(absent) for adding, force adding or removing.\nC(present) will check if the IP is already created, and return it if\ntrue. C(new) will force to create it anyway (useful for anycasts, for\nexample).\n"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "raw"
                }
            },
            "requirements": [
                "pynetbox"
            ],
            "short_description": "Creates or removes IP addresses from Netbox",
            "version_added": "0.1.0",
            "version_added_collection": "netbox.netbox"
        },
        "examples": "\n- name: \"Test Netbox IP address module\"\n  connection: local\n  hosts: localhost\n  gather_facts: False\n\n  tasks:\n    - name: Create IP address within Netbox with only required information\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          address: 192.168.1.10\n        state: present\n    - name: Force to create (even if it already exists) the IP\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          address: 192.168.1.10\n        state: new\n    - name: Get a new available IP inside 192.168.1.0/24\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          prefix: 192.168.1.0/24\n        state: new\n    - name: Delete IP address within netbox\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          address: 192.168.1.10\n        state: absent\n    - name: Create IP address with several specified options\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          family: 4\n          address: 192.168.1.20\n          vrf: Test\n          tenant: Test Tenant\n          status: Reserved\n          role: Loopback\n          description: Test description\n          tags:\n            - Schnozzberry\n        state: present\n    - name: Create IP address and assign a nat_inside IP\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          family: 4\n          address: 192.168.1.30\n          vrf: Test\n          nat_inside:\n            address: 192.168.1.20\n            vrf: Test\n          interface:\n            name: GigabitEthernet1\n            device: test100\n    - name: Ensure that an IP inside 192.168.1.0/24 is attached to GigabitEthernet1\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          prefix: 192.168.1.0/24\n          vrf: Test\n          interface:\n            name: GigabitEthernet1\n            device: test100\n        state: present\n    - name: Attach a new available IP of 192.168.1.0/24 to GigabitEthernet1\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          prefix: 192.168.1.0/24\n          vrf: Test\n          interface:\n            name: GigabitEthernet1\n            device: test100\n        state: new\n    - name: Attach a new available IP of 192.168.1.0/24 to GigabitEthernet1 (NetBox 2.9+)\n      netbox_ip_address:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          prefix: 192.168.1.0/24\n          vrf: Test\n          assigned_object:\n            name: GigabitEthernet1\n            device: test100\n        state: new\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "ip_address": {
                "description": "Serialized object as created or already existent within Netbox",
                "returned": "on creation",
                "type": "dict"
            },
            "msg": {
                "description": "Message indicating failure or info about what has been achieved",
                "returned": "always",
                "type": "str"
            }
        }
    }
}
