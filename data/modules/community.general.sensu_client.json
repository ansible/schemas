{
    "community.general.sensu_client": {
        "doc": {
            "author": "David Moreau Simard (@dmsimard)",
            "collection": "community.general",
            "description": [
                "Manages Sensu client configuration.",
                "For more information, refer to the Sensu documentation: U(https://sensuapp.org/docs/latest/reference/clients.html)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/sensu_client.py",
            "has_action": false,
            "module": "sensu_client",
            "notes": [
                "Check mode is supported"
            ],
            "options": {
                "address": {
                    "description": [
                        "An address to help identify and reach the client. This is only informational, usually an IP address or hostname.",
                        "If not specified it defaults to non-loopback IPv4 address as determined by Ruby Socket.ip_address_list (provided by Sensu)."
                    ],
                    "type": "str"
                },
                "chef": {
                    "description": [
                        "The chef definition scope, used to configure the Sensu Enterprise Chef integration (Sensu Enterprise users only)."
                    ],
                    "type": "dict"
                },
                "deregister": {
                    "description": [
                        "If a deregistration event should be created upon Sensu client process stop.",
                        "Default is C(false)."
                    ],
                    "type": "bool"
                },
                "deregistration": {
                    "description": [
                        "The deregistration definition scope, used to configure automated Sensu client de-registration."
                    ],
                    "type": "dict"
                },
                "ec2": {
                    "description": [
                        "The ec2 definition scope, used to configure the Sensu Enterprise AWS EC2 integration (Sensu Enterprise users only)."
                    ],
                    "type": "dict"
                },
                "keepalive": {
                    "description": [
                        "The keepalive definition scope, used to configure Sensu client keepalives behavior (e.g. keepalive thresholds, etc)."
                    ],
                    "type": "dict"
                },
                "keepalives": {
                    "default": "yes",
                    "description": [
                        "If Sensu should monitor keepalives for this client."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "A unique name for the client. The name cannot contain special characters or spaces.",
                        "If not specified, it defaults to the system hostname as determined by Ruby Socket.gethostname (provided by Sensu)."
                    ],
                    "type": "str"
                },
                "puppet": {
                    "description": [
                        "The puppet definition scope, used to configure the Sensu Enterprise Puppet integration (Sensu Enterprise users only)."
                    ],
                    "type": "dict"
                },
                "redact": {
                    "description": [
                        "Client definition attributes to redact (values) when logging and sending client keepalives."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "registration": {
                    "description": [
                        "The registration definition scope, used to configure Sensu registration event handlers."
                    ],
                    "type": "dict"
                },
                "safe_mode": {
                    "default": "no",
                    "description": [
                        "If safe mode is enabled for the client. Safe mode requires local check definitions in order to accept a check request and execute the check."
                    ],
                    "type": "bool"
                },
                "servicenow": {
                    "description": [
                        "The servicenow definition scope, used to configure the Sensu Enterprise ServiceNow integration (Sensu Enterprise users only)."
                    ],
                    "type": "dict"
                },
                "socket": {
                    "description": [
                        "The socket definition scope, used to configure the Sensu client socket."
                    ],
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the client should be present or not"
                    ],
                    "type": "str"
                },
                "subscriptions": {
                    "description": [
                        "An array of client subscriptions, a list of roles and/or responsibilities assigned to the system (e.g. webserver).",
                        "These subscriptions determine which monitoring checks are executed by the client, as check requests are sent to subscriptions.",
                        "The subscriptions array items must be strings."
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "short_description": "Manages Sensu client configuration"
        },
        "examples": "\n# Minimum possible configuration\n- name: Configure Sensu client\n  community.general.sensu_client:\n    subscriptions:\n      - default\n\n# With customization\n- name: Configure Sensu client\n  community.general.sensu_client:\n    name: \"{{ ansible_fqdn }}\"\n    address: \"{{ ansible_default_ipv4['address'] }}\"\n    subscriptions:\n      - default\n      - webserver\n    redact:\n      - password\n    socket:\n      bind: 127.0.0.1\n      port: 3030\n    keepalive:\n      thresholds:\n        warning: 180\n        critical: 300\n      handlers:\n        - email\n      custom:\n        - broadcast: irc\n      occurrences: 3\n  register: client\n  notify:\n    - Restart sensu-client\n\n- name: Secure Sensu client configuration file\n  ansible.builtin.file:\n    path: \"{{ client['file'] }}\"\n    owner: \"sensu\"\n    group: \"sensu\"\n    mode: \"0600\"\n\n- name: Delete the Sensu client configuration\n  community.general.sensu_client:\n    state: \"absent\"\n",
        "metadata": null,
        "return": {
            "config": {
                "description": "Effective client configuration, when state is present",
                "returned": "success",
                "sample": {
                    "name": "client",
                    "subscriptions": [
                        "default"
                    ]
                },
                "type": "dict"
            },
            "file": {
                "description": "Path to the client configuration file",
                "returned": "success",
                "sample": "/etc/sensu/conf.d/client.json",
                "type": "str"
            }
        }
    }
}
