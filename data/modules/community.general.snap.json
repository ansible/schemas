{
    "community.general.snap": {
        "doc": {
            "author": [
                "Victor Carceler (@vcarceler) <vcarceler@iespuigcastellar.xeill.net>",
                "Stanislas Lange (@angristan) <angristan@pm.me>"
            ],
            "collection": "community.general",
            "description": [
                "Manages snaps packages."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/snap.py",
            "has_action": false,
            "module": "snap",
            "options": {
                "channel": {
                    "default": "stable",
                    "description": [
                        "Define which release of a snap is installed and tracked for updates. This option can only be specified if there is a single snap in the task."
                    ],
                    "required": false,
                    "type": "str"
                },
                "classic": {
                    "default": false,
                    "description": [
                        "Confinement policy. The classic confinement allows a snap to have the same level of access to the system as \"classic\" packages, like those managed by APT. This option corresponds to the --classic argument. This option can only be specified if there is a single snap in the task."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name of the snap to install or remove. Can be a list of snaps."
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the package."
                    ],
                    "required": false,
                    "type": "str"
                }
            },
            "short_description": "Manages snaps"
        },
        "examples": "\n# Install \"foo\" and \"bar\" snap\n- name: Install foo\n  community.general.snap:\n    name:\n      - foo\n      - bar\n\n# Remove \"foo\" snap\n- name: Remove foo\n  community.general.snap:\n    name: foo\n    state: absent\n\n# Install a snap with classic confinement\n- name: Install \"foo\" with option --classic\n  community.general.snap:\n    name: foo\n    classic: yes\n\n# Install a snap with from a specific channel\n- name: Install \"foo\" with option --channel=latest/edge\n  community.general.snap:\n    name: foo\n    channel: latest/edge\n",
        "metadata": null,
        "return": {
            "channel": {
                "description": "The channel the snaps were installed from",
                "returned": "When snaps are installed",
                "type": "str"
            },
            "classic": {
                "description": "Whether or not the snaps were installed with the classic confinement",
                "returned": "When snaps are installed",
                "type": "bool"
            },
            "cmd": {
                "description": "The command that was executed on the host",
                "returned": "When changed is true",
                "type": "str"
            },
            "snaps_installed": {
                "description": "The list of actually installed snaps",
                "returned": "When any snaps have been installed",
                "type": "list"
            },
            "snaps_removed": {
                "description": "The list of actually removed snaps",
                "returned": "When any snaps have been removed",
                "type": "list"
            }
        }
    }
}
