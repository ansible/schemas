{
    "f5networks.f5_modules.bigip_imish_config": {
        "doc": {
            "author": [
                "Tim Rupp (@caphrim007)",
                "Wojciech Wypior (@wojtek0806)"
            ],
            "collection": "f5networks.f5_modules",
            "description": [
                "This module provides an implementation for working with advanced routing configuration sections in a deterministic way."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/f5networks/f5_modules/plugins/modules/bigip_imish_config.py",
            "has_action": true,
            "module": "bigip_imish_config",
            "notes": [
                "Abbreviated commands are NOT idempotent",
                "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).",
                "Requires BIG-IP software version >= 12.",
                "The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration."
            ],
            "options": {
                "after": {
                    "description": [
                        "The ordered set of commands to append to the end of the command stack if a change needs to be made.",
                        "Just like with I(before), this allows the playbook designer to append a set of commands to be executed after the command set."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "allow_duplicates": {
                    "default": false,
                    "description": [
                        "Allows duplicate commands to be sent to the device. This is to accommodate scenarios where address families are configured.",
                        "Only used with the C(lines) parameter."
                    ],
                    "type": "bool",
                    "version_added": "1.2.0",
                    "version_added_collection": "f5networks.f5_modules"
                },
                "backup": {
                    "default": false,
                    "description": [
                        "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made.",
                        "The backup file is written to the C(backup) folder in the playbook root directory or role root directory, if playbook is part of an Ansible role. If the directory does not exist, it is created."
                    ],
                    "type": "bool"
                },
                "backup_options": {
                    "description": [
                        "This is a dict object containing configurable options related to backup file path. The value of this option is read-only when C(backup) is set to I(yes). If C(backup) is set to I(no), this option will be silently ignored."
                    ],
                    "suboptions": {
                        "dir_path": {
                            "description": [
                                "This option provides the path ending with directory name in which the backup configuration file will be stored. If the directory does not exist, it will be first created and the filename is either the value of C(filename) or default filename as described in C(filename) options description. If the path value is not given, a I(backup) directory will be created in the current working directory and backup configuration will be copied in C(filename) within the I(backup) directory."
                            ],
                            "type": "path"
                        },
                        "filename": {
                            "description": [
                                "The filename to be used to store the backup configuration. If the filename is not given, it will be generated based on the hostname, current time and date in the format defined by <hostname>_config.<current-date>@<current-time>"
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "before": {
                    "description": [
                        "The ordered set of commands to push onto the command stack if a change needs to be made.",
                        "This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes, without affecting how the set of commands are matched against the system."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "diff_against": {
                    "choices": [
                        "startup",
                        "intended",
                        "running"
                    ],
                    "default": "startup",
                    "description": [
                        "When using the C(ansible-playbook --diff) command line argument, the module can generate diffs against different sources.",
                        "When this option is configured as I(startup), the module will return the diff of the running-config against the startup-config.",
                        "When this option is configured as I(intended), the module will return the diff of the running-config against the configuration provided in the C(intended_config) argument.",
                        "When this option is configured as I(running), the module will return the before and after diff of the running-config with respect to any changes made to the device configuration."
                    ],
                    "type": "str"
                },
                "diff_ignore_lines": {
                    "description": [
                        "Use this argument to specify one or more lines that should be ignored during the diff.",
                        "This is used for lines in the configuration that are automatically updated by the system.",
                        "This argument takes a list of regular expressions or exact line matches."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "intended_config": {
                    "description": [
                        "The C(intended_config) provides the master configuration the node should conform to and is used to check the final running-config against.",
                        "This argument will not modify any settings on the remote device and is strictly used to check the compliance of the current device's configuration against.",
                        "When specifying this argument, the task should also modify the C(diff_against) value and set it to I(intended)."
                    ],
                    "type": "str"
                },
                "lines": {
                    "aliases": [
                        "commands"
                    ],
                    "description": [
                        "The ordered set of commands that should be configured in the section.",
                        "The commands must be the exact same as those found in the device running-config.",
                        "Be sure to note the configuration command syntax, as some commands are automatically modified by the device config parser."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "match": {
                    "choices": [
                        "line",
                        "strict",
                        "exact",
                        "none"
                    ],
                    "default": "line",
                    "description": [
                        "Instructs the module on the way to perform the matching of the set of commands against the current device config.",
                        "If match is set to I(line), commands are matched line by line.",
                        "If match is set to I(strict), command lines are matched with respect to position.",
                        "If match is set to I(exact), command lines must be an equal match.",
                        "Finally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device."
                    ],
                    "type": "str"
                },
                "parents": {
                    "description": [
                        "The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.",
                        "If the C(parents) argument is omitted, the commands are checked against the set of top level or global commands."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_provider": {
                            "description": [
                                "Configures the auth provider for to obtain authentication tokens from the remote device.",
                                "This option is really used when working with BIG-IQ devices."
                            ],
                            "type": "str"
                        },
                        "no_f5_teem": {
                            "default": false,
                            "description": [
                                "If C(yes), TEEM telemetry data is not sent to F5.",
                                "You may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).",
                                "Previously used variable C(F5_TEEM) is deprecated as its name was confusing."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "aliases": [
                                "pass",
                                "pwd"
                            ],
                            "description": [
                                "The password for the user account used to connect to the BIG-IP.",
                                "You may omit this option by setting the environment variable C(F5_PASSWORD)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server": {
                            "description": [
                                "The BIG-IP host.",
                                "You may omit this option by setting the environment variable C(F5_SERVER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server_port": {
                            "default": 443,
                            "description": [
                                "The BIG-IP server port.",
                                "You may omit this option by setting the environment variable C(F5_SERVER_PORT)."
                            ],
                            "type": "int"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "rest"
                            ],
                            "default": "rest",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "description": [
                                "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.",
                                "You may omit this option by setting the environment variable C(F5_USER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": true,
                            "description": [
                                "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.",
                                "You may omit this option by setting the environment variable C(F5_VALIDATE_CERTS)."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict",
                    "version_added": "1.0.0",
                    "version_added_collection": "f5networks.f5_modules"
                },
                "replace": {
                    "choices": [
                        "line",
                        "block"
                    ],
                    "default": "line",
                    "description": [
                        "Instructs the module on the way to perform the configuration on the device.",
                        "If the replace argument is set to I(line), the modified lines are pushed to the device in configuration mode.",
                        "If the replace argument is set to I(block), the entire command block is pushed to the device in configuration mode if any line is not correct."
                    ],
                    "type": "str"
                },
                "route_domain": {
                    "default": 0,
                    "description": [
                        "Route domain on which to manage the BGP configuration."
                    ],
                    "type": "str"
                },
                "running_config": {
                    "aliases": [
                        "config"
                    ],
                    "description": [
                        "By default, the module will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.",
                        "There are times when you do not want to have the task get the current running-config for every task in a playbook.",
                        "The I(running_config) argument allows the implementer to pass in the configuration to use as the base config for comparison."
                    ],
                    "type": "str"
                },
                "save_when": {
                    "choices": [
                        "always",
                        "never",
                        "modified",
                        "changed"
                    ],
                    "default": "never",
                    "description": [
                        "When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default.",
                        "If the argument is set to I(always), the running-config will always be copied to the startup-config and the I(modified) flag will always be set to C(True).",
                        "If the argument is set to I(modified), the running-config will only be copied to the startup-config if it has changed since the last save to startup-config.",
                        "If the argument is set to I(never), the running-config will never be copied to the startup-config.",
                        "If the argument is set to I(changed), the running-config will only be copied to the startup-config if the task has made a change."
                    ],
                    "type": "str"
                },
                "src": {
                    "description": [
                        "The I(src) argument provides a path to the configuration file to load into the remote system.",
                        "The path can either be a full system path to the configuration file if the value starts with /, or relative to the root of the implemented role or playbook.",
                        "This argument is mutually exclusive with the I(lines) and I(parents) arguments."
                    ],
                    "type": "path"
                }
            },
            "short_description": "Manage BIG-IP advanced routing configuration sections",
            "version_added": "1.0.0",
            "version_added_collection": "f5networks.f5_modules"
        },
        "examples": "\n- name: configure top level configuration and save it\n  bigip_imish_config:\n    lines: bfd slow-timer 2000\n    save_when: modified\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: diff the running-config against a provided config\n  bigip_imish_config:\n    diff_against: intended\n    intended_config: \"{{ lookup('file', 'master.cfg') }}\"\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add config to a parent block\n  bigip_imish_config:\n    lines:\n      - bgp graceful-restart restart-time 120\n      - redistribute kernel route-map rhi\n      - neighbor 10.10.10.11 remote-as 65000\n      - neighbor 10.10.10.11 fall-over bfd\n      - neighbor 10.10.10.11 remote-as 65000\n      - neighbor 10.10.10.11 fall-over bfd\n    parents: router bgp 64664\n    match: exact\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove an existing acl before writing it\n  bigip_imish_config:\n    lines:\n      - access-list 10 permit 20.20.20.20\n      - access-list 10 permit 20.20.20.21\n      - access-list 10 deny any\n    before: no access-list 10\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: for idempotency, use full-form commands\n  bigip_imish_config:\n    lines:\n      # - desc My interface\n      - description My Interface\n    # parents: int ANYCAST-P2P-2\n    parents: interface ANYCAST-P2P-2\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: configurable backup path\n  bigip_imish_config:\n    lines: bfd slow-timer 2000\n    backup: yes\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n    backup_options:\n      filename: backup.cfg\n      dir_path: /home/user\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "backup_path": {
                "description": "The full path to the backup file.",
                "returned": "when backup is yes",
                "sample": "/playbooks/ansible/backup/bigip_imish_config.2016-07-16@22:28:34",
                "type": "str"
            },
            "commands": {
                "description": "The set of commands that will be pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "interface ANYCAST-P2P-2",
                    "neighbor 20.20.20.21 remote-as 65000",
                    "neighbor 20.20.20.21 fall-over bfd"
                ],
                "type": "list"
            },
            "updates": {
                "description": "The set of commands that will be pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "interface ANYCAST-P2P-2",
                    "neighbor 20.20.20.21 remote-as 65000",
                    "neighbor 20.20.20.21 fall-over bfd"
                ],
                "type": "list"
            }
        }
    }
}
