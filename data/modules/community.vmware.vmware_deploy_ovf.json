{
    "community.vmware.vmware_deploy_ovf": {
        "doc": {
            "author": "Matt Martz (@sivel)",
            "collection": "community.vmware",
            "description": [
                "This module can be used to deploy a VMware VM from an OVF or OVA file"
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_deploy_ovf.py",
            "has_action": false,
            "module": "vmware_deploy_ovf",
            "notes": [],
            "options": {
                "allow_duplicates": {
                    "default": "yes",
                    "description": [
                        "Whether or not to allow duplicate VM names. ESXi allows duplicates, vCenter may not."
                    ],
                    "type": "bool"
                },
                "cluster": {
                    "description": [
                        "Cluster to deploy to."
                    ],
                    "type": "str"
                },
                "datacenter": {
                    "default": "ha-datacenter",
                    "description": [
                        "Datacenter to deploy to."
                    ],
                    "type": "str"
                },
                "datastore": {
                    "default": "datastore1",
                    "description": [
                        "Datastore to deploy to."
                    ],
                    "type": "str"
                },
                "deployment_option": {
                    "description": [
                        "The key of the chosen deployment option."
                    ],
                    "type": "str"
                },
                "disk_provisioning": {
                    "choices": [
                        "flat",
                        "eagerZeroedThick",
                        "monolithicSparse",
                        "twoGbMaxExtentSparse",
                        "twoGbMaxExtentFlat",
                        "thin",
                        "sparse",
                        "thick",
                        "seSparse",
                        "monolithicFlat"
                    ],
                    "default": "thin",
                    "description": [
                        "Disk provisioning type."
                    ],
                    "type": "str"
                },
                "fail_on_spec_warnings": {
                    "default": "no",
                    "description": [
                        "Cause the module to treat OVF Import Spec warnings as errors."
                    ],
                    "type": "bool"
                },
                "folder": {
                    "description": [
                        "Absolute path of folder to place the virtual machine.",
                        "If not specified, defaults to the value of C(datacenter.vmFolder).",
                        "Examples:",
                        "   folder: /ha-datacenter/vm",
                        "   folder: ha-datacenter/vm",
                        "   folder: /datacenter1/vm",
                        "   folder: datacenter1/vm",
                        "   folder: /datacenter1/vm/folder1",
                        "   folder: datacenter1/vm/folder1",
                        "   folder: /folder1/datacenter1/vm",
                        "   folder: folder1/datacenter1/vm",
                        "   folder: /folder1/datacenter1/vm/folder2"
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "inject_ovf_env": {
                    "description": [
                        "Force the given properties to be inserted into an OVF Environment and injected through VMware Tools."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name of the VM to work with.",
                        "Virtual machine names in vCenter are not necessarily unique, which may be problematic."
                    ],
                    "type": "str"
                },
                "networks": {
                    "default": {
                        "VM Network": "VM Network"
                    },
                    "description": [
                        "C(key: value) mapping of OVF network name, to the vCenter network name."
                    ],
                    "type": "dict"
                },
                "ovf": {
                    "aliases": [
                        "ova"
                    ],
                    "description": [
                        "Path to OVF or OVA file to deploy."
                    ]
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "power_on": {
                    "default": true,
                    "description": [
                        "Whether or not to power on the virtual machine after creation."
                    ],
                    "type": "bool"
                },
                "properties": {
                    "description": [
                        "The assignment of values to the properties found in the OVF as key value pairs."
                    ],
                    "type": "dict"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "resource_pool": {
                    "default": "Resources",
                    "description": [
                        "Resource Pool to deploy to."
                    ],
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Wait for the host to power on."
                    ],
                    "type": "bool"
                },
                "wait_for_ip_address": {
                    "default": false,
                    "description": [
                        "Wait until vCenter detects an IP address for the VM.",
                        "This requires vmware-tools (vmtoolsd) to properly work after creation."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "pyvmomi"
            ],
            "short_description": "Deploys a VMware virtual machine from an OVF or OVA file"
        },
        "examples": "\n- community.vmware.vmware_deploy_ovf:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    ovf: /path/to/ubuntu-16.04-amd64.ovf\n    wait_for_ip_address: true\n  delegate_to: localhost\n\n# Deploys a new VM named 'NewVM' in specific datacenter/cluster, with network mapping taken from variable and using ova template from an absolute path\n- community.vmware.vmware_deploy_ovf:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    datacenter: Datacenter1\n    cluster: Cluster1\n    datastore: vsandatastore\n    name: NewVM\n    networks: \"{u'VM Network':u'{{ ProvisioningNetworkLabel }}'}\"\n    validate_certs: no\n    power_on: no\n    ovf: /absolute/path/to/template/mytemplate.ova\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "instance": {
                "description": "metadata about the new virtual machine",
                "returned": "always",
                "sample": "None",
                "type": "dict"
            }
        }
    }
}
