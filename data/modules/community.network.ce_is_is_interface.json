{
    "community.network.ce_is_is_interface": {
        "doc": {
            "author": "xuxiaowei0512 (@CloudEngine-Ansible)",
            "collection": "community.network",
            "description": [
                "Manages isis process id, creates a isis instance id or deletes a process id on HUAWEI CloudEngine devices."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_is_is_interface.py",
            "has_action": false,
            "module": "ce_is_is_interface",
            "notes": [
                "Interface must already be a L3 port when using this module.",
                "This module requires the netconf system service be enabled on the remote device being managed.",
                "This module works with connection C(netconf)."
            ],
            "options": {
                "bfdblocken": {
                    "description": [
                        "Blocking interfaces to dynamically create BFD features. The value is a bool type."
                    ],
                    "type": "bool"
                },
                "bfdstaticen": {
                    "description": [
                        "Configure static BFD on a specific interface enabled with ISIS. The value is a bool type."
                    ],
                    "type": "bool"
                },
                "ifname": {
                    "description": [
                        "A L3 interface."
                    ],
                    "required": true,
                    "type": "str"
                },
                "instance_id": {
                    "description": [
                        "Specifies the id of a isis process. The value is a number of 1 to 4294967295."
                    ],
                    "required": true,
                    "type": "int"
                },
                "level1cost": {
                    "description": [
                        "Specifies the link cost of the interface when performing Level-1 SPF calculation. The value is a number of 0 to 16777215."
                    ],
                    "type": "int"
                },
                "level1dispriority": {
                    "description": [
                        "the dispriority of the level1. The value is a number of 1 to 127."
                    ],
                    "type": "int"
                },
                "level2cost": {
                    "description": [
                        "Specifies the link cost of the interface when performing Level-2 SPF calculation. The value is a number of 0 to 16777215."
                    ],
                    "type": "int"
                },
                "level2dispriority": {
                    "description": [
                        "the dispriority of the level1. The value is a number of 1 to 127."
                    ],
                    "type": "int"
                },
                "leveltype": {
                    "choices": [
                        "level_1",
                        "level_2",
                        "level_1_2"
                    ],
                    "description": [
                        "level type for three types."
                    ],
                    "type": "str"
                },
                "p2pnegotiationmode": {
                    "choices": [
                        "2_way",
                        "3_way",
                        "3_wayonly"
                    ],
                    "description": [
                        "Set the P2P neighbor negotiation type."
                    ],
                    "type": "str"
                },
                "p2ppeeripignore": {
                    "description": [
                        "When the P2P hello packet is received, no IP address check is performed. The value is a bool type."
                    ],
                    "type": "bool"
                },
                "ppposicpcheckenable": {
                    "description": [
                        "Interface for setting PPP link protocol to check OSICP negotiation status. The value is a bool type."
                    ],
                    "type": "bool"
                },
                "silentcost": {
                    "description": [
                        "Specifies whether the routing cost of the silent interface is 0. The value is a bool type."
                    ],
                    "type": "bool"
                },
                "silentenable": {
                    "description": [
                        "enable the interface can send isis message. The value is a bool type."
                    ],
                    "type": "bool"
                },
                "snpacheck": {
                    "description": [
                        "Enable SNPA check for LSPs and SNPs. The value is a bool type."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Determines whether the config should be present or not on the device."
                    ],
                    "type": "str"
                },
                "typep2penable": {
                    "description": [
                        "Simulate the network type of the interface as P2P. The value is a bool type."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manages isis interface configuration on HUAWEI CloudEngine devices.",
            "version_added": "0.2.0",
            "version_added_collection": "community.network"
        },
        "examples": "\n  - name: \"create vlan and config vlanif\"\n    ce_config:\n      lines: 'vlan {{ test_vlan_id }},quit,interface {{test_intf_vlanif}},ip address {{test_vlanif_ip}} 24'\n      match: none\n\n  - name: \"create eth-trunk and config eth-trunk\"\n    ce_config:\n      lines: 'interface {{test_intf_trunk}},undo portswitch,ip address {{test_trunk_ip}} 24'\n      match: none\n\n  - name: \"create vpn instance\"\n    ce_config:\n      lines: 'ip vpn-instance {{test_vpn}},ipv4-family'\n      match: none\n\n  - name: Set isis circuit-level\n    community.network.ce_is_is_interface:\n      instance_id: 3\n      ifname: Eth-Trunk10\n      leveltype: level_1_2\n      state: present\n\n  - name: Set isis level1dispriority\n    community.network.ce_is_is_interface:\n      instance_id: 3\n      ifname: Eth-Trunk10\n      level1dispriority: 0\n      state: present\n\n  - name: Set isis level2dispriority\n    community.network.ce_is_is_interface:\n      instance_id: 3\n      ifname: Eth-Trunk10\n      level2dispriority: 0\n      state: present\n\n  - name: Set isis silentenable\n    community.network.ce_is_is_interface:\n      instance_id: 3\n      ifname: Eth-Trunk10\n      silentenable: true\n      state: present\n\n  - name: Set vpn name\n    ce_is_is_instance:\n      instance_id: 22\n      vpn_name: vpn1\n      state: present\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of configuration after module execution",
                "returned": "always",
                "sample": {
                    "session": {
                        "addrType": "IPV4",
                        "createType": "SESS_STATIC",
                        "destAddr": null,
                        "outIfName": "10GE1/0/1",
                        "sessName": "bfd_l2link",
                        "srcAddr": null,
                        "useDefaultIp": "true",
                        "vrfName": null
                    }
                },
                "type": "dict"
            },
            "existing": {
                "description": "k/v pairs of existing configuration",
                "returned": "always",
                "sample": {
                    "session": {}
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "addr_type": null,
                    "create_type": null,
                    "dest_addr": null,
                    "out_if_name": "10GE1/0/1",
                    "session_name": "bfd_l2link",
                    "src_addr": null,
                    "state": "present",
                    "use_default_ip": true,
                    "vrf_name": null
                },
                "type": "dict"
            },
            "updates": {
                "description": "commands sent to the device",
                "returned": "always",
                "sample": [
                    "bfd bfd_l2link bind peer-ip default-ip interface 10ge1/0/1"
                ],
                "type": "list"
            }
        }
    }
}
