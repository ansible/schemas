{
    "fortinet.fortios.fortios_user_peer": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Hongbin Lu (@fgtdev-hblu)",
                "Frank Shen (@frankshen01)",
                "Miguel Angel Munoz (@mamunozgonzalez)",
                "Nicolas Thomas (@thomnico)"
            ],
            "collection": "fortinet.fortios",
            "description": [
                "This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the user to set and modify user feature and peer category. Examples include all parameters and values need to be adjusted to datasources before usage. Tested with FOS v6.0.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortios/plugins/modules/fortios_user_peer.py",
            "has_action": false,
            "module": "fortios_user_peer",
            "notes": [
                "Legacy fortiosapi has been deprecated, httpapi is the preferred way to run playbooks"
            ],
            "options": {
                "access_token": {
                    "description": [
                        "Token-based authentication. Generated from GUI of Fortigate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Indicates whether to create or remove the object."
                    ],
                    "required": true,
                    "type": "str"
                },
                "user_peer": {
                    "default": null,
                    "description": [
                        "Configure peer users."
                    ],
                    "suboptions": {
                        "ca": {
                            "description": [
                                "Name of the CA certificate as returned by the execute vpn certificate ca list command. Source vpn.certificate.ca.name."
                            ],
                            "type": "str"
                        },
                        "cn": {
                            "description": [
                                "Peer certificate common name."
                            ],
                            "type": "str"
                        },
                        "cn_type": {
                            "choices": [
                                "string",
                                "email",
                                "FQDN",
                                "ipv4",
                                "ipv6"
                            ],
                            "description": [
                                "Peer certificate common name type."
                            ],
                            "type": "str"
                        },
                        "ldap_mode": {
                            "choices": [
                                "password",
                                "principal-name"
                            ],
                            "description": [
                                "Mode for LDAP peer authentication."
                            ],
                            "type": "str"
                        },
                        "ldap_password": {
                            "description": [
                                "Password for LDAP server bind."
                            ],
                            "type": "str"
                        },
                        "ldap_server": {
                            "description": [
                                "Name of an LDAP server defined under the user ldap command. Performs client access rights check. Source user.ldap.name."
                            ],
                            "type": "str"
                        },
                        "ldap_username": {
                            "description": [
                                "Username for LDAP server bind."
                            ],
                            "type": "str"
                        },
                        "mandatory_ca_verify": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Determine what happens to the peer if the CA certificate is not installed. Disable to automatically consider the peer certificate as valid."
                            ],
                            "type": "str"
                        },
                        "name": {
                            "description": [
                                "Peer name."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "ocsp_override_server": {
                            "description": [
                                "Online Certificate Status Protocol (OCSP) server for certificate retrieval. Source vpn.certificate.ocsp-server.name."
                            ],
                            "type": "str"
                        },
                        "passwd": {
                            "description": [
                                "Peer\"s password used for two-factor authentication."
                            ],
                            "type": "str"
                        },
                        "subject": {
                            "description": [
                                "Peer certificate name constraints."
                            ],
                            "type": "str"
                        },
                        "two_factor": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable two-factor authentication, applying certificate and password-based authentication."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "vdom": {
                    "default": "root",
                    "description": [
                        "Virtual domain, among those defined previously. A vdom is a virtual instance of the FortiGate that can be configured and used as a different unit."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "ansible>=2.9.0"
            ],
            "short_description": "Configure peer users in Fortinet's FortiOS and FortiGate.",
            "version_added": "2.9",
            "version_added_collection": "fortinet.fortios"
        },
        "examples": "\n- hosts: fortigates\n  collections:\n    - fortinet.fortios\n  connection: httpapi\n  vars:\n   vdom: \"root\"\n   ansible_httpapi_use_ssl: yes\n   ansible_httpapi_validate_certs: no\n   ansible_httpapi_port: 443\n  tasks:\n  - name: Configure peer users.\n    fortios_user_peer:\n      vdom:  \"{{ vdom }}\"\n      state: \"present\"\n      access_token: \"<your_own_value>\"\n      user_peer:\n        ca: \"<your_own_value> (source vpn.certificate.ca.name)\"\n        cn: \"<your_own_value>\"\n        cn_type: \"string\"\n        ldap_mode: \"password\"\n        ldap_password: \"<your_own_value>\"\n        ldap_server: \"<your_own_value> (source user.ldap.name)\"\n        ldap_username: \"<your_own_value>\"\n        mandatory_ca_verify: \"enable\"\n        name: \"default_name_11\"\n        ocsp_override_server: \"<your_own_value> (source vpn.certificate.ocsp-server.name)\"\n        passwd: \"<your_own_value>\"\n        subject: \"<your_own_value>\"\n        two_factor: \"enable\"\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "build": {
                "description": "Build number of the fortigate image",
                "returned": "always",
                "sample": "1547",
                "type": "str"
            },
            "http_method": {
                "description": "Last method used to provision the content into FortiGate",
                "returned": "always",
                "sample": "PUT",
                "type": "str"
            },
            "http_status": {
                "description": "Last result given by FortiGate on last operation applied",
                "returned": "always",
                "sample": "200",
                "type": "str"
            },
            "mkey": {
                "description": "Master key (id) used in the last call to FortiGate",
                "returned": "success",
                "sample": "id",
                "type": "str"
            },
            "name": {
                "description": "Name of the table used to fulfill the request",
                "returned": "always",
                "sample": "urlfilter",
                "type": "str"
            },
            "path": {
                "description": "Path of the table used to fulfill the request",
                "returned": "always",
                "sample": "webfilter",
                "type": "str"
            },
            "revision": {
                "description": "Internal revision number",
                "returned": "always",
                "sample": "17.0.2.10658",
                "type": "str"
            },
            "serial": {
                "description": "Serial number of the unit",
                "returned": "always",
                "sample": "FGVMEVYYQT3AB5352",
                "type": "str"
            },
            "status": {
                "description": "Indication of the operation's result",
                "returned": "always",
                "sample": "success",
                "type": "str"
            },
            "vdom": {
                "description": "Virtual domain used",
                "returned": "always",
                "sample": "root",
                "type": "str"
            },
            "version": {
                "description": "Version of the FortiGate",
                "returned": "always",
                "sample": "v5.6.3",
                "type": "str"
            }
        }
    }
}
