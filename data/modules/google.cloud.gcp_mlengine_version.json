{
    "google.cloud.gcp_mlengine_version": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "Each version is a trained model deployed in the cloud, ready to handle prediction requests. A model can have multiple versions ."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_version.py",
            "has_action": false,
            "module": "gcp_mlengine_version",
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "auto_scaling": {
                    "description": [
                        "Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up traffic according to the model's ability to scale or you will start seeing increases in latency and 429 response codes."
                    ],
                    "required": false,
                    "suboptions": {
                        "min_nodes": {
                            "description": [
                                "The minimum number of nodes to allocate for this mode."
                            ],
                            "required": false,
                            "type": "int"
                        }
                    },
                    "type": "dict"
                },
                "deployment_uri": {
                    "description": [
                        "The Cloud Storage location of the trained model used to create the version."
                    ],
                    "required": true,
                    "type": "str"
                },
                "description": {
                    "description": [
                        "The description specified for the version when it was created."
                    ],
                    "required": false,
                    "type": "str"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "framework": {
                    "description": [
                        "The machine learning framework AI Platform uses to train this version of the model.",
                        "Some valid choices include: \"FRAMEWORK_UNSPECIFIED\", \"TENSORFLOW\", \"SCIKIT_LEARN\", \"XGBOOST\""
                    ],
                    "required": false,
                    "type": "str"
                },
                "is_default": {
                    "aliases": [
                        "default"
                    ],
                    "description": [
                        "If true, this version will be used to handle prediction requests that do not specify a version."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "labels": {
                    "description": [
                        "One or more labels that you can add, to organize your model versions."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "machine_type": {
                    "description": [
                        "The type of machine on which to serve the model. Currently only applies to online prediction service.",
                        "Some valid choices include: \"mls1-c1-m2\", \"mls1-c4-m2\""
                    ],
                    "required": false,
                    "type": "str"
                },
                "manual_scaling": {
                    "description": [
                        "Manually select the number of nodes to use for serving the model. You should generally use autoScaling with an appropriate minNodes instead, but this option is available if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of the system to serve it based on the selected number of nodes."
                    ],
                    "required": false,
                    "suboptions": {
                        "nodes": {
                            "description": [
                                "The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed."
                            ],
                            "required": false,
                            "type": "int"
                        }
                    },
                    "type": "dict"
                },
                "model": {
                    "description": [
                        "The model that this version belongs to.",
                        "This field represents a link to a Model resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_mlengine_model task and then set this model field to \"{{ name-of-resource }}\""
                    ],
                    "required": true,
                    "type": "dict"
                },
                "name": {
                    "description": [
                        "The name specified for the version when it was created.",
                        "The version name must be unique within the model it is created in."
                    ],
                    "required": true,
                    "type": "str"
                },
                "prediction_class": {
                    "description": [
                        "The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class should be included in a package provided to the packageUris field."
                    ],
                    "required": false,
                    "type": "str"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "python_version": {
                    "description": [
                        "The version of Python used in prediction. If not set, the default version is '2.7'. Python '3.5' is available when runtimeVersion is set to '1.4' and above. Python '2.7' works with all supported runtime versions.",
                        "Some valid choices include: \"2.7\", \"3.5\""
                    ],
                    "required": false,
                    "type": "str"
                },
                "runtime_version": {
                    "description": [
                        "The AI Platform runtime version to use for this deployment."
                    ],
                    "required": false,
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_account": {
                    "description": [
                        "Specifies the service account for resource access control."
                    ],
                    "required": false,
                    "type": "str"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the given object should exist in GCP"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Creates a GCP Version"
        },
        "examples": "\n- name: create a model\n  google.cloud.gcp_mlengine_model:\n    name: model_version\n    description: My model\n    regions:\n    - us-central1\n    online_prediction_logging: 'true'\n    online_prediction_console_logging: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: model\n\n- name: create a version\n  google.cloud.gcp_mlengine_version:\n    name: \"{{ resource_name | replace('-', '_') }}\"\n    model: \"{{ model }}\"\n    runtime_version: 1.13\n    python_version: 3.5\n    is_default: 'true'\n    deployment_uri: gs://ansible-cloudml-bucket/\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "autoScaling": {
                "contains": {
                    "minNodes": {
                        "description": [
                            "The minimum number of nodes to allocate for this mode."
                        ],
                        "returned": "success",
                        "type": "int"
                    }
                },
                "description": [
                    "Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up traffic according to the model's ability to scale or you will start seeing increases in latency and 429 response codes."
                ],
                "returned": "success",
                "type": "complex"
            },
            "createTime": {
                "description": [
                    "The time the version was created."
                ],
                "returned": "success",
                "type": "str"
            },
            "deploymentUri": {
                "description": [
                    "The Cloud Storage location of the trained model used to create the version."
                ],
                "returned": "success",
                "type": "str"
            },
            "description": {
                "description": [
                    "The description specified for the version when it was created."
                ],
                "returned": "success",
                "type": "str"
            },
            "errorMessage": {
                "description": [
                    "The details of a failure or cancellation."
                ],
                "returned": "success",
                "type": "str"
            },
            "framework": {
                "description": [
                    "The machine learning framework AI Platform uses to train this version of the model."
                ],
                "returned": "success",
                "type": "str"
            },
            "isDefault": {
                "description": [
                    "If true, this version will be used to handle prediction requests that do not specify a version."
                ],
                "returned": "success",
                "type": "bool"
            },
            "labels": {
                "description": [
                    "One or more labels that you can add, to organize your model versions."
                ],
                "returned": "success",
                "type": "dict"
            },
            "lastUseTime": {
                "description": [
                    "The time the version was last used for prediction."
                ],
                "returned": "success",
                "type": "str"
            },
            "machineType": {
                "description": [
                    "The type of machine on which to serve the model. Currently only applies to online prediction service."
                ],
                "returned": "success",
                "type": "str"
            },
            "manualScaling": {
                "contains": {
                    "nodes": {
                        "description": [
                            "The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed."
                        ],
                        "returned": "success",
                        "type": "int"
                    }
                },
                "description": [
                    "Manually select the number of nodes to use for serving the model. You should generally use autoScaling with an appropriate minNodes instead, but this option is available if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of the system to serve it based on the selected number of nodes."
                ],
                "returned": "success",
                "type": "complex"
            },
            "model": {
                "description": [
                    "The model that this version belongs to."
                ],
                "returned": "success",
                "type": "dict"
            },
            "name": {
                "description": [
                    "The name specified for the version when it was created.",
                    "The version name must be unique within the model it is created in."
                ],
                "returned": "success",
                "type": "str"
            },
            "packageUris": {
                "description": [
                    "Cloud Storage paths (gs://\u2026) of packages for custom prediction routines or scikit-learn pipelines with custom code."
                ],
                "returned": "success",
                "type": "list"
            },
            "predictionClass": {
                "description": [
                    "The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class should be included in a package provided to the packageUris field."
                ],
                "returned": "success",
                "type": "str"
            },
            "pythonVersion": {
                "description": [
                    "The version of Python used in prediction. If not set, the default version is '2.7'. Python '3.5' is available when runtimeVersion is set to '1.4' and above. Python '2.7' works with all supported runtime versions."
                ],
                "returned": "success",
                "type": "str"
            },
            "runtimeVersion": {
                "description": [
                    "The AI Platform runtime version to use for this deployment."
                ],
                "returned": "success",
                "type": "str"
            },
            "serviceAccount": {
                "description": [
                    "Specifies the service account for resource access control."
                ],
                "returned": "success",
                "type": "str"
            },
            "state": {
                "description": [
                    "The state of a version."
                ],
                "returned": "success",
                "type": "str"
            }
        }
    }
}
