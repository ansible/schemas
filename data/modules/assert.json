{
    "assert": {
        "doc": {
            "author": [
                "Ansible Core Team",
                "Michael DeHaan"
            ],
            "collection": "ansible.builtin",
            "description": [
                "This module asserts that given expressions are true with an optional custom message.",
                "This module is also supported for Windows targets."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/assert.py",
            "has_action": true,
            "module": "assert",
            "notes": [
                "This module is also supported for Windows targets."
            ],
            "options": {
                "fail_msg": {
                    "aliases": [
                        "msg"
                    ],
                    "description": [
                        "The customized message used for a failing assertion.",
                        "This argument was called 'msg' before Ansible 2.7, now it is renamed to 'fail_msg' with alias 'msg'."
                    ],
                    "type": "str",
                    "version_added": "2.7",
                    "version_added_collection": "ansible.builtin"
                },
                "quiet": {
                    "default": false,
                    "description": [
                        "Set this to C(yes) to avoid verbose output."
                    ],
                    "type": "bool",
                    "version_added": "2.8",
                    "version_added_collection": "ansible.builtin"
                },
                "success_msg": {
                    "description": [
                        "The customized message used for a successful assertion."
                    ],
                    "type": "str",
                    "version_added": "2.7",
                    "version_added_collection": "ansible.builtin"
                },
                "that": {
                    "description": [
                        "A list of string expressions of the same form that can be passed to the 'when' statement."
                    ],
                    "required": true,
                    "type": "list"
                }
            },
            "seealso": [
                {
                    "module": "ansible.builtin.debug"
                },
                {
                    "module": "ansible.builtin.fail"
                },
                {
                    "module": "ansible.builtin.meta"
                }
            ],
            "short_description": "Asserts given expressions are true",
            "version_added": "1.5",
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- assert: { that: \"ansible_os_family != 'RedHat'\" }\n\n- assert:\n    that:\n      - \"'foo' in some_command_result.stdout\"\n      - number_of_the_counting == 3\n\n- name: After version 2.7 both 'msg' and 'fail_msg' can customize failing assertion message\n  assert:\n    that:\n      - my_param <= 100\n      - my_param >= 0\n    fail_msg: \"'my_param' must be between 0 and 100\"\n    success_msg: \"'my_param' is between 0 and 100\"\n\n- name: Please use 'msg' when ansible version is smaller than 2.7\n  assert:\n    that:\n      - my_param <= 100\n      - my_param >= 0\n    msg: \"'my_param' must be between 0 and 100\"\n\n- name: Use quiet to avoid verbose output\n  assert:\n    that:\n      - my_param <= 100\n      - my_param >= 0\n    quiet: true\n",
        "metadata": null,
        "return": null
    }
}
