{
    "cisco.meraki.meraki_mr_l3_firewall": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Allows for creation, management, and visibility into layer 3 firewalls implemented on Meraki MR access points.",
                "Module is not idempotent as of current release."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_mr_l3_firewall.py",
            "has_action": false,
            "module": "meraki_mr_l3_firewall",
            "notes": [
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "allow_lan_access": {
                    "default": true,
                    "description": [
                        "Sets whether devices can talk to other devices on the same LAN."
                    ],
                    "type": "bool"
                },
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "net_id": {
                    "description": [
                        "ID of network containing access points."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "description": [
                        "Name of network containing access points."
                    ],
                    "type": "str"
                },
                "number": {
                    "aliases": [
                        "ssid_number"
                    ],
                    "description": [
                        "Number of SSID to apply firewall rule to."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "rules": {
                    "description": [
                        "List of firewall rules."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "comment": {
                            "description": [
                                "Optional comment describing the firewall rule."
                            ],
                            "type": "str"
                        },
                        "dest_cidr": {
                            "description": [
                                "Comma-separated list of CIDR notation networks to match."
                            ],
                            "type": "str"
                        },
                        "dest_port": {
                            "description": [
                                "Comma-seperated list of destination ports to match."
                            ],
                            "type": "str"
                        },
                        "policy": {
                            "choices": [
                                "allow",
                                "deny"
                            ],
                            "description": [
                                "Specifies the action that should be taken when rule is hit."
                            ],
                            "type": "str"
                        },
                        "protocol": {
                            "choices": [
                                "any",
                                "icmp",
                                "tcp",
                                "udp"
                            ],
                            "description": [
                                "Specifies protocol to match against."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "ssid_name": {
                    "aliases": [
                        "ssid"
                    ],
                    "description": [
                        "Name of SSID to apply firewall rule to."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Create or modify an organization."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage MR access point layer 3 firewalls in the Meraki cloud"
        },
        "examples": "\n- name: Create single firewall rule\n  meraki_mr_l3_firewall:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_id: 12345\n    number: 1\n    rules:\n      - comment: Integration test rule\n        policy: allow\n        protocol: tcp\n        dest_port: 80\n        dest_cidr: 192.0.2.0/24\n    allow_lan_access: no\n  delegate_to: localhost\n\n- name: Enable local LAN access\n  meraki_mr_l3_firewall:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_id: 123\n    number: 1\n    rules:\n    allow_lan_access: yes\n  delegate_to: localhost\n\n- name: Query firewall rules\n  meraki_mr_l3_firewall:\n    auth_key: abc123\n    state: query\n    org_name: YourOrg\n    net_name: YourNet\n    number: 1\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
