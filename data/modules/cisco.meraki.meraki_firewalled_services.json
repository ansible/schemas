{
    "cisco.meraki.meraki_firewalled_services": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Allows for setting policy firewalled services for Meraki network devices."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_firewalled_services.py",
            "has_action": false,
            "module": "meraki_firewalled_services",
            "notes": [
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "access": {
                    "choices": [
                        "blocked",
                        "restricted",
                        "unrestricted"
                    ],
                    "description": [
                        "Network service to query or modify."
                    ],
                    "type": "str"
                },
                "allowed_ips": {
                    "description": [
                        "List of IP addresses allowed to access a service.",
                        "Only used when C(access) is set to restricted."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable MERAKI_KEY is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "net_id": {
                    "description": [
                        "ID number of a network."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "aliases": [
                        "network"
                    ],
                    "description": [
                        "Name of a network."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization associated to a network."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization associated to a network."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "service": {
                    "choices": [
                        "ICMP",
                        "SNMP",
                        "web"
                    ],
                    "description": [
                        "Network service to query or modify."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "States that a policy should be created or modified."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Edit firewall policies for administrative network services"
        },
        "examples": "\n- name: Set icmp service to blocked\n  meraki_firewalled_services:\n    auth_key: '{{ auth_key }}'\n    state: present\n    org_name: '{{test_org_name}}'\n    net_name: IntTestNetworkAppliance\n    service: ICMP\n    access: blocked\n  delegate_to: localhost\n\n- name: Set icmp service to restricted\n  meraki_firewalled_services:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_name: YourNet\n    service: web\n    access: restricted\n    allowed_ips:\n      - 192.0.1.1\n      - 192.0.1.2\n  delegate_to: localhost\n\n- name: Query appliance services\n  meraki_firewalled_services:\n    auth_key: abc123\n    state: query\n    org_name: YourOrg\n    net_name: YourNet\n  delegate_to: localhost\n\n- name: Query services\n  meraki_firewalled_services:\n    auth_key: abc123\n    state: query\n    org_name: YourOrg\n    net_name: YourNet\n    service: ICMP\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "access": {
                        "description": "Access assigned to a service type.",
                        "returned": "success",
                        "sample": "unrestricted",
                        "type": "str"
                    },
                    "allowed_ips": {
                        "description": "List of IP addresses to have access to service.",
                        "returned": "success",
                        "sample": "192.0.1.0",
                        "type": "str"
                    },
                    "service": {
                        "description": "Service to apply policy to.",
                        "returned": "success",
                        "sample": "ICMP",
                        "type": "str"
                    }
                },
                "description": "List of network services.",
                "returned": "info",
                "type": "complex"
            }
        }
    }
}
