{
    "openstack.cloud.project_info": {
        "doc": {
            "author": "OpenStack Ansible SIG",
            "collection": "openstack.cloud",
            "description": [
                "Retrieve information about a one or more OpenStack projects",
                "This module was called C(openstack.cloud.project_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(openstack.cloud.project_info) module no longer returns C(ansible_facts)!"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/openstack/cloud/plugins/modules/project_info.py",
            "has_action": false,
            "module": "project_info",
            "notes": [
                "The standard OpenStack environment variables, such as C(OS_USERNAME) may be used instead of providing explicit values.",
                "Auth information is driven by openstacksdk, which means that values can come from a yaml config file in /etc/ansible/openstack.yaml, /etc/openstack/clouds.yaml or ~/.config/openstack/clouds.yaml, then from standard environment variables, then finally by explicit parameters in plays. More information can be found at U(https://docs.openstack.org/openstacksdk/)"
            ],
            "options": {
                "api_timeout": {
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ],
                    "type": "int"
                },
                "auth": {
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains (for example, I(user_domain_name) or I(project_domain_name)) if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ],
                    "type": "dict"
                },
                "auth_type": {
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ],
                    "type": "str"
                },
                "availability_zone": {
                    "description": [
                        "Ignored. Present for backwards compatibility"
                    ],
                    "type": "str"
                },
                "ca_cert": {
                    "aliases": [
                        "cacert"
                    ],
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ],
                    "type": "str"
                },
                "client_cert": {
                    "aliases": [
                        "cert"
                    ],
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "client_key": {
                    "aliases": [
                        "key"
                    ],
                    "description": [
                        "A path to a client key to use as part of the SSL transaction."
                    ],
                    "type": "str"
                },
                "cloud": {
                    "description": [
                        "Named cloud or cloud config to operate against. If I(cloud) is a string, it references a named cloud config as defined in an OpenStack clouds.yaml file. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present. If I(cloud) is a dict, it contains a complete cloud configuration like would be in a section of clouds.yaml."
                    ],
                    "type": "raw"
                },
                "domain": {
                    "description": [
                        "Name or ID of the domain containing the project if the cloud supports domains"
                    ],
                    "type": "str"
                },
                "filters": {
                    "description": [
                        "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
                    ],
                    "type": "dict"
                },
                "interface": {
                    "aliases": [
                        "endpoint_type"
                    ],
                    "choices": [
                        "admin",
                        "internal",
                        "public"
                    ],
                    "default": "public",
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name or ID of the project"
                    ],
                    "type": "str"
                },
                "region_name": {
                    "description": [
                        "Name of the region."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ],
                    "type": "int"
                },
                "validate_certs": {
                    "aliases": [
                        "verify"
                    ],
                    "default": false,
                    "description": [
                        "Whether or not SSL API requests should be verified.",
                        "Before Ansible 2.3 this defaulted to C(yes)."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "openstacksdk",
                "openstacksdk >= 0.12.0",
                "python >= 3.6"
            ],
            "short_description": "Retrieve information about one or more OpenStack projects"
        },
        "examples": "\n# Gather information about previously created projects\n- openstack.cloud.project_info:\n    cloud: awesomecloud\n  register: result\n- debug:\n    msg: \"{{ result.openstack_projects }}\"\n\n# Gather information about a previously created project by name\n- openstack.cloud.project_info:\n    cloud: awesomecloud\n    name: demoproject\n  register: result\n- debug:\n    msg: \"{{ result.openstack_projects }}\"\n\n# Gather information about a previously created project in a specific domain\n- openstack.cloud.project_info:\n    cloud: awesomecloud\n    name: demoproject\n    domain: admindomain\n  register: result\n- debug:\n    msg: \"{{ result.openstack_projects }}\"\n\n# Gather information about a previously created project in a specific domain with filter\n- openstack.cloud.project_info:\n    cloud: awesomecloud\n    name: demoproject\n    domain: admindomain\n    filters:\n      enabled: False\n  register: result\n- debug:\n    msg: \"{{ result.openstack_projects }}\"\n",
        "metadata": null,
        "return": {
            "openstack_projects": {
                "contains": {
                    "description": {
                        "description": "Description of the project",
                        "returned": "success",
                        "type": "str"
                    },
                    "domain_id": {
                        "description": "Domain ID containing the project (keystone v3 clouds only)",
                        "returned": "success",
                        "type": "bool"
                    },
                    "enabled": {
                        "description": "Flag to indicate if the project is enabled",
                        "returned": "success",
                        "type": "bool"
                    },
                    "id": {
                        "description": "Unique UUID.",
                        "returned": "success",
                        "type": "str"
                    },
                    "name": {
                        "description": "Name given to the project.",
                        "returned": "success",
                        "type": "str"
                    }
                },
                "description": "has all the OpenStack information about projects",
                "returned": "always, but can be null",
                "type": "complex"
            }
        }
    }
}
