{
    "wti.remote.cpm_serial_port_info": {
        "doc": {
            "author": "Western Telematic Inc. (@wtinetworkgear)",
            "collection": "wti.remote",
            "description": [
                "Get Serial port parameters from WTI OOB and PDU devices"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/wti/remote/plugins/modules/cpm_serial_port_info.py",
            "has_action": false,
            "module": "cpm_serial_port_info",
            "notes": [
                "Use C(groups/cpm) in C(module_defaults) to set common options used between CPM modules.)"
            ],
            "options": {
                "cpm_password": {
                    "description": [
                        "This is the Password of the WTI device to send the module."
                    ],
                    "required": true,
                    "type": "str"
                },
                "cpm_url": {
                    "description": [
                        "This is the URL of the WTI device to send the module."
                    ],
                    "required": true,
                    "type": "str"
                },
                "cpm_username": {
                    "description": [
                        "This is the Username of the WTI device to send the module."
                    ],
                    "required": true,
                    "type": "str"
                },
                "port": {
                    "default": [
                        "*"
                    ],
                    "description": [
                        "This is the serial port number that is getting retrieved. It can include a single port",
                        "number, multiple port numbers separated by commas, a list of port numbers, or an '*' character for all ports."
                    ],
                    "required": true,
                    "type": "list"
                },
                "use_https": {
                    "default": false,
                    "description": [
                        "Designates to use an https connection or http connection."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": "Flag to control if the lookup will observe HTTP proxy environment variables when present.",
                    "required": false,
                    "type": "bool"
                },
                "validate_certs": {
                    "default": false,
                    "description": [
                        "If false, SSL certificates will not be validated. This should only be used",
                        "on personally controlled sites using self-signed certificates."
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "short_description": "Get Serial port parameters in WTI OOB and PDU devices",
            "version_added": "2.9",
            "version_added_collection": "wti.remote"
        },
        "examples": "\n- name: Get the Serial Port Parameters for port 2 of a WTI device\n  cpm_serial_port_info:\n    cpm_url: \"nonexist.wti.com\"\n    cpm_username: \"super\"\n    cpm_password: \"super\"\n    use_https: true\n    validate_certs: false\n    port: 2\n\n- name: Get the Serial Port Parameters for ports 2 and 4 of a WTI device\n  cpm_serial_port_info:\n    cpm_url: \"nonexist.wti.com\"\n    cpm_username: \"super\"\n    cpm_password: \"super\"\n    use_https: true\n    validate_certs: false\n    port: 2,4\n\n- name: Get the Serial Port Parameters for all ports of a WTI device\n  cpm_serial_port_info:\n    cpm_url: \"nonexist.wti.com\"\n    cpm_username: \"super\"\n    cpm_password: \"super\"\n    use_https: true\n    validate_certs: false\n    port: \"*\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "serialports": {
                        "description": "List of data for each serial port",
                        "returned": "success",
                        "sample": [
                            {
                                "baud": 4,
                                "break": 1,
                                "cmd": 1,
                                "connstatus": "Free",
                                "echo": 1,
                                "handshake": 2,
                                "logoff": "^X",
                                "mode": 1,
                                "parity": 3,
                                "port": 2,
                                "portname": "switch",
                                "seq": 2,
                                "stopbits": 1,
                                "tout": 0
                            },
                            {
                                "baud": 3,
                                "break": 1,
                                "cmd": 1,
                                "connstatus": "Free",
                                "echo": 1,
                                "handshake": 2,
                                "logoff": "^X",
                                "mode": 1,
                                "parity": 1,
                                "port": 4,
                                "portname": "router",
                                "seq": 2,
                                "stopbits": 1,
                                "tout": 1
                            }
                        ],
                        "type": "list"
                    }
                },
                "description": "The output JSON returned from the commands sent",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
