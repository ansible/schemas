{
    "community.network.ce_acl_interface": {
        "doc": {
            "author": [
                "wangdezhuang (@QijunPan)"
            ],
            "collection": "community.network",
            "description": [
                "Manages applying ACLs to interfaces on HUAWEI CloudEngine switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_acl_interface.py",
            "has_action": false,
            "module": "ce_acl_interface",
            "notes": [
                "Recommended connection is C(network_cli).",
                "This module also works with C(local) connections for legacy playbooks."
            ],
            "options": {
                "acl_name": {
                    "description": [
                        "ACL number or name. For a numbered rule group, the value ranging from 2000 to 4999. For a named rule group, the value is a string of 1 to 32 case-sensitive characters starting with a letter, spaces not supported."
                    ],
                    "required": true
                },
                "direction": {
                    "choices": [
                        "inbound",
                        "outbound"
                    ],
                    "description": [
                        "Direction ACL to be applied in on the interface."
                    ],
                    "required": true
                },
                "interface": {
                    "description": [
                        "Interface name. Only support interface full name, such as \"40GE2/0/1\"."
                    ],
                    "required": true
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Determines whether the config should be present or not on the device."
                    ],
                    "required": false
                }
            },
            "short_description": "Manages applying ACLs to interfaces on HUAWEI CloudEngine switches."
        },
        "examples": "\n\n- name: CloudEngine acl interface test\n  hosts: cloudengine\n  connection: local\n  gather_facts: no\n  vars:\n    cli:\n      host: \"{{ inventory_hostname }}\"\n      port: \"{{ ansible_ssh_port }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      transport: cli\n\n  tasks:\n\n  - name: \"Apply acl to interface\"\n    community.network.ce_acl_interface:\n      state: present\n      acl_name: 2000\n      interface: 40GE1/0/1\n      direction: outbound\n      provider: \"{{ cli }}\"\n\n  - name: \"Undo acl from interface\"\n    community.network.ce_acl_interface:\n      state: absent\n      acl_name: 2000\n      interface: 40GE1/0/1\n      direction: outbound\n      provider: \"{{ cli }}\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of aaa params after module execution",
                "returned": "always",
                "sample": {
                    "acl interface": [
                        "traffic-filter acl lb inbound",
                        "traffic-filter acl 2000 outbound"
                    ]
                },
                "type": "dict"
            },
            "existing": {
                "description": "k/v pairs of existing aaa server",
                "returned": "always",
                "sample": {
                    "acl interface": "traffic-filter acl lb inbound"
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "acl_name": "2000",
                    "direction": "outbound",
                    "interface": "40GE2/0/1",
                    "state": "present"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command sent to the device",
                "returned": "always",
                "sample": [
                    "interface 40ge2/0/1",
                    "traffic-filter acl 2000 outbound"
                ],
                "type": "list"
            }
        }
    }
}
