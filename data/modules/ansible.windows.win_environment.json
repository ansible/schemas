{
    "ansible.windows.win_environment": {
        "doc": {
            "author": [
                "Jon Hawkesworth (@jhawkesworth)",
                "Brian Scholer (@briantist)"
            ],
            "collection": "ansible.windows",
            "description": [
                "Uses .net Environment to set or remove environment variables and can set at User, Machine or Process level.",
                "User level environment variables will be set, but not available until the user has logged off and on again."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ansible/windows/plugins/modules/win_environment.py",
            "has_action": false,
            "module": "win_environment",
            "notes": [
                "This module is best-suited for setting the entire value of an environment variable. For safe element-based management of path-like environment vars, use the M(ansible.windows.win_path) module.",
                "This module does not broadcast change events. This means that the minority of windows applications which can have their environment changed without restarting will not be notified and therefore will need restarting to pick up new environment settings. User level environment variables will require the user to log out and in again before they become available.",
                "In the return, C(before_value) and C(value) will be set to the last values when using I(variables). It's best to use C(values) in that case if you need to find a specific variable's before and after values."
            ],
            "options": {
                "level": {
                    "choices": [
                        "machine",
                        "process",
                        "user"
                    ],
                    "description": [
                        "The level at which to set the environment variable.",
                        "Use C(machine) to set for all users.",
                        "Use C(user) to set for the current user that ansible is connected as.",
                        "Use C(process) to set for the current process.  Probably not that useful."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the environment variable. Required when I(state=absent)."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "description": [
                        "Set to C(present) to ensure environment variable is set.",
                        "Set to C(absent) to ensure it is removed.",
                        "When using I(variables), do not set this option."
                    ],
                    "type": "str"
                },
                "value": {
                    "description": [
                        "The value to store in the environment variable.",
                        "Must be set when I(state=present) and cannot be an empty string.",
                        "Should be omitted for I(state=absent) and I(variables)."
                    ],
                    "type": "str"
                },
                "variables": {
                    "description": [
                        "A dictionary where multiple environment variables can be defined at once.",
                        "Not valid when I(state) is set. Variables with a value will be set (C(present)) and variables with an empty value will be unset (C(absent)).",
                        "I(level) applies to all vars defined this way."
                    ],
                    "type": "dict",
                    "version_added": "1.3.0",
                    "version_added_collection": "ansible.windows"
                }
            },
            "seealso": [
                {
                    "module": "ansible.windows.win_path"
                }
            ],
            "short_description": "Modify environment variables on windows hosts"
        },
        "examples": "\n- name: Set an environment variable for all users\n  ansible.windows.win_environment:\n    state: present\n    name: TestVariable\n    value: Test value\n    level: machine\n\n- name: Remove an environment variable for the current user\n  ansible.windows.win_environment:\n    state: absent\n    name: TestVariable\n    level: user\n\n- name: Set several variables at once\n  ansible.windows.win_environment:\n    level: machine\n    variables:\n      TestVariable: Test value\n      CUSTOM_APP_VAR: 'Very important value'\n      ANOTHER_VAR: '{{ my_ansible_var }}'\n\n- name: Set and remove multiple variables at once\n  ansible.windows.win_environment:\n    level: user\n    variables:\n      TestVariable: Test value\n      CUSTOM_APP_VAR: 'Very important value'\n      ANOTHER_VAR: '{{ my_ansible_var }}'\n      UNWANTED_VAR: ''  # < this will be removed\n",
        "metadata": null,
        "return": {
            "before_value": {
                "description": "the value of the environment key before a change, this is null if it didn't exist",
                "returned": "always",
                "sample": "C:\\Windows\\System32",
                "type": "str"
            },
            "value": {
                "description": "the value the environment key has been set to, this is null if removed",
                "returned": "always",
                "sample": "C:\\Program Files\\jdk1.8",
                "type": "str"
            },
            "values": {
                "description": "dictionary of before and after values; each key is a variable name, each value is another dict with C(before), C(after), and C(changed) keys",
                "returned": "always",
                "type": "dict",
                "version_added": "1.3.0",
                "version_added_collection": "ansible.windows"
            }
        }
    }
}
