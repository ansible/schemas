{
    "community.general.github_key": {
        "doc": {
            "author": "Robert Estelle (@erydo)",
            "collection": "community.general",
            "description": [
                "Creates, removes, or updates GitHub access keys."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/github_key.py",
            "has_action": false,
            "module": "github_key",
            "options": {
                "force": {
                    "default": "yes",
                    "description": [
                        "The default is C(yes), which will replace the existing remote key if it's different than C(pubkey). If C(no), the key will only be set if no key with the given C(name) exists."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "SSH key name"
                    ],
                    "required": true,
                    "type": "str"
                },
                "pubkey": {
                    "description": [
                        "SSH public key value. Required when C(state=present)."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to remove a key, ensure that it exists, or update its value."
                    ],
                    "type": "str"
                },
                "token": {
                    "description": [
                        "GitHub Access Token with permission to list and create public keys."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "short_description": "Manage GitHub access keys."
        },
        "examples": "\n- name: Read SSH public key to authorize\n  ansible.builtin.shell: cat /home/foo/.ssh/id_rsa.pub\n  register: ssh_pub_key\n\n- name: Authorize key with GitHub\n  local_action:\n    module: github_key\n    name: Access Key for Some Machine\n    token: '{{ github_access_token }}'\n    pubkey: '{{ ssh_pub_key.stdout }}'\n",
        "metadata": null,
        "return": {
            "deleted_keys": {
                "description": "An array of key objects that were deleted. Only present on state=absent",
                "returned": "When state=absent",
                "sample": [
                    {
                        "created_at": "YYYY-MM-DDTHH:MM:SZ",
                        "id": 0,
                        "key": "BASE64 encoded key",
                        "read_only": false,
                        "url": "http://example.com/github key"
                    }
                ],
                "type": "list"
            },
            "key": {
                "description": "Metadata about the key just created. Only present on state=present",
                "returned": "success",
                "sample": {
                    "created_at": "YYYY-MM-DDTHH:MM:SZ",
                    "id": 0,
                    "key": "BASE64 encoded key",
                    "read_only": false,
                    "url": "http://example.com/github key"
                },
                "type": "dict"
            },
            "matching_keys": {
                "description": "An array of keys matching the specified name. Only present on state=present",
                "returned": "When state=present",
                "sample": [
                    {
                        "created_at": "YYYY-MM-DDTHH:MM:SZ",
                        "id": 0,
                        "key": "BASE64 encoded key",
                        "read_only": false,
                        "url": "http://example.com/github key"
                    }
                ],
                "type": "list"
            }
        }
    }
}
