{
    "community.general.rax_scaling_policy": {
        "doc": {
            "author": "Matt Martz (@sivel)",
            "collection": "community.general",
            "description": [
                "Manipulate Rackspace Cloud Autoscale Scaling Policy"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/rax_scaling_policy.py",
            "has_action": false,
            "module": "rax_scaling_policy",
            "notes": [
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)",
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)"
            ],
            "options": {
                "api_key": {
                    "aliases": [
                        "password"
                    ],
                    "description": [
                        "Rackspace API key, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "at": {
                    "description": [
                        "The UTC time when this policy will be executed. The time must be formatted according to C(yyyy-MM-dd'T'HH:mm:ss.SSS) such as C(2013-05-19T08:07:08Z)"
                    ],
                    "type": "str"
                },
                "auth_endpoint": {
                    "description": [
                        "The URI of the authentication service.",
                        "If not specified will be set to U(https://identity.api.rackspacecloud.com/v2.0/)"
                    ],
                    "type": "str"
                },
                "change": {
                    "description": [
                        "The change, either as a number of servers or as a percentage, to make in the scaling group. If this is a percentage, you must set I(is_percent) to C(true) also."
                    ],
                    "type": "int"
                },
                "cooldown": {
                    "default": 300,
                    "description": [
                        "The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer between 0 and 86400 (24 hrs)."
                    ],
                    "type": "int"
                },
                "credentials": {
                    "aliases": [
                        "creds_file"
                    ],
                    "description": [
                        "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
                    ],
                    "type": "path"
                },
                "cron": {
                    "description": [
                        "The time when the policy will be executed, as a cron entry. For example, if this is parameter is set to C(1 0 * * *)"
                    ],
                    "type": "str"
                },
                "desired_capacity": {
                    "description": [
                        "The desired server capacity of the scaling the group; that is, how many servers should be in the scaling group."
                    ],
                    "type": "int"
                },
                "env": {
                    "description": [
                        "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
                    ],
                    "type": "str"
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication mechanism to use, such as rackspace or keystone."
                    ],
                    "type": "str"
                },
                "is_percent": {
                    "default": false,
                    "description": [
                        "Whether the value in I(change) is a percent value"
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "Name to give the policy"
                    ],
                    "required": true,
                    "type": "str"
                },
                "policy_type": {
                    "choices": [
                        "webhook",
                        "schedule"
                    ],
                    "description": [
                        "The type of policy that will be executed for the current release."
                    ],
                    "required": true,
                    "type": "str"
                },
                "region": {
                    "description": [
                        "Region to create an instance in."
                    ],
                    "type": "str"
                },
                "scaling_group": {
                    "description": [
                        "Name of the scaling group that this policy will be added to"
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "type": "str"
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication."
                    ],
                    "type": "str"
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Rackspace username, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify_ssl"
                    ],
                    "description": [
                        "Whether or not to require SSL validation of API endpoints."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "pyrax",
                "python >= 2.6"
            ],
            "short_description": "Manipulate Rackspace Cloud Autoscale Scaling Policy"
        },
        "examples": "\n---\n- hosts: localhost\n  gather_facts: false\n  connection: local\n  tasks:\n    - community.general.rax_scaling_policy:\n        credentials: ~/.raxpub\n        region: ORD\n        at: '2013-05-19T08:07:08Z'\n        change: 25\n        cooldown: 300\n        is_percent: true\n        name: ASG Test Policy - at\n        policy_type: schedule\n        scaling_group: ASG Test\n      register: asps_at\n\n    - community.general.rax_scaling_policy:\n        credentials: ~/.raxpub\n        region: ORD\n        cron: '1 0 * * *'\n        change: 25\n        cooldown: 300\n        is_percent: true\n        name: ASG Test Policy - cron\n        policy_type: schedule\n        scaling_group: ASG Test\n      register: asp_cron\n\n    - community.general.rax_scaling_policy:\n        credentials: ~/.raxpub\n        region: ORD\n        cooldown: 300\n        desired_capacity: 5\n        name: ASG Test Policy - webhook\n        policy_type: webhook\n        scaling_group: ASG Test\n      register: asp_webhook\n",
        "metadata": null,
        "return": null
    }
}
