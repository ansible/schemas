{
    "cisco.meraki.meraki_ms_link_aggregation": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Allows for management of MS switch link aggregations in a Meraki environment."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_ms_link_aggregation.py",
            "has_action": false,
            "module": "meraki_ms_link_aggregation",
            "notes": [
                "Switch profile ports are not supported in this module.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "lag_id": {
                    "description": [
                        "ID of lag to query or modify."
                    ],
                    "type": "str"
                },
                "net_id": {
                    "description": [
                        "ID of network."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "description": [
                        "Name of network."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "absent",
                        "query",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Specifies whether SNMP information should be queried or modified."
                    ],
                    "type": "str"
                },
                "switch_ports": {
                    "description": [
                        "List of switchports to include in link aggregation."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "port_id": {
                            "description": [
                                "Port number which should be included in link aggregation."
                            ],
                            "type": "str"
                        },
                        "serial": {
                            "description": [
                                "Serial number of switch to own link aggregation."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage link aggregations on MS switches",
            "version_added": "1.2.0",
            "version_added_collection": "cisco.meraki"
        },
        "examples": "\n- name: Create LAG\n  meraki_ms_link_aggregation:\n    auth_key: '{{auth_key}}'\n    state: present\n    org_name: '{{test_org_name}}'\n    net_name: '{{test_switch_net_name}}'\n    switch_ports:\n      - serial: '{{serial_switch}}'\n        port_id: \"1\"\n      - serial: '{{serial_switch}}'\n        port_id: \"2\"\n  delegate_to: localhost\n\n- name: Update LAG\n  meraki_ms_link_aggregation:\n    auth_key: '{{auth_key}}'\n    state: present\n    org_name: '{{test_org_name}}'\n    net_name: '{{test_switch_net_name}}'\n    lag_id: '{{lag_id}}'\n    switch_ports:\n      - serial: '{{serial_switch}}'\n        port_id: \"1\"\n      - serial: '{{serial_switch}}'\n        port_id: \"2\"\n      - serial: '{{serial_switch}}'\n        port_id: \"3\"\n      - serial: '{{serial_switch}}'\n        port_id: \"4\"\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "id": {
                        "description": [
                            "ID of link aggregation."
                        ],
                        "returned": "success",
                        "sample": "MTK3M4A2ZDdfM3==",
                        "type": "str"
                    },
                    "switch_ports": {
                        "contains": {
                            "port_id": {
                                "description": [
                                    "Port number."
                                ],
                                "returned": "success",
                                "sample": "1",
                                "type": "str"
                            },
                            "serial": {
                                "description": [
                                    "Serial number of switch on which port resides."
                                ],
                                "returned": "success",
                                "sample": "ABCD-1234-WXYZ",
                                "type": "str"
                            }
                        },
                        "description": [
                            "List of switch ports to be included in link aggregation."
                        ],
                        "returned": "success",
                        "type": "complex"
                    }
                },
                "description": "List of aggregated links.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
