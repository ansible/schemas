{
    "netapp_eseries.santricity.netapp_e_volume": {
        "doc": {
            "author": [
                "Kevin Hulquest (@hulquest)",
                "Nathan Swartz (@ndswartz)"
            ],
            "collection": "netapp_eseries.santricity",
            "description": [
                "Create or remove volumes (standard and thin) for NetApp E/EF-series storage arrays."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netapp_eseries/santricity/plugins/modules/netapp_e_volume.py",
            "has_action": false,
            "module": "netapp_e_volume",
            "notes": [
                "The E-Series Ansible modules require either an instance of the Web Services Proxy (WSP), to be available to manage the storage-system, or an E-Series storage-system that supports the Embedded Web Services API.",
                "Embedded Web Services is currently available on the E2800, E5700, EF570, and newer hardware models.",
                "M(netapp_e_storage_system) may be utilized for configuring the systems managed by a WSP instance."
            ],
            "options": {
                "api_password": {
                    "description": [
                        "The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_url": {
                    "description": [
                        "The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2"
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_username": {
                    "description": [
                        "The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API."
                    ],
                    "required": true,
                    "type": "str"
                },
                "cache_without_batteries": {
                    "default": false,
                    "description": [
                        "Indicates whether caching should be used without battery backup.",
                        "Warning, M(cache_without_batteries==true) and the storage system looses power and there is no battery backup, data will be lost!"
                    ],
                    "type": "bool",
                    "version_added": 2.9,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "data_assurance_enabled": {
                    "default": false,
                    "description": [
                        "Determines whether data assurance (DA) should be enabled for the volume",
                        "Only available when creating a new volume and on a storage pool with drives supporting the DA capability."
                    ],
                    "type": "bool"
                },
                "initialization_timeout": {
                    "description": [
                        "Duration in seconds before the wait_for_initialization operation will terminate.",
                        "M(wait_for_initialization==True) to have any effect on module's operations."
                    ],
                    "required": false,
                    "type": "int",
                    "version_added": 2.9,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "metadata": {
                    "description": [
                        "Dictionary containing meta data for the use, user, location, etc of the volume (dictionary is arbitrarily defined for whatever the user deems useful)",
                        "When I(workload_name) exists on the storage array but the metadata is different then the workload definition will be updated. (Changes will update all associated volumes!)",
                        "I(workload_name) must be specified when I(metadata) are defined."
                    ],
                    "required": false,
                    "type": "dict",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "name": {
                    "description": [
                        "The name of the volume to manage."
                    ],
                    "required": true,
                    "type": "str"
                },
                "owning_controller": {
                    "choices": [
                        "A",
                        "B"
                    ],
                    "description": [
                        "Specifies which controller will be the primary owner of the volume",
                        "Not specifying will allow the controller to choose ownership."
                    ],
                    "required": false,
                    "type": "str",
                    "version_added": 2.9,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "read_ahead_enable": {
                    "default": true,
                    "description": [
                        "Indicates whether or not automatic cache read-ahead is enabled.",
                        "This option has no effect on thinly provisioned volumes since the architecture for thin volumes cannot benefit from read ahead caching."
                    ],
                    "type": "bool",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "read_cache_enable": {
                    "default": true,
                    "description": [
                        "Indicates whether read caching should be enabled for the volume."
                    ],
                    "type": "bool",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "segment_size_kb": {
                    "default": "128",
                    "description": [
                        "Segment size of the volume",
                        "All values are in kibibytes.",
                        "Some common choices include '8', '16', '32', '64', '128', '256', and '512' but options are system dependent.",
                        "Retrieve the definitive system list from M(netapp_e_facts) under segment_sizes.",
                        "When the storage pool is a raidDiskPool then the segment size must be 128kb.",
                        "Segment size migrations are not allowed in this module"
                    ],
                    "type": "int"
                },
                "size": {
                    "description": [
                        "Required only when I(state=='present').",
                        "Size of the volume in I(size_unit).",
                        "Size of the virtual volume in the case of a thin volume in I(size_unit).",
                        "Maximum virtual volume size of a thin provisioned volume is 256tb; however other OS-level restrictions may exist."
                    ],
                    "required": true,
                    "type": "float"
                },
                "size_unit": {
                    "choices": [
                        "bytes",
                        "b",
                        "kb",
                        "mb",
                        "gb",
                        "tb",
                        "pb",
                        "eb",
                        "zb",
                        "yb"
                    ],
                    "default": "gb",
                    "description": [
                        "The unit used to interpret the size parameter"
                    ],
                    "type": "str"
                },
                "ssd_cache_enabled": {
                    "default": false,
                    "description": [
                        "Whether an existing SSD cache should be enabled on the volume (fails if no SSD cache defined)",
                        "The default value is to ignore existing SSD cache setting."
                    ],
                    "type": "bool"
                },
                "ssid": {
                    "default": 1,
                    "description": [
                        "The ID of the array to manage. This value must be unique for each array."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Whether the specified volume should exist"
                    ],
                    "required": true,
                    "type": "str"
                },
                "storage_pool_name": {
                    "description": [
                        "Required only when requested I(state=='present').",
                        "Name of the storage pool wherein the volume should reside."
                    ],
                    "required": false,
                    "type": "str"
                },
                "thin_provision": {
                    "default": false,
                    "description": [
                        "Whether the volume should be thin provisioned.",
                        "Thin volumes can only be created when I(raid_level==\"raidDiskPool\").",
                        "Generally, use of thin-provisioning is not recommended due to performance impacts."
                    ],
                    "type": "bool"
                },
                "thin_volume_expansion_policy": {
                    "choices": [
                        "automatic",
                        "manual"
                    ],
                    "default": "automatic",
                    "description": [
                        "This is the thin volume expansion policy.",
                        "When I(thin_volume_expansion_policy==\"automatic\") and I(thin_volume_growth_alert_threshold) is exceed the I(thin_volume_max_repo_size) will be automatically expanded.",
                        "When I(thin_volume_expansion_policy==\"manual\") and I(thin_volume_growth_alert_threshold) is exceeded the storage system will wait for manual intervention.",
                        "The thin volume_expansion policy can not be modified on existing thin volumes in this module.",
                        "Generally speaking you should almost always use I(thin_volume_expansion_policy==\"automatic)."
                    ],
                    "type": "str",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "thin_volume_growth_alert_threshold": {
                    "default": 95,
                    "description": [
                        "This is the thin provision repository utilization threshold (in percent).",
                        "When the percentage of used storage of the maximum repository size exceeds this value then a alert will be issued and the I(thin_volume_expansion_policy) will be executed.",
                        "Values must be between or equal to 10 and 99."
                    ],
                    "type": "int",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "thin_volume_max_repo_size": {
                    "description": [
                        "This is the maximum amount the thin volume repository will be allowed to grow.",
                        "Only has significance when I(thin_volume_expansion_policy==\"automatic\").",
                        "When the percentage I(thin_volume_repo_size) of I(thin_volume_max_repo_size) exceeds I(thin_volume_growth_alert_threshold) then a warning will be issued and the storage array will execute the I(thin_volume_expansion_policy) policy.",
                        "Expansion operations when I(thin_volume_expansion_policy==\"automatic\") will increase the maximum repository size.",
                        "The default will be the same as size (in size_unit)"
                    ],
                    "type": "float"
                },
                "thin_volume_repo_size": {
                    "description": [
                        "This value (in size_unit) sets the allocated space for the thin provisioned repository.",
                        "Initial value must between or equal to 4gb and 256gb in increments of 4gb.",
                        "During expansion operations the increase must be between or equal to 4gb and 256gb in increments of 4gb.",
                        "This option has no effect during expansion if I(thin_volume_expansion_policy==\"automatic\").",
                        "Generally speaking you should almost always use I(thin_volume_expansion_policy==\"automatic)."
                    ],
                    "required": false,
                    "type": "int"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Should https certificates be validated?"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "wait_for_initialization": {
                    "default": false,
                    "description": [
                        "Forces the module to wait for expansion operations to complete before continuing."
                    ],
                    "type": "bool",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "workload_name": {
                    "description": [
                        "Label for the workload defined by the metadata.",
                        "When I(workload_name) and I(metadata) are specified then the defined workload will be added to the storage array.",
                        "When I(workload_name) exists on the storage array but the metadata is different then the workload definition will be updated. (Changes will update all associated volumes!)",
                        "Existing workloads can be retrieved using M(netapp_e_facts)."
                    ],
                    "required": false,
                    "type": "str",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                },
                "write_cache_enable": {
                    "default": true,
                    "description": [
                        "Indicates whether write-back caching should be enabled for the volume."
                    ],
                    "type": "bool",
                    "version_added": 2.8,
                    "version_added_collection": "netapp_eseries.santricity"
                }
            },
            "short_description": "NetApp E-Series manage storage volumes (standard and thin)",
            "version_added": "2.2",
            "version_added_collection": "netapp_eseries.santricity"
        },
        "examples": "\n- name: Create simple volume with workload tags (volume meta data)\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume\n    storage_pool_name: storage_pool\n    size: 300\n    size_unit: gb\n    workload_name: volume_tag\n    metadata:\n      key1: value1\n      key2: value2\n- name: Create a thin volume\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 131072\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 1024\n- name: Expand thin volume's virtual size\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 262144\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 1024\n- name: Expand thin volume's maximum repository size\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: present\n    name: volume1\n    storage_pool_name: storage_pool\n    size: 262144\n    size_unit: gb\n    thin_provision: true\n    thin_volume_repo_size: 32\n    thin_volume_max_repo_size: 2048\n- name: Delete volume\n  netapp_e_volume:\n    ssid: \"{{ ssid }}\"\n    api_url: \"{{ netapp_api_url }}\"\n    api_username: \"{{ netapp_api_username }}\"\n    api_password: \"{{ netapp_api_password }}\"\n    validate_certs: \"{{ netapp_api_validate_certs }}\"\n    state: absent\n    name: volume\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "deprecated"
            ],
            "supported_by": "community"
        },
        "return": {
            "msg": {
                "description": "State of volume",
                "returned": "always",
                "sample": "Standard volume [workload_vol_1] has been created.",
                "type": "str"
            }
        }
    }
}
