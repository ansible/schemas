{
    "community.general.ipa_user": {
        "doc": {
            "author": "Thomas Krahn (@Nosmoht)",
            "collection": "community.general",
            "description": [
                "Add, modify and delete user within IPA server."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/ipa_user.py",
            "has_action": false,
            "module": "ipa_user",
            "options": {
                "displayname": {
                    "description": "Display name.",
                    "type": "str"
                },
                "gidnumber": {
                    "description": [
                        "Posix Group ID."
                    ],
                    "type": "str"
                },
                "givenname": {
                    "description": "First name.",
                    "type": "str"
                },
                "homedirectory": {
                    "description": [
                        "Default home directory of the user."
                    ],
                    "type": "str",
                    "version_added": "0.2.0",
                    "version_added_collection": "community.general"
                },
                "ipa_host": {
                    "default": "ipa.example.com",
                    "description": [
                        "IP or hostname of IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_HOST) will be used instead.",
                        "If both the environment variable C(IPA_HOST) and the value are not specified in the task, then DNS will be used to try to discover the FreeIPA server.",
                        "The relevant entry needed in FreeIPA is the 'ipa-ca' entry.",
                        "If neither the DNS entry, nor the environment C(IPA_HOST), nor the value are available in the task, then the default value will be used.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_pass": {
                    "description": [
                        "Password of administrative user.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PASS) will be used instead.",
                        "Note that if the 'urllib_gssapi' library is available, it is possible to use GSSAPI to authenticate to FreeIPA.",
                        "If the environment variable C(KRB5CCNAME) is available, the module will use this kerberos credentials cache to authenticate to the FreeIPA server.",
                        "If the environment variable C(KRB5_CLIENT_KTNAME) is available, and C(KRB5CCNAME) is not; the module will use this kerberos keytab to authenticate.",
                        "If GSSAPI is not available, the usage of 'ipa_pass' is required.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_port": {
                    "default": 443,
                    "description": [
                        "Port of FreeIPA / IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PORT) will be used instead.",
                        "If both the environment variable C(IPA_PORT) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "int"
                },
                "ipa_prot": {
                    "choices": [
                        "http",
                        "https"
                    ],
                    "default": "https",
                    "description": [
                        "Protocol used by IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_PROT) will be used instead.",
                        "If both the environment variable C(IPA_PROT) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "ipa_timeout": {
                    "default": 10,
                    "description": [
                        "Specifies idle timeout (in seconds) for the connection.",
                        "For bulk operations, you may want to increase this in order to avoid timeout from IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_TIMEOUT) will be used instead.",
                        "If both the environment variable C(IPA_TIMEOUT) and the value are not specified in the task, then default value is set."
                    ],
                    "type": "int"
                },
                "ipa_user": {
                    "default": "admin",
                    "description": [
                        "Administrative account used on IPA server.",
                        "If the value is not specified in the task, the value of environment variable C(IPA_USER) will be used instead.",
                        "If both the environment variable C(IPA_USER) and the value are not specified in the task, then default value is set.",
                        "Environment variable fallback mechanism is added in Ansible 2.5."
                    ],
                    "type": "str"
                },
                "krbpasswordexpiration": {
                    "description": [
                        "Date at which the user password will expire.",
                        "In the format YYYYMMddHHmmss.",
                        "e.g. 20180121182022 will expire on 21 January 2018 at 18:20:22."
                    ],
                    "type": "str"
                },
                "loginshell": {
                    "description": "Login shell.",
                    "type": "str"
                },
                "mail": {
                    "description": [
                        "List of mail addresses assigned to the user.",
                        "If an empty list is passed all assigned email addresses will be deleted.",
                        "If None is passed email addresses will not be checked or changed."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "password": {
                    "description": [
                        "Password for a user.",
                        "Will not be set for an existing user unless I(update_password=always), which is the default."
                    ],
                    "type": "str"
                },
                "sn": {
                    "description": "Surname.",
                    "type": "str"
                },
                "sshpubkey": {
                    "description": [
                        "List of public SSH key.",
                        "If an empty list is passed all assigned public keys will be deleted.",
                        "If None is passed SSH public keys will not be checked or changed."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "absent",
                        "disabled",
                        "enabled",
                        "present"
                    ],
                    "default": "present",
                    "description": "State to ensure.",
                    "type": "str"
                },
                "telephonenumber": {
                    "description": [
                        "List of telephone numbers assigned to the user.",
                        "If an empty list is passed all assigned telephone numbers will be deleted.",
                        "If None is passed telephone numbers will not be checked or changed."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "title": {
                    "description": "Title.",
                    "type": "str"
                },
                "uid": {
                    "aliases": [
                        "name"
                    ],
                    "description": "uid of the user.",
                    "required": true,
                    "type": "str"
                },
                "uidnumber": {
                    "description": [
                        "Account Settings UID/Posix User ID number."
                    ],
                    "type": "str"
                },
                "update_password": {
                    "choices": [
                        "always",
                        "on_create"
                    ],
                    "default": "always",
                    "description": [
                        "Set password for a user."
                    ],
                    "type": "str"
                },
                "userauthtype": {
                    "choices": [
                        "password",
                        "radius",
                        "otp",
                        "pkinit",
                        "hardened"
                    ],
                    "description": [
                        "The authentication type to use for the user."
                    ],
                    "elements": "str",
                    "type": "list",
                    "version_added": "1.2.0",
                    "version_added_collection": "community.general"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "This only applies if C(ipa_prot) is I(https).",
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "base64",
                "hashlib"
            ],
            "short_description": "Manage FreeIPA users"
        },
        "examples": "\n- name: Ensure pinky is present and always reset password\n  community.general.ipa_user:\n    name: pinky\n    state: present\n    krbpasswordexpiration: 20200119235959\n    givenname: Pinky\n    sn: Acme\n    mail:\n    - pinky@acme.com\n    telephonenumber:\n    - '+555123456'\n    sshpubkey:\n    - ssh-rsa ....\n    - ssh-dsa ....\n    uidnumber: '1001'\n    gidnumber: '100'\n    homedirectory: /home/pinky\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n\n- name: Ensure brain is absent\n  community.general.ipa_user:\n    name: brain\n    state: absent\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n\n- name: Ensure pinky is present but don't reset password if already exists\n  community.general.ipa_user:\n    name: pinky\n    state: present\n    givenname: Pinky\n    sn: Acme\n    password: zounds\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n    update_password: on_create\n\n- name: Ensure pinky is present and using one time password and RADIUS authentication\n  community.general.ipa_user:\n    name: pinky\n    state: present\n    userauthtype:\n      - otp\n      - radius\n    ipa_host: ipa.example.com\n    ipa_user: admin\n    ipa_pass: topsecret\n",
        "metadata": null,
        "return": {
            "user": {
                "description": "User as returned by IPA API",
                "returned": "always",
                "type": "dict"
            }
        }
    }
}
