{
    "community.general.nios_fixed_address": {
        "doc": {
            "author": "Sumit Jaiswal (@sjaiswal)",
            "collection": "community.general",
            "description": [
                "A fixed address is a specific IP address that a DHCP server always assigns when a lease request comes from a particular MAC address of the client.",
                "Supports both IPV4 and IPV6 internet protocols"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/nios_fixed_address.py",
            "has_action": false,
            "module": "nios_fixed_address",
            "notes": [
                "This module must be run locally, which can be achieved by specifying C(connection: local).",
                "Please read the :ref:`nios_guide` for more detailed information on how to use Infoblox with Ansible."
            ],
            "options": {
                "comment": {
                    "description": [
                        "Configures a text string comment to be associated with the instance of this object.  The provided text string will be configured on the object instance."
                    ],
                    "type": "str"
                },
                "extattrs": {
                    "description": [
                        "Allows for the configuration of Extensible Attributes on the instance of the object.  This argument accepts a set of key / value pairs for configuration."
                    ],
                    "type": "dict"
                },
                "ipaddr": {
                    "description": [
                        "IPV4/V6 address of the fixed address."
                    ],
                    "required": true,
                    "type": "str"
                },
                "mac": {
                    "description": [
                        "The MAC address of the interface."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Specifies the hostname with which fixed DHCP ip-address is stored for respective mac."
                    ],
                    "required": true,
                    "type": "str"
                },
                "network": {
                    "description": [
                        "Specifies the network range in which ipaddr exists."
                    ],
                    "required": true,
                    "type": "str"
                },
                "network_view": {
                    "default": "default",
                    "description": [
                        "Configures the name of the network view to associate with this configured instance."
                    ],
                    "required": false,
                    "type": "str"
                },
                "options": {
                    "description": [
                        "Configures the set of DHCP options to be included as part of the configured network instance.  This argument accepts a list of values (see suboptions).  When configuring suboptions at least one of C(name) or C(num) must be specified."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "name": {
                            "description": [
                                "The name of the DHCP option to configure"
                            ],
                            "type": "str"
                        },
                        "num": {
                            "description": [
                                "The number of the DHCP option to configure"
                            ],
                            "type": "int"
                        },
                        "use_option": {
                            "default": "yes",
                            "description": [
                                "Only applies to a subset of options (see NIOS API documentation)"
                            ],
                            "type": "bool"
                        },
                        "value": {
                            "description": [
                                "The value of the DHCP option specified by C(name)"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "vendor_class": {
                            "default": "DHCP",
                            "description": [
                                "The name of the space this DHCP option is associated to"
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote instance of NIOS WAPI over REST",
                                "Value can also be specified using C(INFOBLOX_HOST) environment variable."
                            ],
                            "type": "str"
                        },
                        "http_pool_connections": {
                            "default": 10,
                            "description": [
                                "Number of pools to be used by the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "int"
                        },
                        "http_pool_maxsize": {
                            "default": 10,
                            "description": [
                                "Maximum number of connections per pool to be used by the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "int"
                        },
                        "http_request_timeout": {
                            "default": 10,
                            "description": [
                                "The amount of time before to wait before receiving a response",
                                "Value can also be specified using C(INFOBLOX_HTTP_REQUEST_TIMEOUT) environment variable."
                            ],
                            "type": "int"
                        },
                        "max_results": {
                            "default": 1000,
                            "description": [
                                "Specifies the maximum number of objects to be returned, if set to a negative number the appliance will return an error when the number of returned objects would exceed the setting.",
                                "Value can also be specified using C(INFOBLOX_MAX_RESULTS) environment variable."
                            ],
                            "type": "int"
                        },
                        "max_retries": {
                            "default": 3,
                            "description": [
                                "Configures the number of attempted retries before the connection is declared usable",
                                "Value can also be specified using C(INFOBLOX_MAX_RETRIES) environment variable."
                            ],
                            "type": "int"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote instance of NIOS.",
                                "Value can also be specified using C(INFOBLOX_PASSWORD) environment variable."
                            ],
                            "type": "str"
                        },
                        "silent_ssl_warnings": {
                            "default": true,
                            "description": [
                                "Disable C(urllib3) SSL warnings in the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote instance of NIOS.",
                                "Value can also be specified using C(INFOBLOX_USERNAME) environment variable."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "ssl_verify"
                            ],
                            "default": false,
                            "description": [
                                "Boolean value to enable or disable verifying SSL certificates",
                                "Value can also be specified using C(INFOBLOX_SSL_VERIFY) environment variable."
                            ],
                            "type": "bool"
                        },
                        "wapi_version": {
                            "default": "2.1",
                            "description": [
                                "Specifies the version of WAPI to use",
                                "Value can also be specified using C(INFOBLOX_WAP_VERSION) environment variable.",
                                "Until ansible 2.8 the default WAPI was 1.4"
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Configures the intended state of the instance of the object on the NIOS server.  When this value is set to C(present), the object is configured on the device and when this value is set to C(absent) the value is removed (if necessary) from the device."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "infoblox-client"
            ],
            "short_description": "Configure Infoblox NIOS DHCP Fixed Address"
        },
        "examples": "\n- name: Configure ipv4 dhcp fixed address\n  community.general.nios_fixed_address:\n    name: ipv4_fixed\n    ipaddr: 192.168.10.1\n    mac: 08:6d:41:e8:fd:e8\n    network: 192.168.10.0/24\n    network_view: default\n    comment: this is a test comment\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Configure a ipv6 dhcp fixed address\n  community.general.nios_fixed_address:\n    name: ipv6_fixed\n    ipaddr: fe80::1/10\n    mac: 08:6d:41:e8:fd:e8\n    network: fe80::/64\n    network_view: default\n    comment: this is a test comment\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Set dhcp options for a ipv4 fixed address\n  community.general.nios_fixed_address:\n    name: ipv4_fixed\n    ipaddr: 192.168.10.1\n    mac: 08:6d:41:e8:fd:e8\n    network: 192.168.10.0/24\n    network_view: default\n    comment: this is a test comment\n    options:\n      - name: domain-name\n        value: ansible.com\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Remove a ipv4 dhcp fixed address\n  community.general.nios_fixed_address:\n    name: ipv4_fixed\n    ipaddr: 192.168.10.1\n    mac: 08:6d:41:e8:fd:e8\n    network: 192.168.10.0/24\n    network_view: default\n    state: absent\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n",
        "metadata": null,
        "return": null
    }
}
