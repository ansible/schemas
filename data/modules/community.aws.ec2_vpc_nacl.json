{
    "community.aws.ec2_vpc_nacl": {
        "doc": {
            "author": "Mike Mochan (@mmochan)",
            "collection": "community.aws",
            "description": [
                "Read the AWS documentation for Network ACLS U(https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_vpc_nacl.py",
            "has_action": false,
            "module": "ec2_vpc_nacl",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "egress": {
                    "default": [],
                    "description": [
                        "A list of rules for outgoing traffic. Each rule must be specified as a list. Each rule may contain the rule number (integer 1-32766), protocol (one of ['tcp', 'udp', 'icmp', 'ipv6-icmp', '-1', 'all']), the rule action ('allow' or 'deny') the CIDR of the IPv4 or IPv6 network range to allow or deny, the ICMP type (-1 means all types), the ICMP code (-1 means all codes), the last port in the range for TCP or UDP protocols, and the first port in the range for TCP or UDP protocols. See examples."
                    ],
                    "elements": "list",
                    "required": false,
                    "type": "list"
                },
                "ingress": {
                    "default": [],
                    "description": [
                        "List of rules for incoming traffic. Each rule must be specified as a list. Each rule may contain the rule number (integer 1-32766), protocol (one of ['tcp', 'udp', 'icmp', 'ipv6-icmp', '-1', 'all']), the rule action ('allow' or 'deny') the CIDR of the IPv4 or IPv6 network range to allow or deny, the ICMP type (-1 means all types), the ICMP code (-1 means all codes), the last port in the range for TCP or UDP protocols, and the first port in the range for TCP or UDP protocols. See examples."
                    ],
                    "elements": "list",
                    "required": false,
                    "type": "list"
                },
                "nacl_id": {
                    "description": [
                        "NACL id identifying a network ACL.",
                        "One and only one of the I(name) or I(nacl_id) is required."
                    ],
                    "required": false,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Tagged name identifying a network ACL.",
                        "One and only one of the I(name) or I(nacl_id) is required."
                    ],
                    "required": false,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Creates or modifies an existing NACL",
                        "Deletes a NACL and reassociates subnets to the default NACL"
                    ],
                    "required": false,
                    "type": "str"
                },
                "subnets": {
                    "description": [
                        "The list of subnets that should be associated with the network ACL.",
                        "Must be specified as a list",
                        "Each subnet can be specified as subnet ID, or its tagged name."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "tags": {
                    "description": [
                        "Dictionary of tags to look for and apply when creating a network ACL."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "vpc_id": {
                    "description": [
                        "VPC id of the requesting VPC.",
                        "Required when state present."
                    ],
                    "required": false,
                    "type": "str"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore",
                "json",
                "python >= 2.6"
            ],
            "short_description": "create and delete Network ACLs.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n\n# Complete example to create and delete a network ACL\n# that allows SSH, HTTP and ICMP in, and all traffic out.\n- name: \"Create and associate production DMZ network ACL with DMZ subnets\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: vpc-12345678\n    name: prod-dmz-nacl\n    region: ap-southeast-2\n    subnets: ['prod-dmz-1', 'prod-dmz-2']\n    tags:\n      CostCode: CC1234\n      Project: phoenix\n      Description: production DMZ\n    ingress:\n        # rule no, protocol, allow/deny, cidr, icmp_type, icmp_code,\n        #                                             port from, port to\n        - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]\n        - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]\n        - [205, 'tcp', 'allow', '::/0', null, null, 80, 80]\n        - [300, 'icmp', 'allow', '0.0.0.0/0', 0, 8]\n        - [305, 'ipv6-icmp', 'allow', '::/0', 0, 8]\n    egress:\n        - [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]\n        - [105, 'all', 'allow', '::/0', null, null, null, null]\n    state: 'present'\n\n- name: \"Remove the ingress and egress rules - defaults to deny all\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: vpc-12345678\n    name: prod-dmz-nacl\n    region: ap-southeast-2\n    subnets:\n      - prod-dmz-1\n      - prod-dmz-2\n    tags:\n      CostCode: CC1234\n      Project: phoenix\n      Description: production DMZ\n    state: present\n\n- name: \"Remove the NACL subnet associations and tags\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: 'vpc-12345678'\n    name: prod-dmz-nacl\n    region: ap-southeast-2\n    state: present\n\n- name: \"Delete nacl and subnet associations\"\n  community.aws.ec2_vpc_nacl:\n    vpc_id: vpc-12345678\n    name: prod-dmz-nacl\n    state: absent\n\n- name: \"Delete nacl by its id\"\n  community.aws.ec2_vpc_nacl:\n    nacl_id: acl-33b4ee5b\n    state: absent\n",
        "metadata": null,
        "return": {
            "nacl_id": {
                "description": "The id of the NACL (when creating or updating an ACL)",
                "returned": "success",
                "sample": "acl-123456789abcdef01",
                "type": "str"
            },
            "task": {
                "description": "The result of the create, or delete action.",
                "returned": "success",
                "type": "dict"
            }
        }
    }
}
