{
    "community.vmware.vmware_guest_powerstate": {
        "doc": {
            "author": [
                "Abhijeet Kasurde (@Akasurde) <akasurde@redhat.com>"
            ],
            "collection": "community.vmware",
            "description": [
                "Power on / Power off / Restart a virtual machine."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_guest_powerstate.py",
            "has_action": false,
            "module": "vmware_guest_powerstate",
            "options": {
                "folder": {
                    "description": [
                        "Destination folder, absolute or relative path to find an existing guest.",
                        "The folder should include the datacenter. ESX's datacenter is ha-datacenter",
                        "Examples:",
                        "   folder: /ha-datacenter/vm",
                        "   folder: ha-datacenter/vm",
                        "   folder: /datacenter1/vm",
                        "   folder: datacenter1/vm",
                        "   folder: /datacenter1/vm/folder1",
                        "   folder: datacenter1/vm/folder1",
                        "   folder: /folder1/datacenter1/vm",
                        "   folder: folder1/datacenter1/vm",
                        "   folder: /folder1/datacenter1/vm/folder2"
                    ],
                    "type": "str"
                },
                "force": {
                    "default": false,
                    "description": [
                        "Ignore warnings and complete the actions.",
                        "This parameter is useful while forcing virtual machine state."
                    ],
                    "type": "bool"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "moid": {
                    "description": [
                        "Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.",
                        "This is required if C(name) or C(uuid) is not supplied."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the virtual machine to work with.",
                        "Virtual machine names in vCenter are not necessarily unique, which may be problematic, see C(name_match)."
                    ],
                    "type": "str"
                },
                "name_match": {
                    "choices": [
                        "first",
                        "last"
                    ],
                    "default": "first",
                    "description": [
                        "If multiple virtual machines matching the name, use the first or last found."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "schedule_task_description": {
                    "description": [
                        "Description of schedule task.",
                        "Valid only if C(scheduled_at) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "schedule_task_enabled": {
                    "default": true,
                    "description": [
                        "Flag to indicate whether the scheduled task is enabled or disabled."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "schedule_task_name": {
                    "description": [
                        "Name of schedule task.",
                        "Valid only if C(scheduled_at) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "scheduled_at": {
                    "description": [
                        "Date and time in string format at which specified task needs to be performed.",
                        "The required format for date and time - 'dd/mm/yyyy hh:mm'.",
                        "Scheduling task requires vCenter server. A standalone ESXi server does not support this option."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "powered-off",
                        "powered-on",
                        "reboot-guest",
                        "restarted",
                        "shutdown-guest",
                        "suspended",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Set the state of the virtual machine."
                    ],
                    "type": "str"
                },
                "state_change_timeout": {
                    "default": 0,
                    "description": [
                        "If the C(state) is set to C(shutdown-guest), by default the module will return immediately after sending the shutdown signal.",
                        "If this argument is set to a positive integer, the module will instead wait for the VM to reach the poweredoff state.",
                        "The value sets a timeout in seconds for the module to wait for the state change."
                    ],
                    "type": "int"
                },
                "use_instance_uuid": {
                    "default": false,
                    "description": [
                        "Whether to use the VMware instance UUID rather than the BIOS UUID."
                    ],
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "uuid": {
                    "description": [
                        "UUID of the instance to manage if known, this is VMware's unique identifier.",
                        "This is required if C(name) or C(moid) is not supplied."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Manages power states of virtual machines in vCenter"
        },
        "examples": "\n- name: Set the state of a virtual machine to poweroff\n  community.vmware.vmware_guest_powerstate:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    folder: \"/{{ datacenter_name }}/vm/my_folder\"\n    name: \"{{ guest_name }}\"\n    state: powered-off\n  delegate_to: localhost\n  register: deploy\n\n- name: Set the state of a virtual machine to poweron using MoID\n  community.vmware.vmware_guest_powerstate:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    validate_certs: no\n    folder: \"/{{ datacenter_name }}/vm/my_folder\"\n    moid: vm-42\n    state: powered-on\n  delegate_to: localhost\n  register: deploy\n\n- name: Set the state of a virtual machine to poweroff at given scheduled time\n  community.vmware.vmware_guest_powerstate:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    folder: \"/{{ datacenter_name }}/vm/my_folder\"\n    name: \"{{ guest_name }}\"\n    state: powered-off\n    scheduled_at: \"09/01/2018 10:18\"\n    schedule_task_name: \"task_00001\"\n    schedule_task_description: \"Sample task to poweroff VM\"\n    schedule_task_enabled: True\n  delegate_to: localhost\n  register: deploy_at_schedule_datetime\n\n- name: Wait for the virtual machine to shutdown\n  community.vmware.vmware_guest_powerstate:\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    name: \"{{ guest_name }}\"\n    state: shutdown-guest\n    state_change_timeout: 200\n  delegate_to: localhost\n  register: deploy\n",
        "metadata": null,
        "return": null
    }
}
