{
    "cisco.nxos.nxos_aaa_server_host": {
        "doc": {
            "author": "Jason Edelman (@jedelman8)",
            "collection": "cisco.nxos",
            "description": [
                "Manages AAA server host-specific configuration."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nxos/plugins/modules/nxos_aaa_server_host.py",
            "has_action": true,
            "module": "nxos_aaa_server_host",
            "notes": [
                "Tested against NXOSv 7.3.(0)D1(1) on VIRL",
                "Changes to the host key (shared secret) are not idempotent for type 0.",
                "If C(state=absent) removes the whole host configuration.",
                "For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "acct_port": {
                    "description": [
                        "Alternate UDP port for RADIUS accounting or keyword 'default'."
                    ],
                    "type": "str"
                },
                "address": {
                    "description": [
                        "Address or name of the radius or tacacs host."
                    ],
                    "required": true,
                    "type": "str"
                },
                "auth_port": {
                    "description": [
                        "Alternate UDP port for RADIUS authentication or keyword 'default'."
                    ],
                    "type": "str"
                },
                "encrypt_type": {
                    "choices": [
                        "0",
                        "7"
                    ],
                    "description": [
                        "The state of encryption applied to the entered key. O for clear text, 7 for encrypted. Type-6 encryption is not supported."
                    ],
                    "type": "str"
                },
                "host_timeout": {
                    "description": [
                        "Timeout period for specified host, in seconds or keyword 'default. Range is 1-60."
                    ],
                    "type": "str"
                },
                "key": {
                    "description": [
                        "Shared secret for the specified host or keyword 'default'."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "Starting with Ansible 2.6 we recommend using C(connection: httpapi) for NX-API.",
                        "This option will be removed in a release after 2022-06-01.",
                        "For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "str"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "cli",
                                "nxapi"
                            ],
                            "default": "cli",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                            ],
                            "type": "str"
                        },
                        "use_proxy": {
                            "default": true,
                            "description": [
                                "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored."
                            ],
                            "type": "bool"
                        },
                        "use_ssl": {
                            "default": false,
                            "description": [
                                "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=nxapi), otherwise this value is ignored."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": false,
                            "description": [
                                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "server_type": {
                    "choices": [
                        "radius",
                        "tacacs"
                    ],
                    "description": [
                        "The server type is either radius or tacacs."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Manage the state of the resource."
                    ],
                    "type": "str"
                },
                "tacacs_port": {
                    "description": [
                        "Alternate TCP port TACACS Server or keyword 'default'."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages AAA server host-specific configuration.",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.nxos"
        },
        "examples": "\n# Radius Server Host Basic settings\n- name: Radius Server Host Basic settings\n  cisco.nxos.nxos_aaa_server_host:\n    state: present\n    server_type: radius\n    address: 1.2.3.4\n    acct_port: 2084\n    host_timeout: 10\n\n# Radius Server Host Key Configuration\n- name: Radius Server Host Key Configuration\n  cisco.nxos.nxos_aaa_server_host:\n    state: present\n    server_type: radius\n    address: 1.2.3.4\n    key: hello\n    encrypt_type: 7\n\n# TACACS Server Host Configuration\n- name: Tacacs Server Host Configuration\n  cisco.nxos.nxos_aaa_server_host:\n    state: present\n    server_type: tacacs\n    tacacs_port: 89\n    host_timeout: 10\n    address: 5.6.7.8\n\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of configuration after module execution",
                "returned": "always",
                "sample": {
                    "address": "1.2.3.4",
                    "auth_port": "2084",
                    "host_timeout": "10",
                    "server_type": "radius"
                },
                "type": "dict"
            },
            "existing": {
                "description": [
                    "k/v pairs of existing configuration"
                ],
                "returned": "always",
                "sample": {},
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "always",
                "sample": {
                    "address": "1.2.3.4",
                    "auth_port": "2084",
                    "host_timeout": "10",
                    "server_type": "radius"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command sent to the device",
                "returned": "always",
                "sample": [
                    "radius-server host 1.2.3.4 auth-port 2084 timeout 10"
                ],
                "type": "list"
            }
        }
    }
}
