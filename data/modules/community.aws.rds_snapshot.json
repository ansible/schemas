{
    "community.aws.rds_snapshot": {
        "doc": {
            "author": [
                "Will Thames (@willthames)",
                "Michael De La Rue (@mikedlr)"
            ],
            "collection": "community.aws",
            "description": [
                "Creates or deletes RDS snapshots."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/rds_snapshot.py",
            "has_action": false,
            "module": "rds_snapshot",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "db_instance_identifier": {
                    "aliases": [
                        "instance_id"
                    ],
                    "description": [
                        "Database instance identifier. Required when state is present."
                    ],
                    "type": "str"
                },
                "db_snapshot_identifier": {
                    "aliases": [
                        "id",
                        "snapshot_id"
                    ],
                    "description": [
                        "The snapshot to manage."
                    ],
                    "required": true,
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "purge_tags": {
                    "default": true,
                    "description": [
                        "whether to remove tags not present in the C(tags) parameter."
                    ],
                    "type": "bool"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Specify the desired state of the snapshot."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "tags dict to apply to a snapshot."
                    ],
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "Whether or not to wait for snapshot creation or deletion."
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "manage Amazon RDS snapshots.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Create snapshot\n  community.aws.rds_snapshot:\n    db_instance_identifier: new-database\n    db_snapshot_identifier: new-database-snapshot\n\n- name: Delete snapshot\n  community.aws.rds_snapshot:\n    db_snapshot_identifier: new-database-snapshot\n    state: absent\n",
        "metadata": null,
        "return": {
            "allocated_storage": {
                "description": "How much storage is allocated in GB.",
                "returned": "always",
                "sample": 20,
                "type": "int"
            },
            "availability_zone": {
                "description": "Availability zone of the database from which the snapshot was created.",
                "returned": "always",
                "sample": "us-west-2a",
                "type": "str"
            },
            "db_instance_identifier": {
                "description": "Database from which the snapshot was created.",
                "returned": "always",
                "sample": "ansible-test-16638696",
                "type": "str"
            },
            "db_snapshot_arn": {
                "description": "Amazon Resource Name for the snapshot.",
                "returned": "always",
                "sample": "arn:aws:rds:us-west-2:123456789012:snapshot:ansible-test-16638696-test-snapshot",
                "type": "str"
            },
            "db_snapshot_identifier": {
                "description": "Name of the snapshot.",
                "returned": "always",
                "sample": "ansible-test-16638696-test-snapshot",
                "type": "str"
            },
            "dbi_resource_id": {
                "description": "The identifier for the source DB instance, which can't be changed and which is unique to an AWS Region.",
                "returned": "always",
                "sample": "db-MM4P2U35RQRAMWD3QDOXWPZP4U",
                "type": "str"
            },
            "encrypted": {
                "description": "Whether the snapshot is encrypted.",
                "returned": "always",
                "sample": false,
                "type": "bool"
            },
            "engine": {
                "description": "Engine of the database from which the snapshot was created.",
                "returned": "always",
                "sample": "mariadb",
                "type": "str"
            },
            "engine_version": {
                "description": "Version of the database from which the snapshot was created.",
                "returned": "always",
                "sample": "10.2.21",
                "type": "str"
            },
            "iam_database_authentication_enabled": {
                "description": "Whether IAM database authentication is enabled.",
                "returned": "always",
                "sample": false,
                "type": "bool"
            },
            "instance_create_time": {
                "description": "Creation time of the instance from which the snapshot was created.",
                "returned": "always",
                "sample": "2019-06-15T10:15:56.221000+00:00",
                "type": "str"
            },
            "license_model": {
                "description": "License model of the database.",
                "returned": "always",
                "sample": "general-public-license",
                "type": "str"
            },
            "master_username": {
                "description": "Master username of the database.",
                "returned": "always",
                "sample": "test",
                "type": "str"
            },
            "option_group_name": {
                "description": "Option group of the database.",
                "returned": "always",
                "sample": "default:mariadb-10-2",
                "type": "str"
            },
            "percent_progress": {
                "description": "How much progress has been made taking the snapshot. Will be 100 for an available snapshot.",
                "returned": "always",
                "sample": 100,
                "type": "int"
            },
            "port": {
                "description": "Port on which the database is listening.",
                "returned": "always",
                "sample": 3306,
                "type": "int"
            },
            "processor_features": {
                "description": "List of processor features of the database.",
                "returned": "always",
                "sample": [],
                "type": "list"
            },
            "snapshot_create_time": {
                "description": "Creation time of the snapshot.",
                "returned": "always",
                "sample": "2019-06-15T10:46:23.776000+00:00",
                "type": "str"
            },
            "snapshot_type": {
                "description": "How the snapshot was created (always manual for this module!).",
                "returned": "always",
                "sample": "manual",
                "type": "str"
            },
            "status": {
                "description": "Status of the snapshot.",
                "returned": "always",
                "sample": "available",
                "type": "str"
            },
            "storage_type": {
                "description": "Storage type of the database.",
                "returned": "always",
                "sample": "gp2",
                "type": "str"
            },
            "tags": {
                "contains": {},
                "description": "Tags applied to the snapshot.",
                "returned": "always",
                "type": "complex"
            },
            "vpc_id": {
                "description": "ID of the VPC in which the DB lives.",
                "returned": "always",
                "sample": "vpc-09ff232e222710ae0",
                "type": "str"
            }
        }
    }
}
