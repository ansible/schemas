{
    "community.network.ftd_configuration": {
        "doc": {
            "author": "Cisco Systems, Inc. (@annikulin)",
            "collection": "community.network",
            "description": [
                "Manages configuration on Cisco FTD devices including creating, updating, removing configuration objects, scheduling and staring jobs, deploying pending changes, etc. All operations are performed over REST API."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ftd_configuration.py",
            "has_action": false,
            "module": "ftd_configuration",
            "options": {
                "data": {
                    "description": [
                        "Key-value pairs that should be sent as body parameters in a REST API call"
                    ],
                    "type": "dict"
                },
                "filters": {
                    "description": [
                        "Key-value dict that represents equality filters. Every key is a property name and value is its desired value. If multiple filters are present, they are combined with logical operator AND."
                    ],
                    "type": "dict"
                },
                "operation": {
                    "description": [
                        "The name of the operation to execute. Commonly, the operation starts with 'add', 'edit', 'get', 'upsert' or 'delete' verbs, but can have an arbitrary name too."
                    ],
                    "required": true,
                    "type": "str"
                },
                "path_params": {
                    "description": [
                        "Key-value pairs that should be sent as path parameters in a REST API call."
                    ],
                    "type": "dict"
                },
                "query_params": {
                    "description": [
                        "Key-value pairs that should be sent as query parameters in a REST API call."
                    ],
                    "type": "dict"
                },
                "register_as": {
                    "description": [
                        "Specifies Ansible fact name that is used to register received response from the FTD device."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages configuration on Cisco FTD devices over REST API"
        },
        "examples": "\n- name: Create a network object\n  community.network.ftd_configuration:\n    operation: \"addNetworkObject\"\n    data:\n      name: \"Ansible-network-host\"\n      description: \"From Ansible with love\"\n      subType: \"HOST\"\n      value: \"192.168.2.0\"\n      dnsResolution: \"IPV4_AND_IPV6\"\n      type: \"networkobject\"\n      isSystemDefined: false\n    register_as: \"hostNetwork\"\n\n- name: Delete the network object\n  community.network.ftd_configuration:\n    operation: \"deleteNetworkObject\"\n    path_params:\n      objId: \"{{ hostNetwork['id'] }}\"\n",
        "metadata": null,
        "return": {
            "response": {
                "description": "HTTP response returned from the API call.",
                "returned": "success",
                "type": "dict"
            }
        }
    }
}
