{
    "community.general.netcup_dns": {
        "doc": {
            "author": "Nicolai Buchwitz (@nbuchwitz)",
            "collection": "community.general",
            "description": [
                "Manages DNS records via the Netcup API, see the docs U(https://ccp.netcup.net/run/webservice/servers/endpoint.php)"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/netcup_dns.py",
            "has_action": false,
            "module": "netcup_dns",
            "notes": [],
            "options": {
                "api_key": {
                    "description": [
                        "API key for authentication, must be obtained via the netcup CCP (U(https://ccp.netcup.net))"
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_password": {
                    "description": [
                        "API password for authentication, must be obtained via the netcup CCP (https://ccp.netcup.net)"
                    ],
                    "required": true,
                    "type": "str"
                },
                "customer_id": {
                    "description": [
                        "Netcup customer id"
                    ],
                    "required": true,
                    "type": "int"
                },
                "domain": {
                    "description": [
                        "Domainname the records should be added / removed"
                    ],
                    "required": true,
                    "type": "str"
                },
                "priority": {
                    "description": [
                        "Record priority. Required for C(type=MX)"
                    ],
                    "required": false,
                    "type": "int"
                },
                "record": {
                    "aliases": [
                        "name"
                    ],
                    "default": "@",
                    "description": [
                        "Record to add or delete, supports wildcard (*). Default is C(@) (e.g. the zone name)"
                    ],
                    "type": "str"
                },
                "solo": {
                    "default": false,
                    "description": [
                        "Whether the record should be the only one for that record type and record name. Only use with C(state=present)",
                        "This will delete all other records with the same record name and type."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the record should exist or not"
                    ],
                    "required": false,
                    "type": "str"
                },
                "type": {
                    "choices": [
                        "A",
                        "AAAA",
                        "MX",
                        "CNAME",
                        "CAA",
                        "SRV",
                        "TXT",
                        "TLSA",
                        "NS",
                        "DS"
                    ],
                    "description": [
                        "Record type"
                    ],
                    "required": true,
                    "type": "str"
                },
                "value": {
                    "description": [
                        "Record value"
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "nc-dnsapi >= 0.1.3"
            ],
            "short_description": "manage Netcup DNS records"
        },
        "examples": "\n- name: Create a record of type A\n  community.general.netcup_dns:\n    api_key: \"...\"\n    api_password: \"...\"\n    customer_id: \"...\"\n    domain: \"example.com\"\n    name: \"mail\"\n    type: \"A\"\n    value: \"127.0.0.1\"\n\n- name: Delete that record\n  community.general.netcup_dns:\n    api_key: \"...\"\n    api_password: \"...\"\n    customer_id: \"...\"\n    domain: \"example.com\"\n    name: \"mail\"\n    type: \"A\"\n    value: \"127.0.0.1\"\n    state: absent\n\n- name: Create a wildcard record\n  community.general.netcup_dns:\n    api_key: \"...\"\n    api_password: \"...\"\n    customer_id: \"...\"\n    domain: \"example.com\"\n    name: \"*\"\n    type: \"A\"\n    value: \"127.0.1.1\"\n\n- name: Set the MX record for example.com\n  community.general.netcup_dns:\n    api_key: \"...\"\n    api_password: \"...\"\n    customer_id: \"...\"\n    domain: \"example.com\"\n    type: \"MX\"\n    value: \"mail.example.com\"\n\n- name: Set a record and ensure that this is the only one\n  community.general.netcup_dns:\n    api_key: \"...\"\n    api_password: \"...\"\n    customer_id: \"...\"\n    name: \"demo\"\n    domain: \"example.com\"\n    type: \"AAAA\"\n    value: \"::1\"\n    solo: true\n",
        "metadata": null,
        "return": {
            "records": {
                "contains": {
                    "id": {
                        "description": "internal id of the record",
                        "returned": "success",
                        "sample": 12345,
                        "type": "int"
                    },
                    "name": {
                        "description": "the record name",
                        "returned": "success",
                        "sample": "fancy-hostname",
                        "type": "str"
                    },
                    "priority": {
                        "description": "the record priority (only relevant if type=MX)",
                        "returned": "success",
                        "sample": 0,
                        "type": "int"
                    },
                    "type": {
                        "description": "the record type",
                        "returned": "succcess",
                        "sample": "A",
                        "type": "str"
                    },
                    "value": {
                        "description": "the record destination",
                        "returned": "success",
                        "sample": "127.0.0.1",
                        "type": "str"
                    }
                },
                "description": "list containing all records",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
