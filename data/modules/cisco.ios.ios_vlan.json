{
    "cisco.ios.ios_vlan": {
        "doc": {
            "author": "Trishna Guha (@trishnaguha)",
            "collection": "cisco.ios",
            "deprecated": {
                "alternative": "ios_vlans",
                "removed_at_date": "2022-06-01",
                "removed_from_collection": "cisco.ios",
                "why": "Newer and updated modules released with more functionality in Ansible 2.9"
            },
            "description": [
                "This module provides declarative management of VLANs on Cisco IOS network devices."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/ios/plugins/modules/ios_vlan.py",
            "has_action": true,
            "module": "ios_vlan",
            "notes": [
                "Tested against IOS 15.2",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "aggregate": {
                    "description": "List of VLANs definitions.",
                    "elements": "dict",
                    "suboptions": {
                        "associated_interfaces": {
                            "description": [
                                "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "delay": {
                            "description": [
                                "Delay the play should wait to check for declarative intent params values."
                            ],
                            "type": "int"
                        },
                        "interfaces": {
                            "description": [
                                "List of interfaces that should be associated to the VLAN."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "name": {
                            "description": [
                                "Name of the VLAN."
                            ],
                            "type": "str"
                        },
                        "state": {
                            "choices": [
                                "present",
                                "absent",
                                "active",
                                "suspend"
                            ],
                            "description": [
                                "State of the VLAN configuration."
                            ],
                            "type": "str"
                        },
                        "vlan_id": {
                            "description": [
                                "ID of the VLAN. Range 1-4094."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "associated_interfaces": {
                    "description": [
                        "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "delay": {
                    "default": 10,
                    "description": [
                        "Delay the play should wait to check for declarative intent params values."
                    ],
                    "type": "int"
                },
                "interfaces": {
                    "description": [
                        "List of interfaces that should be associated to the VLAN."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "name": {
                    "description": [
                        "Name of the VLAN."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "path"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "purge": {
                    "default": false,
                    "description": [
                        "Purge VLANs not defined in the I(aggregate) parameter."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "active",
                        "suspend"
                    ],
                    "default": "present",
                    "description": [
                        "State of the VLAN configuration."
                    ],
                    "type": "str"
                },
                "vlan_id": {
                    "description": [
                        "ID of the VLAN. Range 1-4094."
                    ],
                    "type": "int"
                }
            },
            "short_description": "(deprecated, removed after 2022-06-01) Manage VLANs on IOS network devices",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.ios"
        },
        "examples": "\n- name: Create vlan\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    name: test-vlan\n    state: present\n\n- name: Add interfaces to VLAN\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    interfaces:\n    - GigabitEthernet0/0\n    - GigabitEthernet0/1\n\n- name: Check if interfaces is assigned to VLAN\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    associated_interfaces:\n    - GigabitEthernet0/0\n    - GigabitEthernet0/1\n\n- name: Delete vlan\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    state: absent\n\n- name: Add vlan using aggregate\n  cisco.ios.ios_vlan:\n    aggregate:\n    - {vlan_id: 100, name: test-vlan, interfaces: [GigabitEthernet0/1, GigabitEthernet0/2],\n      delay: 15, state: suspend}\n    - {vlan_id: 101, name: test-vlan, interfaces: GigabitEthernet0/3}\n\n- name: Move interfaces to a different VLAN\n  cisco.ios.ios_vlan:\n    vlan_id: 102\n    interfaces:\n    - GigabitEthernet0/0\n    - GigabitEthernet0/1\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "The list of configuration mode commands to send to the device",
                "returned": "always",
                "sample": [
                    "vlan 100",
                    "name test-vlan"
                ],
                "type": "list"
            }
        }
    }
}
