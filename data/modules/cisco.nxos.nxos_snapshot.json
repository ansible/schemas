{
    "cisco.nxos.nxos_snapshot": {
        "doc": {
            "author": [
                "Gabriele Gerbino (@GGabriele)"
            ],
            "collection": "cisco.nxos",
            "description": [
                "Create snapshots of the running states of selected features, add new show commands for snapshot creation, delete and compare existing snapshots."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nxos/plugins/modules/nxos_snapshot.py",
            "has_action": true,
            "module": "nxos_snapshot",
            "notes": [
                "Tested against NXOSv 7.3.(0)D1(1) on VIRL",
                "C(transport=cli) may cause timeout errors.",
                "The C(element_key1) and C(element_key2) parameter specify the tags used to distinguish among row entries. In most cases, only the element_key1 parameter needs to specified to be able to distinguish among row entries.",
                "C(action=compare) will always store a comparison report on a local file.",
                "For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "action": {
                    "choices": [
                        "add",
                        "compare",
                        "create",
                        "delete",
                        "delete_all"
                    ],
                    "description": [
                        "Define what snapshot action the module would perform."
                    ],
                    "required": true,
                    "type": "str"
                },
                "compare_option": {
                    "choices": [
                        "summary",
                        "ipv4routes",
                        "ipv6routes"
                    ],
                    "description": [
                        "Snapshot options to be used when C(action=compare)."
                    ],
                    "type": "str"
                },
                "comparison_results_file": {
                    "description": [
                        "Name of the file where snapshots comparison will be stored when C(action=compare)."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Snapshot description to be used when C(action=create)."
                    ],
                    "type": "str"
                },
                "element_key1": {
                    "description": [
                        "Specify the tags used to distinguish among row entries, to be used when C(action=add)."
                    ],
                    "type": "str"
                },
                "element_key2": {
                    "description": [
                        "Specify the tags used to distinguish among row entries, to be used when C(action=add)."
                    ],
                    "type": "str"
                },
                "path": {
                    "default": "./",
                    "description": [
                        "Specify the path of the file where new created snapshot or snapshots comparison will be stored, to be used when C(action=create) and C(save_snapshot_locally=true) or C(action=compare)."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "Starting with Ansible 2.6 we recommend using C(connection: httpapi) for NX-API.",
                        "This option will be removed in a release after 2022-06-01.",
                        "For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "str"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "cli",
                                "nxapi"
                            ],
                            "default": "cli",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                            ],
                            "type": "str"
                        },
                        "use_proxy": {
                            "default": true,
                            "description": [
                                "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored."
                            ],
                            "type": "bool"
                        },
                        "use_ssl": {
                            "default": false,
                            "description": [
                                "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=nxapi), otherwise this value is ignored."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": false,
                            "description": [
                                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "row_id": {
                    "description": [
                        "Specifies the tag of each row entry of the show command's XML output, to be used when C(action=add)."
                    ],
                    "type": "str"
                },
                "save_snapshot_locally": {
                    "default": false,
                    "description": [
                        "Specify to locally store a new created snapshot, to be used when C(action=create)."
                    ],
                    "type": "bool"
                },
                "section": {
                    "description": [
                        "Used to name the show command output, to be used when C(action=add)."
                    ],
                    "type": "str"
                },
                "show_command": {
                    "description": [
                        "Specify a new show command, to be used when C(action=add)."
                    ],
                    "type": "str"
                },
                "snapshot1": {
                    "description": [
                        "First snapshot to be used when C(action=compare)."
                    ],
                    "type": "str"
                },
                "snapshot2": {
                    "description": [
                        "Second snapshot to be used when C(action=compare)."
                    ],
                    "type": "str"
                },
                "snapshot_name": {
                    "description": [
                        "Snapshot name, to be used when C(action=create) or C(action=delete)."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage snapshots of the running states of selected features.",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.nxos"
        },
        "examples": "\n# Create a snapshot and store it locally\n- cisco.nxos.nxos_snapshot:\n    action: create\n    snapshot_name: test_snapshot\n    description: Done with Ansible\n    save_snapshot_locally: true\n    path: /home/user/snapshots/\n\n# Delete a snapshot\n- cisco.nxos.nxos_snapshot:\n    action: delete\n    snapshot_name: test_snapshot\n\n# Delete all existing snapshots\n- cisco.nxos.nxos_snapshot:\n    action: delete_all\n\n# Add a show command for snapshots creation\n- cisco.nxos.nxos_snapshot:\n    section: myshow\n    show_command: show ip interface brief\n    row_id: ROW_intf\n    element_key1: intf-name\n\n# Compare two snapshots\n- cisco.nxos.nxos_snapshot:\n    action: compare\n    snapshot1: pre_snapshot\n    snapshot2: post_snapshot\n    comparison_results_file: compare_snapshots.txt\n    compare_option: summary\n    path: ../snapshot_reports/\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "commands sent to the device",
                "returned": "verbose mode",
                "sample": [
                    "snapshot create post_snapshot Post-snapshot"
                ],
                "type": "list"
            }
        }
    }
}
