{
    "amazon.aws.ec2_vol": {
        "doc": {
            "author": "Lester Wade (@lwade)",
            "collection": "amazon.aws",
            "description": [
                "Creates an EBS volume and optionally attaches it to an instance.",
                "If both I(instance) and I(name) are given and the instance has a device at the device name, then no volume is created and no attachment is made.",
                "This module has a dependency on python-boto."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/amazon/aws/plugins/modules/ec2_vol.py",
            "has_action": false,
            "module": "ec2_vol",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "delete_on_termination": {
                    "default": false,
                    "description": [
                        "When set to C(true), the volume will be deleted upon instance termination."
                    ],
                    "type": "bool"
                },
                "device_name": {
                    "description": [
                        "Device id to override device mapping. Assumes /dev/sdf for Linux/UNIX and /dev/xvdf for Windows."
                    ],
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "encrypted": {
                    "default": false,
                    "description": [
                        "Enable encryption at rest for this volume."
                    ],
                    "type": "bool"
                },
                "id": {
                    "description": [
                        "Volume id if you wish to attach an existing volume (requires instance) or remove an existing volume"
                    ],
                    "type": "str"
                },
                "instance": {
                    "description": [
                        "Instance ID if you wish to attach the volume. Since 1.9 you can set to None to detach."
                    ],
                    "type": "str"
                },
                "iops": {
                    "description": [
                        "The provisioned IOPs you want to associate with this volume (integer).",
                        "By default AWS will set this to 100."
                    ],
                    "type": "int"
                },
                "kms_key_id": {
                    "description": [
                        "Specify the id of the KMS key to use."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Volume Name tag if you wish to attach an existing volume (requires instance)"
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "snapshot": {
                    "description": [
                        "Snapshot ID on which to base the volume."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "list"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to ensure the volume is present or absent, or to list existing volumes (The C(list) option was added in version 1.8)."
                    ],
                    "type": "str"
                },
                "tags": {
                    "default": {},
                    "description": [
                        "tag:value pairs to add to the volume after creation."
                    ],
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "volume_size": {
                    "description": [
                        "Size of volume (in GiB) to create."
                    ],
                    "type": "int"
                },
                "volume_type": {
                    "choices": [
                        "standard",
                        "gp2",
                        "io1",
                        "st1",
                        "sc1"
                    ],
                    "default": "standard",
                    "description": [
                        "Type of EBS volume; standard (magnetic), gp2 (SSD), io1 (Provisioned IOPS), st1 (Throughput Optimized HDD), sc1 (Cold HDD). \"Standard\" is the old EBS default and continues to remain the Ansible default for backwards compatibility."
                    ],
                    "type": "str"
                },
                "zone": {
                    "aliases": [
                        "availability_zone",
                        "aws_zone",
                        "ec2_zone"
                    ],
                    "description": [
                        "Zone in which to create the volume, if unset uses the zone the instance is in (if set)."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "boto"
            ],
            "short_description": "Create and attach a volume, return volume id and device map"
        },
        "examples": "\n# Simple attachment action\n- ec2_vol:\n    instance: XXXXXX\n    volume_size: 5\n    device_name: sdd\n\n# Example using custom iops params\n- ec2_vol:\n    instance: XXXXXX\n    volume_size: 5\n    iops: 100\n    device_name: sdd\n\n# Example using snapshot id\n- ec2_vol:\n    instance: XXXXXX\n    snapshot: \"{{ snapshot }}\"\n\n# Playbook example combined with instance launch\n- ec2:\n    keypair: \"{{ keypair }}\"\n    image: \"{{ image }}\"\n    wait: yes\n    count: 3\n  register: ec2\n- ec2_vol:\n    instance: \"{{ item.id }}\"\n    volume_size: 5\n  loop: \"{{ ec2.instances }}\"\n  register: ec2_vol\n\n# Example: Launch an instance and then add a volume if not already attached\n#   * Volume will be created with the given name if not already created.\n#   * Nothing will happen if the volume is already attached.\n#   * Requires Ansible 2.0\n\n- ec2:\n    keypair: \"{{ keypair }}\"\n    image: \"{{ image }}\"\n    zone: YYYYYY\n    id: my_instance\n    wait: yes\n    count: 1\n  register: ec2\n\n- ec2_vol:\n    instance: \"{{ item.id }}\"\n    name: my_existing_volume_Name_tag\n    device_name: /dev/xvdf\n  loop: \"{{ ec2.instances }}\"\n  register: ec2_vol\n\n# Remove a volume\n- ec2_vol:\n    id: vol-XXXXXXXX\n    state: absent\n\n# Detach a volume (since 1.9)\n- ec2_vol:\n    id: vol-XXXXXXXX\n    instance: None\n\n# List volumes for an instance\n- ec2_vol:\n    instance: i-XXXXXX\n    state: list\n\n# Create new volume using SSD storage\n- ec2_vol:\n    instance: XXXXXX\n    volume_size: 50\n    volume_type: gp2\n    device_name: /dev/xvdf\n\n# Attach an existing volume to instance. The volume will be deleted upon instance termination.\n- ec2_vol:\n    instance: XXXXXX\n    id: XXXXXX\n    device_name: /dev/sdf\n    delete_on_termination: yes\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "stableinterface"
            ],
            "supported_by": "core"
        },
        "return": {
            "device": {
                "description": "device name of attached volume",
                "returned": "when success",
                "sample": "/def/sdf",
                "type": "str"
            },
            "volume": {
                "description": "a dictionary containing detailed attributes of the volume",
                "returned": "when success",
                "sample": {
                    "attachment_set": {
                        "attach_time": "2015-10-23T00:22:29.000Z",
                        "deleteOnTermination": "false",
                        "device": "/dev/sdf",
                        "instance_id": "i-8356263c",
                        "status": "attached"
                    },
                    "create_time": "2015-10-21T14:36:08.870Z",
                    "encrypted": false,
                    "id": "vol-35b333d9",
                    "iops": null,
                    "size": 1,
                    "snapshot_id": "",
                    "status": "in-use",
                    "tags": {
                        "env": "dev"
                    },
                    "type": "standard",
                    "zone": "us-east-1b"
                },
                "type": "str"
            },
            "volume_id": {
                "description": "the id of volume",
                "returned": "when success",
                "sample": "vol-35b333d9",
                "type": "str"
            },
            "volume_type": {
                "description": "the volume type",
                "returned": "when success",
                "sample": "standard",
                "type": "str"
            }
        }
    }
}
