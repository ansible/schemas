{
    "cisco.meraki.meraki_mx_site_to_site_vpn": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Allows for creation, management, and visibility into AutoVPNs implemented on Meraki MX firewalls."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_mx_site_to_site_vpn.py",
            "has_action": false,
            "module": "meraki_mx_site_to_site_vpn",
            "notes": [
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "hubs": {
                    "description": [
                        "List of hubs to assign to a spoke."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "hub_id": {
                            "description": [
                                "Network ID of hub"
                            ],
                            "type": "str"
                        },
                        "use_default_route": {
                            "description": [
                                "Indicates whether deafult troute traffic should be sent to this hub.",
                                "Only valid in spoke mode."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "list"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "mode": {
                    "choices": [
                        "none",
                        "hub",
                        "spoke"
                    ],
                    "description": [
                        "Set VPN mode for network"
                    ],
                    "type": "str"
                },
                "net_id": {
                    "description": [
                        "ID of network which MX firewall is in."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "description": [
                        "Name of network which MX firewall is in."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Create or modify an organization."
                    ],
                    "type": "str"
                },
                "subnets": {
                    "description": [
                        "List of subnets to advertise over VPN."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "local_subnet": {
                            "description": [
                                "CIDR formatted subnet."
                            ],
                            "type": "str"
                        },
                        "use_vpn": {
                            "description": [
                                "Whether to advertise over VPN."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "list"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage AutoVPN connections in Meraki",
            "version_added": "1.1.0",
            "version_added_collection": "cisco.meraki"
        },
        "examples": "\n- name: Set hub mode\n  meraki_site_to_site_vpn:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_name: hub_network\n    mode: hub\n  delegate_to: localhost\n  register: set_hub\n\n- name: Set spoke mode\n  meraki_site_to_site_vpn:\n    auth_key: abc123\n    state: present\n    org_name: YourOrg\n    net_name: spoke_network\n    mode: spoke\n    hubs:\n      - hub_id: N_1234\n        use_default_route: false\n  delegate_to: localhost\n  register: set_spoke\n\n- name: Query rules for hub\n  meraki_site_to_site_vpn:\n    auth_key: abc123\n    state: query\n    org_name: YourOrg\n    net_name: hub_network\n  delegate_to: localhost\n  register: query_all_hub\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "hubs": {
                        "contains": {
                            "hub_id": {
                                "description": "ID of hub network.",
                                "returned": "always",
                                "sample": "N_12345",
                                "type": "complex"
                            },
                            "use_default_route": {
                                "description": "Whether to send all default route traffic over VPN.",
                                "returned": "always",
                                "sample": true,
                                "type": "bool"
                            }
                        },
                        "description": "Hub networks to associate to.",
                        "returned": "always",
                        "type": "complex"
                    },
                    "mode": {
                        "description": "Mode assigned to network.",
                        "returned": "always",
                        "sample": "spoke",
                        "type": "str"
                    },
                    "subnets": {
                        "contains": {
                            "local_subnet": {
                                "description": "CIDR formatted subnet.",
                                "returned": "always",
                                "sample": "192.168.1.0/24",
                                "type": "str"
                            },
                            "use_vpn": {
                                "description": "Whether subnet should use the VPN.",
                                "returned": "always",
                                "sample": true,
                                "type": "bool"
                            }
                        },
                        "description": "List of subnets to advertise over VPN.",
                        "returned": "always",
                        "type": "complex"
                    }
                },
                "description": "VPN settings.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
