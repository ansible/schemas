{
    "fortinet.fortios.fortios_wireless_controller_global": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Hongbin Lu (@fgtdev-hblu)",
                "Frank Shen (@frankshen01)",
                "Miguel Angel Munoz (@mamunozgonzalez)",
                "Nicolas Thomas (@thomnico)"
            ],
            "collection": "fortinet.fortios",
            "description": [
                "This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the user to set and modify wireless_controller feature and global category. Examples include all parameters and values need to be adjusted to datasources before usage. Tested with FOS v6.0.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortios/plugins/modules/fortios_wireless_controller_global.py",
            "has_action": false,
            "module": "fortios_wireless_controller_global",
            "notes": [
                "Legacy fortiosapi has been deprecated, httpapi is the preferred way to run playbooks"
            ],
            "options": {
                "access_token": {
                    "description": [
                        "Token-based authentication. Generated from GUI of Fortigate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "vdom": {
                    "default": "root",
                    "description": [
                        "Virtual domain, among those defined previously. A vdom is a virtual instance of the FortiGate that can be configured and used as a different unit."
                    ],
                    "type": "str"
                },
                "wireless_controller_global": {
                    "default": null,
                    "description": [
                        "Configure wireless controller global settings."
                    ],
                    "suboptions": {
                        "ap_log_server": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable configuring APs or FortiAPs to send log messages to a syslog server ."
                            ],
                            "type": "str"
                        },
                        "ap_log_server_ip": {
                            "description": [
                                "IP address that APs or FortiAPs send log messages to."
                            ],
                            "type": "str"
                        },
                        "ap_log_server_port": {
                            "description": [
                                "Port that APs or FortiAPs send log messages to."
                            ],
                            "type": "int"
                        },
                        "control_message_offload": {
                            "choices": [
                                "ebp-frame",
                                "aeroscout-tag",
                                "ap-list",
                                "sta-list",
                                "sta-cap-list",
                                "stats",
                                "aeroscout-mu"
                            ],
                            "description": [
                                "Configure CAPWAP control message data channel offload."
                            ],
                            "type": "str"
                        },
                        "data_ethernet_II": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Configure the wireless controller to use Ethernet II or 802.3 frames with 802.3 data tunnel mode ."
                            ],
                            "type": "str"
                        },
                        "discovery_mc_addr": {
                            "description": [
                                "Multicast IP address for AP discovery ."
                            ],
                            "type": "str"
                        },
                        "fiapp_eth_type": {
                            "description": [
                                "Ethernet type for Fortinet Inter-Access Point Protocol (IAPP), or IEEE 802.11f, packets (0 - 65535)."
                            ],
                            "type": "int"
                        },
                        "image_download": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable WTP image download at join time."
                            ],
                            "type": "str"
                        },
                        "ipsec_base_ip": {
                            "description": [
                                "Base IP address for IPsec VPN tunnels between the access points and the wireless controller ."
                            ],
                            "type": "str"
                        },
                        "link_aggregation": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable calculating the CAPWAP transmit hash to load balance sessions to link aggregation nodes ."
                            ],
                            "type": "str"
                        },
                        "location": {
                            "description": [
                                "Description of the location of the wireless controller."
                            ],
                            "type": "str"
                        },
                        "max_clients": {
                            "description": [
                                "Maximum number of clients that can connect simultaneously ."
                            ],
                            "type": "int"
                        },
                        "max_retransmit": {
                            "description": [
                                "Maximum number of tunnel packet retransmissions (0 - 64)."
                            ],
                            "type": "int"
                        },
                        "mesh_eth_type": {
                            "description": [
                                "Mesh Ethernet identifier included in backhaul packets (0 - 65535)."
                            ],
                            "type": "int"
                        },
                        "name": {
                            "description": [
                                "Name of the wireless controller."
                            ],
                            "type": "str"
                        },
                        "rogue_scan_mac_adjacency": {
                            "description": [
                                "Maximum numerical difference between an AP\"s Ethernet and wireless MAC values to match for rogue detection (0 - 31)."
                            ],
                            "type": "int"
                        },
                        "wtp_share": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable sharing of WTPs between VDOMs."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                }
            },
            "requirements": [
                "ansible>=2.9.0"
            ],
            "short_description": "Configure wireless controller global settings in Fortinet's FortiOS and FortiGate.",
            "version_added": "2.8",
            "version_added_collection": "fortinet.fortios"
        },
        "examples": "\n- hosts: fortigates\n  collections:\n    - fortinet.fortios\n  connection: httpapi\n  vars:\n   vdom: \"root\"\n   ansible_httpapi_use_ssl: yes\n   ansible_httpapi_validate_certs: no\n   ansible_httpapi_port: 443\n  tasks:\n  - name: Configure wireless controller global settings.\n    fortios_wireless_controller_global:\n      vdom:  \"{{ vdom }}\"\n      wireless_controller_global:\n        ap_log_server: \"enable\"\n        ap_log_server_ip: \"<your_own_value>\"\n        ap_log_server_port: \"5\"\n        control_message_offload: \"ebp-frame\"\n        data_ethernet_II: \"enable\"\n        discovery_mc_addr: \"<your_own_value>\"\n        fiapp_eth_type: \"9\"\n        image_download: \"enable\"\n        ipsec_base_ip: \"<your_own_value>\"\n        link_aggregation: \"enable\"\n        location: \"<your_own_value>\"\n        max_clients: \"14\"\n        max_retransmit: \"15\"\n        mesh_eth_type: \"16\"\n        name: \"default_name_17\"\n        rogue_scan_mac_adjacency: \"18\"\n        wtp_share: \"enable\"\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "build": {
                "description": "Build number of the fortigate image",
                "returned": "always",
                "sample": "1547",
                "type": "str"
            },
            "http_method": {
                "description": "Last method used to provision the content into FortiGate",
                "returned": "always",
                "sample": "PUT",
                "type": "str"
            },
            "http_status": {
                "description": "Last result given by FortiGate on last operation applied",
                "returned": "always",
                "sample": "200",
                "type": "str"
            },
            "mkey": {
                "description": "Master key (id) used in the last call to FortiGate",
                "returned": "success",
                "sample": "id",
                "type": "str"
            },
            "name": {
                "description": "Name of the table used to fulfill the request",
                "returned": "always",
                "sample": "urlfilter",
                "type": "str"
            },
            "path": {
                "description": "Path of the table used to fulfill the request",
                "returned": "always",
                "sample": "webfilter",
                "type": "str"
            },
            "revision": {
                "description": "Internal revision number",
                "returned": "always",
                "sample": "17.0.2.10658",
                "type": "str"
            },
            "serial": {
                "description": "Serial number of the unit",
                "returned": "always",
                "sample": "FGVMEVYYQT3AB5352",
                "type": "str"
            },
            "status": {
                "description": "Indication of the operation's result",
                "returned": "always",
                "sample": "success",
                "type": "str"
            },
            "vdom": {
                "description": "Virtual domain used",
                "returned": "always",
                "sample": "root",
                "type": "str"
            },
            "version": {
                "description": "Version of the FortiGate",
                "returned": "always",
                "sample": "v5.6.3",
                "type": "str"
            }
        }
    }
}
