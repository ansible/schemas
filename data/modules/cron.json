{
    "cron": {
        "doc": {
            "author": [
                "Dane Summers (@dsummersl)",
                "Mike Grozak (@rhaido)",
                "Patrick Callahan (@dirtyharrycallahan)",
                "Evan Kaufman (@EvanK)",
                "Luca Berruti (@lberruti)"
            ],
            "collection": "ansible.builtin",
            "description": [
                "Use this module to manage crontab and environment variables entries. This module allows you to create environment variables and named crontab entries, update, or delete them.",
                "When crontab jobs are managed: the module includes one line with the description of the crontab entry C(\"#Ansible: <name>\") corresponding to the \"name\" passed to the module, which is used by future ansible/module calls to find/check the state. The \"name\" parameter should be unique, and changing the \"name\" value will result in a new cron task being created (or a different one being removed).",
                "When environment variables are managed, no comment line is added, but, when the module needs to find/check the state, it uses the \"name\" parameter to find the environment variable definition line.",
                "When using symbols such as %, they must be properly escaped."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible/modules/cron.py",
            "has_action": false,
            "module": "cron",
            "notes": [
                "Supports C(check_mode)."
            ],
            "options": {
                "backup": {
                    "default": false,
                    "description": [
                        "If set, create a backup of the crontab before it is modified. The location of the backup is returned in the C(backup_file) variable by this module."
                    ],
                    "type": "bool"
                },
                "cron_file": {
                    "description": [
                        "If specified, uses this file instead of an individual user's crontab.",
                        "If this is a relative path, it is interpreted with respect to I(/etc/cron.d).",
                        "If it is absolute, it will typically be C(/etc/crontab).",
                        "Many linux distros expect (and some require) the filename portion to consist solely of upper- and lower-case letters, digits, underscores, and hyphens.",
                        "To use the I(cron_file) parameter you must specify the I(user) as well."
                    ],
                    "type": "str"
                },
                "day": {
                    "aliases": [
                        "dom"
                    ],
                    "default": "*",
                    "description": [
                        "Day of the month the job should run (C(1-31), C(*), C(*/2), and so on)."
                    ],
                    "type": "str"
                },
                "disabled": {
                    "default": false,
                    "description": [
                        "If the job should be disabled (commented out) in the crontab.",
                        "Only has effect if I(state=present)."
                    ],
                    "type": "bool",
                    "version_added": "2.0",
                    "version_added_collection": "ansible.builtin"
                },
                "env": {
                    "default": false,
                    "description": [
                        "If set, manages a crontab's environment variable.",
                        "New variables are added on top of crontab.",
                        "I(name) and I(value) parameters are the name and the value of environment variable."
                    ],
                    "type": "bool",
                    "version_added": "2.1",
                    "version_added_collection": "ansible.builtin"
                },
                "hour": {
                    "default": "*",
                    "description": [
                        "Hour when the job should run (C(0-23), C(*), C(*/2), and so on)."
                    ],
                    "type": "str"
                },
                "insertafter": {
                    "description": [
                        "Used with I(state=present) and I(env).",
                        "If specified, the environment variable will be inserted after the declaration of specified environment variable."
                    ],
                    "type": "str",
                    "version_added": "2.1",
                    "version_added_collection": "ansible.builtin"
                },
                "insertbefore": {
                    "description": [
                        "Used with I(state=present) and I(env).",
                        "If specified, the environment variable will be inserted before the declaration of specified environment variable."
                    ],
                    "type": "str",
                    "version_added": "2.1",
                    "version_added_collection": "ansible.builtin"
                },
                "job": {
                    "aliases": [
                        "value"
                    ],
                    "description": [
                        "The command to execute or, if env is set, the value of environment variable.",
                        "The command should not contain line breaks.",
                        "Required if I(state=present)."
                    ],
                    "type": "str"
                },
                "minute": {
                    "default": "*",
                    "description": [
                        "Minute when the job should run (C(0-59), C(*), C(*/2), and so on)."
                    ],
                    "type": "str"
                },
                "month": {
                    "default": "*",
                    "description": [
                        "Month of the year the job should run (C(1-12), C(*), C(*/2), and so on)."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Description of a crontab entry or, if env is set, the name of environment variable.",
                        "Required if I(state=absent).",
                        "Note that if name is not set and I(state=present), then a new crontab entry will always be created, regardless of existing ones.",
                        "This parameter will always be required in future releases."
                    ],
                    "type": "str"
                },
                "reboot": {
                    "default": false,
                    "description": [
                        "If the job should be run at reboot. This option is deprecated. Users should use I(special_time)."
                    ],
                    "type": "bool",
                    "version_added": "1.0",
                    "version_added_collection": "ansible.builtin"
                },
                "special_time": {
                    "choices": [
                        "annually",
                        "daily",
                        "hourly",
                        "monthly",
                        "reboot",
                        "weekly",
                        "yearly"
                    ],
                    "description": [
                        "Special time specification nickname."
                    ],
                    "type": "str",
                    "version_added": "1.3",
                    "version_added_collection": "ansible.builtin"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to ensure the job or environment variable is present or absent."
                    ],
                    "type": "str"
                },
                "user": {
                    "description": [
                        "The specific user whose crontab should be modified.",
                        "When unset, this parameter defaults to the current user."
                    ],
                    "type": "str"
                },
                "weekday": {
                    "aliases": [
                        "dow"
                    ],
                    "default": "*",
                    "description": [
                        "Day of the week that the job should run (C(0-6) for Sunday-Saturday, C(*), and so on)."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "cron (or cronie on CentOS)"
            ],
            "short_description": "Manage cron.d and crontab entries",
            "version_added": "0.9",
            "version_added_collection": "ansible.builtin"
        },
        "examples": "\n- name: Ensure a job that runs at 2 and 5 exists. Creates an entry like \"0 5,2 * * ls -alh > /dev/null\"\n  ansible.builtin.cron:\n    name: \"check dirs\"\n    minute: \"0\"\n    hour: \"5,2\"\n    job: \"ls -alh > /dev/null\"\n\n- name: 'Ensure an old job is no longer present. Removes any job that is prefixed by \"#Ansible: an old job\" from the crontab'\n  ansible.builtin.cron:\n    name: \"an old job\"\n    state: absent\n\n- name: Creates an entry like \"@reboot /some/job.sh\"\n  ansible.builtin.cron:\n    name: \"a job for reboot\"\n    special_time: reboot\n    job: \"/some/job.sh\"\n\n- name: Creates an entry like \"PATH=/opt/bin\" on top of crontab\n  ansible.builtin.cron:\n    name: PATH\n    env: yes\n    job: /opt/bin\n\n- name: Creates an entry like \"APP_HOME=/srv/app\" and insert it after PATH declaration\n  ansible.builtin.cron:\n    name: APP_HOME\n    env: yes\n    job: /srv/app\n    insertafter: PATH\n\n- name: Creates a cron file under /etc/cron.d\n  ansible.builtin.cron:\n    name: yum autoupdate\n    weekday: \"2\"\n    minute: \"0\"\n    hour: \"12\"\n    user: root\n    job: \"YUMINTERACTIVE=0 /usr/sbin/yum-autoupdate\"\n    cron_file: ansible_yum-autoupdate\n\n- name: Removes a cron file from under /etc/cron.d\n  ansible.builtin.cron:\n    name: \"yum autoupdate\"\n    cron_file: ansible_yum-autoupdate\n    state: absent\n\n- name: Removes \"APP_HOME\" environment variable from crontab\n  ansible.builtin.cron:\n    name: APP_HOME\n    env: yes\n    state: absent\n",
        "metadata": null,
        "return": null
    }
}
