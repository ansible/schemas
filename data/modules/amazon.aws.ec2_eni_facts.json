{
    "amazon.aws.ec2_eni_facts": {
        "doc": {
            "author": "Rob White (@wimnat)",
            "collection": "amazon.aws",
            "description": [
                "Gather information about ec2 ENI interfaces in AWS.",
                "This module was called C(ec2_eni_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/amazon/aws/plugins/modules/ec2_eni_facts.py",
            "has_action": false,
            "module": "ec2_eni_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "filters": {
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html) for possible filters."
                    ],
                    "type": "dict"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Gather information about ec2 ENI interfaces in AWS"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Gather information about all ENIs\n- ec2_eni_info:\n\n# Gather information about a particular ENI\n- ec2_eni_info:\n    filters:\n      network-interface-id: eni-xxxxxxx\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "network_interfaces": {
                "contains": {
                    "association": {
                        "description": "Info of associated elastic IP (EIP)",
                        "returned": "always, empty dict if no association exists",
                        "sample": {
                            "allocation_id": "eipalloc-5sdf123",
                            "association_id": "eipassoc-8sdf123",
                            "ip_owner_id": "4415120123456",
                            "public_dns_name": "ec2-52-1-0-63.compute-1.amazonaws.com",
                            "public_ip": "52.1.0.63"
                        },
                        "type": "dict"
                    },
                    "attachment": {
                        "description": "Info about attached ec2 instance",
                        "returned": "always, empty dict if ENI is not attached",
                        "sample": {
                            "attach_time": "2017-08-05T15:25:47+00:00",
                            "attachment_id": "eni-attach-149d21234",
                            "delete_on_termination": false,
                            "device_index": 1,
                            "instance_id": "i-15b8d3cadbafa1234",
                            "instance_owner_id": "4415120123456",
                            "status": "attached"
                        },
                        "type": "dict"
                    },
                    "availability_zone": {
                        "description": "Availability zone of ENI",
                        "returned": "always",
                        "sample": "us-east-1b",
                        "type": "str"
                    },
                    "description": {
                        "description": "Description text for ENI",
                        "returned": "always",
                        "sample": "My favourite network interface",
                        "type": "str"
                    },
                    "groups": {
                        "description": "List of attached security groups",
                        "returned": "always",
                        "sample": [
                            {
                                "group_id": "sg-26d0f1234",
                                "group_name": "my_ec2_security_group"
                            }
                        ],
                        "type": "list"
                    },
                    "id": {
                        "description": "The id of the ENI (alias for network_interface_id)",
                        "returned": "always",
                        "sample": "eni-392fsdf",
                        "type": "str"
                    },
                    "interface_type": {
                        "description": "Type of the network interface",
                        "returned": "always",
                        "sample": "interface",
                        "type": "str"
                    },
                    "ipv6_addresses": {
                        "description": "List of IPv6 addresses for this interface",
                        "returned": "always",
                        "sample": [],
                        "type": "list"
                    },
                    "mac_address": {
                        "description": "MAC address of the network interface",
                        "returned": "always",
                        "sample": "0a:f8:10:2f:ab:a1",
                        "type": "str"
                    },
                    "network_interface_id": {
                        "description": "The id of the ENI",
                        "returned": "always",
                        "sample": "eni-392fsdf",
                        "type": "str"
                    },
                    "owner_id": {
                        "description": "AWS account id of the owner of the ENI",
                        "returned": "always",
                        "sample": "4415120123456",
                        "type": "str"
                    },
                    "private_dns_name": {
                        "description": "Private DNS name for the ENI",
                        "returned": "always",
                        "sample": "ip-172-16-1-180.ec2.internal",
                        "type": "str"
                    },
                    "private_ip_address": {
                        "description": "Private IP address for the ENI",
                        "returned": "always",
                        "sample": "172.16.1.180",
                        "type": "str"
                    },
                    "private_ip_addresses": {
                        "description": "List of private IP addresses attached to the ENI",
                        "returned": "always",
                        "sample": [],
                        "type": "list"
                    },
                    "requester_id": {
                        "description": "The ID of the entity that launched the ENI",
                        "returned": "always",
                        "sample": "AIDAIONYVJQNIAZFT3ABC",
                        "type": "str"
                    },
                    "requester_managed": {
                        "description": "Indicates whether the network interface is being managed by an AWS service.",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "source_dest_check": {
                        "description": "Indicates whether the network interface performs source/destination checking.",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "status": {
                        "description": "Indicates if the network interface is attached to an instance or not",
                        "returned": "always",
                        "sample": "in-use",
                        "type": "str"
                    },
                    "subnet_id": {
                        "description": "Subnet ID the ENI is in",
                        "returned": "always",
                        "sample": "subnet-7bbf01234",
                        "type": "str"
                    },
                    "tag_set": {
                        "description": "Dictionary of tags added to the ENI",
                        "returned": "always",
                        "sample": {},
                        "type": "dict"
                    },
                    "vpc_id": {
                        "description": "ID of the VPC the network interface it part of",
                        "returned": "always",
                        "sample": "vpc-b3f1f123",
                        "type": "str"
                    }
                },
                "description": "List of matching elastic network interfaces",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
