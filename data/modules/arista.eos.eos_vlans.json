{
    "arista.eos.eos_vlans": {
        "doc": {
            "author": "Nathaniel Case (@qalthos)",
            "collection": "arista.eos",
            "description": "This module provides declarative management of VLANs on Arista EOS network devices.",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/arista/eos/plugins/modules/eos_vlans.py",
            "has_action": true,
            "module": "eos_vlans",
            "notes": [
                "Tested against Arista EOS 4.20.10M",
                "This module works with connection C(network_cli). See the L(EOS Platform Options,../network/user_guide/platform_eos.html)."
            ],
            "options": {
                "config": {
                    "description": "A dictionary of VLANs options",
                    "elements": "dict",
                    "suboptions": {
                        "name": {
                            "description": [
                                "Name of the VLAN."
                            ],
                            "type": "str"
                        },
                        "state": {
                            "choices": [
                                "active",
                                "suspend"
                            ],
                            "description": [
                                "Operational state of the VLAN"
                            ],
                            "type": "str"
                        },
                        "vlan_id": {
                            "description": [
                                "ID of the VLAN. Range 1-4094"
                            ],
                            "required": true,
                            "type": "int"
                        }
                    },
                    "type": "list"
                },
                "running_config": {
                    "description": [
                        "This option is used only with state I(parsed).",
                        "The value of this option should be the output received from the EOS device by executing the command B(show running-config | section vlan).",
                        "The state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "merged",
                        "replaced",
                        "overridden",
                        "deleted",
                        "rendered",
                        "gathered",
                        "parsed"
                    ],
                    "default": "merged",
                    "description": [
                        "The state of the configuration after module completion"
                    ],
                    "type": "str"
                }
            },
            "short_description": "VLANs resource module",
            "version_added": "1.0.0",
            "version_added_collection": "arista.eos"
        },
        "examples": "\n# Using deleted\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Delete attributes of the given VLANs.\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n    state: deleted\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Merge given VLAN attributes with device configuration\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n      state: suspend\n    state: merged\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n#    state suspend\n\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Override device configuration of all VLANs with provided configuration\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n      state: suspend\n    state: overridden\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 20\n#    state suspend\n\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n\n- name: Replace all attributes of specified VLANs with provided configuration\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 20\n      state: suspend\n    state: replaced\n\n# After state:\n# ------------\n#\n# veos(config-vlan-20)#show running-config | section vlan\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    state suspend\n\n# using parsed\n\n# parsed.cfg\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n#    state suspend\n\n- name: Use parsed to convert native configs to structured data\n  arista.eos.eos_vlans:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Output:\n# -------\n#   parsed:\n#     - vlan_id: 10\n#       name: ten\n#     - vlan_id: 20\n#       state: suspend\n\n# Using rendered:\n\n- name: Use Rendered to convert the structured data to native config\n  arista.eos.eos_vlans:\n    config:\n    - vlan_id: 10\n      name: ten\n    - vlan_id: 20\n      state: suspend\n    state: rendered\n\n# Output:\n# ------\n# rendered:\n#   - \"vlan 10\"\n#   - \"name ten\"\n#   - \"vlan 20\"\n#   - \"state suspend\"\n\n# Using gathered:\n# native_config:\n# vlan 10\n#    name ten\n# !\n# vlan 20\n#    name twenty\n#    state suspend\n\n- name: Gather vlans facts from the device\n  arista.eos.eos_vlans:\n    state: gathered\n\n# Output:\n# ------\n\n# gathered:\n#   - vlan_id: 10\n#     name: ten\n#   - vlan_id: 20\n#     state: suspend\n\n",
        "metadata": null,
        "return": {
            "after": {
                "description": "The configuration as structured data after module completion.",
                "returned": "when changed",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "list"
            },
            "before": {
                "description": "The configuration as structured data prior to module invocation.",
                "returned": "always",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "list"
            },
            "commands": {
                "description": "The set of commands pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "vlan 10",
                    "no name",
                    "vlan 11",
                    "name Eleven"
                ],
                "type": "list"
            }
        }
    }
}
