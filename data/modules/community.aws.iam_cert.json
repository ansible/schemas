{
    "community.aws.iam_cert": {
        "doc": {
            "author": "Jonathan I. Davila (@defionscode)",
            "collection": "community.aws",
            "description": [
                "Allows for the management of server certificates."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/iam_cert.py",
            "has_action": false,
            "module": "iam_cert",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "cert": {
                    "description": [
                        "The path to, or content of the certificate body in PEM encoded format. As of 2.4 content is accepted. If the parameter is not a file, it is assumed to be content."
                    ],
                    "type": "str"
                },
                "cert_chain": {
                    "description": [
                        "The path to, or content of, the CA certificate chain in PEM encoded format. As of 2.4 content is accepted. If the parameter is not a file, it is assumed to be content."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "dup_ok": {
                    "description": [
                        "By default the module will not upload a certificate that is already uploaded into AWS.",
                        "If I(dup_ok=True), it will upload the certificate as long as the name is unique.",
                        "Defaults to C(false)."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "key": {
                    "description": [
                        "The path to, or content of the private key in PEM encoded format. As of 2.4 content is accepted. If the parameter is not a file, it is assumed to be content."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of certificate to add, update or remove."
                    ],
                    "required": true,
                    "type": "str"
                },
                "new_name": {
                    "description": [
                        "When I(state=present), this will update the name of the cert.",
                        "The I(cert), I(key) and I(cert_chain) parameters will be ignored if this is defined."
                    ],
                    "type": "str"
                },
                "new_path": {
                    "description": [
                        "When I(state=present), this will update the path of the cert.",
                        "The I(cert), I(key) and I(cert_chain) parameters will be ignored if this is defined."
                    ],
                    "type": "str"
                },
                "path": {
                    "default": "/",
                    "description": [
                        "When creating or updating, specify the desired path of the certificate."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Whether to create (or update) or delete the certificate.",
                        "If I(new_path) or I(new_name) is defined, specifying present will attempt to make an update these."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "python >= 2.6"
            ],
            "short_description": "Manage server certificates for use on ELBs and CloudFront",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Basic server certificate upload from local file\n  community.aws.iam_cert:\n    name: very_ssl\n    state: present\n    cert: \"{{ lookup('file', 'path/to/cert') }}\"\n    key: \"{{ lookup('file', 'path/to/key') }}\"\n    cert_chain: \"{{ lookup('file', 'path/to/certchain') }}\"\n\n- name: Basic server certificate upload\n  community.aws.iam_cert:\n    name: very_ssl\n    state: present\n    cert: path/to/cert\n    key: path/to/key\n    cert_chain: path/to/certchain\n\n- name: Server certificate upload using key string\n  community.aws.iam_cert:\n    name: very_ssl\n    state: present\n    path: \"/a/cert/path/\"\n    cert: body_of_somecert\n    key: vault_body_of_privcertkey\n    cert_chain: body_of_myverytrustedchain\n\n- name: Basic rename of existing certificate\n  community.aws.iam_cert:\n    name: very_ssl\n    new_name: new_very_ssl\n    state: present\n\n",
        "metadata": null,
        "return": null
    }
}
