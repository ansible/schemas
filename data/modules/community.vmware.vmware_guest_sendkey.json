{
    "community.vmware.vmware_guest_sendkey": {
        "doc": {
            "author": [
                "Diane Wang (@Tomorrow9) <dianew@vmware.com>"
            ],
            "collection": "community.vmware",
            "description": [
                "This module is used to send keystrokes to given virtual machine.",
                "All parameters and VMware object names are case sensitive."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_guest_sendkey.py",
            "has_action": false,
            "module": "vmware_guest_sendkey",
            "notes": [
                "Tested on vSphere 6.5 and 6.7"
            ],
            "options": {
                "cluster": {
                    "description": [
                        "The name of cluster where the virtual machine is running.",
                        "This is a required parameter, if C(esxi_hostname) is not set.",
                        "C(esxi_hostname) and C(cluster) are mutually exclusive parameters."
                    ],
                    "type": "str"
                },
                "datacenter": {
                    "description": [
                        "The datacenter name to which virtual machine belongs to."
                    ],
                    "type": "str"
                },
                "esxi_hostname": {
                    "description": [
                        "The ESXi hostname where the virtual machine is running.",
                        "This is a required parameter, if C(cluster) is not set.",
                        "C(esxi_hostname) and C(cluster) are mutually exclusive parameters."
                    ],
                    "type": "str"
                },
                "folder": {
                    "description": [
                        "Destination folder, absolute or relative path to find an existing guest.",
                        "This is a required parameter, only if multiple VMs are found with same name.",
                        "The folder should include the datacenter. ESXi server's datacenter is ha-datacenter.",
                        "Examples:",
                        "   folder: /ha-datacenter/vm",
                        "   folder: ha-datacenter/vm",
                        "   folder: /datacenter1/vm",
                        "   folder: datacenter1/vm",
                        "   folder: /datacenter1/vm/folder1",
                        "   folder: datacenter1/vm/folder1",
                        "   folder: /folder1/datacenter1/vm",
                        "   folder: folder1/datacenter1/vm",
                        "   folder: /folder1/datacenter1/vm/folder2"
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "keys_send": {
                    "description": [
                        "The list of the keys will be sent to the virtual machine.",
                        "Valid values are C(ENTER), C(ESC), C(BACKSPACE), C(TAB), C(SPACE), C(CAPSLOCK), C(DELETE), C(CTRL_ALT_DEL), C(CTRL_C) and C(F1) to C(F12), C(RIGHTARROW), C(LEFTARROW), C(DOWNARROW), C(UPARROW).",
                        "If both C(keys_send) and C(string_send) are specified, keys in C(keys_send) list will be sent in front of the C(string_send)."
                    ],
                    "type": "list"
                },
                "moid": {
                    "description": [
                        "Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.",
                        "This is required if C(name) or C(uuid) is not supplied."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the virtual machine.",
                        "This is a required parameter, if parameter C(uuid) or C(moid) is not supplied."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "string_send": {
                    "description": [
                        "The string will be sent to the virtual machine.",
                        "This string can contain valid special character, alphabet and digit on the keyboard."
                    ],
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "uuid": {
                    "description": [
                        "UUID of the instance to gather facts if known, this is VMware's unique identifier.",
                        "This is a required parameter, if parameter C(name) or C(moid) is not supplied."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Send USB HID codes to the Virtual Machine's keyboard."
        },
        "examples": "\n- name: Send list of keys to virtual machine\n  community.vmware.vmware_guest_sendkey:\n    validate_certs: no\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    datacenter: \"{{ datacenter_name }}\"\n    folder: \"{{ folder_name }}\"\n    name: \"{{ vm_name }}\"\n    keys_send:\n      - TAB\n      - TAB\n      - ENTER\n  delegate_to: localhost\n  register: keys_num_sent\n\n- name: Send list of keys to virtual machine using MoID\n  community.vmware.vmware_guest_sendkey:\n    validate_certs: no\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    datacenter: \"{{ datacenter_name }}\"\n    folder: \"{{ folder_name }}\"\n    moid: vm-42\n    keys_send:\n      - CTRL_ALT_DEL\n  delegate_to: localhost\n  register: ctrl_alt_del_sent\n\n- name: Send a string to virtual machine\n  community.vmware.vmware_guest_sendkey:\n    validate_certs: no\n    hostname: \"{{ vcenter_hostname }}\"\n    username: \"{{ vcenter_username }}\"\n    password: \"{{ vcenter_password }}\"\n    datacenter: \"{{ datacenter_name }}\"\n    folder: \"{{ folder_name }}\"\n    name: \"{{ vm_name }}\"\n    string_send: \"user_logon\"\n  delegate_to: localhost\n  register: keys_num_sent\n",
        "metadata": null,
        "return": {
            "sendkey_info": {
                "description": "display the keys and the number of keys sent to the virtual machine",
                "returned": "always",
                "sample": {
                    "keys_send": [
                        "SPACE",
                        "DOWNARROW",
                        "DOWNARROW",
                        "ENTER"
                    ],
                    "keys_send_number": 4,
                    "returned_keys_send_number": 4,
                    "string_send": null,
                    "virtual_machine": "test_vm"
                },
                "type": "dict"
            }
        }
    }
}
