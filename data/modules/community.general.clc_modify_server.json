{
    "community.general.clc_modify_server": {
        "doc": {
            "author": "CLC Runner (@clc-runner)",
            "collection": "community.general",
            "description": [
                "An Ansible module to modify servers in CenturyLink Cloud."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/clc_modify_server.py",
            "has_action": false,
            "module": "clc_modify_server",
            "notes": [
                "To use this module, it is required to set the below environment variables which enables access to the Centurylink Cloud - CLC_V2_API_USERNAME, the account login id for the centurylink cloud - CLC_V2_API_PASSWORD, the account password for the centurylink cloud",
                "Alternatively, the module accepts the API token and account alias. The API token can be generated using the CLC account login and password via the HTTP api call @ https://api.ctl.io/v2/authentication/login - CLC_V2_API_TOKEN, the API token generated from https://api.ctl.io/v2/authentication/login - CLC_ACCT_ALIAS, the account alias associated with the centurylink cloud",
                "Users can set CLC_V2_API_URL to specify an endpoint for pointing to a different CLC environment."
            ],
            "options": {
                "alert_policy_id": {
                    "description": [
                        "The alert policy id to be associated to the server. This is mutually exclusive with 'alert_policy_name'"
                    ],
                    "type": "str"
                },
                "alert_policy_name": {
                    "description": [
                        "The alert policy name to be associated to the server. This is mutually exclusive with 'alert_policy_id'"
                    ],
                    "type": "str"
                },
                "anti_affinity_policy_id": {
                    "description": [
                        "The anti affinity policy id to be set for a hyper scale server. This is mutually exclusive with 'anti_affinity_policy_name'"
                    ],
                    "type": "str"
                },
                "anti_affinity_policy_name": {
                    "description": [
                        "The anti affinity policy name to be set for a hyper scale server. This is mutually exclusive with 'anti_affinity_policy_id'"
                    ],
                    "type": "str"
                },
                "cpu": {
                    "description": [
                        "How many CPUs to update on the server"
                    ],
                    "type": "str"
                },
                "memory": {
                    "description": [
                        "Memory (in GB) to set to the server."
                    ],
                    "type": "str"
                },
                "server_ids": {
                    "description": [
                        "A list of server Ids to modify."
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "The state to insure that the provided resources are in."
                    ],
                    "type": "str"
                },
                "wait": {
                    "default": "yes",
                    "description": [
                        "Whether to wait for the provisioning tasks to finish before returning."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python = 2.7",
                "requests >= 2.5.0",
                "clc-sdk"
            ],
            "short_description": "modify servers in CenturyLink Cloud."
        },
        "examples": "\n# Note - You must set the CLC_V2_API_USERNAME And CLC_V2_API_PASSWD Environment variables before running these examples\n\n- name: Set the cpu count to 4 on a server\n  community.general.clc_modify_server:\n    server_ids:\n        - UC1TESTSVR01\n        - UC1TESTSVR02\n    cpu: 4\n    state: present\n\n- name: Set the memory to 8GB on a server\n  community.general.clc_modify_server:\n    server_ids:\n        - UC1TESTSVR01\n        - UC1TESTSVR02\n    memory: 8\n    state: present\n\n- name: Set the anti affinity policy on a server\n  community.general.clc_modify_server:\n    server_ids:\n        - UC1TESTSVR01\n        - UC1TESTSVR02\n    anti_affinity_policy_name: 'aa_policy'\n    state: present\n\n- name: Remove the anti affinity policy on a server\n  community.general.clc_modify_server:\n    server_ids:\n        - UC1TESTSVR01\n        - UC1TESTSVR02\n    anti_affinity_policy_name: 'aa_policy'\n    state: absent\n\n- name: Add the alert policy on a server\n  community.general.clc_modify_server:\n    server_ids:\n        - UC1TESTSVR01\n        - UC1TESTSVR02\n    alert_policy_name: 'alert_policy'\n    state: present\n\n- name: Remove the alert policy on a server\n  community.general.clc_modify_server:\n    server_ids:\n        - UC1TESTSVR01\n        - UC1TESTSVR02\n    alert_policy_name: 'alert_policy'\n    state: absent\n\n- name: Ret the memory to 16GB and cpu to 8 core on a lust if servers\n  community.general.clc_modify_server:\n    server_ids:\n        - UC1TESTSVR01\n        - UC1TESTSVR02\n    cpu: 8\n    memory: 16\n    state: present\n",
        "metadata": null,
        "return": {
            "server_ids": {
                "description": "The list of server ids that are changed",
                "returned": "success",
                "sample": [
                    "UC1TEST-SVR01",
                    "UC1TEST-SVR02"
                ],
                "type": "list"
            },
            "servers": {
                "description": "The list of server objects that are changed",
                "returned": "success",
                "sample": [
                    {
                        "changeInfo": {
                            "createdBy": "service.wfad",
                            "createdDate": 1438196820,
                            "modifiedBy": "service.wfad",
                            "modifiedDate": 1438196820
                        },
                        "description": "test-server",
                        "details": {
                            "alertPolicies": [],
                            "cpu": 1,
                            "customFields": [],
                            "diskCount": 3,
                            "disks": [
                                {
                                    "id": "0:0",
                                    "partitionPaths": [],
                                    "sizeGB": 1
                                },
                                {
                                    "id": "0:1",
                                    "partitionPaths": [],
                                    "sizeGB": 2
                                },
                                {
                                    "id": "0:2",
                                    "partitionPaths": [],
                                    "sizeGB": 14
                                }
                            ],
                            "hostName": "",
                            "inMaintenanceMode": false,
                            "ipAddresses": [
                                {
                                    "internal": "10.1.1.1"
                                }
                            ],
                            "memoryGB": 1,
                            "memoryMB": 1024,
                            "partitions": [],
                            "powerState": "started",
                            "snapshots": [],
                            "storageGB": 17
                        },
                        "groupId": "086ac1dfe0b6411989e8d1b77c4065f0",
                        "id": "test-server",
                        "ipaddress": "10.120.45.23",
                        "isTemplate": false,
                        "links": [
                            {
                                "href": "/v2/servers/wfad/test-server",
                                "id": "test-server",
                                "rel": "self",
                                "verbs": [
                                    "GET",
                                    "PATCH",
                                    "DELETE"
                                ]
                            },
                            {
                                "href": "/v2/groups/wfad/086ac1dfe0b6411989e8d1b77c4065f0",
                                "id": "086ac1dfe0b6411989e8d1b77c4065f0",
                                "rel": "group"
                            },
                            {
                                "href": "/v2/accounts/wfad",
                                "id": "wfad",
                                "rel": "account"
                            },
                            {
                                "href": "/v2/billing/wfad/serverPricing/test-server",
                                "rel": "billing"
                            },
                            {
                                "href": "/v2/servers/wfad/test-server/publicIPAddresses",
                                "rel": "publicIPAddresses",
                                "verbs": [
                                    "POST"
                                ]
                            },
                            {
                                "href": "/v2/servers/wfad/test-server/credentials",
                                "rel": "credentials"
                            },
                            {
                                "href": "/v2/servers/wfad/test-server/statistics",
                                "rel": "statistics"
                            },
                            {
                                "href": "/v2/servers/wfad/510ec21ae82d4dc89d28479753bf736a/upcomingScheduledActivities",
                                "rel": "upcomingScheduledActivities"
                            },
                            {
                                "href": "/v2/servers/wfad/510ec21ae82d4dc89d28479753bf736a/scheduledActivities",
                                "rel": "scheduledActivities",
                                "verbs": [
                                    "GET",
                                    "POST"
                                ]
                            },
                            {
                                "href": "/v2/servers/wfad/test-server/capabilities",
                                "rel": "capabilities"
                            },
                            {
                                "href": "/v2/servers/wfad/test-server/alertPolicies",
                                "rel": "alertPolicyMappings",
                                "verbs": [
                                    "POST"
                                ]
                            },
                            {
                                "href": "/v2/servers/wfad/test-server/antiAffinityPolicy",
                                "rel": "antiAffinityPolicyMapping",
                                "verbs": [
                                    "PUT",
                                    "DELETE"
                                ]
                            },
                            {
                                "href": "/v2/servers/wfad/test-server/cpuAutoscalePolicy",
                                "rel": "cpuAutoscalePolicyMapping",
                                "verbs": [
                                    "PUT",
                                    "DELETE"
                                ]
                            }
                        ],
                        "locationId": "UC1",
                        "name": "test-server",
                        "os": "ubuntu14_64Bit",
                        "osType": "Ubuntu 14 64-bit",
                        "status": "active",
                        "storageType": "standard",
                        "type": "standard"
                    }
                ],
                "type": "list"
            }
        }
    }
}
