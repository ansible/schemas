{
    "mellanox.onyx.onyx_facts": {
        "doc": {
            "author": "Waleed Mousa (@waleedym), Samer Deeb (@samerd)",
            "collection": "mellanox.onyx",
            "description": [
                "Collects a base set of device facts from a ONYX Mellanox network devices This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/mellanox/onyx/plugins/modules/onyx_facts.py",
            "has_action": false,
            "module": "onyx_facts",
            "notes": [
                "Tested against ONYX 3.6"
            ],
            "options": {
                "gather_subset": {
                    "default": "version",
                    "description": [
                        "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, version, module, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected."
                    ],
                    "required": false
                }
            },
            "short_description": "Collect facts from Mellanox ONYX network devices"
        },
        "examples": "\n---\n- name: Collect all facts from the device\n  onyx_facts:\n    gather_subset: all\n- name: Collect only the interfaces facts\n  onyx_facts:\n    gather_subset:\n      - interfaces\n- name: Do not collect version facts\n  onyx_facts:\n    gather_subset:\n      - \"!version\"\n",
        "metadata": null,
        "return": {
            "ansible_net_gather_subset": {
                "description": "The list of fact subsets collected from the device",
                "returned": "always",
                "type": "list"
            },
            "ansible_net_interfaces": {
                "description": "A hash of all interfaces running on the system",
                "returned": "when interfaces is configured",
                "type": "dict"
            },
            "ansible_net_modules": {
                "description": "A hash of all modules on the systeme with status",
                "returned": "when modules is configured",
                "type": "dict"
            },
            "ansible_net_version": {
                "description": "A hash of all currently running system image information",
                "returned": "when version is configured or when no gather_subset is provided",
                "type": "dict"
            }
        }
    }
}
