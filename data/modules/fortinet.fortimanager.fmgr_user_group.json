{
    "fortinet.fortimanager.fmgr_user_group": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_user_group.py",
            "has_action": false,
            "module": "fmgr_user_group",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "user_group": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "auth-concurrent-override": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable overriding the global number of concurrent authentication sessions for this user group.",
                            "type": "str"
                        },
                        "auth-concurrent-value": {
                            "description": "Maximum number of concurrent authenticated connections per user (0 - 100).",
                            "type": "int"
                        },
                        "authtimeout": {
                            "description": "Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.",
                            "type": "int"
                        },
                        "company": {
                            "choices": [
                                "optional",
                                "mandatory",
                                "disabled"
                            ],
                            "description": "Set the action for the company guest user field.",
                            "type": "str"
                        },
                        "email": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable the guest user email address field.",
                            "type": "str"
                        },
                        "expire": {
                            "description": "Time in seconds before guest user accounts expire. (1 - 31536000 sec)",
                            "type": "int"
                        },
                        "expire-type": {
                            "choices": [
                                "immediately",
                                "first-successful-login"
                            ],
                            "description": "Determine when the expiration countdown begins.",
                            "type": "str"
                        },
                        "group-type": {
                            "choices": [
                                "firewall",
                                "directory-service",
                                "fsso-service",
                                "guest",
                                "rsso"
                            ],
                            "description": "Set the group to be for firewall authentication, FSSO, RSSO, or guest users.",
                            "type": "str"
                        },
                        "guest": {
                            "description": "no description",
                            "suboptions": {
                                "comment": {
                                    "description": "Comment.",
                                    "type": "str"
                                },
                                "company": {
                                    "description": "Set the action for the company guest user field.",
                                    "type": "str"
                                },
                                "email": {
                                    "description": "Email.",
                                    "type": "str"
                                },
                                "expiration": {
                                    "description": "Expire time.",
                                    "type": "str"
                                },
                                "mobile-phone": {
                                    "description": "Mobile phone.",
                                    "type": "str"
                                },
                                "name": {
                                    "description": "Guest name.",
                                    "type": "str"
                                },
                                "password": {
                                    "description": "no description",
                                    "type": "str"
                                },
                                "sponsor": {
                                    "description": "Set the action for the sponsor guest user field.",
                                    "type": "str"
                                },
                                "user-id": {
                                    "description": "Guest ID.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "http-digest-realm": {
                            "description": "Realm attribute for MD5-digest authentication.",
                            "type": "str"
                        },
                        "id": {
                            "description": "Group ID.",
                            "type": "int"
                        },
                        "match": {
                            "description": "no description",
                            "suboptions": {
                                "_gui_meta": {
                                    "description": "no description",
                                    "type": "str"
                                },
                                "group-name": {
                                    "description": "Name of matching group on remote authentication server.",
                                    "type": "str"
                                },
                                "id": {
                                    "description": "ID.",
                                    "type": "int"
                                },
                                "server-name": {
                                    "description": "Name of remote auth server.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "max-accounts": {
                            "description": "Maximum number of guest accounts that can be created for this group (0 means unlimited).",
                            "type": "int"
                        },
                        "member": {
                            "description": "Names of users, peers, LDAP severs, or RADIUS servers to add to the user group.",
                            "type": "str"
                        },
                        "mobile-phone": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable the guest user mobile phone number field.",
                            "type": "str"
                        },
                        "multiple-guest-add": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable addition of multiple guests.",
                            "type": "str"
                        },
                        "name": {
                            "description": "Group name.",
                            "type": "str"
                        },
                        "password": {
                            "choices": [
                                "auto-generate",
                                "specify",
                                "disable"
                            ],
                            "description": "Guest user password type.",
                            "type": "str"
                        },
                        "sms-custom-server": {
                            "description": "SMS server.",
                            "type": "str"
                        },
                        "sms-server": {
                            "choices": [
                                "fortiguard",
                                "custom"
                            ],
                            "description": "Send SMS through FortiGuard or other external server.",
                            "type": "str"
                        },
                        "sponsor": {
                            "choices": [
                                "optional",
                                "mandatory",
                                "disabled"
                            ],
                            "description": "Set the action for the sponsor guest user field.",
                            "type": "str"
                        },
                        "sso-attribute-value": {
                            "description": "Name of the RADIUS user group that this local user group represents.",
                            "type": "str"
                        },
                        "user-id": {
                            "choices": [
                                "email",
                                "auto-generate",
                                "specify"
                            ],
                            "description": "Guest user ID type.",
                            "type": "str"
                        },
                        "user-name": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable the guest user name entry.",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "Configure user groups.",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: Configure user groups.\n      fmgr_user_group:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         state: <value in [present, absent]>\n         user_group:\n            auth-concurrent-override: <value in [disable, enable]>\n            auth-concurrent-value: <value of integer>\n            authtimeout: <value of integer>\n            company: <value in [optional, mandatory, disabled]>\n            email: <value in [disable, enable]>\n            expire: <value of integer>\n            expire-type: <value in [immediately, first-successful-login]>\n            group-type: <value in [firewall, directory-service, fsso-service, ...]>\n            guest:\n              -\n                  comment: <value of string>\n                  company: <value of string>\n                  email: <value of string>\n                  expiration: <value of string>\n                  mobile-phone: <value of string>\n                  name: <value of string>\n                  password: <value of string>\n                  sponsor: <value of string>\n                  user-id: <value of string>\n            http-digest-realm: <value of string>\n            id: <value of integer>\n            match:\n              -\n                  _gui_meta: <value of string>\n                  group-name: <value of string>\n                  id: <value of integer>\n                  server-name: <value of string>\n            max-accounts: <value of integer>\n            member: <value of string>\n            mobile-phone: <value in [disable, enable]>\n            multiple-guest-add: <value in [disable, enable]>\n            name: <value of string>\n            password: <value in [auto-generate, specify, disable]>\n            sms-custom-server: <value of string>\n            sms-server: <value in [fortiguard, custom]>\n            sponsor: <value in [optional, mandatory, disabled]>\n            sso-attribute-value: <value of string>\n            user-id: <value in [email, auto-generate, specify]>\n            user-name: <value in [disable, enable]>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
