{
    "community.zabbix.zabbix_action": {
        "doc": {
            "author": [
                "Ruben Tsirunyan (@rubentsirunyan)",
                "Ruben Harutyunov (@K-DOT)"
            ],
            "collection": "community.zabbix",
            "description": [
                "This module allows you to create, modify and delete Zabbix actions."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/zabbix/plugins/modules/zabbix_action.py",
            "has_action": false,
            "module": "zabbix_action",
            "notes": [
                "Only Zabbix >= 3.0 is supported.",
                "If you use I(login_password=zabbix), the word \"zabbix\" is replaced by \"********\" in all module output, because I(login_password) uses C(no_log). See L(this FAQ,https://docs.ansible.com/ansible/latest/network/user_guide/faq.html#why-is-my-output-sometimes-replaced-with) for more information."
            ],
            "options": {
                "acknowledge_default_message": {
                    "description": [
                        "Update operation (known as \"Acknowledge operation\" before Zabbix 4.0) message text.",
                        "With >= Zabbix 5.0 this field is removed from the API and is dropped silently by module.",
                        "Works only with >= Zabbix 3.4 and < Zabbix 5.0"
                    ]
                },
                "acknowledge_default_subject": {
                    "description": [
                        "Update operation (known as \"Acknowledge operation\" before Zabbix 4.0) message subject.",
                        "With >= Zabbix 5.0 this field is removed from the API and is dropped silently by module.",
                        "Works only with >= Zabbix 3.4 and < Zabbix 5.0"
                    ]
                },
                "acknowledge_operations": {
                    "aliases": [
                        "update_operations"
                    ],
                    "description": [
                        "List of acknowledge operations.",
                        "Action acknowledge operations are known as update operations since Zabbix 4.0.",
                        "C(Suboptions) are the same as for I(operations).",
                        "Works only with >= Zabbix 3.4"
                    ],
                    "type": "list"
                },
                "conditions": {
                    "description": [
                        "List of conditions to use for filtering results.",
                        "For more information about suboptions of this option please check out Zabbix API documentation U(https://www.zabbix.com/documentation/5.0/manual/api/reference/action/object#action_filter_condition)"
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "formulaid": {
                            "description": [
                                "Arbitrary unique ID that is used to reference the condition from a custom expression.",
                                "Can only contain upper-case letters.",
                                "Required for custom expression filters and ignored otherwise."
                            ]
                        },
                        "operator": {
                            "choices": [
                                "=",
                                "<>",
                                "like",
                                "not like",
                                "in",
                                ">=",
                                "<=",
                                "not in",
                                "matches",
                                "does not match",
                                "Yes",
                                "No"
                            ],
                            "description": [
                                "Condition operator.",
                                "When I(type) is set to C(time_period), the choices are C(in), C(not in).",
                                "C(matches), C(does not match), C(Yes) and C(No) condition operators work only with >= Zabbix 4.0"
                            ]
                        },
                        "type": {
                            "description": [
                                "Type (label) of the condition.",
                                "Possible values when I(event_source=trigger):",
                                " - C(host_group)",
                                " - C(host)",
                                " - C(trigger)",
                                " - C(trigger_name)",
                                " - C(trigger_severity)",
                                " - C(time_period)",
                                " - C(host_template)",
                                " - C(application)",
                                " - C(maintenance_status) known in Zabbix 4.0 and above as \"Problem is suppressed\"",
                                " - C(event_tag)",
                                " - C(event_tag_value)",
                                "Possible values when I(event_source=discovery):",
                                " - C(host_IP)",
                                " - C(discovered_service_type)",
                                " - C(discovered_service_port)",
                                " - C(discovery_status)",
                                " - C(uptime_or_downtime_duration)",
                                " - C(received_value)",
                                " - C(discovery_rule)",
                                " - C(discovery_check)",
                                " - C(proxy)",
                                " - C(discovery_object)",
                                "Possible values when I(event_source=auto_registration):",
                                " - C(proxy)",
                                " - C(host_name)",
                                " - C(host_metadata)",
                                "Possible values when I(event_source=internal):",
                                " - C(host_group)",
                                " - C(host)",
                                " - C(host_template)",
                                " - C(application)",
                                " - C(event_type)"
                            ]
                        },
                        "value": {
                            "description": [
                                "Value to compare with.",
                                "When I(type=discovery_status), the choices are:",
                                " - C(up)",
                                " - C(down)",
                                " - C(discovered)",
                                " - C(lost)",
                                "When I(type=discovery_object), the choices are:",
                                " - C(host)",
                                " - C(service)",
                                "When I(type=event_type), the choices are:",
                                " - C(item in not supported state)",
                                " - C(item in normal state)",
                                " - C(LLD rule in not supported state)",
                                " - C(LLD rule in normal state)",
                                " - C(trigger in unknown state)",
                                " - C(trigger in normal state)",
                                "When I(type=trigger_severity), the choices are (case-insensitive):",
                                " - C(not classified)",
                                " - C(information)",
                                " - C(warning)",
                                " - C(average)",
                                " - C(high)",
                                " - C(disaster)",
                                "Irrespective of user-visible names being changed in Zabbix. Defaults to C(not classified) if omitted.",
                                "Besides the above options, this is usually either the name of the object or a string to compare with."
                            ]
                        },
                        "value2": {
                            "description": [
                                "Secondary value to compare with.",
                                "Required for trigger actions when condition I(type=event_tag_value)."
                            ]
                        }
                    },
                    "type": "list"
                },
                "default_message": {
                    "description": [
                        "Problem message default text.",
                        "With >= Zabbix 5.0 this field is removed from the API and is dropped silently by module.",
                        "Works only with < Zabbix 5.0"
                    ]
                },
                "default_subject": {
                    "description": [
                        "Problem message default subject.",
                        "With >= Zabbix 5.0 this field is removed from the API and is dropped silently by module.",
                        "Works only with < Zabbix 5.0"
                    ]
                },
                "esc_period": {
                    "description": [
                        "Default operation step duration. Must be greater than 60 seconds.",
                        "Accepts only seconds in int for <= Zabbix 3.2",
                        "Accepts seconds, time unit with suffix and user macro since => Zabbix 3.4",
                        "Required when C(state=present)."
                    ],
                    "required": false
                },
                "eval_type": {
                    "choices": [
                        "andor",
                        "and",
                        "or",
                        "custom_expression"
                    ],
                    "description": [
                        "Filter condition evaluation method.",
                        "Defaults to C(andor) if conditions are less then 2 or if I(formula) is not specified.",
                        "Defaults to C(custom_expression) when formula is specified."
                    ]
                },
                "event_source": {
                    "choices": [
                        "trigger",
                        "discovery",
                        "auto_registration",
                        "internal"
                    ],
                    "description": [
                        "Type of events that the action will handle.",
                        "Required when C(state=present)."
                    ],
                    "required": false
                },
                "formula": {
                    "description": [
                        "User-defined expression to be used for evaluating conditions with a custom expression.",
                        "The expression must contain IDs that reference each condition by its formulaid.",
                        "The IDs used in the expression must exactly match the ones defined in the I(conditions). No condition can remain unused or omitted.",
                        "Required when I(eval_type=custom_expression).",
                        "Use sequential IDs that start at \"A\". If non-sequential IDs are used, Zabbix re-indexes them. This makes each module run notice the difference in IDs and update the action."
                    ]
                },
                "http_login_password": {
                    "description": [
                        "Basic Auth password"
                    ],
                    "type": "str"
                },
                "http_login_user": {
                    "description": [
                        "Basic Auth login"
                    ],
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "Zabbix user password."
                    ],
                    "required": true,
                    "type": "str"
                },
                "login_user": {
                    "description": [
                        "Zabbix user name."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the action"
                    ],
                    "required": true
                },
                "operations": {
                    "description": [
                        "List of action operations"
                    ],
                    "suboptions": {
                        "command": {
                            "description": [
                                "Command to run.",
                                "Required when I(type=remote_command) and I(command_type!=global_script)."
                            ]
                        },
                        "command_type": {
                            "choices": [
                                "custom_script",
                                "ipmi",
                                "ssh",
                                "telnet",
                                "global_script"
                            ],
                            "description": [
                                "Type of operation command.",
                                "Required when I(type=remote_command)."
                            ]
                        },
                        "esc_period": {
                            "default": "0s",
                            "description": [
                                "Duration of an escalation step in seconds.",
                                "Must be greater than 60 seconds.",
                                "Accepts only seconds in int for <= Zabbix 3.2",
                                "Accepts seconds, time unit with suffix and user macro since => Zabbix 3.4",
                                "If set to 0 or 0s, the default action escalation period will be used."
                            ]
                        },
                        "esc_step_from": {
                            "default": 1,
                            "description": [
                                "Step to start escalation from."
                            ]
                        },
                        "esc_step_to": {
                            "default": 1,
                            "description": [
                                "Step to end escalation at.",
                                "Specify 0 for infinitely."
                            ]
                        },
                        "execute_on": {
                            "choices": [
                                "agent",
                                "server",
                                "proxy"
                            ],
                            "description": [
                                "Target on which the custom script operation command will be executed.",
                                "Required when I(type=remote_command) and I(command_type=custom_script)."
                            ]
                        },
                        "host_groups": {
                            "description": [
                                "List of host groups host should be added to.",
                                "Required when I(type=add_to_host_group) or I(type=remove_from_host_group)."
                            ],
                            "type": "list"
                        },
                        "inventory": {
                            "choices": [
                                "manual",
                                "automatic"
                            ],
                            "description": [
                                "Host inventory mode.",
                                "Required when I(type=set_host_inventory_mode)."
                            ]
                        },
                        "media_type": {
                            "default": "all",
                            "description": [
                                "Media type that will be used to send the message.",
                                "Can be used with I(type=send_message) or I(type=notify_all_involved) inside I(acknowledge_operations).",
                                "Set to C(all) for all media types"
                            ]
                        },
                        "message": {
                            "description": [
                                "Operation message text.",
                                "Will check the 'default message' and use the text from I(default_message) if this and I(default_subject) are not specified"
                            ]
                        },
                        "operation_condition": {
                            "choices": [
                                "acknowledged",
                                "not_acknowledged"
                            ],
                            "description": [
                                "The action operation condition object defines a condition that must be met to perform the current operation."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Password used for authentication.",
                                "Required when I(ssh_auth_type=password) or I(command_type=telnet).",
                                "Can be used when I(type=remote_command)."
                            ]
                        },
                        "port": {
                            "description": [
                                "Port number used for authentication.",
                                "Can be used when I(command_type in [ssh, telnet]) and I(type=remote_command)."
                            ]
                        },
                        "run_on_groups": {
                            "description": [
                                "Host groups to run remote commands on.",
                                "Required when I(type=remote_command) and I(run_on_hosts) is not set."
                            ]
                        },
                        "run_on_hosts": {
                            "description": [
                                "Hosts to run remote commands on.",
                                "Required when I(type=remote_command) and I(run_on_groups) is not set.",
                                "If set to 0 the command will be run on the current host."
                            ]
                        },
                        "script_name": {
                            "description": [
                                "The name of script used for global script commands.",
                                "Required when I(command_type=global_script).",
                                "Can be used when I(type=remote_command)."
                            ]
                        },
                        "send_to_groups": {
                            "description": [
                                "User groups to send messages to."
                            ],
                            "type": "list"
                        },
                        "send_to_users": {
                            "description": [
                                "Users (usernames or aliases) to send messages to."
                            ],
                            "type": "list"
                        },
                        "ssh_auth_type": {
                            "choices": [
                                "password",
                                "public_key"
                            ],
                            "description": [
                                "Authentication method used for SSH commands.",
                                "Required when I(type=remote_command) and I(command_type=ssh)."
                            ]
                        },
                        "ssh_privatekey_file": {
                            "description": [
                                "Name of the private key file used for SSH commands with public key authentication.",
                                "Required when I(ssh_auth_type=public_key).",
                                "Can be used when I(type=remote_command)."
                            ]
                        },
                        "ssh_publickey_file": {
                            "description": [
                                "Name of the public key file used for SSH commands with public key authentication.",
                                "Required when I(ssh_auth_type=public_key).",
                                "Can be used when I(type=remote_command)."
                            ]
                        },
                        "subject": {
                            "description": [
                                "Operation message subject.",
                                "Will check the 'default message' and use the text from I(default_subject) if this and I(default_subject) are not specified"
                            ]
                        },
                        "templates": {
                            "description": [
                                "List of templates host should be linked to.",
                                "Required when I(type=link_to_template) or I(type=unlink_from_template)."
                            ],
                            "type": "list"
                        },
                        "type": {
                            "choices": [
                                "send_message",
                                "remote_command",
                                "add_host",
                                "remove_host",
                                "add_to_host_group",
                                "remove_from_host_group",
                                "link_to_template",
                                "unlink_from_template",
                                "enable_host",
                                "disable_host",
                                "set_host_inventory_mode",
                                "notify_all_involved"
                            ],
                            "description": [
                                "Type of operation.",
                                "Valid choices when setting type for I(recovery_operations) and I(acknowledge_operations):",
                                " - C(send_message)",
                                " - C(remote_command)",
                                " - C(notify_all_involved)",
                                "Choice C(notify_all_involved) only supported in I(recovery_operations) and I(acknowledge_operations)."
                            ]
                        },
                        "username": {
                            "description": [
                                "User name used for authentication.",
                                "Required when I(ssh_auth_type in [public_key, password]) or I(command_type=telnet).",
                                "Can be used when I(type=remote_command)."
                            ]
                        }
                    },
                    "type": "list"
                },
                "pause_in_maintenance": {
                    "default": true,
                    "description": [
                        "Whether to pause escalation during maintenance periods or not.",
                        "Can be used when I(event_source=trigger)."
                    ],
                    "type": "bool"
                },
                "recovery_default_message": {
                    "description": [
                        "Recovery message text.",
                        "With >= Zabbix 5.0 this field is removed from the API and is dropped silently by module.",
                        "Works only with >= Zabbix 3.2 and < Zabbix 5.0"
                    ]
                },
                "recovery_default_subject": {
                    "description": [
                        "Recovery message subject.",
                        "With >= Zabbix 5.0 this field is removed from the API and is dropped silently by module.",
                        "Works only with >= Zabbix 3.2 and < Zabbix 5.0"
                    ]
                },
                "recovery_operations": {
                    "description": [
                        "List of recovery operations.",
                        "C(Suboptions) are the same as for I(operations).",
                        "Works only with >= Zabbix 3.2"
                    ],
                    "type": "list"
                },
                "server_url": {
                    "aliases": [
                        "url"
                    ],
                    "description": [
                        "URL of Zabbix server, with protocol (http or https). C(url) is an alias for C(server_url)."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the action.",
                        "On C(present), it will create an action if it does not exist or update the action if the associated data is different.",
                        "On C(absent), it will remove the action if it exists."
                    ]
                },
                "status": {
                    "choices": [
                        "enabled",
                        "disabled"
                    ],
                    "default": "enabled",
                    "description": [
                        "Status of the action."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The timeout of API request (seconds)."
                    ],
                    "type": "int"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to False, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "zabbix-api >= 0.5.4"
            ],
            "short_description": "Create/Delete/Update Zabbix actions"
        },
        "examples": "\n# Trigger action with only one condition\n- name: Deploy trigger action\n  community.zabbix.zabbix_action:\n    server_url: \"http://zabbix.example.com/zabbix/\"\n    login_user: Admin\n    login_password: secret\n    name: \"Send alerts to Admin\"\n    event_source: 'trigger'\n    state: present\n    status: enabled\n    esc_period: 60\n    conditions:\n      - type: 'trigger_severity'\n        operator: '>='\n        value: 'Information'\n    operations:\n      - type: send_message\n        subject: \"Something bad is happening\"\n        message: \"Come on, guys do something\"\n        media_type: 'Email'\n        send_to_users:\n          - 'Admin'\n\n# Trigger action with multiple conditions and operations\n- name: Deploy trigger action\n  community.zabbix.zabbix_action:\n    server_url: \"http://zabbix.example.com/zabbix/\"\n    login_user: Admin\n    login_password: secret\n    name: \"Send alerts to Admin\"\n    event_source: 'trigger'\n    state: present\n    status: enabled\n    esc_period: 1m\n    conditions:\n      - type: 'trigger_name'\n        operator: 'like'\n        value: 'Zabbix agent is unreachable'\n        formulaid: A\n      - type: 'trigger_severity'\n        operator: '>='\n        value: 'disaster'\n        formulaid: B\n    formula: A or B\n    operations:\n      - type: send_message\n        media_type: 'Email'\n        send_to_users:\n          - 'Admin'\n      - type: remote_command\n        command: 'systemctl restart zabbix-agent'\n        command_type: custom_script\n        execute_on: server\n        run_on_hosts:\n          - 0\n\n# Trigger action with recovery and acknowledge operations\n- name: Deploy trigger action\n  community.zabbix.zabbix_action:\n    server_url: \"http://zabbix.example.com/zabbix/\"\n    login_user: Admin\n    login_password: secret\n    name: \"Send alerts to Admin\"\n    event_source: 'trigger'\n    state: present\n    status: enabled\n    esc_period: 1h\n    conditions:\n      - type: 'trigger_severity'\n        operator: '>='\n        value: 'Information'\n    operations:\n      - type: send_message\n        subject: \"Something bad is happening\"\n        message: \"Come on, guys do something\"\n        media_type: 'Email'\n        send_to_users:\n          - 'Admin'\n    recovery_operations:\n      - type: send_message\n        subject: \"Host is down\"\n        message: \"Come on, guys do something\"\n        media_type: 'Email'\n        send_to_users:\n          - 'Admin'\n    acknowledge_operations:\n      - type: send_message\n        media_type: 'Email'\n        send_to_users:\n          - 'Admin'\n",
        "metadata": null,
        "return": {
            "msg": {
                "description": "The result of the operation",
                "returned": "success",
                "sample": "Action Deleted: Register webservers, ID: 0001",
                "type": "str"
            }
        }
    }
}
