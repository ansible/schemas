{
    "community.network.slxos_command": {
        "doc": {
            "author": "Lindsay Hill (@LindsayHill)",
            "collection": "community.network",
            "description": [
                "Sends arbitrary commands to an SLX node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
                "This module does not support running commands in configuration mode. Please use M(community.network.slxos_config) to configure SLX-OS devices."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/slxos_command.py",
            "has_action": false,
            "module": "slxos_command",
            "notes": [
                "Tested against SLX-OS 17s.1.02",
                "If a command sent to the device requires answering a prompt, it is possible to pass a dict containing I(command), I(answer) and I(prompt). See examples."
            ],
            "options": {
                "commands": {
                    "description": [
                        "List of commands to send to the remote SLX-OS device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired."
                    ],
                    "required": true
                },
                "interval": {
                    "default": 1,
                    "description": [
                        "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again."
                    ]
                },
                "match": {
                    "choices": [
                        "any",
                        "all"
                    ],
                    "default": "all",
                    "description": [
                        "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the wait_for must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied."
                    ]
                },
                "retries": {
                    "default": 10,
                    "description": [
                        "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the I(wait_for) conditions."
                    ]
                },
                "wait_for": {
                    "description": [
                        "List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples."
                    ]
                }
            },
            "short_description": "Run commands on remote devices running Extreme Networks SLX-OS"
        },
        "examples": "\ntasks:\n  - name: Run show version on remote devices\n    community.network.slxos_command:\n      commands: show version\n\n  - name: Run show version and check to see if output contains SLX\n    community.network.slxos_command:\n      commands: show version\n      wait_for: result[0] contains SLX\n\n  - name: Run multiple commands on remote nodes\n    community.network.slxos_command:\n      commands:\n        - show version\n        - show interfaces\n\n  - name: Run multiple commands and evaluate the output\n    community.network.slxos_command:\n      commands:\n        - show version\n        - show interface status\n      wait_for:\n        - result[0] contains SLX\n        - result[1] contains Eth\n  - name: Run command that requires answering a prompt\n    community.network.slxos_command:\n      commands:\n        - command: 'clear sessions'\n          prompt: 'This operation will logout all the user sessions. Do you want to continue (yes/no)?:'\n          answer: y\n",
        "metadata": null,
        "return": {
            "failed_conditions": {
                "description": "The list of conditionals that have failed",
                "returned": "failed",
                "sample": [
                    "...",
                    "..."
                ],
                "type": "list"
            },
            "stdout": {
                "description": "The set of responses from the commands",
                "returned": "always apart from low level errors (such as action plugin)",
                "sample": [
                    "...",
                    "..."
                ],
                "type": "list"
            },
            "stdout_lines": {
                "description": "The value of stdout split into a list",
                "returned": "always apart from low level errors (such as action plugin)",
                "sample": [
                    [
                        "...",
                        "..."
                    ],
                    [
                        "..."
                    ],
                    [
                        "..."
                    ]
                ],
                "type": "list"
            }
        }
    }
}
