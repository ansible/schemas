{
    "community.general.memset_zone_record": {
        "doc": {
            "author": "Simon Weald (@glitchcrab)",
            "collection": "community.general",
            "description": [
                "Manage DNS records in a Memset account."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/memset_zone_record.py",
            "has_action": false,
            "module": "memset_zone_record",
            "notes": [
                "Zones can be thought of as a logical group of domains, all of which share the same DNS records (i.e. they point to the same IP). An API key generated via the Memset customer control panel is needed with the following minimum scope - I(dns.zone_create), I(dns.zone_delete), I(dns.zone_list).",
                "Currently this module can only create one DNS record at a time. Multiple records should be created using C(with_items)."
            ],
            "options": {
                "address": {
                    "aliases": [
                        "ip",
                        "data"
                    ],
                    "description": [
                        "The address for this record (can be IP or text string depending on record type)."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "The API key obtained from the Memset control panel."
                    ],
                    "required": true,
                    "type": "str"
                },
                "priority": {
                    "description": [
                        "C(SRV) and C(TXT) record priority, in the range 0 > 999 (inclusive)."
                    ],
                    "type": "int"
                },
                "record": {
                    "description": [
                        "The subdomain to create."
                    ],
                    "required": false,
                    "type": "str"
                },
                "relative": {
                    "default": false,
                    "description": [
                        "If set then the current domain is added onto the address field for C(CNAME), C(MX), C(NS) and C(SRV)record types."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Indicates desired state of resource."
                    ],
                    "type": "str"
                },
                "ttl": {
                    "choices": [
                        0,
                        300,
                        600,
                        900,
                        1800,
                        3600,
                        7200,
                        10800,
                        21600,
                        43200,
                        86400
                    ],
                    "description": [
                        "The record's TTL in seconds (will inherit zone's TTL if not explicitly set). This must be a valid int from U(https://www.memset.com/apidocs/methods_dns.html#dns.zone_record_create)."
                    ],
                    "type": "int"
                },
                "type": {
                    "choices": [
                        "A",
                        "AAAA",
                        "CNAME",
                        "MX",
                        "NS",
                        "SRV",
                        "TXT"
                    ],
                    "description": [
                        "The type of DNS record to create."
                    ],
                    "required": true,
                    "type": "str"
                },
                "zone": {
                    "description": [
                        "The name of the zone to which to add the record to."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "short_description": "Create and delete records in Memset DNS zones."
        },
        "examples": "\n# Create DNS record for www.domain.com\n- name: Create DNS record\n  community.general.memset_zone_record:\n    api_key: dcf089a2896940da9ffefb307ef49ccd\n    state: present\n    zone: domain.com\n    type: A\n    record: www\n    address: 1.2.3.4\n    ttl: 300\n    relative: false\n  delegate_to: localhost\n\n# create an SPF record for domain.com\n- name: Create SPF record for domain.com\n  community.general.memset_zone_record:\n    api_key: dcf089a2896940da9ffefb307ef49ccd\n    state: present\n    zone: domain.com\n    type: TXT\n    address: \"v=spf1 +a +mx +ip4:a1.2.3.4 ?all\"\n  delegate_to: localhost\n\n# create multiple DNS records\n- name: Create multiple DNS records\n  community.general.memset_zone_record:\n    api_key: dcf089a2896940da9ffefb307ef49ccd\n    zone: \"{{ item.zone }}\"\n    type: \"{{ item.type }}\"\n    record: \"{{ item.record }}\"\n    address: \"{{ item.address }}\"\n  delegate_to: localhost\n  with_items:\n    - { 'zone': 'domain1.com', 'type': 'A', 'record': 'www', 'address': '1.2.3.4' }\n    - { 'zone': 'domain2.com', 'type': 'A', 'record': 'mail', 'address': '4.3.2.1' }\n",
        "metadata": null,
        "return": {
            "memset_api": {
                "contains": {
                    "address": {
                        "description": "Record content (may be an IP, string or blank depending on record type).",
                        "returned": "always",
                        "sample": "1.1.1.1",
                        "type": "str"
                    },
                    "id": {
                        "description": "Record ID.",
                        "returned": "always",
                        "sample": "b0bb1ce851aeea6feeb2dc32fe83bf9c",
                        "type": "str"
                    },
                    "priority": {
                        "description": "Priority for C(MX) and C(SRV) records.",
                        "returned": "always",
                        "sample": 10,
                        "type": "int"
                    },
                    "record": {
                        "description": "Name of record.",
                        "returned": "always",
                        "sample": "www",
                        "type": "str"
                    },
                    "relative": {
                        "description": "Adds the current domain onto the address field for C(CNAME), C(MX), C(NS) and C(SRV) types.",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "ttl": {
                        "description": "Record TTL.",
                        "returned": "always",
                        "sample": 10,
                        "type": "int"
                    },
                    "type": {
                        "description": "Record type.",
                        "returned": "always",
                        "sample": "AAAA",
                        "type": "str"
                    },
                    "zone_id": {
                        "description": "Zone ID.",
                        "returned": "always",
                        "sample": "b0bb1ce851aeea6feeb2dc32fe83bf9c",
                        "type": "str"
                    }
                },
                "description": "Record info from the Memset API.",
                "returned": "when state == present",
                "type": "complex"
            }
        }
    }
}
