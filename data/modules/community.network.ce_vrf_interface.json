{
    "community.network.ce_vrf_interface": {
        "doc": {
            "author": "Zhijin Zhou (@QijunPan)",
            "collection": "community.network",
            "description": [
                "Manages interface specific VPN configuration of HUAWEI CloudEngine switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/network/plugins/modules/ce_vrf_interface.py",
            "has_action": false,
            "module": "ce_vrf_interface",
            "notes": [
                "Ensure that a VPN instance has been created and the IPv4 address family has been enabled for the VPN instance.",
                "This module requires the netconf system service be enabled on the remote device being managed.",
                "Recommended connection is C(netconf).",
                "This module also works with C(local) connections for legacy playbooks."
            ],
            "options": {
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Manage the state of the resource."
                    ],
                    "required": false
                },
                "vpn_interface": {
                    "description": [
                        "An interface that can binding VPN instance, i.e. 40GE1/0/22, Vlanif10. Must be fully qualified interface name. Interface types, such as 10GE, 40GE, 100GE, LoopBack, MEth, Tunnel, Vlanif...."
                    ],
                    "required": true
                },
                "vrf": {
                    "description": [
                        "VPN instance, the length of vrf name is 1 ~ 31, i.e. \"test\", but can not be C(_public_)."
                    ],
                    "required": true
                }
            },
            "short_description": "Manages interface specific VPN configuration on HUAWEI CloudEngine switches."
        },
        "examples": "\n- name: VRF interface test\n  hosts: cloudengine\n  connection: local\n  gather_facts: no\n  vars:\n    cli:\n      host: \"{{ inventory_hostname }}\"\n      port: \"{{ ansible_ssh_port }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      transport: cli\n\n  tasks:\n\n  - name: \"Configure a VPN instance for the interface\"\n    community.network.ce_vrf_interface:\n      vpn_interface: 40GE1/0/2\n      vrf: test\n      state: present\n      provider: \"{{ cli }}\"\n\n  - name: \"Disable the association between a VPN instance and an interface\"\n    community.network.ce_vrf_interface:\n      vpn_interface: 40GE1/0/2\n      vrf: test\n      state: absent\n      provider: \"{{ cli }}\"\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "check to see if a change was made on the device",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "end_state": {
                "description": "k/v pairs of end attributes on the interface",
                "returned": "verbose mode",
                "sample": {
                    "vpn_interface": "40GE2/0/17",
                    "vrf": "jss"
                },
                "type": "dict"
            },
            "existing": {
                "description": "k/v pairs of existing attributes on the interface",
                "returned": "verbose mode",
                "sample": {
                    "vpn_interface": "40GE2/0/17",
                    "vrf": null
                },
                "type": "dict"
            },
            "proposed": {
                "description": "k/v pairs of parameters passed into module",
                "returned": "verbose mode",
                "sample": {
                    "state": "present",
                    "vpn_interface": "40GE2/0/17",
                    "vrf": "jss"
                },
                "type": "dict"
            },
            "updates": {
                "description": "command list sent to the device",
                "returned": "always",
                "sample": [
                    "ip binding vpn-instance jss"
                ],
                "type": "list"
            }
        }
    }
}
