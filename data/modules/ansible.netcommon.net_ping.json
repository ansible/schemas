{
    "ansible.netcommon.net_ping": {
        "doc": {
            "author": "Jacob McGill (@jmcgill298)",
            "collection": "ansible.netcommon",
            "description": [
                "Tests reachability using ping from network device to a remote destination.",
                "For Windows targets, use the M(win_ping) module instead.",
                "For targets running Python, use the M(ping) module instead."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/ansible/netcommon/plugins/modules/net_ping.py",
            "has_action": true,
            "module": "net_ping",
            "notes": [
                "For Windows targets, use the M(win_ping) module instead.",
                "For targets running Python, use the M(ping) module instead.",
                "This module is supported on C(ansible_network_os) network platforms. See the :ref:`Network Platform Options <platform_options>` for details."
            ],
            "options": {
                "count": {
                    "default": 5,
                    "description": [
                        "Number of packets to send."
                    ]
                },
                "dest": {
                    "description": [
                        "The IP Address or hostname (resolvable by switch) of the remote node."
                    ],
                    "required": true
                },
                "source": {
                    "description": [
                        "The source IP Address."
                    ]
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Determines if the expected result is success or fail."
                    ]
                },
                "vrf": {
                    "default": "default",
                    "description": [
                        "The VRF to use for forwarding."
                    ]
                }
            },
            "short_description": "Tests reachability using ping from a network device"
        },
        "examples": "\n- name: Test reachability to 10.10.10.10 using default vrf\n  net_ping:\n    dest: 10.10.10.10\n\n- name: Test reachability to 10.20.20.20 using prod vrf\n  net_ping:\n    dest: 10.20.20.20\n    vrf: prod\n\n- name: Test unreachability to 10.30.30.30 using default vrf\n  net_ping:\n    dest: 10.30.30.30\n    state: absent\n\n- name: Test reachability to 10.40.40.40 using prod vrf and setting count and source\n  net_ping:\n    dest: 10.40.40.40\n    source: loopback0\n    vrf: prod\n    count: 20\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "commands": {
                "description": "Show the command sent.",
                "returned": "always",
                "sample": [
                    "ping vrf prod 10.40.40.40 count 20 source loopback0"
                ],
                "type": "list"
            },
            "packet_loss": {
                "description": "Percentage of packets lost.",
                "returned": "always",
                "sample": "0%",
                "type": "str"
            },
            "packets_rx": {
                "description": "Packets successfully received.",
                "returned": "always",
                "sample": 20,
                "type": "int"
            },
            "packets_tx": {
                "description": "Packets successfully transmitted.",
                "returned": "always",
                "sample": 20,
                "type": "int"
            },
            "rtt": {
                "description": "Show RTT stats.",
                "returned": "always",
                "sample": {
                    "avg": 2,
                    "max": 8,
                    "min": 1
                },
                "type": "dict"
            }
        }
    }
}
