{
    "purestorage.flasharray.purefa_policy": {
        "doc": {
            "author": [
                "Pure Storage Ansible Team (@sdodsley) <pure-ansible-team@purestorage.com>"
            ],
            "collection": "purestorage.flasharray",
            "description": [
                "Manage FlashArray file system policies for NFS, SMB and snapshot"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/purestorage/flasharray/plugins/modules/purefa_policy.py",
            "has_action": false,
            "module": "purefa_policy",
            "notes": [
                "This module requires the C(purestorage) Python library",
                "You must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly"
            ],
            "options": {
                "api_token": {
                    "description": [
                        "FlashArray API token for admin privileged user."
                    ],
                    "type": "str"
                },
                "client": {
                    "description": [
                        "Specifies which SMB or NFS clients are given access",
                        "Accepted notation, IP, IP mask, or hostname"
                    ],
                    "type": "str"
                },
                "enabled": {
                    "default": true,
                    "description": [
                        "Define if policy is enabled or not"
                    ],
                    "type": "bool"
                },
                "fa_url": {
                    "description": [
                        "FlashArray management IPv4 address or Hostname."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the policy"
                    ],
                    "required": true,
                    "type": "str"
                },
                "nfs_access": {
                    "choices": [
                        "root-squash",
                        "no-root-squash"
                    ],
                    "default": "root-squash",
                    "description": [
                        "Specifies access control for the export"
                    ],
                    "type": "str"
                },
                "nfs_permission": {
                    "choices": [
                        "ro",
                        "rw"
                    ],
                    "default": "rw",
                    "description": [
                        "Specifies which read-write client access permissions are allowed for the export"
                    ],
                    "type": "str"
                },
                "policy": {
                    "choices": [
                        "nfs",
                        "smb",
                        "snapshot"
                    ],
                    "description": [
                        "The type of policy to use"
                    ],
                    "required": true,
                    "type": "str"
                },
                "rename": {
                    "description": [
                        "New name of policy"
                    ],
                    "type": "str"
                },
                "smb_anon_allowed": {
                    "default": false,
                    "description": [
                        "Specifies whether access to information is allowed for anonymous users"
                    ],
                    "type": "bool"
                },
                "smb_encrypt": {
                    "default": false,
                    "description": [
                        "Specifies whether the remote client is required to use SMB encryption"
                    ],
                    "type": "bool"
                },
                "snap_at": {
                    "description": [
                        "Specifies the number of hours since midnight at which to take a snapshot or the hour including AM/PM",
                        "Can only be set on the rule with the smallest I(snap_every) value.",
                        "Cannot be set if the I(snap_every) value is not measured in days.",
                        "Can only be set for at most one rule in the same policy."
                    ],
                    "type": "str"
                },
                "snap_client_name": {
                    "description": [
                        "The customizable portion of the client visible snapshot name."
                    ],
                    "type": "str"
                },
                "snap_every": {
                    "description": [
                        "Specifies the interval between snapshots, in minutes.",
                        "The value for all rules must be multiples of one another.",
                        "Must be unique for each rule in the same policy.",
                        "Value must be between 5 and 525600."
                    ],
                    "type": "int"
                },
                "snap_keep_for": {
                    "description": [
                        "Specifies the period that snapshots are retained before they are eradicated, in minutes.",
                        "Cannot be less than the I(snap_every) value of the rule.",
                        "Value must be unique for each rule in the same policy.",
                        "Value must be between 5 and 525600."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Define whether the policy should exist or not."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7",
                "purestorage >= 1.19",
                "py-pure-client >= 1.6.0",
                "netaddr",
                "requests"
            ],
            "short_description": "Manage FlashArray File System Policies",
            "version_added": "1.5.0",
            "version_added_collection": "purestorage.flasharray"
        },
        "examples": "\n- name: Create an NFS policy with no rules\n  purefa_policy:\n    name: export1\n    policy: nfs\n    nfs_access: no-root-squash\n    nfs_permission: ro\n    client: client1\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create an NFS policy with initial rule\n  purefa_policy:\n    name: export1\n    policy: nfs\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Disable a policy\n  purefa_policy:\n    name: export1\n    enabled: false\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add rule to existing NFS export policy\n  purefa_policy:\n    name: export1\n    policy: nfs\n    nfs_access: no-root-squash\n    nfs_permission: ro\n    client: client2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Add rule to existing SMB export policy\n  purefa_policy:\n    name: export1\n    policy: nfs\n    smb_encrypt: yes\n    smb_anon_allowed: no\n    client: client1\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete policy rule for a client\n  purefa_policy:\n    name: export1\n    policy: nfs\n    client: client2\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete policy\n  purefa_policy:\n    name: export1\n    policy: nfs\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
