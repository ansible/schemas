{
    "community.general.rax_cbs_attachments": {
        "doc": {
            "author": [
                "Christopher H. Laco (@claco)",
                "Matt Martz (@sivel)"
            ],
            "collection": "community.general",
            "description": [
                "Manipulate Rackspace Cloud Block Storage Volume Attachments"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/rax_cbs_attachments.py",
            "has_action": false,
            "module": "rax_cbs_attachments",
            "notes": [
                "The following environment variables can be used, C(RAX_USERNAME), C(RAX_API_KEY), C(RAX_CREDS_FILE), C(RAX_CREDENTIALS), C(RAX_REGION).",
                "C(RAX_CREDENTIALS) and C(RAX_CREDS_FILE) points to a credentials file appropriate for pyrax. See U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#authenticating)",
                "C(RAX_USERNAME) and C(RAX_API_KEY) obviate the use of a credentials file",
                "C(RAX_REGION) defines a Rackspace Public Cloud region (DFW, ORD, LON, ...)"
            ],
            "options": {
                "api_key": {
                    "aliases": [
                        "password"
                    ],
                    "description": [
                        "Rackspace API key, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "auth_endpoint": {
                    "description": [
                        "The URI of the authentication service.",
                        "If not specified will be set to U(https://identity.api.rackspacecloud.com/v2.0/)"
                    ],
                    "type": "str"
                },
                "credentials": {
                    "aliases": [
                        "creds_file"
                    ],
                    "description": [
                        "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
                    ],
                    "type": "path"
                },
                "device": {
                    "description": [
                        "The device path to attach the volume to, e.g. /dev/xvde.",
                        "Before 2.4 this was a required field. Now it can be left to null to auto assign the device name."
                    ],
                    "type": "str"
                },
                "env": {
                    "description": [
                        "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
                    ],
                    "type": "str"
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication mechanism to use, such as rackspace or keystone."
                    ],
                    "type": "str"
                },
                "region": {
                    "description": [
                        "Region to create an instance in."
                    ],
                    "type": "str"
                },
                "server": {
                    "description": [
                        "Name or id of the server to attach/detach"
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "type": "str"
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication."
                    ],
                    "type": "str"
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Rackspace username, overrides I(credentials)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify_ssl"
                    ],
                    "description": [
                        "Whether or not to require SSL validation of API endpoints."
                    ],
                    "type": "bool"
                },
                "volume": {
                    "description": [
                        "Name or id of the volume to attach/detach"
                    ],
                    "required": true,
                    "type": "str"
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the volume to be in 'in-use'/'available' state before returning"
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "python >= 2.6",
                "pyrax"
            ],
            "short_description": "Manipulate Rackspace Cloud Block Storage Volume Attachments"
        },
        "examples": "\n- name: Attach a Block Storage Volume\n  gather_facts: False\n  hosts: local\n  connection: local\n  tasks:\n    - name: Storage volume attach request\n      local_action:\n        module: rax_cbs_attachments\n        credentials: ~/.raxpub\n        volume: my-volume\n        server: my-server\n        device: /dev/xvdd\n        region: DFW\n        wait: yes\n        state: present\n      register: my_volume\n",
        "metadata": null,
        "return": null
    }
}
