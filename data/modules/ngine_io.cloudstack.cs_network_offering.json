{
    "ngine_io.cloudstack.cs_network_offering": {
        "doc": {
            "author": "David Passante (@dpassante)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Create, update, enable, disable and remove network offerings."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_network_offering.py",
            "has_action": false,
            "module": "cs_network_offering",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "availability": {
                    "description": [
                        "The availability of network offering. Default value is Optional"
                    ],
                    "type": "str"
                },
                "conserve_mode": {
                    "description": [
                        "Whether the network offering has IP conserve mode enabled."
                    ],
                    "type": "bool"
                },
                "details": {
                    "description": [
                        "Network offering details in key/value pairs.",
                        "with service provider as a value"
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "display_text": {
                    "description": [
                        "Display text of the network offerings."
                    ],
                    "type": "str"
                },
                "egress_default_policy": {
                    "choices": [
                        "allow",
                        "deny"
                    ],
                    "description": [
                        "Whether the default egress policy is allow or to deny."
                    ],
                    "type": "str"
                },
                "for_vpc": {
                    "description": [
                        "Whether the offering is meant to be used for VPC or not."
                    ],
                    "type": "bool"
                },
                "guest_ip_type": {
                    "choices": [
                        "Shared",
                        "Isolated"
                    ],
                    "description": [
                        "Guest type of the network offering."
                    ],
                    "type": "str"
                },
                "keepalive_enabled": {
                    "description": [
                        "If true keepalive will be turned on in the loadbalancer.",
                        "At the time of writing this has only an effect on haproxy.",
                        "the mode http and httpclose options are unset in the haproxy conf file."
                    ],
                    "type": "bool"
                },
                "max_connections": {
                    "description": [
                        "Maximum number of concurrent connections supported by the network offering."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "The name of the network offering."
                    ],
                    "required": true,
                    "type": "str"
                },
                "network_rate": {
                    "description": [
                        "Data transfer rate in megabits per second allowed."
                    ],
                    "type": "int"
                },
                "persistent": {
                    "description": [
                        "True if network offering supports persistent networks",
                        "defaulted to false if not specified"
                    ],
                    "type": "bool"
                },
                "service_capabilities": {
                    "aliases": [
                        "service_capability"
                    ],
                    "description": [
                        "Desired service capabilities as part of network offering."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_offering": {
                    "description": [
                        "The service offering name or ID used by virtual router provider."
                    ],
                    "type": "str"
                },
                "service_providers": {
                    "aliases": [
                        "service_provider"
                    ],
                    "description": [
                        "Provider to service mapping.",
                        "If not specified, the provider for the service will be mapped to the default provider on the physical network."
                    ],
                    "elements": "dict",
                    "type": "list"
                },
                "specify_ip_ranges": {
                    "description": [
                        "Whether the network offering supports specifying IP ranges.",
                        "Defaulted to C(no) by the API if not specified."
                    ],
                    "type": "bool"
                },
                "specify_vlan": {
                    "description": [
                        "Whether the network offering supports vlans or not."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "enabled",
                        "present",
                        "disabled",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the network offering."
                    ],
                    "type": "str"
                },
                "supported_services": {
                    "aliases": [
                        "supported_service"
                    ],
                    "choices": [
                        "Dns",
                        "PortForwarding",
                        "Dhcp",
                        "SourceNat",
                        "UserData",
                        "Firewall",
                        "StaticNat",
                        "Vpn",
                        "Lb"
                    ],
                    "description": [
                        "Services supported by the network offering.",
                        "A list of one or more items from the choice list."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "traffic_type": {
                    "default": "Guest",
                    "description": [
                        "The traffic type for the network offering."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Manages network offerings on Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: Create a network offering and enable it\n  ngine_io.cloudstack.cs_network_offering:\n    name: my_network_offering\n    display_text: network offering description\n    state: enabled\n    guest_ip_type: Isolated\n    supported_services: [ Dns, PortForwarding, Dhcp, SourceNat, UserData, Firewall, StaticNat, Vpn, Lb ]\n    service_providers:\n      - { service: 'dns', provider: 'virtualrouter' }\n      - { service: 'dhcp', provider: 'virtualrouter' }\n\n- name: Remove a network offering\n  ngine_io.cloudstack.cs_network_offering:\n    name: my_network_offering\n    state: absent\n",
        "metadata": null,
        "return": {
            "availability": {
                "description": "The availability of network offering.",
                "returned": "success",
                "sample": "Optional",
                "type": "str"
            },
            "display_text": {
                "description": "The display text of the network offering.",
                "returned": "success",
                "sample": "My network offering",
                "type": "str"
            },
            "egress_default_policy": {
                "description": "Default egress policy.",
                "returned": "success",
                "sample": "allow",
                "type": "str"
            },
            "for_vpc": {
                "description": "Whether the offering is meant to be used for VPC or not.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "guest_ip_type": {
                "description": "Guest type of the network offering.",
                "returned": "success",
                "sample": "Isolated",
                "type": "str"
            },
            "id": {
                "description": "UUID of the network offering.",
                "returned": "success",
                "sample": "a6f7a5fc-43f8-11e5-a151-feff819cdc9f",
                "type": "str"
            },
            "is_default": {
                "description": "Whether network offering is the default offering or not.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "is_persistent": {
                "description": "Whether persistent networks are supported or not.",
                "returned": "success",
                "sample": false,
                "type": "bool"
            },
            "max_connections": {
                "description": "The maximum number of concurrent connections to be handled by LB.",
                "returned": "success",
                "sample": 300,
                "type": "int"
            },
            "name": {
                "description": "The name of the network offering.",
                "returned": "success",
                "sample": "MyCustomNetworkOffering",
                "type": "str"
            },
            "network_rate": {
                "description": "The network traffic transfer ate in Mbit/s.",
                "returned": "success",
                "sample": 200,
                "type": "int"
            },
            "service_offering_id": {
                "description": "The service offering ID.",
                "returned": "success",
                "sample": "c5f7a5fc-43f8-11e5-a151-feff819cdc9f",
                "type": "str"
            },
            "state": {
                "description": "The state of the network offering.",
                "returned": "success",
                "sample": "Enabled",
                "type": "str"
            },
            "traffic_type": {
                "description": "The traffic type.",
                "returned": "success",
                "sample": "Guest",
                "type": "str"
            }
        }
    }
}
