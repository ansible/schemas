{
    "cisco.nxos.nxos_acls": {
        "doc": {
            "author": "Adharsh Srivats Rangarajan (@adharshsrivatsr)",
            "collection": "cisco.nxos",
            "description": "Manage named IP ACLs on the Cisco NX-OS platform",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nxos/plugins/modules/nxos_acls.py",
            "has_action": true,
            "module": "nxos_acls",
            "notes": [
                "Tested against NX-OS 7.3.(0)D1(1) on VIRL",
                "As NX-OS allows configuring a rule again with different sequence numbers, the user is expected to provide sequence numbers for the access control entries to preserve idempotency. If no sequence number is given, the rule will be added as a new rule by the device."
            ],
            "options": {
                "config": {
                    "description": "A dictionary of ACL options.",
                    "elements": "dict",
                    "suboptions": {
                        "acls": {
                            "description": "A list of the ACLs.",
                            "elements": "dict",
                            "suboptions": {
                                "aces": {
                                    "description": "The entries within the ACL.",
                                    "elements": "dict",
                                    "suboptions": {
                                        "destination": {
                                            "description": "Specify the packet destination.",
                                            "suboptions": {
                                                "address": {
                                                    "description": "Destination network address.",
                                                    "type": "str"
                                                },
                                                "any": {
                                                    "description": "Any destination address.",
                                                    "type": "bool"
                                                },
                                                "host": {
                                                    "description": "Host IP address.",
                                                    "type": "str"
                                                },
                                                "port_protocol": {
                                                    "description": "Specify the destination port or protocol (only for TCP and UDP).",
                                                    "suboptions": {
                                                        "eq": {
                                                            "description": "Match only packets on a given port number.",
                                                            "type": "str"
                                                        },
                                                        "gt": {
                                                            "description": "Match only packets with a greater port number.",
                                                            "type": "str"
                                                        },
                                                        "lt": {
                                                            "description": "Match only packets with a lower port number.",
                                                            "type": "str"
                                                        },
                                                        "neq": {
                                                            "description": "Match only packets not on a given port number.",
                                                            "type": "str"
                                                        },
                                                        "range": {
                                                            "description": "Match only packets in the range of port numbers.",
                                                            "suboptions": {
                                                                "end": {
                                                                    "description": "Specify the end of the port range.",
                                                                    "type": "str"
                                                                },
                                                                "start": {
                                                                    "description": "Specify the start of the port range.",
                                                                    "type": "str"
                                                                }
                                                            },
                                                            "type": "dict"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "prefix": {
                                                    "description": "Destination network prefix. Only for prefixes of value less than 31 for ipv4 and 127 for ipv6. Prefixes of 32 (ipv4) and 128 (ipv6) should be given in the 'host' key.",
                                                    "type": "str"
                                                },
                                                "wildcard_bits": {
                                                    "description": "Destination wildcard bits.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "dscp": {
                                            "description": "Match packets with given DSCP value.",
                                            "type": "str"
                                        },
                                        "fragments": {
                                            "description": "Check non-initial fragments.",
                                            "type": "bool"
                                        },
                                        "grant": {
                                            "choices": [
                                                "permit",
                                                "deny"
                                            ],
                                            "description": "Action to be applied on the rule.",
                                            "type": "str"
                                        },
                                        "log": {
                                            "description": "Log matches against this entry.",
                                            "type": "bool"
                                        },
                                        "precedence": {
                                            "description": "Match packets with given precedence value.",
                                            "type": "str"
                                        },
                                        "protocol": {
                                            "description": "Specify the protocol.",
                                            "type": "str"
                                        },
                                        "protocol_options": {
                                            "description": "All possible suboptions for the protocol chosen.",
                                            "suboptions": {
                                                "icmp": {
                                                    "description": "ICMP protocol options.",
                                                    "suboptions": {
                                                        "administratively_prohibited": {
                                                            "description": "Administratively prohibited",
                                                            "type": "bool"
                                                        },
                                                        "alternate_address": {
                                                            "description": "Alternate address",
                                                            "type": "bool"
                                                        },
                                                        "conversion_error": {
                                                            "description": "Datagram conversion",
                                                            "type": "bool"
                                                        },
                                                        "dod_host_prohibited": {
                                                            "description": "Host prohibited",
                                                            "type": "bool"
                                                        },
                                                        "dod_net_prohibited": {
                                                            "description": "Net prohibited",
                                                            "type": "bool"
                                                        },
                                                        "echo": {
                                                            "description": "Echo (ping)",
                                                            "type": "bool"
                                                        },
                                                        "echo_reply": {
                                                            "description": "Echo reply",
                                                            "type": "bool"
                                                        },
                                                        "echo_request": {
                                                            "description": "Echo request (ping)",
                                                            "type": "bool"
                                                        },
                                                        "general_parameter_problem": {
                                                            "description": "Parameter problem",
                                                            "type": "bool"
                                                        },
                                                        "host_isolated": {
                                                            "description": "Host isolated",
                                                            "type": "bool"
                                                        },
                                                        "host_precedence_unreachable": {
                                                            "description": "Host unreachable for precedence",
                                                            "type": "bool"
                                                        },
                                                        "host_redirect": {
                                                            "description": "Host redirect",
                                                            "type": "bool"
                                                        },
                                                        "host_tos_redirect": {
                                                            "description": "Host redirect for TOS",
                                                            "type": "bool"
                                                        },
                                                        "host_tos_unreachable": {
                                                            "description": "Host unreachable for TOS",
                                                            "type": "bool"
                                                        },
                                                        "host_unknown": {
                                                            "description": "Host unknown",
                                                            "type": "bool"
                                                        },
                                                        "host_unreachable": {
                                                            "description": "Host unreachable",
                                                            "type": "bool"
                                                        },
                                                        "information_reply": {
                                                            "description": "Information replies",
                                                            "type": "bool"
                                                        },
                                                        "information_request": {
                                                            "description": "Information requests",
                                                            "type": "bool"
                                                        },
                                                        "mask_reply": {
                                                            "description": "Mask replies",
                                                            "type": "bool"
                                                        },
                                                        "mask_request": {
                                                            "description": "Mask requests",
                                                            "type": "bool"
                                                        },
                                                        "message_code": {
                                                            "description": "ICMP message code",
                                                            "type": "int"
                                                        },
                                                        "message_type": {
                                                            "description": "ICMP message type",
                                                            "type": "int"
                                                        },
                                                        "mobile_redirect": {
                                                            "description": "Mobile host redirect",
                                                            "type": "bool"
                                                        },
                                                        "net_redirect": {
                                                            "description": "Network redirect",
                                                            "type": "bool"
                                                        },
                                                        "net_tos_redirect": {
                                                            "description": "Net redirect for TOS",
                                                            "type": "bool"
                                                        },
                                                        "net_tos_unreachable": {
                                                            "description": "Network unreachable for TOS",
                                                            "type": "bool"
                                                        },
                                                        "net_unreachable": {
                                                            "description": "Net unreachable",
                                                            "type": "bool"
                                                        },
                                                        "network_unknown": {
                                                            "description": "Network unknown",
                                                            "type": "bool"
                                                        },
                                                        "no_room_for_option": {
                                                            "description": "Parameter required but no room",
                                                            "type": "bool"
                                                        },
                                                        "option_missing": {
                                                            "description": "Parameter required but not present",
                                                            "type": "bool"
                                                        },
                                                        "packet_too_big": {
                                                            "description": "Fragmentation needed and DF set",
                                                            "type": "bool"
                                                        },
                                                        "parameter_problem": {
                                                            "description": "All parameter problems",
                                                            "type": "bool"
                                                        },
                                                        "port_unreachable": {
                                                            "description": "Port unreachable",
                                                            "type": "bool"
                                                        },
                                                        "precedence_unreachable": {
                                                            "description": "Precedence cutoff",
                                                            "type": "bool"
                                                        },
                                                        "protocol_unreachable": {
                                                            "description": "Protocol unreachable",
                                                            "type": "bool"
                                                        },
                                                        "reassembly_timeout": {
                                                            "description": "Reassembly timeout",
                                                            "type": "bool"
                                                        },
                                                        "redirect": {
                                                            "description": "All redirects",
                                                            "type": "bool"
                                                        },
                                                        "router_advertisement": {
                                                            "description": "Router discovery advertisements",
                                                            "type": "bool"
                                                        },
                                                        "router_solicitation": {
                                                            "description": "Router discovery solicitations",
                                                            "type": "bool"
                                                        },
                                                        "source_quench": {
                                                            "description": "Source quenches",
                                                            "type": "bool"
                                                        },
                                                        "source_route_failed": {
                                                            "description": "Source route failed",
                                                            "type": "bool"
                                                        },
                                                        "time_exceeded": {
                                                            "description": "All time exceeded.",
                                                            "type": "bool"
                                                        },
                                                        "timestamp_reply": {
                                                            "description": "Timestamp replies",
                                                            "type": "bool"
                                                        },
                                                        "timestamp_request": {
                                                            "description": "Timestamp requests",
                                                            "type": "bool"
                                                        },
                                                        "traceroute": {
                                                            "description": "Traceroute",
                                                            "type": "bool"
                                                        },
                                                        "ttl_exceeded": {
                                                            "description": "TTL exceeded",
                                                            "type": "bool"
                                                        },
                                                        "unreachable": {
                                                            "description": "All unreachables",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "igmp": {
                                                    "description": "IGMP protocol options.",
                                                    "suboptions": {
                                                        "dvmrp": {
                                                            "description": "Distance Vector Multicast Routing Protocol",
                                                            "type": "bool"
                                                        },
                                                        "host_query": {
                                                            "description": "Host Query",
                                                            "type": "bool"
                                                        },
                                                        "host_report": {
                                                            "description": "Host Report",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "tcp": {
                                                    "description": "TCP flags.",
                                                    "suboptions": {
                                                        "ack": {
                                                            "description": "Match on the ACK bit",
                                                            "type": "bool"
                                                        },
                                                        "established": {
                                                            "description": "Match established connections",
                                                            "type": "bool"
                                                        },
                                                        "fin": {
                                                            "description": "Match on the FIN bit",
                                                            "type": "bool"
                                                        },
                                                        "psh": {
                                                            "description": "Match on the PSH bit",
                                                            "type": "bool"
                                                        },
                                                        "rst": {
                                                            "description": "Match on the RST bit",
                                                            "type": "bool"
                                                        },
                                                        "syn": {
                                                            "description": "Match on the SYN bit",
                                                            "type": "bool"
                                                        },
                                                        "urg": {
                                                            "description": "Match on the URG bit",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "remark": {
                                            "description": "Access list entry comment.",
                                            "type": "str"
                                        },
                                        "sequence": {
                                            "description": "Sequence number.",
                                            "type": "int"
                                        },
                                        "source": {
                                            "description": "Specify the packet source.",
                                            "suboptions": {
                                                "address": {
                                                    "description": "Source network address.",
                                                    "type": "str"
                                                },
                                                "any": {
                                                    "description": "Any source address.",
                                                    "type": "bool"
                                                },
                                                "host": {
                                                    "description": "Host IP address.",
                                                    "type": "str"
                                                },
                                                "port_protocol": {
                                                    "description": "Specify the destination port or protocol (only for TCP and UDP).",
                                                    "suboptions": {
                                                        "eq": {
                                                            "description": "Match only packets on a given port number.",
                                                            "type": "str"
                                                        },
                                                        "gt": {
                                                            "description": "Match only packets with a greater port number.",
                                                            "type": "str"
                                                        },
                                                        "lt": {
                                                            "description": "Match only packets with a lower port number.",
                                                            "type": "str"
                                                        },
                                                        "neq": {
                                                            "description": "Match only packets not on a given port number.",
                                                            "type": "str"
                                                        },
                                                        "range": {
                                                            "description": "Match only packets in the range of port numbers.",
                                                            "suboptions": {
                                                                "end": {
                                                                    "description": "Specify the end of the port range.",
                                                                    "type": "str"
                                                                },
                                                                "start": {
                                                                    "description": "Specify the start of the port range.",
                                                                    "type": "str"
                                                                }
                                                            },
                                                            "type": "dict"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "prefix": {
                                                    "description": "Source network prefix. Only for prefixes of mask value less than 31 for ipv4 and 127 for ipv6. Prefixes of mask 32 (ipv4) and 128 (ipv6) should be given in the 'host' key.",
                                                    "type": "str"
                                                },
                                                "wildcard_bits": {
                                                    "description": "Source wildcard bits.",
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        }
                                    },
                                    "type": "list"
                                },
                                "name": {
                                    "description": "Name of the ACL.",
                                    "required": true,
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "afi": {
                            "choices": [
                                "ipv4",
                                "ipv6"
                            ],
                            "description": "The Address Family Indicator (AFI) for the ACL.",
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "running_config": {
                    "description": [
                        "This option is used only with state I(parsed).",
                        "The value of this option should be the output received from the NX-OS device by executing the command B(show running-config | section 'ip(v6)* access-list).",
                        "The state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "deleted",
                        "gathered",
                        "merged",
                        "overridden",
                        "rendered",
                        "replaced",
                        "parsed"
                    ],
                    "default": "merged",
                    "description": [
                        "The state the configuration should be left in"
                    ],
                    "type": "str"
                }
            },
            "short_description": "ACLs resource module",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.nxos"
        },
        "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n\n- name: Merge new ACLs configuration\n  cisco.nxos.nxos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: ACL1v4\n        aces:\n        - grant: deny\n          destination:\n            address: 192.0.2.64\n            wildcard_bits: 0.0.0.255\n          source:\n            any: true\n            port_protocol:\n              lt: 55\n          protocol: tcp\n          protocol_options:\n            tcp:\n              ack: true\n              fin: true\n          sequence: 50\n\n    - afi: ipv6\n      acls:\n      - name: ACL1v6\n        aces:\n        - grant: permit\n          sequence: 10\n          source:\n            any: true\n          destination:\n            prefix: 2001:db8:12::/32\n          protocol: sctp\n    state: merged\n\n# After state:\n# ------------\n#\n# ip access-list ACL1v4\n#  50 deny tcp any lt 55 192.0.2.64 0.0.0.255 ack fin\n# ipv6 access-list ACL1v6\n#  10 permit sctp any any\n\n# Using replaced\n\n# Before state:\n# ----------------\n#\n# ip access-list ACL1v4\n#   10 permit ip any any\n#   20 deny udp any any\n# ip access-list ACL2v4\n#   10 permit ahp 192.0.2.0 0.0.0.255 any\n# ip access-list ACL1v6\n#   10 permit sctp any any\n#   20 remark IPv6 ACL\n# ip access-list ACL2v6\n#  10 deny ipv6 any 2001:db8:3000::/36\n#  20 permit tcp 2001:db8:2000:2::2/128 2001:db8:2000:ab::2/128\n\n- name: Replace existing ACL configuration with provided configuration\n  cisco.nxos.nxos_acls:\n    config:\n    - afi: ipv4\n    - afi: ipv6\n      acls:\n      - name: ACL1v6\n        aces:\n        - sequence: 20\n          grant: permit\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: pip\n\n        - remark: Replaced ACE\n\n      - name: ACL2v6\n    state: replaced\n\n# After state:\n# ---------------\n#\n# ipv6 access-list ACL1v6\n#   20 permit pip any any\n#   30 remark Replaced ACE\n# ipv6 access-list ACL2v6\n\n# Using overridden\n\n# Before state:\n# ----------------\n#\n# ip access-list ACL1v4\n#   10 permit ip any any\n#   20 deny udp any any\n# ip access-list ACL2v4\n#   10 permit ahp 192.0.2.0 0.0.0.255 any\n# ip access-list ACL1v6\n#   10 permit sctp any any\n#   20 remark IPv6 ACL\n# ip access-list ACL2v6\n#  10 deny ipv6 any 2001:db8:3000::/36\n#  20 permit tcp 2001:db8:2000:2::2/128 2001:db8:2000:ab::2/128\n\n- name: Override existing configuration with provided configuration\n  cisco.nxos.nxos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: NewACL\n        aces:\n        - grant: deny\n          source:\n            address: 192.0.2.0\n            wildcard_bits: 0.0.255.255\n          destination:\n            any: true\n          protocol: eigrp\n        - remark: Example for overridden state\n    state: overridden\n\n# After state:\n# ------------\n#\n# ip access-list NewACL\n#   10 deny eigrp 192.0.2.0 0.0.255.255 any\n#   20 remark Example for overridden state\n\n# Using deleted:\n#\n# Before state:\n# -------------\n#\n# ip access-list ACL1v4\n#   10 permit ip any any\n#   20 deny udp any any\n# ip access-list ACL2v4\n#   10 permit ahp 192.0.2.0 0.0.0.255 any\n# ip access-list ACL1v6\n#   10 permit sctp any any\n#   20 remark IPv6 ACL\n# ip access-list ACL2v6\n#  10 deny ipv6 any 2001:db8:3000::/36\n#  20 permit tcp 2001:db8:2000:2::2/128 2001:db8:2000:ab::2/128\n\n- name: Delete all ACLs\n  cisco.nxos.nxos_acls:\n    config:\n    state: deleted\n\n# After state:\n# -----------\n#\n\n\n# Before state:\n# -------------\n#\n# ip access-list ACL1v4\n#   10 permit ip any any\n#   20 deny udp any any\n# ip access-list ACL2v4\n#   10 permit ahp 192.0.2.0 0.0.0.255 any\n# ip access-list ACL1v6\n#   10 permit sctp any any\n#   20 remark IPv6 ACL\n# ip access-list ACL2v6\n#  10 deny ipv6 any 2001:db8:3000::/36\n#  20 permit tcp 2001:db8:2000:2::2/128 2001:db8:2000:ab::2/128\n\n- name: Delete all ACLs in given AFI\n  cisco.nxos.nxos_acls:\n    config:\n    - afi: ipv4\n    state: deleted\n\n# After state:\n# ------------\n#\n# ip access-list ACL1v6\n#   10 permit sctp any any\n#   20 remark IPv6 ACL\n# ip access-list ACL2v6\n#  10 deny ipv6 any 2001:db8:3000::/36\n#  20 permit tcp 2001:db8:2000:2::2/128 2001:db8:2000:ab::2/128\n\n\n\n# Before state:\n# -------------\n#\n# ip access-list ACL1v4\n#   10 permit ip any any\n#   20 deny udp any any\n# ip access-list ACL2v4\n#   10 permit ahp 192.0.2.0 0.0.0.255 any\n# ipv6 access-list ACL1v6\n#   10 permit sctp any any\n#   20 remark IPv6 ACL\n# ipv6 access-list ACL2v6\n#  10 deny ipv6 any 2001:db8:3000::/36\n#  20 permit tcp 2001:db8:2000:2::2/128 2001:db8:2000:ab::2/128\n\n- name: Delete specific ACLs\n  cisco.nxos.nxos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: ACL1v4\n      - name: ACL2v4\n    - afi: ipv6\n      acls:\n      - name: ACL1v6\n    state: deleted\n\n# After state:\n# ------------\n# ipv6 access-list ACL2v6\n#  10 deny ipv6 any 2001:db8:3000::/36\n#  20 permit tcp 2001:db8:2000:2::2/128 2001:db8:2000:ab::2/128\n\n# Using parsed\n\n- name: Parse given config to structured data\n  cisco.nxos.nxos_acls:\n    running_config: |\n      ip access-list ACL1v4\n        50 deny tcp any lt 55 192.0.2.64 0.0.0.255 ack fin\n      ipv6 access-list ACL1v6\n        10 permit sctp any any\n    state: parsed\n\n# returns:\n# parsed:\n# - afi: ipv4\n#   acls:\n#     - name: ACL1v4\n#       aces:\n#         - grant: deny\n#           destination:\n#             address: 192.0.2.64\n#             wildcard_bits: 0.0.0.255\n#           source:\n#             any: true\n#             port_protocol:\n#               lt: 55\n#           protocol: tcp\n#           protocol_options:\n#             tcp:\n#               ack: true\n#               fin: true\n#           sequence: 50\n#\n# - afi: ipv6\n#   acls:\n#     - name: ACL1v6\n#       aces:\n#         - grant: permit\n#           sequence: 10\n#           source:\n#             any: true\n#           destination:\n#             prefix: 2001:db8:12::/32\n#           protocol: sctp\n\n\n# Using gathered:\n\n# Before state:\n# ------------\n#\n# ip access-list ACL1v4\n#  50 deny tcp any lt 55 192.0.2.64 0.0.0.255 ack fin\n# ipv6 access-list ACL1v6\n#  10 permit sctp any any\n\n- name: Gather existing configuration\n  cisco.nxos.nxos_acls:\n    state: gathered\n\n# returns:\n# gathered:\n# - afi: ipv4\n#   acls:\n#     - name: ACL1v4\n#       aces:\n#         - grant: deny\n#           destination:\n#             address: 192.0.2.64\n#             wildcard_bits: 0.0.0.255\n#           source:\n#             any: true\n#             port_protocol:\n#               lt: 55\n#           protocol: tcp\n#           protocol_options:\n#             tcp:\n#               ack: true\n#               fin: true\n#           sequence: 50\n\n# - afi: ipv6\n#   acls:\n#     - name: ACL1v6\n#       aces:\n#         - grant: permit\n#           sequence: 10\n#           source:\n#             any: true\n#           destination:\n#             prefix: 2001:db8:12::/32\n#           protocol: sctp\n\n\n# Using rendered\n\n- name: Render required configuration to be pushed to the device\n  cisco.nxos.nxos_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: ACL1v4\n        aces:\n        - grant: deny\n          destination:\n            address: 192.0.2.64\n            wildcard_bits: 0.0.0.255\n          source:\n            any: true\n            port_protocol:\n              lt: 55\n          protocol: tcp\n          protocol_options:\n            tcp:\n              ack: true\n              fin: true\n          sequence: 50\n\n    - afi: ipv6\n      acls:\n      - name: ACL1v6\n        aces:\n        - grant: permit\n          sequence: 10\n          source:\n            any: true\n          destination:\n            prefix: 2001:db8:12::/32\n          protocol: sctp\n    state: rendered\n\n# returns:\n# rendered:\n#  ip access-list ACL1v4\n#   50 deny tcp any lt 55 192.0.2.64 0.0.0.255 ack fin\n#  ipv6 access-list ACL1v6\n#   10 permit sctp any any\n",
        "metadata": null,
        "return": {
            "after": {
                "description": "The resulting configuration model invocation.",
                "returned": "when changed",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "dict"
            },
            "before": {
                "description": "The configuration prior to the model invocation.",
                "returned": "always",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "dict"
            },
            "commands": {
                "description": "The set of commands pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "ip access-list ACL1v4",
                    "10 permit ip any any precedence critical log",
                    "20 deny tcp any lt smtp host 192.0.2.64 ack fin"
                ],
                "type": "list"
            }
        }
    }
}
