{
    "community.general.oneandone_monitoring_policy": {
        "doc": {
            "author": [
                "Amel Ajdinovic (@aajdinov)",
                "Ethan Devenport (@edevenport)"
            ],
            "collection": "community.general",
            "description": [
                "Create, remove, update monitoring policies (and add/remove ports, processes, and servers). This module has a dependency on 1and1 >= 1.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/oneandone_monitoring_policy.py",
            "has_action": false,
            "module": "oneandone_monitoring_policy",
            "options": {
                "add_ports": {
                    "description": [
                        "Ports to add to the monitoring policy."
                    ],
                    "elements": "dict",
                    "required": false,
                    "type": "list"
                },
                "add_processes": {
                    "description": [
                        "Processes to add to the monitoring policy."
                    ],
                    "elements": "dict",
                    "required": false,
                    "type": "list"
                },
                "add_servers": {
                    "description": [
                        "Servers to add to the monitoring policy."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "agent": {
                    "description": [
                        "Set true for using agent."
                    ],
                    "type": "str"
                },
                "api_url": {
                    "description": [
                        "Custom API URL. Overrides the ONEANDONE_API_URL environment variable."
                    ],
                    "required": false,
                    "type": "str"
                },
                "auth_token": {
                    "description": [
                        "Authenticating API token provided by 1&1."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Monitoring policy description. maxLength=256"
                    ],
                    "required": false,
                    "type": "str"
                },
                "email": {
                    "description": [
                        "User's email. maxLength=128"
                    ],
                    "type": "str"
                },
                "monitoring_policy": {
                    "description": [
                        "The identifier (id or name) of the monitoring policy used with update state."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Monitoring policy name used with present state. Used as identifier (id or name) when used with absent state. maxLength=128"
                    ],
                    "type": "str"
                },
                "ports": {
                    "description": [
                        "Array of ports that will be monitoring."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "alert_if": {
                            "choices": [
                                "RESPONDING",
                                "NOT_RESPONDING"
                            ],
                            "description": [
                                "Case of alert."
                            ],
                            "required": true
                        },
                        "email_notification": {
                            "description": [
                                "Set true for sending e-mail notifications."
                            ],
                            "required": true
                        },
                        "port": {
                            "description": [
                                "Port number. minimum=1, maximum=65535"
                            ],
                            "required": true
                        },
                        "protocol": {
                            "choices": [
                                "TCP",
                                "UDP"
                            ],
                            "description": [
                                "Internet protocol."
                            ],
                            "required": true
                        }
                    },
                    "type": "list"
                },
                "processes": {
                    "description": [
                        "Array of processes that will be monitoring."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "alert_if": {
                            "choices": [
                                "RUNNING",
                                "NOT_RUNNING"
                            ],
                            "description": [
                                "Case of alert."
                            ],
                            "required": true
                        },
                        "process": {
                            "description": [
                                "Name of the process. maxLength=50"
                            ],
                            "required": true
                        }
                    },
                    "type": "list"
                },
                "remove_ports": {
                    "description": [
                        "Ports to remove from the monitoring policy."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "remove_processes": {
                    "description": [
                        "Processes to remove from the monitoring policy."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "remove_servers": {
                    "description": [
                        "Servers to remove from the monitoring policy."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "update"
                    ],
                    "default": "present",
                    "description": [
                        "Define a monitoring policy's state to create, remove, update."
                    ],
                    "required": false,
                    "type": "str"
                },
                "thresholds": {
                    "description": [
                        "Monitoring policy thresholds. Each of the suboptions have warning and critical, which both have alert and value suboptions. Warning is used to set limits for warning alerts, critical is used to set critical alerts. alert enables alert, and value is used to advise when the value is exceeded."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "cpu": {
                            "description": [
                                "Consumption limits of CPU."
                            ],
                            "required": true
                        },
                        "disk": {
                            "description": [
                                "Consumption limits of hard disk."
                            ],
                            "required": true
                        },
                        "internal_ping": {
                            "description": [
                                "Response limits of internal ping."
                            ],
                            "required": true
                        },
                        "ram": {
                            "description": [
                                "Consumption limits of RAM."
                            ],
                            "required": true
                        },
                        "transfer": {
                            "description": [
                                "Consumption limits for transfer."
                            ],
                            "required": true
                        }
                    },
                    "type": "list"
                },
                "update_ports": {
                    "description": [
                        "Ports to be updated on the monitoring policy."
                    ],
                    "elements": "dict",
                    "required": false,
                    "type": "list"
                },
                "update_processes": {
                    "description": [
                        "Processes to be updated on the monitoring policy."
                    ],
                    "elements": "dict",
                    "required": false,
                    "type": "list"
                },
                "wait": {
                    "default": "yes",
                    "description": [
                        "wait for the instance to be in state 'running' before returning"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "wait_interval": {
                    "default": 5,
                    "description": [
                        "Defines the number of seconds to wait when using the _wait_for methods"
                    ],
                    "type": "int"
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "1and1",
                "python >= 2.6"
            ],
            "short_description": "Configure 1&1 monitoring policy."
        },
        "examples": "\n- name: Create a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    name: ansible monitoring policy\n    description: Testing creation of a monitoring policy with ansible\n    email: your@emailaddress.com\n    agent: true\n    thresholds:\n     -\n       cpu:\n         warning:\n           value: 80\n           alert: false\n         critical:\n           value: 92\n           alert: false\n     -\n       ram:\n         warning:\n           value: 80\n           alert: false\n         critical:\n           value: 90\n           alert: false\n     -\n       disk:\n         warning:\n           value: 80\n           alert: false\n         critical:\n           value: 90\n           alert: false\n     -\n       internal_ping:\n         warning:\n           value: 50\n           alert: false\n         critical:\n           value: 100\n           alert: false\n     -\n       transfer:\n         warning:\n           value: 1000\n           alert: false\n         critical:\n           value: 2000\n           alert: false\n    ports:\n     -\n       protocol: TCP\n       port: 22\n       alert_if: RESPONDING\n       email_notification: false\n    processes:\n     -\n       process: test\n       alert_if: NOT_RUNNING\n       email_notification: false\n    wait: true\n\n- name: Destroy a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    state: absent\n    name: ansible monitoring policy\n\n- name: Update a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy\n    name: ansible monitoring policy updated\n    description: Testing creation of a monitoring policy with ansible updated\n    email: another@emailaddress.com\n    thresholds:\n     -\n       cpu:\n         warning:\n           value: 70\n           alert: false\n         critical:\n           value: 90\n           alert: false\n     -\n       ram:\n         warning:\n           value: 70\n           alert: false\n         critical:\n           value: 80\n           alert: false\n     -\n       disk:\n         warning:\n           value: 70\n           alert: false\n         critical:\n           value: 80\n           alert: false\n     -\n       internal_ping:\n         warning:\n           value: 60\n           alert: false\n         critical:\n           value: 90\n           alert: false\n     -\n       transfer:\n         warning:\n           value: 900\n           alert: false\n         critical:\n           value: 1900\n           alert: false\n    wait: true\n    state: update\n\n- name: Add a port to a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    add_ports:\n     -\n       protocol: TCP\n       port: 33\n       alert_if: RESPONDING\n       email_notification: false\n    wait: true\n    state: update\n\n- name: Update existing ports of a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    update_ports:\n     -\n       id: existing_port_id\n       protocol: TCP\n       port: 34\n       alert_if: RESPONDING\n       email_notification: false\n     -\n       id: existing_port_id\n       protocol: TCP\n       port: 23\n       alert_if: RESPONDING\n       email_notification: false\n    wait: true\n    state: update\n\n- name: Remove a port from a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    remove_ports:\n     - port_id\n    state: update\n\n- name: Add a process to a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    add_processes:\n     -\n       process: test_2\n       alert_if: NOT_RUNNING\n       email_notification: false\n    wait: true\n    state: update\n\n- name: Update existing processes of a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    update_processes:\n     -\n       id: process_id\n       process: test_1\n       alert_if: NOT_RUNNING\n       email_notification: false\n     -\n       id: process_id\n       process: test_3\n       alert_if: NOT_RUNNING\n       email_notification: false\n    wait: true\n    state: update\n\n- name: Remove a process from a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    remove_processes:\n     - process_id\n    wait: true\n    state: update\n\n- name: Add server to a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    add_servers:\n     - server id or name\n    wait: true\n    state: update\n\n- name: Remove server from a monitoring policy\n  community.general.oneandone_monitoring_policy:\n    auth_token: oneandone_private_api_key\n    monitoring_policy: ansible monitoring policy updated\n    remove_servers:\n     - server01\n    wait: true\n    state: update\n",
        "metadata": null,
        "return": {
            "monitoring_policy": {
                "description": "Information about the monitoring policy that was processed",
                "returned": "always",
                "sample": "{\"id\": \"92B74394A397ECC3359825C1656D67A6\", \"name\": \"Default Policy\"}",
                "type": "dict"
            }
        }
    }
}
