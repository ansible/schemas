{
    "ovirt.ovirt.ovirt_event_info": {
        "doc": {
            "author": "Chris Keller (@nasx)",
            "collection": "ovirt.ovirt",
            "description": [
                "Retrieve information about one or more oVirt/RHV events.",
                "This module was called C(ovirt_event_facts) before Ansible 2.9, returning C(ansible_facts). Note that the M(ovirt.ovirt.ovirt_event_info) module no longer returns C(ansible_facts)!"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ovirt/ovirt/plugins/modules/ovirt_event_info.py",
            "has_action": false,
            "module": "ovirt_event_info",
            "notes": [
                "In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can create the following task: pip: name=ovirt-engine-sdk-python version=4.4.0"
            ],
            "options": {
                "auth": {
                    "description": [
                        "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
                    ],
                    "required": true,
                    "suboptions": {
                        "ca_file": {
                            "description": [
                                "A PEM file containing the trusted CA certificates.",
                                "The certificate presented by the server will be verified using these CA certificates.",
                                "If C(ca_file) parameter is not set, system wide CA certificate store is used.",
                                "Default value is set by C(OVIRT_CAFILE) environment variable."
                            ],
                            "type": "str"
                        },
                        "compress": {
                            "default": true,
                            "description": "Flag indicating if compression is used for connection.",
                            "type": "bool"
                        },
                        "headers": {
                            "description": [
                                "Dictionary of HTTP headers to be added to each API call."
                            ],
                            "type": "dict"
                        },
                        "hostname": {
                            "description": [
                                "A string containing the hostname of the server, usually something like `I(server.example.com)`.",
                                "Default value is set by C(OVIRT_HOSTNAME) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "insecure": {
                            "description": [
                                "A boolean flag that indicates if the server TLS certificate and host name should be checked."
                            ],
                            "type": "bool"
                        },
                        "kerberos": {
                            "description": [
                                "A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "description": [
                                "The password of the user.",
                                "Default value is set by C(OVIRT_PASSWORD) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "timeout": {
                            "description": "Number of seconds to wait for response.",
                            "type": "int"
                        },
                        "token": {
                            "description": [
                                "Token to be used instead of login with username/password.",
                                "Default value is set by C(OVIRT_TOKEN) environment variable."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "A string containing the API URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`.",
                                "Default value is set by C(OVIRT_URL) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "The name of the user, something like I(admin@internal).",
                                "Default value is set by C(OVIRT_USERNAME) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "case_sensitive": {
                    "default": true,
                    "description": [
                        "Indicates if the search performed using the search parameter should be performed taking case into account. The default value is true, which means that case is taken into account. If you want to search ignoring case set it to false."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "fetch_nested": {
                    "description": [
                        "If I(yes) the module will fetch additional data from the API.",
                        "It will fetch only IDs of nested entity. It doesn't fetch multiple levels of nested attributes. Only the attributes of the current entity. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
                    ],
                    "type": "bool"
                },
                "from_": {
                    "description": [
                        "Indicates the event index after which events should be returned. The indexes of events are strictly increasing, so when this parameter is used only the events with greater indexes will be returned."
                    ],
                    "required": false,
                    "type": "int"
                },
                "headers": {
                    "description": [
                        "Additional HTTP headers."
                    ],
                    "required": false,
                    "type": "str"
                },
                "max": {
                    "description": [
                        "Sets the maximum number of events to return. If not specified all the events are returned."
                    ],
                    "required": false,
                    "type": "int"
                },
                "nested_attributes": {
                    "description": [
                        "Specifies list of the attributes which should be fetched from the API.",
                        "This parameter apply only when C(fetch_nested) is I(true)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "query": {
                    "description": [
                        "Additional URL query parameters."
                    ],
                    "required": false,
                    "type": "str"
                },
                "search": {
                    "description": [
                        "Search term which is accepted by the oVirt/RHV API.",
                        "For example to search for events of severity alert use the following pattern: severity=alert"
                    ],
                    "required": false,
                    "type": "str"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "If True wait for the response."
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "ovirt-engine-sdk-python >= 4.4.0"
            ],
            "short_description": "This module can be used to retrieve information about one or more oVirt/RHV events",
            "version_added": "1.0.0",
            "version_added_collection": "ovirt.ovirt"
        },
        "examples": "\n# Examples don't contain the auth parameter for simplicity,\n# look at the ovirt_auth module to see how to reuse authentication.\n\n- name: Return all events\n  ovirt.ovirt.ovirt_event_info:\n  register: result\n\n- name: Return the last 10 events\n  ovirt.ovirt.ovirt_event_info:\n    max: 10\n  register: result\n\n- name: Return all events of type alert\n  ovirt.ovirt.ovirt_event_info:\n    search: \"severity=alert\"\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.ovirt_events }}\"\n",
        "metadata": null,
        "return": {
            "ovirt_events": {
                "description": "List of dictionaries describing the events. Event attributes are mapped to dictionary keys. All event attributes can be found at the following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/event",
                "returned": "On success.\"",
                "type": "list"
            }
        }
    }
}
