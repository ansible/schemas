{
    "google.cloud.gcp_serviceusage_service": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "A service that is available for use ."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_serviceusage_service.py",
            "has_action": false,
            "module": "gcp_serviceusage_service",
            "notes": [
                "Getting Started: U(https://cloud.google.com/service-usage/docs/getting-started)",
                "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.",
                "for authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.",
                "For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.",
                "For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.",
                "For authentication, you can set scopes using the C(GCP_SCOPES) env variable.",
                "Environment variables values will only be used if the playbook values are not set.",
                "The I(service_account_email) and I(service_account_file) options are mutually exclusive."
            ],
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "disable_dependent_services": {
                    "description": [
                        "Indicates if dependent services should also be disabled. Can only be turned on if service is disabled."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The resource name of the service ."
                    ],
                    "required": true,
                    "type": "str"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the given object should exist in GCP"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Creates a GCP Service"
        },
        "examples": "\n- name: create a service\n  google.cloud.gcp_serviceusage_service:\n    name: spanner.googleapis.com\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "config": {
                "contains": {
                    "apis": {
                        "contains": {
                            "name": {
                                "description": [
                                    "Name of the API."
                                ],
                                "returned": "success",
                                "type": "str"
                            },
                            "version": {
                                "description": [
                                    "The version of the API."
                                ],
                                "returned": "success",
                                "type": "str"
                            }
                        },
                        "description": [
                            "The list of API interfaces exported by this service."
                        ],
                        "returned": "success",
                        "type": "complex"
                    },
                    "name": {
                        "description": [
                            "The DNS address at which this service is available."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "title": {
                        "description": [
                            "The product title for this service."
                        ],
                        "returned": "success",
                        "type": "str"
                    }
                },
                "description": [
                    "The service configuration of the available service."
                ],
                "returned": "success",
                "type": "complex"
            },
            "disableDependentServices": {
                "description": [
                    "Indicates if dependent services should also be disabled. Can only be turned on if service is disabled."
                ],
                "returned": "success",
                "type": "bool"
            },
            "name": {
                "description": [
                    "The resource name of the service ."
                ],
                "returned": "success",
                "type": "str"
            },
            "parent": {
                "description": [
                    "The name of the parent of this service. For example 'projects/123' ."
                ],
                "returned": "success",
                "type": "str"
            },
            "state": {
                "description": [
                    "Whether or not the service has been enabled for use by the consumer."
                ],
                "returned": "success",
                "type": "str"
            }
        }
    }
}
