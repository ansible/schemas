{
    "fortinet.fortimanager.fmgr_pkg_firewall_proxypolicy": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_pkg_firewall_proxypolicy.py",
            "has_action": false,
            "module": "fmgr_pkg_firewall_proxypolicy",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "pkg": {
                    "description": "the parameter (pkg) in requested url",
                    "required": true,
                    "type": "str"
                },
                "pkg_firewall_proxypolicy": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "action": {
                            "choices": [
                                "accept",
                                "deny",
                                "redirect"
                            ],
                            "description": "Accept or deny traffic matching the policy parameters.",
                            "type": "str"
                        },
                        "application-list": {
                            "description": "Name of an existing Application list.",
                            "type": "str"
                        },
                        "av-profile": {
                            "description": "Name of an existing Antivirus profile.",
                            "type": "str"
                        },
                        "comments": {
                            "description": "Optional comments.",
                            "type": "str"
                        },
                        "disclaimer": {
                            "choices": [
                                "disable",
                                "domain",
                                "policy",
                                "user"
                            ],
                            "description": "Web proxy disclaimer setting: by domain, policy, or user.",
                            "type": "str"
                        },
                        "dlp-sensor": {
                            "description": "Name of an existing DLP sensor.",
                            "type": "str"
                        },
                        "dstaddr": {
                            "description": "Destination address objects.",
                            "type": "str"
                        },
                        "dstaddr-negate": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "When enabled, destination addresses match against any address EXCEPT the specified destination addresses.",
                            "type": "str"
                        },
                        "dstaddr6": {
                            "description": "IPv6 destination address objects.",
                            "type": "str"
                        },
                        "dstintf": {
                            "description": "Destination interface names.",
                            "type": "str"
                        },
                        "global-label": {
                            "description": "Global web-based manager visible label.",
                            "type": "str"
                        },
                        "groups": {
                            "description": "Names of group objects.",
                            "type": "str"
                        },
                        "http-tunnel-auth": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable HTTP tunnel authentication.",
                            "type": "str"
                        },
                        "icap-profile": {
                            "description": "Name of an existing ICAP profile.",
                            "type": "str"
                        },
                        "internet-service": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used.",
                            "type": "str"
                        },
                        "internet-service-custom": {
                            "description": "Custom Internet Service name.",
                            "type": "str"
                        },
                        "internet-service-id": {
                            "description": "Internet Service ID.",
                            "type": "str"
                        },
                        "internet-service-negate": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "When enabled, Internet Services match against any internet service EXCEPT the selected Internet Service.",
                            "type": "str"
                        },
                        "ips-sensor": {
                            "description": "Name of an existing IPS sensor.",
                            "type": "str"
                        },
                        "label": {
                            "description": "VDOM-specific GUI visible label.",
                            "type": "str"
                        },
                        "logtraffic": {
                            "choices": [
                                "disable",
                                "all",
                                "utm"
                            ],
                            "description": "Enable/disable logging traffic through the policy.",
                            "type": "str"
                        },
                        "logtraffic-start": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable policy log traffic start.",
                            "type": "str"
                        },
                        "mms-profile": {
                            "description": "Name of an existing MMS profile.",
                            "type": "str"
                        },
                        "policyid": {
                            "description": "Policy ID.",
                            "type": "int"
                        },
                        "poolname": {
                            "description": "Name of IP pool object.",
                            "type": "str"
                        },
                        "profile-group": {
                            "description": "Name of profile group.",
                            "type": "str"
                        },
                        "profile-protocol-options": {
                            "description": "Name of an existing Protocol options profile.",
                            "type": "str"
                        },
                        "profile-type": {
                            "choices": [
                                "single",
                                "group"
                            ],
                            "description": "Determine whether the firewall policy allows security profile groups or single profiles only.",
                            "type": "str"
                        },
                        "proxy": {
                            "choices": [
                                "explicit-web",
                                "transparent-web",
                                "ftp",
                                "wanopt",
                                "ssh",
                                "ssh-tunnel"
                            ],
                            "description": "Type of explicit proxy.",
                            "type": "str"
                        },
                        "redirect-url": {
                            "description": "Redirect URL for further explicit web proxy processing.",
                            "type": "str"
                        },
                        "replacemsg-override-group": {
                            "description": "Authentication replacement message override group.",
                            "type": "str"
                        },
                        "scan-botnet-connections": {
                            "choices": [
                                "disable",
                                "block",
                                "monitor"
                            ],
                            "description": "Enable/disable scanning of connections to Botnet servers.",
                            "type": "str"
                        },
                        "schedule": {
                            "description": "Name of schedule object.",
                            "type": "str"
                        },
                        "service": {
                            "description": "Name of service objects.",
                            "type": "str"
                        },
                        "service-negate": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "When enabled, services match against any service EXCEPT the specified destination services.",
                            "type": "str"
                        },
                        "spamfilter-profile": {
                            "description": "Name of an existing Spam filter profile.",
                            "type": "str"
                        },
                        "srcaddr": {
                            "description": "Source address objects (must be set when using Web proxy).",
                            "type": "str"
                        },
                        "srcaddr-negate": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "When enabled, source addresses match against any address EXCEPT the specified source addresses.",
                            "type": "str"
                        },
                        "srcaddr6": {
                            "description": "IPv6 source address objects.",
                            "type": "str"
                        },
                        "srcintf": {
                            "description": "Source interface names.",
                            "type": "str"
                        },
                        "ssl-ssh-profile": {
                            "description": "Name of an existing SSL SSH profile.",
                            "type": "str"
                        },
                        "status": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable the active status of the policy.",
                            "type": "str"
                        },
                        "tags": {
                            "description": "Names of object-tags applied to address. Tags need to be preconfigured in config system object-tag. Separate multiple tags wit...",
                            "type": "str"
                        },
                        "transparent": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable to use the IP address of the client to connect to the server.",
                            "type": "str"
                        },
                        "users": {
                            "description": "Names of user objects.",
                            "type": "str"
                        },
                        "utm-status": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable the use of UTM profiles/sensors/lists.",
                            "type": "str"
                        },
                        "uuid": {
                            "description": "Universally Unique Identifier (UUID; automatically assigned but can be manually reset).",
                            "type": "str"
                        },
                        "waf-profile": {
                            "description": "Name of an existing Web application firewall profile.",
                            "type": "str"
                        },
                        "webcache": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable web caching.",
                            "type": "str"
                        },
                        "webcache-https": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable web caching for HTTPS (Requires deep-inspection enabled in ssl-ssh-profile).",
                            "type": "str"
                        },
                        "webfilter-profile": {
                            "description": "Name of an existing Web filter profile.",
                            "type": "str"
                        },
                        "webproxy-forward-server": {
                            "description": "Name of web proxy forward server.",
                            "type": "str"
                        },
                        "webproxy-profile": {
                            "description": "Name of web proxy profile.",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "Configure proxy policies.",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: Configure proxy policies.\n      fmgr_pkg_firewall_proxypolicy:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         pkg: <your own value>\n         state: <value in [present, absent]>\n         pkg_firewall_proxypolicy:\n            action: <value in [accept, deny, redirect]>\n            application-list: <value of string>\n            av-profile: <value of string>\n            comments: <value of string>\n            disclaimer: <value in [disable, domain, policy, ...]>\n            dlp-sensor: <value of string>\n            dstaddr: <value of string>\n            dstaddr-negate: <value in [disable, enable]>\n            dstaddr6: <value of string>\n            dstintf: <value of string>\n            global-label: <value of string>\n            groups: <value of string>\n            http-tunnel-auth: <value in [disable, enable]>\n            icap-profile: <value of string>\n            internet-service: <value in [disable, enable]>\n            internet-service-custom: <value of string>\n            internet-service-id: <value of string>\n            internet-service-negate: <value in [disable, enable]>\n            ips-sensor: <value of string>\n            label: <value of string>\n            logtraffic: <value in [disable, all, utm]>\n            logtraffic-start: <value in [disable, enable]>\n            mms-profile: <value of string>\n            policyid: <value of integer>\n            poolname: <value of string>\n            profile-group: <value of string>\n            profile-protocol-options: <value of string>\n            profile-type: <value in [single, group]>\n            proxy: <value in [explicit-web, transparent-web, ftp, ...]>\n            redirect-url: <value of string>\n            replacemsg-override-group: <value of string>\n            scan-botnet-connections: <value in [disable, block, monitor]>\n            schedule: <value of string>\n            service: <value of string>\n            service-negate: <value in [disable, enable]>\n            spamfilter-profile: <value of string>\n            srcaddr: <value of string>\n            srcaddr-negate: <value in [disable, enable]>\n            srcaddr6: <value of string>\n            srcintf: <value of string>\n            ssl-ssh-profile: <value of string>\n            status: <value in [disable, enable]>\n            tags: <value of string>\n            transparent: <value in [disable, enable]>\n            users: <value of string>\n            utm-status: <value in [disable, enable]>\n            uuid: <value of string>\n            waf-profile: <value of string>\n            webcache: <value in [disable, enable]>\n            webcache-https: <value in [disable, enable]>\n            webfilter-profile: <value of string>\n            webproxy-forward-server: <value of string>\n            webproxy-profile: <value of string>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
