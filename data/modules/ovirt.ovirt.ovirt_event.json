{
    "ovirt.ovirt.ovirt_event": {
        "doc": {
            "author": "Chris Keller (@nasx)",
            "collection": "ovirt.ovirt",
            "description": [
                "This module can be used to create or delete an event in oVirt/RHV."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ovirt/ovirt/plugins/modules/ovirt_event.py",
            "has_action": false,
            "module": "ovirt_event",
            "notes": [
                "In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can create the following task: I(pip: name=ovirt-engine-sdk-python version=4.4.0)"
            ],
            "options": {
                "auth": {
                    "description": [
                        "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
                    ],
                    "required": true,
                    "suboptions": {
                        "ca_file": {
                            "description": [
                                "A PEM file containing the trusted CA certificates.",
                                "The certificate presented by the server will be verified using these CA certificates.",
                                "If C(ca_file) parameter is not set, system wide CA certificate store is used.",
                                "Default value is set by C(OVIRT_CAFILE) environment variable."
                            ],
                            "type": "str"
                        },
                        "compress": {
                            "default": true,
                            "description": "Flag indicating if compression is used for connection.",
                            "type": "bool"
                        },
                        "headers": {
                            "description": [
                                "Dictionary of HTTP headers to be added to each API call."
                            ],
                            "type": "dict"
                        },
                        "hostname": {
                            "description": [
                                "A string containing the hostname of the server, usually something like `I(server.example.com)`.",
                                "Default value is set by C(OVIRT_HOSTNAME) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "insecure": {
                            "description": [
                                "A boolean flag that indicates if the server TLS certificate and host name should be checked."
                            ],
                            "type": "bool"
                        },
                        "kerberos": {
                            "description": [
                                "A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "description": [
                                "The password of the user.",
                                "Default value is set by C(OVIRT_PASSWORD) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "timeout": {
                            "description": "Number of seconds to wait for response.",
                            "type": "int"
                        },
                        "token": {
                            "description": [
                                "Token to be used instead of login with username/password.",
                                "Default value is set by C(OVIRT_TOKEN) environment variable."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "A string containing the API URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`.",
                                "Default value is set by C(OVIRT_URL) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "The name of the user, something like I(admin@internal).",
                                "Default value is set by C(OVIRT_USERNAME) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "cluster": {
                    "description": [
                        "The id of the cluster associated with this event."
                    ],
                    "type": "str"
                },
                "custom_id": {
                    "description": [
                        "Custom ID for the event. This ID must be unique for each event.",
                        "Required when state is present."
                    ],
                    "type": "int"
                },
                "data_center": {
                    "description": [
                        "The id of the data center associated with this event."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Message for the event.",
                        "Required when state is present."
                    ],
                    "type": "str"
                },
                "fetch_nested": {
                    "description": [
                        "If I(True) the module will fetch additional data from the API.",
                        "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
                    ],
                    "type": "bool"
                },
                "host": {
                    "description": [
                        "The id of the host associated with this event."
                    ],
                    "type": "str"
                },
                "id": {
                    "description": [
                        "The event ID in the oVirt/RHV audit_log table. This ID is not the same as custom_id and is only used when state is absent.",
                        "Required when state is absent."
                    ],
                    "type": "str"
                },
                "nested_attributes": {
                    "description": [
                        "Specifies list of the attributes which should be fetched from the API.",
                        "This parameter apply only when C(fetch_nested) is I(true)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "origin": {
                    "description": [
                        "Originator of the event.",
                        "Required when state is present."
                    ],
                    "type": "str"
                },
                "poll_interval": {
                    "default": 3,
                    "description": [
                        "Number of the seconds the module waits until another poll request on entity status is sent."
                    ],
                    "type": "int"
                },
                "severity": {
                    "choices": [
                        "error",
                        "normal",
                        "warning"
                    ],
                    "default": "normal",
                    "description": [
                        "Severity of the event.",
                        "Required when state is present."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Should the event be present/absent.",
                        "The C(wait) option must be set to false when state is absent."
                    ],
                    "type": "str"
                },
                "storage_domain": {
                    "description": [
                        "The id of the storage domain associated with this event."
                    ],
                    "type": "str"
                },
                "template": {
                    "description": [
                        "The id of the template associated with this event."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "The amount of time in seconds the module should wait for the instance to get into desired state."
                    ],
                    "type": "int"
                },
                "user": {
                    "description": [
                        "The id of the user associated with this event."
                    ],
                    "type": "str"
                },
                "vm": {
                    "description": [
                        "The id of the VM associated with this event."
                    ],
                    "type": "str"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "C(yes) if the module should wait for the entity to get into desired state."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "ovirt-engine-sdk-python >= 4.4.0"
            ],
            "short_description": "Create or delete an event in oVirt/RHV",
            "version_added": "1.0.0",
            "version_added_collection": "ovirt.ovirt"
        },
        "examples": "\n# Examples don't contain the auth parameter for simplicity,\n# look at the ovirt_auth module to see how to reuse authentication.\n\n- name: Create an event\n  ovirt.ovirt.ovirt_event:\n    state: present\n    description: \"The file system /home on host xyz is almost full!\"\n    origin: \"mymonitor\"\n    custom_id: 123456789\n    severity: warning\n\n- name: Create an event and link it to a specific object\n  ovirt.ovirt.ovirt_event:\n    state: present\n    description: \"The file system /home is almost full!\"\n    origin: \"mymonitor\"\n    custom_id: 123456789\n    severity: warning\n    vm: \"c79db183-46ef-44d1-95f9-1a368c516c19\"\n\n- name: Remove an event\n  ovirt.ovirt.ovirt_event:\n    state: absent\n    id: 123456789\n    wait: false\n",
        "metadata": null,
        "return": {
            "event": {
                "description": "Dictionary of all the Event attributes. All event attributes can be found at the following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/event",
                "returned": "On success.",
                "type": "dict"
            },
            "id": {
                "description": "ID of the event that was created.",
                "returned": "On success.",
                "type": "str"
            }
        }
    }
}
