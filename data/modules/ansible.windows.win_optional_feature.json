{
    "ansible.windows.win_optional_feature": {
        "doc": {
            "author": [
                "Carson Anderson (@rcanderson23)"
            ],
            "collection": "ansible.windows",
            "description": [
                "Install or uninstall optional Windows features on non-Server Windows.",
                "This module uses the C(Enable-WindowsOptionalFeature) and C(Disable-WindowsOptionalFeature) cmdlets."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ansible/windows/plugins/modules/win_optional_feature.py",
            "has_action": false,
            "module": "win_optional_feature",
            "options": {
                "include_parent": {
                    "default": false,
                    "description": [
                        "Whether to enable the parent feature and the parent's dependencies."
                    ],
                    "type": "bool"
                },
                "name": {
                    "description": [
                        "The name(s) of the feature to install.",
                        "This relates to C(FeatureName) in the Powershell cmdlet.",
                        "To list all available features use the PowerShell command C(Get-WindowsOptionalFeature)."
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                },
                "source": {
                    "description": [
                        "Specify a source to install the feature from.",
                        "Can either be C({driveletter}:\\sources\\sxs) or C(\\\\{IP}\\share\\sources\\sxs)."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to ensure the feature is absent or present on the system."
                    ],
                    "type": "str"
                }
            },
            "seealso": [
                {
                    "module": "chocolatey.chocolatey.win_chocolatey"
                },
                {
                    "module": "ansible.windows.win_feature"
                },
                {
                    "module": "ansible.windows.win_package"
                }
            ],
            "short_description": "Manage optional Windows features"
        },
        "examples": "\n- name: Install .Net 3.5\n  ansible.windows.win_optional_feature:\n    name: NetFx3\n    state: present\n\n- name: Install .Net 3.5 from source\n  ansible.windows.win_optional_feature:\n    name: NetFx3\n    source: \\\\share01\\win10\\sources\\sxs\n    state: present\n\n- name: Install Microsoft Subsystem for Linux\n  ansible.windows.win_optional_feature:\n    name: Microsoft-Windows-Subsystem-Linux\n    state: present\n  register: wsl_status\n\n- name: Reboot if installing Linux Subsytem as feature requires it\n  ansible.windows.win_reboot:\n  when: wsl_status.reboot_required\n\n- name: Install multiple features in one task\n  ansible.windows.win_optional_feature:\n    name:\n    - NetFx3\n    - Microsoft-Windows-Subsystem-Linux\n    state: present\n",
        "metadata": null,
        "return": {
            "reboot_required": {
                "description": "True when the target server requires a reboot to complete updates",
                "returned": "success",
                "sample": true,
                "type": "bool"
            }
        }
    }
}
