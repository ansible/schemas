{
    "community.aws.aws_secret": {
        "doc": {
            "author": "REY Remi (@rrey)",
            "collection": "community.aws",
            "description": [
                "Create, update, and delete secrets stored in AWS Secrets Manager."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/aws_secret.py",
            "has_action": false,
            "module": "aws_secret",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "description": {
                    "description": [
                        "Specifies a user-provided description of the secret."
                    ],
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "kms_key_id": {
                    "description": [
                        "Specifies the ARN or alias of the AWS KMS customer master key (CMK) to be used to encrypt the `secret_string` or `secret_binary` values in the versions stored in this secret."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Friendly name for the secret you are creating."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "recovery_window": {
                    "default": 30,
                    "description": [
                        "Only used if state is absent.",
                        "Specifies the number of days that Secrets Manager waits before it can delete the secret.",
                        "If set to 0, the deletion is forced without recovery."
                    ],
                    "type": "int"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "rotation_interval": {
                    "default": 30,
                    "description": [
                        "Specifies the number of days between automatic scheduled rotations of the secret."
                    ],
                    "type": "int"
                },
                "rotation_lambda": {
                    "description": [
                        "Specifies the ARN of the Lambda function that can rotate the secret."
                    ],
                    "type": "str"
                },
                "secret": {
                    "default": "",
                    "description": [
                        "Specifies string or binary data that you want to encrypt and store in the new version of the secret."
                    ],
                    "type": "str"
                },
                "secret_type": {
                    "choices": [
                        "binary",
                        "string"
                    ],
                    "default": "string",
                    "description": [
                        "Specifies the type of data that you want to encrypt."
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the secret should be exist or not."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "Specifies a list of user-defined tags that are attached to the secret."
                    ],
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "botocore>=1.10.0",
                "python >= 2.6"
            ],
            "short_description": "Manage secrets stored in AWS Secrets Manager.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Add string to AWS Secrets Manager\n  community.aws.aws_secret:\n    name: 'test_secret_string'\n    state: present\n    secret_type: 'string'\n    secret: \"{{ super_secret_string }}\"\n\n- name: remove string from AWS Secrets Manager\n  community.aws.aws_secret:\n    name: 'test_secret_string'\n    state: absent\n    secret_type: 'string'\n    secret: \"{{ super_secret_string }}\"\n",
        "metadata": null,
        "return": {
            "secret": {
                "contains": {
                    "arn": {
                        "description": "The ARN of the secret",
                        "returned": "always",
                        "sample": "arn:aws:secretsmanager:eu-west-1:xxxxxxxxxx:secret:xxxxxxxxxxx",
                        "type": "str"
                    },
                    "last_accessed_date": {
                        "description": "The date the secret was last accessed",
                        "returned": "always",
                        "sample": "2018-11-20T01:00:00+01:00",
                        "type": "str"
                    },
                    "last_changed_date": {
                        "description": "The date the secret was last modified.",
                        "returned": "always",
                        "sample": "2018-11-20T12:16:38.433000+01:00",
                        "type": "str"
                    },
                    "name": {
                        "description": "The secret name.",
                        "returned": "always",
                        "sample": "my_secret",
                        "type": "str"
                    },
                    "rotation_enabled": {
                        "description": "The secret rotation status.",
                        "returned": "always",
                        "sample": false,
                        "type": "bool"
                    },
                    "version_ids_to_stages": {
                        "description": "Provide the secret version ids and the associated secret stage.",
                        "returned": "always",
                        "sample": {
                            "dc1ed59b-6d8e-4450-8b41-536dfe4600a9": [
                                "AWSCURRENT"
                            ]
                        },
                        "type": "dict"
                    }
                },
                "description": "The secret information",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
