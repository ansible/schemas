{
    "ngine_io.cloudstack.cs_sshkeypair": {
        "doc": {
            "author": "Ren\u00e9 Moser (@resmo)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Create, register and remove SSH keys.",
                "If no key was found and no public key was provided and a new SSH private/public key pair will be created and the private key will be returned."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_sshkeypair.py",
            "has_action": false,
            "module": "cs_sshkeypair",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "account": {
                    "description": [
                        "Account the public key is related to."
                    ],
                    "type": "str"
                },
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "domain": {
                    "description": [
                        "Domain the public key is related to."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of public key."
                    ],
                    "required": true,
                    "type": "str"
                },
                "project": {
                    "description": [
                        "Name of the project the public key to be registered in."
                    ],
                    "type": "str"
                },
                "public_key": {
                    "description": [
                        "String of the public key."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the public key."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Manages SSH keys on Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: create a new private / public key pair\n  ngine_io.cloudstack.cs_sshkeypair:\n    name: linus@example.com\n  register: key\n\n- debug:\n    msg: 'Private key is {{ key.private_key }}'\n\n- name: remove a public key by its name\n  ngine_io.cloudstack.cs_sshkeypair:\n    name: linus@example.com\n    state: absent\n\n- name: register your existing local public key\n  ngine_io.cloudstack.cs_sshkeypair:\n    name: linus@example.com\n    public_key: \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\"\n",
        "metadata": null,
        "return": {
            "fingerprint": {
                "description": "Fingerprint of the SSH public key.",
                "returned": "success",
                "sample": "86:5e:a3:e8:bd:95:7b:07:7c:c2:5c:f7:ad:8b:09:28",
                "type": "str"
            },
            "id": {
                "description": "UUID of the SSH public key.",
                "returned": "success",
                "sample": "a6f7a5fc-43f8-11e5-a151-feff819cdc9f",
                "type": "str"
            },
            "name": {
                "description": "Name of the SSH public key.",
                "returned": "success",
                "sample": "linus@example.com",
                "type": "str"
            },
            "private_key": {
                "description": "Private key of generated SSH keypair.",
                "returned": "changed",
                "sample": "-----BEGIN RSA PRIVATE KEY----- MII...8tO -----END RSA PRIVATE KEY----- ",
                "type": "str"
            }
        }
    }
}
