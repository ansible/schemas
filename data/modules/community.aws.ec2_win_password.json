{
    "community.aws.ec2_win_password": {
        "doc": {
            "author": "Rick Mendes (@rickmendes)",
            "collection": "community.aws",
            "description": [
                "Gets the default administrator password from any EC2 Windows instance. The instance is referenced by its id (e.g. C(i-XXXXXXX)).",
                "This module has a dependency on python-boto."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_win_password.py",
            "has_action": false,
            "module": "ec2_win_password",
            "notes": [
                "As of Ansible 2.4, this module requires the python cryptography module rather than the older pycrypto module.",
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "instance_id": {
                    "description": [
                        "The instance id to get the password data from."
                    ],
                    "required": true,
                    "type": "str"
                },
                "key_data": {
                    "description": [
                        "The private key (usually stored in vault).",
                        "Conflicts with I(key_file),"
                    ],
                    "required": false,
                    "type": "str"
                },
                "key_file": {
                    "description": [
                        "Path to the file containing the key pair used on the instance.",
                        "Conflicts with I(key_data)."
                    ],
                    "required": false,
                    "type": "path"
                },
                "key_passphrase": {
                    "description": [
                        "The passphrase for the instance key pair. The key must use DES or 3DES encryption for this module to decrypt it. You can use openssl to convert your password protected keys if they do not use DES or 3DES. ex) C(openssl rsa -in current_key -out new_key -des3)."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": false,
                    "description": [
                        "Whether or not to wait for the password to be available before returning."
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 120,
                    "description": [
                        "Number of seconds to wait before giving up."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "cryptography",
                "python >= 2.6"
            ],
            "short_description": "Gets the default administrator password for ec2 windows instances",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Example of getting a password\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_file: \"~/aws-creds/my_test_key.pem\"\n\n# Example of getting a password using a variable\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_data: \"{{ ec2_private_key }}\"\n\n# Example of getting a password with a password protected key\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_file: \"~/aws-creds/my_protected_test_key.pem\"\n    key_passphrase: \"secret\"\n\n# Example of waiting for a password\n- name: get the Administrator password\n  community.aws.ec2_win_password:\n    profile: my-boto-profile\n    instance_id: i-XXXXXX\n    region: us-east-1\n    key_file: \"~/aws-creds/my_test_key.pem\"\n    wait: yes\n    wait_timeout: 45\n",
        "metadata": null,
        "return": null
    }
}
