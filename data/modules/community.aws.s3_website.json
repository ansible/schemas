{
    "community.aws.s3_website": {
        "doc": {
            "author": "Rob White (@wimnat)",
            "collection": "community.aws",
            "description": [
                "Configure an s3 bucket as a website"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/s3_website.py",
            "has_action": false,
            "module": "s3_website",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "error_key": {
                    "description": [
                        "The object key name to use when a 4XX class error occurs. To remove an error key, set to None."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the s3 bucket"
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "redirect_all_requests": {
                    "description": [
                        "Describes the redirect behavior for every request to this s3 bucket website endpoint"
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Add or remove s3 website configuration"
                    ],
                    "required": true,
                    "type": "str"
                },
                "suffix": {
                    "default": "index.html",
                    "description": [
                        "Suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html). The suffix must not include a slash character.\n"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Configure an s3 bucket as a website",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Configure an s3 bucket to redirect all requests to example.com\n  community.aws.s3_website:\n    name: mybucket.com\n    redirect_all_requests: example.com\n    state: present\n\n- name: Remove website configuration from an s3 bucket\n  community.aws.s3_website:\n    name: mybucket.com\n    state: absent\n\n- name: Configure an s3 bucket as a website with index and error pages\n  community.aws.s3_website:\n    name: mybucket.com\n    suffix: home.htm\n    error_key: errors/404.htm\n    state: present\n\n",
        "metadata": null,
        "return": {
            "error_document": {
                "contains": {
                    "key": {
                        "description": "object key name to use when a 4XX class error occurs",
                        "returned": "when error_document parameter set",
                        "sample": "error.html",
                        "type": "str"
                    }
                },
                "description": "error document",
                "returned": "always",
                "type": "complex"
            },
            "index_document": {
                "contains": {
                    "suffix": {
                        "description": "suffix that is appended to a request that is for a directory on the website endpoint",
                        "returned": "success",
                        "sample": "index.html",
                        "type": "str"
                    }
                },
                "description": "index document",
                "returned": "always",
                "type": "complex"
            },
            "redirect_all_requests_to": {
                "contains": {
                    "host_name": {
                        "description": "name of the host where requests will be redirected.",
                        "returned": "when redirect all requests parameter set",
                        "sample": "ansible.com",
                        "type": "str"
                    },
                    "protocol": {
                        "description": "protocol to use when redirecting requests.",
                        "returned": "when redirect all requests parameter set",
                        "sample": "https",
                        "type": "str"
                    }
                },
                "description": "where to redirect requests",
                "returned": "always",
                "type": "complex"
            },
            "routing_rules": {
                "contains": {
                    "condition": {
                        "contains": {
                            "http_error_code_returned_equals": {
                                "description": "The HTTP error code when the redirect is applied.",
                                "returned": "always",
                                "type": "str"
                            },
                            "key_prefix_equals": {
                                "description": "object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html",
                                "returned": "when routing rule present",
                                "sample": "docs/",
                                "type": "str"
                            }
                        },
                        "description": "A container for describing a condition that must be met for the specified redirect to apply.",
                        "type": "complex"
                    },
                    "redirect": {
                        "contains": {
                            "host_name": {
                                "description": "name of the host where requests will be redirected.",
                                "returned": "when host name set as part of redirect rule",
                                "sample": "ansible.com",
                                "type": "str"
                            },
                            "http_redirect_code": {
                                "description": "The HTTP redirect code to use on the response.",
                                "returned": "when routing rule present",
                                "type": "str"
                            },
                            "protocol": {
                                "description": "Protocol to use when redirecting requests.",
                                "returned": "when routing rule present",
                                "sample": "http",
                                "type": "str"
                            },
                            "replace_key_prefix_with": {
                                "description": "object key prefix to use in the redirect request",
                                "returned": "when routing rule present",
                                "sample": "documents/",
                                "type": "str"
                            },
                            "replace_key_with": {
                                "description": "object key prefix to use in the redirect request",
                                "returned": "when routing rule present",
                                "sample": "documents/",
                                "type": "str"
                            }
                        },
                        "description": "Container for redirect information.",
                        "returned": "always",
                        "type": "complex"
                    }
                },
                "description": "routing rules",
                "returned": "always",
                "type": "list"
            }
        }
    }
}
