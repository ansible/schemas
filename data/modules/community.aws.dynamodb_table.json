{
    "community.aws.dynamodb_table": {
        "doc": {
            "author": "Alan Loi (@loia)",
            "collection": "community.aws",
            "description": [
                "Create or delete AWS Dynamo DB tables.",
                "Can update the provisioned throughput on existing tables.",
                "Returns the status of the specified table."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/dynamodb_table.py",
            "has_action": false,
            "module": "dynamodb_table",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "hash_key_name": {
                    "description": [
                        "Name of the hash key.",
                        "Required when C(state=present)."
                    ],
                    "type": "str"
                },
                "hash_key_type": {
                    "choices": [
                        "STRING",
                        "NUMBER",
                        "BINARY"
                    ],
                    "default": "STRING",
                    "description": [
                        "Type of the hash key."
                    ],
                    "type": "str"
                },
                "indexes": {
                    "default": [],
                    "description": [
                        "list of dictionaries describing indexes to add to the table. global indexes can be updated. local indexes don't support updates or have throughput.",
                        "required options: ['name', 'type', 'hash_key_name']",
                        "other options: ['hash_key_type', 'range_key_name', 'range_key_type', 'includes', 'read_capacity', 'write_capacity']"
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "hash_key_name": {
                            "description": "The name of the hash-based key.",
                            "required": true,
                            "type": "str"
                        },
                        "hash_key_type": {
                            "description": "The type of the hash-based key.",
                            "type": "str"
                        },
                        "includes": {
                            "description": "A list of fields to include when using C(global_include) or C(include) indexes.",
                            "type": "list"
                        },
                        "name": {
                            "description": "The name of the index.",
                            "required": true,
                            "type": "str"
                        },
                        "range_key_name": {
                            "description": "The name of the range-based key.",
                            "type": "str"
                        },
                        "range_key_type": {
                            "description": "The type of the range-based key.",
                            "type": "str"
                        },
                        "read_capacity": {
                            "description": [
                                "Read throughput capacity (units) to provision for the index."
                            ],
                            "type": "int"
                        },
                        "type": {
                            "description": [
                                "The type of index.",
                                "Valid types: C(all), C(global_all), C(global_include), C(global_keys_only), C(include), C(keys_only)"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "write_capacity": {
                            "description": [
                                "Write throughput capacity (units) to provision for the index."
                            ],
                            "type": "int"
                        }
                    },
                    "type": "list"
                },
                "name": {
                    "description": [
                        "Name of the table."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "range_key_name": {
                    "description": [
                        "Name of the range key."
                    ],
                    "type": "str"
                },
                "range_key_type": {
                    "choices": [
                        "STRING",
                        "NUMBER",
                        "BINARY"
                    ],
                    "default": "STRING",
                    "description": [
                        "Type of the range key."
                    ],
                    "type": "str"
                },
                "read_capacity": {
                    "default": 1,
                    "description": [
                        "Read throughput capacity (units) to provision."
                    ],
                    "type": "int"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Create or delete the table."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "A hash/dictionary of tags to add to the new instance or for starting/stopping instance by tag.",
                        "For example: C({\"key\":\"value\"}) and C({\"key\":\"value\",\"key2\":\"value2\"})"
                    ],
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait_for_active_timeout": {
                    "default": 60,
                    "description": [
                        "how long before wait gives up, in seconds. only used when tags is set"
                    ],
                    "type": "int"
                },
                "write_capacity": {
                    "default": 1,
                    "description": [
                        "Write throughput capacity (units) to provision."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "boto >= 2.37.0",
                "boto3 >= 1.4.4 (for tagging)",
                "python >= 2.6"
            ],
            "short_description": "Create, update or delete AWS Dynamo DB tables",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Create dynamo table with hash and range primary key\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    hash_key_name: id\n    hash_key_type: STRING\n    range_key_name: create_time\n    range_key_type: NUMBER\n    read_capacity: 2\n    write_capacity: 2\n    tags:\n      tag_name: tag_value\n\n- name: Update capacity on existing dynamo table\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    read_capacity: 10\n    write_capacity: 10\n\n- name: set index on existing dynamo table\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    indexes:\n      - name: NamedIndex\n        type: global_include\n        hash_key_name: id\n        range_key_name: create_time\n        includes:\n          - other_field\n          - other_field2\n        read_capacity: 10\n        write_capacity: 10\n\n- name: Delete dynamo table\n  community.aws.dynamodb_table:\n    name: my-table\n    region: us-east-1\n    state: absent\n",
        "metadata": null,
        "return": {
            "table_status": {
                "description": "The current status of the table.",
                "returned": "success",
                "sample": "ACTIVE",
                "type": "str"
            }
        }
    }
}
