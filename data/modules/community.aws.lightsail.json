{
    "community.aws.lightsail": {
        "doc": {
            "author": [
                "Nick Ball (@nickball)",
                "Prasad Katti (@prasadkatti)"
            ],
            "collection": "community.aws",
            "description": [
                "Manage instances in AWS Lightsail.",
                "Instance tagging is not yet supported in this module."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/lightsail.py",
            "has_action": false,
            "module": "lightsail",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "blueprint_id": {
                    "description": [
                        "ID of the instance blueprint image.",
                        "Required when I(state=present)"
                    ],
                    "type": "str"
                },
                "bundle_id": {
                    "description": [
                        "Bundle of specification info for the instance.",
                        "Required when I(state=present)."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "key_pair_name": {
                    "description": [
                        "Name of the key pair to use with the instance.",
                        "If I(state=present) and a key_pair_name is not provided, the default keypair from the region will be used."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": "Name of the instance.",
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "running",
                        "restarted",
                        "rebooted",
                        "stopped"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the target.",
                        "I(rebooted) and I(restarted) are aliases."
                    ],
                    "type": "str"
                },
                "user_data": {
                    "description": [
                        "Launch script that can configure the instance with additional data."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Wait for the instance to be in state 'running' before returning.",
                        "If I(wait=false) an ip_address may not be returned.",
                        "Has no effect when I(state=rebooted) or I(state=absent)."
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "How long before I(wait) gives up, in seconds."
                    ],
                    "type": "int"
                },
                "zone": {
                    "description": [
                        "AWS availability zone in which to launch the instance.",
                        "Required when I(state=present)"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Manage instances in AWS Lightsail",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Create a new Lightsail instance\n  community.aws.lightsail:\n    state: present\n    name: my_instance\n    region: us-east-1\n    zone: us-east-1a\n    blueprint_id: ubuntu_16_04\n    bundle_id: nano_1_0\n    key_pair_name: id_rsa\n    user_data: \" echo 'hello world' > /home/ubuntu/test.txt\"\n  register: my_instance\n\n- name: Delete an instance\n  community.aws.lightsail:\n    state: absent\n    region: us-east-1\n    name: my_instance\n\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "if a snapshot has been modified/created",
                "returned": "always",
                "sample": {
                    "changed": true
                },
                "type": "bool"
            },
            "instance": {
                "description": "instance data",
                "returned": "always",
                "sample": {
                    "arn": "arn:aws:lightsail:us-east-1:448830907657:Instance/1fef0175-d6c8-480e-84fa-214f969cda87",
                    "blueprint_id": "ubuntu_16_04",
                    "blueprint_name": "Ubuntu",
                    "bundle_id": "nano_1_0",
                    "created_at": "2017-03-27T08:38:59.714000-04:00",
                    "hardware": {
                        "cpu_count": 1,
                        "ram_size_in_gb": 0.5
                    },
                    "is_static_ip": false,
                    "location": {
                        "availability_zone": "us-east-1a",
                        "region_name": "us-east-1"
                    },
                    "name": "my_instance",
                    "networking": {
                        "monthly_transfer": {
                            "gb_per_month_allocated": 1024
                        },
                        "ports": [
                            {
                                "access_direction": "inbound",
                                "access_from": "Anywhere (0.0.0.0/0)",
                                "access_type": "public",
                                "common_name": "",
                                "from_port": 80,
                                "protocol": "tcp",
                                "to_port": 80
                            },
                            {
                                "access_direction": "inbound",
                                "access_from": "Anywhere (0.0.0.0/0)",
                                "access_type": "public",
                                "common_name": "",
                                "from_port": 22,
                                "protocol": "tcp",
                                "to_port": 22
                            }
                        ]
                    },
                    "private_ip_address": "172.26.8.14",
                    "public_ip_address": "34.207.152.202",
                    "resource_type": "Instance",
                    "ssh_key_name": "keypair",
                    "state": {
                        "code": 16,
                        "name": "running"
                    },
                    "support_code": "588307843083/i-0997c97831ee21e33",
                    "username": "ubuntu"
                },
                "type": "dict"
            }
        }
    }
}
