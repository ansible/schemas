{
    "community.vmware.vmware_local_role_info": {
        "doc": {
            "author": [
                "Abhijeet Kasurde (@Akasurde)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to gather information about local role info on an ESXi host"
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_local_role_info.py",
            "has_action": false,
            "module": "vmware_local_role_info",
            "notes": [
                "Tested on ESXi 6.5",
                "Be sure that the ESXi user used for login, has the appropriate rights to view roles",
                "The module returns a list of dict in version 2.8 and above."
            ],
            "options": {
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Gather info about local roles on an ESXi host"
        },
        "examples": "\n- name: Gather info about local role from an ESXi\n  community.vmware.vmware_local_role_info:\n    hostname: '{{ esxi_hostname }}'\n    username: '{{ esxi_username }}'\n    password: '{{ esxi_password }}'\n  register: fact_details\n  delegate_to: localhost\n- name: Get Admin privileges\n  set_fact:\n    admin_priv: \"{{ fact_details.local_role_info | selectattr('role_name', 'equalto', 'Admin') | map(attribute='privileges') | first  }}\"\n- debug:\n    msg: \"{{ admin_priv }}\"\n",
        "metadata": null,
        "return": {
            "local_role_info": {
                "description": "A list of dict about role information present on ESXi host",
                "returned": "always",
                "sample": [
                    {
                        "privileges": [
                            "Alarm.Acknowledge",
                            "Alarm.Create",
                            "Alarm.Delete",
                            "Alarm.DisableActions"
                        ],
                        "role_id": -12,
                        "role_info_label": "Ansible User",
                        "role_info_summary": "Ansible Automation user",
                        "role_name": "AnsiUser1",
                        "role_system": true
                    },
                    {
                        "privileges": [],
                        "role_id": -5,
                        "role_info_label": "No access",
                        "role_info_summary": "Used for restricting granted access",
                        "role_name": "NoAccess",
                        "role_system": true
                    },
                    {
                        "privileges": [
                            "System.Anonymous",
                            "System.View"
                        ],
                        "role_id": -3,
                        "role_info_label": "View",
                        "role_info_summary": "Visibility access (cannot be granted)",
                        "role_name": "View",
                        "role_system": true
                    }
                ],
                "type": "list of dict"
            }
        }
    }
}
