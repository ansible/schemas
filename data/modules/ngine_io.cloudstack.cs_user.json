{
    "ngine_io.cloudstack.cs_user": {
        "doc": {
            "author": "Ren\u00e9 Moser (@resmo)",
            "collection": "ngine_io.cloudstack",
            "description": [
                "Create, update, disable, lock, enable and remove users."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ngine_io/cloudstack/plugins/modules/cs_user.py",
            "has_action": false,
            "module": "cs_user",
            "notes": [
                "A detailed guide about cloudstack modules can be found in the L(CloudStack Cloud Guide,../scenario_guides/guide_cloudstack.html).",
                "This module supports check mode."
            ],
            "options": {
                "account": {
                    "description": [
                        "Account the user will be created under.",
                        "Required on I(state=present)."
                    ],
                    "type": "str"
                },
                "api_http_method": {
                    "choices": [
                        "get",
                        "post"
                    ],
                    "default": "get",
                    "description": [
                        "HTTP method used to query the API endpoint.",
                        "If not given, the C(CLOUDSTACK_METHOD) env variable is considered."
                    ],
                    "type": "str"
                },
                "api_key": {
                    "description": [
                        "API key of the CloudStack API.",
                        "If not given, the C(CLOUDSTACK_KEY) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_secret": {
                    "description": [
                        "Secret key of the CloudStack API.",
                        "If not set, the C(CLOUDSTACK_SECRET) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_timeout": {
                    "default": 10,
                    "description": [
                        "HTTP timeout in seconds.",
                        "If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered."
                    ],
                    "type": "int"
                },
                "api_url": {
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api.",
                        "If not given, the C(CLOUDSTACK_ENDPOINT) env variable is considered."
                    ],
                    "required": true,
                    "type": "str"
                },
                "api_verify_ssl_cert": {
                    "description": [
                        "Verify CA authority cert file.",
                        "If not given, the C(CLOUDSTACK_VERIFY) env variable is considered."
                    ],
                    "type": "str"
                },
                "domain": {
                    "default": "ROOT",
                    "description": [
                        "Domain the user is related to."
                    ],
                    "type": "str"
                },
                "email": {
                    "description": [
                        "Email of the user.",
                        "Required on I(state=present)."
                    ],
                    "type": "str"
                },
                "first_name": {
                    "description": [
                        "First name of the user.",
                        "Required on I(state=present)."
                    ],
                    "type": "str"
                },
                "keys_registered": {
                    "default": false,
                    "description": [
                        "If API keys of the user should be generated.",
                        "Note: Keys can not be removed by the API again."
                    ],
                    "type": "bool"
                },
                "last_name": {
                    "description": [
                        "Last name of the user.",
                        "Required on I(state=present)."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "Password of the user to be created.",
                        "Required on I(state=present).",
                        "Only considered on creation and will not be updated if user exists."
                    ],
                    "type": "str"
                },
                "poll_async": {
                    "default": true,
                    "description": [
                        "Poll async jobs until job has finished."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "enabled",
                        "disabled",
                        "locked",
                        "unlocked"
                    ],
                    "default": "present",
                    "description": [
                        "State of the user.",
                        "C(unlocked) is an alias for C(enabled)."
                    ],
                    "type": "str"
                },
                "timezone": {
                    "description": [
                        "Timezone of the user."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Username of the user."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "cs >= 0.9.0"
            ],
            "short_description": "Manages users on Apache CloudStack based clouds.",
            "version_added": "0.1.0",
            "version_added_collection": "ngine_io.cloudstack"
        },
        "examples": "\n- name: Create an user in domain 'CUSTOMERS'\n  ngine_io.cloudstack.cs_user:\n    account: developers\n    username: johndoe\n    password: S3Cur3\n    last_name: Doe\n    first_name: John\n    email: john.doe@example.com\n    domain: CUSTOMERS\n\n- name: Lock an existing user in domain 'CUSTOMERS'\n  ngine_io.cloudstack.cs_user:\n    username: johndoe\n    domain: CUSTOMERS\n    state: locked\n\n- name: Disable an existing user in domain 'CUSTOMERS'\n  ngine_io.cloudstack.cs_user:\n    username: johndoe\n    domain: CUSTOMERS\n    state: disabled\n\n- name: Enable/unlock an existing user in domain 'CUSTOMERS'\n  ngine_io.cloudstack.cs_user:\n    username: johndoe\n    domain: CUSTOMERS\n    state: enabled\n\n- name: Remove an user in domain 'CUSTOMERS'\n  ngine_io.cloudstack.cs_user:\n    name: customer_xy\n    domain: CUSTOMERS\n    state: absent\n",
        "metadata": null,
        "return": {
            "account": {
                "description": "Account name of the user.",
                "returned": "success",
                "sample": "developers",
                "type": "str"
            },
            "account_type": {
                "description": "Type of the account.",
                "returned": "success",
                "sample": "user",
                "type": "str"
            },
            "created": {
                "description": "Date the user was created.",
                "returned": "success",
                "sample": "Doe",
                "type": "str"
            },
            "domain": {
                "description": "Domain the user is related.",
                "returned": "success",
                "sample": "ROOT",
                "type": "str"
            },
            "email": {
                "description": "Emailof the user.",
                "returned": "success",
                "sample": "john.doe@example.com",
                "type": "str"
            },
            "fist_name": {
                "description": "First name of the user.",
                "returned": "success",
                "sample": "John",
                "type": "str"
            },
            "id": {
                "description": "UUID of the user.",
                "returned": "success",
                "sample": "87b1e0ce-4e01-11e4-bb66-0050569e64b8",
                "type": "str"
            },
            "last_name": {
                "description": "Last name of the user.",
                "returned": "success",
                "sample": "Doe",
                "type": "str"
            },
            "state": {
                "description": "State of the user.",
                "returned": "success",
                "sample": "enabled",
                "type": "str"
            },
            "timezone": {
                "description": "Timezone of the user.",
                "returned": "success",
                "sample": "enabled",
                "type": "str"
            },
            "user_api_key": {
                "description": "API key of the user.",
                "returned": "success",
                "sample": "JLhcg8VWi8DoFqL2sSLZMXmGojcLnFrOBTipvBHJjySODcV4mCOo29W2duzPv5cALaZnXj5QxDx3xQfaQt3DKg",
                "type": "str"
            },
            "user_api_secret": {
                "description": "API secret of the user.",
                "returned": "success",
                "sample": "FUELo3LB9fa1UopjTLPdqLv_6OXQMJZv9g9N4B_Ao3HFz8d6IGFCV9MbPFNM8mwz00wbMevja1DoUNDvI8C9-g",
                "type": "str"
            },
            "username": {
                "description": "Username of the user.",
                "returned": "success",
                "sample": "johndoe",
                "type": "str"
            }
        }
    }
}
