{
    "community.general.aix_devices": {
        "doc": {
            "author": [
                "Kairo Araujo (@kairoaraujo)"
            ],
            "collection": "community.general",
            "description": [
                "This module discovers, defines, removes and modifies attributes of AIX devices."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/aix_devices.py",
            "has_action": false,
            "module": "aix_devices",
            "options": {
                "attributes": {
                    "description": [
                        "A list of device attributes."
                    ],
                    "type": "dict"
                },
                "device": {
                    "description": [
                        "The name of the device.",
                        "C(all) is valid to rescan C(available) all devices (AIX cfgmgr command)."
                    ],
                    "type": "str"
                },
                "force": {
                    "default": false,
                    "description": [
                        "Forces action."
                    ],
                    "type": "bool"
                },
                "recursive": {
                    "default": false,
                    "description": [
                        "Removes or defines a device and children devices."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "available",
                        "defined",
                        "removed"
                    ],
                    "default": "available",
                    "description": [
                        "Controls the device state.",
                        "C(available) (alias C(present)) rescan a specific device or all devices (when C(device) is not specified).",
                        "C(removed) (alias C(absent) removes a device.",
                        "C(defined) changes device to Defined state."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages AIX devices"
        },
        "examples": "\n- name: Scan new devices\n  community.general.aix_devices:\n    device: all\n    state: available\n\n- name: Scan new virtual devices (vio0)\n  community.general.aix_devices:\n    device: vio0\n    state: available\n\n- name: Removing IP alias to en0\n  community.general.aix_devices:\n    device: en0\n    attributes:\n      delalias4: 10.0.0.100,255.255.255.0\n\n- name: Removes ent2\n  community.general.aix_devices:\n    device: ent2\n    state: removed\n\n- name: Put device en2 in Defined\n  community.general.aix_devices:\n    device: en2\n    state: defined\n\n- name: Removes ent4 (inexistent).\n  community.general.aix_devices:\n    device: ent4\n    state: removed\n\n- name: Put device en4 in Defined (inexistent)\n  community.general.aix_devices:\n    device: en4\n    state: defined\n\n- name: Put vscsi1 and children devices in Defined state.\n  community.general.aix_devices:\n    device: vscsi1\n    recursive: yes\n    state: defined\n\n- name: Removes vscsi1 and children devices.\n  community.general.aix_devices:\n    device: vscsi1\n    recursive: yes\n    state: removed\n\n- name: Changes en1 mtu to 9000 and disables arp.\n  community.general.aix_devices:\n    device: en1\n    attributes:\n      mtu: 900\n      arp: off\n    state: available\n\n- name: Configure IP, netmask and set en1 up.\n  community.general.aix_devices:\n    device: en1\n    attributes:\n      netaddr: 192.168.0.100\n      netmask: 255.255.255.0\n      state: up\n    state: available\n\n- name: Adding IP alias to en0\n  community.general.aix_devices:\n    device: en0\n    attributes:\n      alias4: 10.0.0.100,255.255.255.0\n    state: available\n",
        "metadata": null,
        "return": null
    }
}
