{
    "community.general.idrac_redfish_config": {
        "doc": {
            "author": "Jose Delarosa (@jose-delarosa)",
            "collection": "community.general",
            "description": [
                "For use with Dell iDRAC operations that require Redfish OEM extensions",
                "Builds Redfish URIs locally and sends them to remote iDRAC controllers to set or update a configuration attribute."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/idrac_redfish_config.py",
            "has_action": false,
            "module": "idrac_redfish_config",
            "options": {
                "auth_token": {
                    "description": [
                        "Security token for authentication with OOB controller"
                    ],
                    "type": "str",
                    "version_added": "2.3.0",
                    "version_added_collection": "community.general"
                },
                "baseuri": {
                    "description": [
                        "Base URI of iDRAC"
                    ],
                    "required": true,
                    "type": "str"
                },
                "category": {
                    "description": [
                        "Category to execute on iDRAC"
                    ],
                    "required": true,
                    "type": "str"
                },
                "command": {
                    "description": [
                        "List of commands to execute on iDRAC",
                        "I(SetManagerAttributes), I(SetLifecycleControllerAttributes) and I(SetSystemAttributes) are mutually exclusive commands when C(category) is I(Manager)"
                    ],
                    "elements": "str",
                    "required": true,
                    "type": "list"
                },
                "manager_attribute_name": {
                    "description": [
                        "(deprecated) name of iDRAC attribute to update"
                    ],
                    "required": false,
                    "type": "str"
                },
                "manager_attribute_value": {
                    "description": [
                        "(deprecated) value of iDRAC attribute to update"
                    ],
                    "required": false,
                    "type": "str"
                },
                "manager_attributes": {
                    "default": {},
                    "description": [
                        "dictionary of iDRAC attribute name and value pairs to update"
                    ],
                    "required": false,
                    "type": "dict",
                    "version_added": "0.2.0",
                    "version_added_collection": "community.general"
                },
                "password": {
                    "description": [
                        "Password for authentication with iDRAC"
                    ],
                    "type": "str"
                },
                "resource_id": {
                    "description": [
                        "The ID of the System, Manager or Chassis to modify"
                    ],
                    "required": false,
                    "type": "str",
                    "version_added": "0.2.0",
                    "version_added_collection": "community.general"
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Timeout in seconds for URL requests to iDRAC controller"
                    ],
                    "type": "int"
                },
                "username": {
                    "description": [
                        "User for authentication with iDRAC"
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manages servers through iDRAC using Dell Redfish APIs"
        },
        "examples": "\n  - name: Enable NTP and set NTP server and Time zone attributes in iDRAC\n    community.general.idrac_redfish_config:\n      category: Manager\n      command: SetManagerAttributes\n      resource_id: iDRAC.Embedded.1\n      manager_attributes:\n        NTPConfigGroup.1.NTPEnable: \"Enabled\"\n        NTPConfigGroup.1.NTP1: \"{{ ntpserver1 }}\"\n        Time.1.Timezone: \"{{ timezone }}\"\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username}}\"\n      password: \"{{ password }}\"\n\n  - name: Enable Syslog and set Syslog servers in iDRAC\n    community.general.idrac_redfish_config:\n      category: Manager\n      command: SetManagerAttributes\n      resource_id: iDRAC.Embedded.1\n      manager_attributes:\n        SysLog.1.SysLogEnable: \"Enabled\"\n        SysLog.1.Server1: \"{{ syslog_server1 }}\"\n        SysLog.1.Server2: \"{{ syslog_server2 }}\"\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username}}\"\n      password: \"{{ password }}\"\n\n  - name: Configure SNMP community string, port, protocol and trap format\n    community.general.idrac_redfish_config:\n      category: Manager\n      command: SetManagerAttributes\n      resource_id: iDRAC.Embedded.1\n      manager_attributes:\n        SNMP.1.AgentEnable: \"Enabled\"\n        SNMP.1.AgentCommunity: \"public_community_string\"\n        SNMP.1.TrapFormat: \"SNMPv1\"\n        SNMP.1.SNMPProtocol: \"All\"\n        SNMP.1.DiscoveryPort: 161\n        SNMP.1.AlertPort: 162\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username}}\"\n      password: \"{{ password }}\"\n\n  - name: Enable CSIOR\n    community.general.idrac_redfish_config:\n      category: Manager\n      command: SetLifecycleControllerAttributes\n      resource_id: iDRAC.Embedded.1\n      manager_attributes:\n        LCAttributes.1.CollectSystemInventoryOnRestart: \"Enabled\"\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username}}\"\n      password: \"{{ password }}\"\n\n  - name: Set Power Supply Redundancy Policy to A/B Grid Redundant\n    community.general.idrac_redfish_config:\n      category: Manager\n      command: SetSystemAttributes\n      resource_id: iDRAC.Embedded.1\n      manager_attributes:\n        ServerPwr.1.PSRedPolicy: \"A/B Grid Redundant\"\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username}}\"\n      password: \"{{ password }}\"\n",
        "metadata": null,
        "return": {
            "msg": {
                "description": "Message with action result or error description",
                "returned": "always",
                "sample": "Action was successful",
                "type": "str"
            }
        }
    }
}
