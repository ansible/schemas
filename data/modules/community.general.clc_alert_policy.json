{
    "community.general.clc_alert_policy": {
        "doc": {
            "author": "CLC Runner (@clc-runner)",
            "collection": "community.general",
            "description": [
                "An Ansible module to Create or Delete Alert Policies at CenturyLink Cloud."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/clc_alert_policy.py",
            "has_action": false,
            "module": "clc_alert_policy",
            "notes": [
                "To use this module, it is required to set the below environment variables which enables access to the Centurylink Cloud - CLC_V2_API_USERNAME, the account login id for the centurylink cloud - CLC_V2_API_PASSWORD, the account password for the centurylink cloud",
                "Alternatively, the module accepts the API token and account alias. The API token can be generated using the CLC account login and password via the HTTP api call @ https://api.ctl.io/v2/authentication/login - CLC_V2_API_TOKEN, the API token generated from https://api.ctl.io/v2/authentication/login - CLC_ACCT_ALIAS, the account alias associated with the centurylink cloud",
                "Users can set CLC_V2_API_URL to specify an endpoint for pointing to a different CLC environment."
            ],
            "options": {
                "alert_recipients": {
                    "description": [
                        "A list of recipient email ids to notify the alert. This is required for state 'present'"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "alias": {
                    "description": [
                        "The alias of your CLC Account"
                    ],
                    "required": true,
                    "type": "str"
                },
                "duration": {
                    "description": [
                        "The length of time in minutes that the condition must exceed the threshold. This is required for state 'present'"
                    ],
                    "type": "str"
                },
                "id": {
                    "description": [
                        "The alert policy id. This is mutually exclusive with name"
                    ],
                    "type": "str"
                },
                "metric": {
                    "choices": [
                        "cpu",
                        "memory",
                        "disk"
                    ],
                    "description": [
                        "The metric on which to measure the condition that will trigger the alert. This is required for state 'present'"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the alert policy. This is mutually exclusive with id"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to create or delete the policy."
                    ],
                    "type": "str"
                },
                "threshold": {
                    "description": [
                        "The threshold that will trigger the alert when the metric equals or exceeds it. This is required for state 'present' This number represents a percentage and must be a value between 5.0 - 95.0 that is a multiple of 5.0"
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "python = 2.7",
                "requests >= 2.5.0",
                "clc-sdk"
            ],
            "short_description": "Create or Delete Alert Policies at CenturyLink Cloud."
        },
        "examples": "\n# Note - You must set the CLC_V2_API_USERNAME And CLC_V2_API_PASSWD Environment variables before running these examples\n\n---\n- name: Create Alert Policy Example\n  hosts: localhost\n  gather_facts: False\n  connection: local\n  tasks:\n    - name: Create an Alert Policy for disk above 80% for 5 minutes\n      community.general.clc_alert_policy:\n        alias: wfad\n        name: 'alert for disk > 80%'\n        alert_recipients:\n            - test1@centurylink.com\n            - test2@centurylink.com\n        metric: 'disk'\n        duration: '00:05:00'\n        threshold: 80\n        state: present\n      register: policy\n\n    - name: Debug\n      ansible.builtin.debug: var=policy\n\n- name: Delete Alert Policy Example\n  hosts: localhost\n  gather_facts: False\n  connection: local\n  tasks:\n    - name: Delete an Alert Policy\n      community.general.clc_alert_policy:\n        alias: wfad\n        name: 'alert for disk > 80%'\n        state: absent\n      register: policy\n\n    - name: Debug\n      ansible.builtin.debug: var=policy\n",
        "metadata": null,
        "return": {
            "policy": {
                "description": "The alert policy information",
                "returned": "success",
                "sample": {
                    "actions": [
                        {
                            "action": "email",
                            "settings": {
                                "recipients": [
                                    "user1@domain.com",
                                    "user1@domain.com"
                                ]
                            }
                        }
                    ],
                    "id": "ba54ac54a60d4a4f1ed6d48c1ce240a7",
                    "links": [
                        {
                            "href": "/v2/alertPolicies/alias/ba54ac54a60d4a4fb1d6d48c1ce240a7",
                            "rel": "self",
                            "verbs": [
                                "GET",
                                "DELETE",
                                "PUT"
                            ]
                        }
                    ],
                    "name": "test_alert",
                    "triggers": [
                        {
                            "duration": "00:05:00",
                            "metric": "disk",
                            "threshold": 80.0
                        }
                    ]
                },
                "type": "dict"
            }
        }
    }
}
