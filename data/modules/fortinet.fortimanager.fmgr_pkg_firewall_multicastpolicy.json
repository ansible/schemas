{
    "fortinet.fortimanager.fmgr_pkg_firewall_multicastpolicy": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_pkg_firewall_multicastpolicy.py",
            "has_action": false,
            "module": "fmgr_pkg_firewall_multicastpolicy",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "pkg": {
                    "description": "the parameter (pkg) in requested url",
                    "required": true,
                    "type": "str"
                },
                "pkg_firewall_multicastpolicy": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "action": {
                            "choices": [
                                "deny",
                                "accept"
                            ],
                            "description": "Accept or deny traffic matching the policy.",
                            "type": "str"
                        },
                        "auto-asic-offload": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable offloading policy traffic for hardware acceleration.",
                            "type": "str"
                        },
                        "dnat": {
                            "description": "IPv4 DNAT address used for multicast destination addresses.",
                            "type": "str"
                        },
                        "dstaddr": {
                            "description": "Destination address objects.",
                            "type": "str"
                        },
                        "dstintf": {
                            "description": "Destination interface name.",
                            "type": "str"
                        },
                        "end-port": {
                            "description": " Integer value for ending TCP/UDP/SCTP destination port in range (1 - 65535, default = 1).",
                            "type": "int"
                        },
                        "id": {
                            "description": "Policy ID.",
                            "type": "int"
                        },
                        "logtraffic": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable logging traffic accepted by this policy.",
                            "type": "str"
                        },
                        "protocol": {
                            "description": "Integer value for the protocol type as defined by IANA (0 - 255, default = 0).",
                            "type": "int"
                        },
                        "snat": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable substitution of the outgoing interface IP address for the original source IP address (called source NAT or SNAT).",
                            "type": "str"
                        },
                        "snat-ip": {
                            "description": "IPv4 address to be used as the source address for NATed traffic.",
                            "type": "str"
                        },
                        "srcaddr": {
                            "description": "Source address objects.",
                            "type": "str"
                        },
                        "srcintf": {
                            "description": "Source interface name.",
                            "type": "str"
                        },
                        "start-port": {
                            "description": "Integer value for starting TCP/UDP/SCTP destination port in range (1 - 65535, default = 1).",
                            "type": "int"
                        },
                        "status": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable this policy.",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "Configure multicast NAT policies.",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: Configure multicast NAT policies.\n      fmgr_pkg_firewall_multicastpolicy:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         pkg: <your own value>\n         state: <value in [present, absent]>\n         pkg_firewall_multicastpolicy:\n            action: <value in [deny, accept]>\n            auto-asic-offload: <value in [disable, enable]>\n            dnat: <value of string>\n            dstaddr: <value of string>\n            dstintf: <value of string>\n            end-port: <value of integer>\n            id: <value of integer>\n            logtraffic: <value in [disable, enable]>\n            protocol: <value of integer>\n            snat: <value in [disable, enable]>\n            snat-ip: <value of string>\n            srcaddr: <value of string>\n            srcintf: <value of string>\n            start-port: <value of integer>\n            status: <value in [disable, enable]>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
