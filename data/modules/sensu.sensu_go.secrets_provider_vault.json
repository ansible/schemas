{
    "sensu.sensu_go.secrets_provider_vault": {
        "doc": {
            "author": [
                "Aljaz Kosir (@aljazkosir)",
                "Manca Bizjak (@mancabizjak)",
                "Miha Dolinar (@mdolin)",
                "Tadej Borovsak (@tadeboro)"
            ],
            "collection": "sensu.sensu_go",
            "description": [
                "Create, update or delete a Sensu Go VaultProvider secrets provider.",
                "For more information, refer to the Sensu Go documentation at U(https://docs.sensu.io/sensu-go/latest/operations/manage-secrets/secrets-providers/)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/sensu/sensu_go/plugins/modules/secrets_provider_vault.py",
            "has_action": false,
            "module": "secrets_provider_vault",
            "options": {
                "address": {
                    "description": [
                        "Address of the Vault server.",
                        "Required if I(state) is C(present)."
                    ],
                    "type": "str"
                },
                "auth": {
                    "description": [
                        "Authentication parameters. Can define each of them with ENV as well."
                    ],
                    "suboptions": {
                        "api_key": {
                            "description": [
                                "The API key that should be used when authenticating. If this is not set, the value of the SENSU_API_KEY environment variable will be checked.",
                                "This replaces I(auth.user) and I(auth.password) parameters.",
                                "For more information about the API key, refer to the official Sensu documentation at U(https://docs.sensu.io/sensu-go/latest/guides/use-apikey-feature/)."
                            ],
                            "type": "str",
                            "version_added": "1.3.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "ca_path": {
                            "description": [
                                "Path to the CA bundle that should be used to validate the backend certificate.",
                                "If this parameter is not set, module will use the CA bundle that python is using.",
                                "It is also possible to set this parameter via the I(SENSU_CA_PATH) environment variable."
                            ],
                            "type": "path",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        },
                        "password": {
                            "default": "P@ssw0rd!",
                            "description": [
                                "The Sensu user's password. If this is not set the value of the SENSU_PASSWORD environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "default": "http://localhost:8080",
                            "description": [
                                "Location of the Sensu backend API. If this is not set the value of the SENSU_URL environment variable will be checked."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "default": "admin",
                            "description": [
                                "The username to use for connecting to the Sensu API. If this is not set the value of the SENSU_USER environment variable will be checked.",
                                "This parameter is ignored if the I(auth.api_key) parameter is set."
                            ],
                            "type": "str"
                        },
                        "verify": {
                            "default": true,
                            "description": [
                                "Flag that controls the certificate validation.",
                                "If you are using self-signed certificates, you can set this parameter to C(false).",
                                "ONLY USE THIS PARAMETER IN DEVELOPMENT SCENARIOS! In you use self-signed certificates in production, see the I(auth.ca_path) parameter.",
                                "It is also possible to set this parameter via the I(SENSU_VERIFY) environment variable."
                            ],
                            "type": "bool",
                            "version_added": "1.5.0",
                            "version_added_collection": "sensu.sensu_go"
                        }
                    },
                    "type": "dict"
                },
                "burst_limit": {
                    "description": [
                        "Maximum allowed number of secrets requests in a rate interval."
                    ],
                    "type": "int"
                },
                "max_retries": {
                    "description": [
                        "Maximum number of times to retry failed connections to Vault server."
                    ],
                    "type": "int"
                },
                "name": {
                    "description": [
                        "The Sensu resource's name. This name (in combination with the namespace where applicable) uniquely identifies the resource that Ansible operates on.",
                        "If the resource with selected name already exists, Ansible module will update it to match the specification in the task.",
                        "Consult the I(name) metadata attribute specification in the upstream docs on U(https://docs.sensu.io/sensu-go/latest/reference/) for more details about valid names and other restrictions."
                    ],
                    "required": true,
                    "type": "str"
                },
                "rate_limit": {
                    "description": [
                        "Maximum number of secrets requests for per second."
                    ],
                    "type": "float"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Target state of the Sensu object."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "description": [
                        "Timeout (in seconds) for connection to Vault server."
                    ],
                    "type": "int"
                },
                "tls": {
                    "description": [
                        "TLS configuration for establishing connection with Vault server."
                    ],
                    "suboptions": {
                        "ca_cert": {
                            "description": [
                                "Path to the certificate file of the trusted certificate authority."
                            ],
                            "type": "str"
                        },
                        "client_cert": {
                            "description": [
                                "Path to the client certificate file."
                            ],
                            "type": "str"
                        },
                        "client_key": {
                            "description": [
                                "Path to the client key file."
                            ],
                            "type": "str"
                        },
                        "cname": {
                            "description": [
                                "Canonical name for the client."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "token": {
                    "description": [
                        "Authentication token to use with Vault.",
                        "Required if I(state) is C(present)."
                    ],
                    "type": "str"
                },
                "version": {
                    "choices": [
                        "v1",
                        "v2"
                    ],
                    "description": [
                        "Version of the Vault key/value store.",
                        "Please refer to U(https://www.vaultproject.io/docs/secrets/kv) for additional information.",
                        "Required if I(state) is C(present)."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7"
            ],
            "seealso": [
                {
                    "module": "sensu.sensu_go.secrets_provider_env"
                },
                {
                    "module": "sensu.sensu_go.secrets_provider_info"
                },
                {
                    "module": "sensu.sensu_go.secret"
                },
                {
                    "module": "sensu.sensu_go.secret_info"
                }
            ],
            "short_description": "Manage Sensu VaultProvider secrets providers",
            "version_added": "1.6.0",
            "version_added_collection": "sensu.sensu_go"
        },
        "examples": "\n- name: Create a vault secrets provider\n  sensu.sensu_go.secrets_provider_vault:\n    name: my-vault\n    address: https://my-vault.com\n    token: VAULT_TOKEN\n    version: v1\n\n- name: Delete a vault secrets provider\n  sensu.sensu_go.secrets_provider_vault:\n    name: my-vault\n    state: absent\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "stableinterface"
            ],
            "supported_by": "certified"
        },
        "return": {
            "object": {
                "description": "Object representing Sensu vault secrets provider.",
                "returned": "success",
                "sample": {
                    "client": {
                        "address": "https://vaultserver.example.com:8200",
                        "max_retries": 2,
                        "rate_limiter": {
                            "burst": 100,
                            "limit": 10
                        },
                        "timeout": "20s",
                        "tls": {
                            "ca_cert": "/etc/ssl/certs/vault_ca_cert.pem"
                        },
                        "token": "VAULT_TOKEN",
                        "version": "v1"
                    },
                    "metadata": {
                        "name": "vault"
                    }
                },
                "type": "dict"
            }
        }
    }
}
