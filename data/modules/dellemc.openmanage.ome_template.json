{
    "dellemc.openmanage.ome_template": {
        "doc": {
            "author": "Jagadeesh N V (@jagadeeshnv)",
            "collection": "dellemc.openmanage",
            "description": "This module creates, modifies, deploys, deletes, exports, imports and clones a template on OpenManage Enterprise.",
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/dellemc/openmanage/plugins/modules/ome_template.py",
            "has_action": false,
            "module": "ome_template",
            "notes": [
                "Run this module from a system that has direct access to DellEMC OpenManage Enterprise.",
                "This module does not support C(check_mode)."
            ],
            "options": {
                "attributes": {
                    "description": [
                        "Payload data for the template operations. All the variables in this option are added as payload for C(create), C(modify), C(deploy), C(import), and C(clone) operations. It takes the following attributes.",
                        "Attributes: List of dictionaries of attributes (if any) to be modified in the deployment template. This is applicable when I(command) is C(deploy) and C(modify).",
                        "Name: Name of the template. This is mandatory when I(command) is C(create), C(import), C(clone), and optional when I(command) is C(modify).",
                        "Description: Description for the template. This is applicable when I(command) is C(create) or C(modify).",
                        "Fqdds: This allows to create a template using components from a specified reference server. One or more, of the following values must be specified in a comma-separated string: iDRAC, System, BIOS, NIC, LifeCycleController, RAID, and EventFilters. If none of the values are specified, the default value 'All' is selected. This is applicable when I (command) is C(create).",
                        "Options: Options to control device shutdown or end power state post template deployment. This is applicable for C(deploy) operation.",
                        "Schedule: Provides options to schedule the deployment task immediately, or at a specified time. This is applicable when I(command) is C(deploy).",
                        "NetworkBootIsoModel: Payload to specify the ISO deployment details. This is applicable when I(command) is C(deploy).",
                        "Content: The XML content of template. This is applicable when I(command) is C(import).",
                        "Type: Template type ID, indicating the type of device for which configuration is supported, such as chassis and servers. This is applicable when I(command) is C(import).",
                        "TypeId: Template type ID, indicating the type of device for which configuration is supported, such as chassis and servers. This is applicable when I(command) is C(create).",
                        "Refer OpenManage Enterprise API Reference Guide for more details."
                    ],
                    "type": "dict"
                },
                "command": {
                    "aliases": [
                        "state"
                    ],
                    "choices": [
                        "create",
                        "modify",
                        "deploy",
                        "delete",
                        "export",
                        "import",
                        "clone"
                    ],
                    "default": "create",
                    "description": [
                        "C(create) creates a new template.",
                        "C(modify) modifies an existing template.",
                        "C(deploy) creates a template-deployment job.",
                        "C(delete) deletes an existing template.",
                        "C(export) exports an existing template.",
                        "C(import) creates a template from a specified configuration text in SCP XML format.",
                        "C(clone) creates a clone of a existing template."
                    ],
                    "type": "str"
                },
                "device_group_names": {
                    "default": [],
                    "description": [
                        "Specify the list of groups when I (command) is C(deploy).",
                        "Provide at least one of the mandatory options I(device_id), I(device_service_tag), or I(device_group_names)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "device_id": {
                    "default": [],
                    "description": [
                        "Specify the list of targeted device ID(s) when I(command) is C(deploy). When I (command) is C(create), specify the ID of a single device.",
                        "Either I(device_id) or I(device_service_tag) is mandatory or both can be applicable."
                    ],
                    "elements": "int",
                    "type": "list"
                },
                "device_service_tag": {
                    "default": [],
                    "description": [
                        "Specify the list of targeted device service tags when I (command) is C(deploy). When I(command) is C(create), specify the service tag of a single device.",
                        "Either I(device_id) or I(device_service_tag) is mandatory or both can be applicable."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "hostname": {
                    "description": "Target IP address or hostname.",
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "description": "Target user password.",
                    "required": true,
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": "Target HTTPS port.",
                    "type": "int"
                },
                "template_id": {
                    "description": [
                        "ID of the existing template.",
                        "This option is applicable when I(command) is C(modify), C(deploy), C(delete) and C(export).",
                        "This option is mutually exclusive with I(template_name)."
                    ],
                    "type": "int"
                },
                "template_name": {
                    "description": [
                        "Name of the existing template.",
                        "This option is applicable when I(command) is C(modify), C(deploy), C(delete) and C(export).",
                        "This option is mutually exclusive with I(template_id)."
                    ],
                    "type": "str"
                },
                "template_view_type": {
                    "choices": [
                        "Deployment",
                        "Compliance",
                        "Inventory",
                        "Sample",
                        "None"
                    ],
                    "default": "Deployment",
                    "description": [
                        "Select the type of view of the OME template.",
                        "This is applicable when I(command) is C(create),C(clone) and C(import)."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": "Target username.",
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7.5"
            ],
            "short_description": "Create, modify, deploy, delete, export, import and clone a template on OpenManage Enterprise",
            "version_added": "2.0.0",
            "version_added_collection": "dellemc.openmanage"
        },
        "examples": "\n---\n- name: Create a template from a reference device\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    device_id: 25123\n    attributes:\n      Name: \"New Template\"\n      Description: \"New Template description\"\n\n- name: Modify template name, description, and attribute value\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"modify\"\n    template_id: 12\n    attributes:\n      Name: \"New Custom Template\"\n      Description: \"Custom Template Description\"\n      # Attributes to be modified in the template.\n      # For information on any attribute id, use API /TemplateService/Templates(Id)/Views(Id)/AttributeViewDetails\n      # This section is optional\n      Attributes:\n        - Id: 1234\n          Value: \"Test Attribute\"\n          IsIgnored: false\n\n- name: Deploy template on multiple devices\n  dellemc.openmanage.ome_template:\n    hostname:  \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"deploy\"\n    template_id: 12\n    device_id:\n      - 12765\n      - 10173\n    device_service_tag:\n      - 'SVTG123'\n      - 'SVTG456'\n\n- name: Deploy template on groups\n  dellemc.openmanage.ome_template:\n    hostname:  \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"deploy\"\n    template_id: 12\n    device_group_names:\n      - server_group_1\n      - server_group_2\n\n- name: Deploy template on multiple devices along with the attributes values to be modified on the target devices\n  dellemc.openmanage.ome_template:\n    hostname:  \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"deploy\"\n    template_id: 12\n    device_id:\n      - 12765\n      - 10173\n    device_service_tag:\n      - 'SVTG123'\n    attributes:\n      # Device specific attributes to be modified during deployment.\n      # For information on any attribute id, use API /TemplateService/Templates(Id)/Views(Id)/AttributeViewDetails\n      # This section is optional\n      Attributes:\n        # specific device where attribute to be modified at deployment run-time.\n        # The DeviceId should be mentioned above in the 'device_id' section.\n        # Service tags not allowed.\n        - DeviceId: 12765\n          Attributes:\n            - Id : 15645\n              Value : \"0.0.0.0\"\n              IsIgnored : false\n        - DeviceId: 10173\n          Attributes:\n            - Id : 18968,\n              Value : \"hostname-1\"\n              IsIgnored : false\n\n- name: Deploy template and Operating System (OS) on multiple devices\n  dellemc.openmanage.ome_template:\n    hostname:  \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"deploy\"\n    template_id: 12\n    device_id:\n      - 12765\n    device_service_tag:\n      - 'SVTG123'\n    attributes:\n      # Include this to install OS on the devices.\n      # This section is optional\n      NetworkBootIsoModel:\n        BootToNetwork: true\n        ShareType: \"NFS\"\n        IsoTimeout: 1 # allowable values(1,2,4,8,16) in hours\n        IsoPath: \"/home/iso_path/filename.iso\"\n        ShareDetail:\n          IpAddress: \"192.168.0.2\"\n          ShareName: \"sharename\"\n          User: \"share_user\"\n          Password: \"share_password\"\n      Options:\n        EndHostPowerState: 1\n        ShutdownType: 0\n        TimeToWaitBeforeShutdown: 300\n      Schedule:\n        RunLater: true\n        RunNow: false\n\n- name: \"Deploy template on multiple devices and changes the device-level attributes. After the template is deployed,\ninstall OS using its image\"\n  dellemc.openmanage.ome_template:\n    hostname:  \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"deploy\"\n    template_id: 12\n    device_id:\n      - 12765\n      - 10173\n    device_service_tag:\n      - 'SVTG123'\n      - 'SVTG456'\n    attributes:\n      Attributes:\n        - DeviceId: 12765\n          Attributes:\n            - Id : 15645\n              Value : \"0.0.0.0\"\n              IsIgnored : false\n        - DeviceId: 10173\n          Attributes:\n            - Id : 18968,\n              Value : \"hostname-1\"\n              IsIgnored : false\n      NetworkBootIsoModel:\n        BootToNetwork: true\n        ShareType: \"NFS\"\n        IsoTimeout: 1 # allowable values(1,2,4,8,16) in hours\n        IsoPath: \"/home/iso_path/filename.iso\"\n        ShareDetail:\n          IpAddress: \"192.168.0.2\"\n          ShareName: \"sharename\"\n          User: \"share_user\"\n          Password: \"share_password\"\n      Options:\n        EndHostPowerState: 1\n        ShutdownType: 0\n        TimeToWaitBeforeShutdown: 300\n      Schedule:\n        RunLater: true\n        RunNow: false\n\n- name: Delete template\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"delete\"\n    template_id: 12\n\n- name: Export a template\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"export\"\n    template_id: 12\n\n# Start of example to export template to a local xml file\n- name: Export template to a local xml file\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"export\"\n    template_name: \"my_template\"\n  register: result\n- name: Save template into a file\n  ansible.builtin.copy:\n    content: \"{{ result.Content}}\"\n    dest: \"/path/to/exported_template.xml\"\n# End of example to export template to a local xml file\n\n- name: Clone a template\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"clone\"\n    template_id: 12\n    attributes:\n      Name: \"New Cloned Template Name\"\n\n- name: Import template from XML content\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"import\"\n    attributes:\n      Name: \"Imported Template Name\"\n      # Template Type from TemplateService/TemplateTypes\n      Type: 2\n      # xml string content\n      Content: \"<SystemConfiguration Model=\\\"PowerEdge R940\\\" ServiceTag=\\\"SVCTAG1\\\"\n      TimeStamp=\\\"Tue Sep 24 09:20:57.872551 2019\\\">\\n<Component FQDD=\\\"AHCI.Slot.6-1\\\">\\n<Attribute\n      Name=\\\"RAIDresetConfig\\\">True</Attribute>\\n<Attribute Name=\\\"RAIDforeignConfig\\\">Clear</Attribute>\\n\n      </Component>\\n<Component FQDD=\\\"Disk.Direct.0-0:AHCI.Slot.6-1\\\">\\n<Attribute Name=\\\"RAIDPDState\\\">Ready\n      </Attribute>\\n<Attribute Name=\\\"RAIDHotSpareStatus\\\">No</Attribute>\\n</Component>\\n\n      <Component FQDD=\\\"Disk.Direct.1-1:AHCI.Slot.6-1\\\">\\n<Attribute Name=\\\"RAIDPDState\\\">Ready</Attribute>\\n\n      <Attribute Name=\\\"RAIDHotSpareStatus\\\">No</Attribute>\\n</Component>\\n</SystemConfiguration>\\n\"\n\n- name: Import template from local XML file\n  dellemc.openmanage.ome_template:\n    hostname: \"192.168.0.1\"\n    username: \"username\"\n    password: \"password\"\n    command: \"import\"\n    attributes:\n      Name: \"Imported Template Name\"\n      Type: 2\n      Content: \"{{ lookup('ansible.builtin.file.', '/path/to/xmlfile') }}\"\n",
        "metadata": null,
        "return": {
            "Content": {
                "description": "XML content of the exported template. This content can be written to a xml file.",
                "returned": "success, when I(command) is C(export)",
                "sample": "<SystemConfiguration Model=\"PowerEdge R940\" ServiceTag=\"DG22TR2\" TimeStamp=\"Tue Sep 24 09:20:57.872551 2019\">\n<Component FQDD=\"AHCI.Slot.6-1\">\n<Attribute Name=\"RAIDresetConfig\">True</Attribute>\n<Attribute Name=\"RAIDforeignConfig\">Clear</Attribute>\n</Component>\n<Component FQDD=\"Disk.Direct.0-0:AHCI.Slot.6-1\">\n <Attribute Name=\"RAIDPDState\">Ready</Attribute>\n<Attribute Name=\"RAIDHotSpareStatus\">No</Attribute>\n </Component>\n<Component FQDD=\"Disk.Direct.1-1:AHCI.Slot.6-1\">\n<Attribute Name=\"RAIDPDState\">Ready </Attribute>\n<Attribute Name=\"RAIDHotSpareStatus\">No</Attribute>\n</Component>\n</SystemConfiguration>\n",
                "type": "str"
            },
            "TemplateId": {
                "description": "ID of the template for C(export).",
                "returned": "success, when I(command) is C(export)",
                "sample": 13,
                "type": "int"
            },
            "error_info": {
                "description": "Details of the HTTP Error.",
                "returned": "on HTTP error",
                "sample": {
                    "error": {
                        "@Message.ExtendedInfo": [
                            {
                                "Message": "Unable to process the request because an error occurred.",
                                "MessageArgs": [],
                                "MessageId": "GEN1234",
                                "RelatedProperties": [],
                                "Resolution": "Retry the operation. If the issue persists, contact your system administrator.",
                                "Severity": "Critical"
                            }
                        ],
                        "code": "Base.1.0.GeneralError",
                        "message": "A general error has occurred. See ExtendedInfo for more information."
                    }
                },
                "type": "dict"
            },
            "msg": {
                "description": "Overall status of the template operation.",
                "returned": "always",
                "sample": "Successfully created a template with ID 23",
                "type": "str"
            },
            "return_id": {
                "description": "ID of the template for C(create), C(modify), C(import) and C(clone) or task created in case of C(deploy).",
                "returned": "success, when I(command) is C(create), C(modify), C(import), C(clone) and C(deploy)",
                "sample": 12,
                "type": "int"
            }
        }
    }
}
