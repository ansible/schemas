{
    "fortinet.fortios.fortios_switch_controller_security_policy_802_1x": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Hongbin Lu (@fgtdev-hblu)",
                "Frank Shen (@frankshen01)",
                "Miguel Angel Munoz (@mamunozgonzalez)",
                "Nicolas Thomas (@thomnico)"
            ],
            "collection": "fortinet.fortios",
            "description": [
                "This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the user to set and modify switch_controller_security_policy feature and 802_1x category. Examples include all parameters and values need to be adjusted to datasources before usage. Tested with FOS v6.0.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortios/plugins/modules/fortios_switch_controller_security_policy_802_1x.py",
            "has_action": false,
            "module": "fortios_switch_controller_security_policy_802_1x",
            "notes": [
                "Legacy fortiosapi has been deprecated, httpapi is the preferred way to run playbooks"
            ],
            "options": {
                "access_token": {
                    "description": [
                        "Token-based authentication. Generated from GUI of Fortigate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Indicates whether to create or remove the object."
                    ],
                    "required": true,
                    "type": "str"
                },
                "switch_controller_security_policy_802_1x": {
                    "default": null,
                    "description": [
                        "Configure 802.1x MAC Authentication Bypass (MAB) policies."
                    ],
                    "suboptions": {
                        "auth_fail_vlan": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": [
                                "Enable to allow limited access to clients that cannot authenticate."
                            ],
                            "type": "str"
                        },
                        "auth_fail_vlan_id": {
                            "description": [
                                "VLAN ID on which authentication failed. Source system.interface.name."
                            ],
                            "type": "str"
                        },
                        "auth_fail_vlanid": {
                            "description": [
                                "VLAN ID on which authentication failed."
                            ],
                            "type": "int"
                        },
                        "eap_passthru": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": [
                                "Enable/disable EAP pass-through mode, allowing protocols (such as LLDP) to pass through ports for more flexible authentication."
                            ],
                            "type": "str"
                        },
                        "guest_auth_delay": {
                            "description": [
                                "Guest authentication delay (1 - 900  sec)."
                            ],
                            "type": "int"
                        },
                        "guest_vlan": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": [
                                "Enable the guest VLAN feature to allow limited access to non-802.1X-compliant clients."
                            ],
                            "type": "str"
                        },
                        "guest_vlan_id": {
                            "description": [
                                "Guest VLAN name. Source system.interface.name."
                            ],
                            "type": "str"
                        },
                        "guest_vlanid": {
                            "description": [
                                "Guest VLAN ID."
                            ],
                            "type": "int"
                        },
                        "mac_auth_bypass": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": [
                                "Enable/disable MAB for this policy."
                            ],
                            "type": "str"
                        },
                        "name": {
                            "description": [
                                "Policy name."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "policy_type": {
                            "choices": [
                                "802.1X"
                            ],
                            "description": [
                                "Policy type."
                            ],
                            "type": "str"
                        },
                        "radius_timeout_overwrite": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": [
                                "Enable to override the global RADIUS session timeout."
                            ],
                            "type": "str"
                        },
                        "security_mode": {
                            "choices": [
                                "802.1X",
                                "802.1X-mac-based"
                            ],
                            "description": [
                                "Port or MAC based 802.1X security mode."
                            ],
                            "type": "str"
                        },
                        "user_group": {
                            "description": [
                                "Name of user-group to assign to this MAC Authentication Bypass (MAB) policy."
                            ],
                            "suboptions": {
                                "name": {
                                    "description": [
                                        "Group name. Source user.group.name."
                                    ],
                                    "required": true,
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        }
                    },
                    "type": "dict"
                },
                "vdom": {
                    "default": "root",
                    "description": [
                        "Virtual domain, among those defined previously. A vdom is a virtual instance of the FortiGate that can be configured and used as a different unit."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "ansible>=2.9.0"
            ],
            "short_description": "Configure 802.1x MAC Authentication Bypass (MAB) policies in Fortinet's FortiOS and FortiGate.",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortios"
        },
        "examples": "\n- hosts: fortigates\n  collections:\n    - fortinet.fortios\n  connection: httpapi\n  vars:\n   vdom: \"root\"\n   ansible_httpapi_use_ssl: yes\n   ansible_httpapi_validate_certs: no\n   ansible_httpapi_port: 443\n  tasks:\n  - name: Configure 802.1x MAC Authentication Bypass (MAB) policies.\n    fortios_switch_controller_security_policy_802_1x:\n      vdom:  \"{{ vdom }}\"\n      state: \"present\"\n      access_token: \"<your_own_value>\"\n      switch_controller_security_policy_802_1x:\n        auth_fail_vlan: \"disable\"\n        auth_fail_vlan_id: \"<your_own_value> (source system.interface.name)\"\n        auth_fail_vlanid: \"5\"\n        eap_passthru: \"disable\"\n        guest_auth_delay: \"7\"\n        guest_vlan: \"disable\"\n        guest_vlan_id: \"<your_own_value> (source system.interface.name)\"\n        guest_vlanid: \"10\"\n        mac_auth_bypass: \"disable\"\n        name: \"default_name_12\"\n        policy_type: \"802.1X\"\n        radius_timeout_overwrite: \"disable\"\n        security_mode: \"802.1X\"\n        user_group:\n         -\n            name: \"default_name_17 (source user.group.name)\"\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "build": {
                "description": "Build number of the fortigate image",
                "returned": "always",
                "sample": "1547",
                "type": "str"
            },
            "http_method": {
                "description": "Last method used to provision the content into FortiGate",
                "returned": "always",
                "sample": "PUT",
                "type": "str"
            },
            "http_status": {
                "description": "Last result given by FortiGate on last operation applied",
                "returned": "always",
                "sample": "200",
                "type": "str"
            },
            "mkey": {
                "description": "Master key (id) used in the last call to FortiGate",
                "returned": "success",
                "sample": "id",
                "type": "str"
            },
            "name": {
                "description": "Name of the table used to fulfill the request",
                "returned": "always",
                "sample": "urlfilter",
                "type": "str"
            },
            "path": {
                "description": "Path of the table used to fulfill the request",
                "returned": "always",
                "sample": "webfilter",
                "type": "str"
            },
            "revision": {
                "description": "Internal revision number",
                "returned": "always",
                "sample": "17.0.2.10658",
                "type": "str"
            },
            "serial": {
                "description": "Serial number of the unit",
                "returned": "always",
                "sample": "FGVMEVYYQT3AB5352",
                "type": "str"
            },
            "status": {
                "description": "Indication of the operation's result",
                "returned": "always",
                "sample": "success",
                "type": "str"
            },
            "vdom": {
                "description": "Virtual domain used",
                "returned": "always",
                "sample": "root",
                "type": "str"
            },
            "version": {
                "description": "Version of the FortiGate",
                "returned": "always",
                "sample": "v5.6.3",
                "type": "str"
            }
        }
    }
}
