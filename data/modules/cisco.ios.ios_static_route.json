{
    "cisco.ios.ios_static_route": {
        "doc": {
            "author": "Ricardo Carrillo Cruz (@rcarrillocruz)",
            "collection": "cisco.ios",
            "deprecated": {
                "alternative": "ios_static_routes",
                "removed_at_date": "2022-06-01",
                "removed_from_collection": "cisco.ios",
                "why": "Newer and updated modules released with more functionality."
            },
            "description": [
                "This module provides declarative management of static IP routes on Cisco IOS network devices."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/ios/plugins/modules/ios_static_route.py",
            "has_action": true,
            "module": "ios_static_route",
            "notes": [
                "Tested against IOS 15.6",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "admin_distance": {
                    "description": [
                        "Admin distance of the static route."
                    ],
                    "type": "str"
                },
                "aggregate": {
                    "description": "List of static route definitions.",
                    "elements": "dict",
                    "suboptions": {
                        "admin_distance": {
                            "description": [
                                "Admin distance of the static route."
                            ],
                            "type": "str"
                        },
                        "interface": {
                            "description": [
                                "Interface of the static route."
                            ],
                            "type": "str"
                        },
                        "mask": {
                            "description": [
                                "Network prefix mask of the static route."
                            ],
                            "type": "str"
                        },
                        "name": {
                            "aliases": [
                                "description"
                            ],
                            "description": [
                                "Name of the static route"
                            ],
                            "type": "str"
                        },
                        "next_hop": {
                            "description": [
                                "Next hop IP of the static route."
                            ],
                            "type": "str"
                        },
                        "prefix": {
                            "description": [
                                "Network prefix of the static route."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "state": {
                            "choices": [
                                "present",
                                "absent"
                            ],
                            "description": [
                                "State of the static route configuration."
                            ],
                            "type": "str"
                        },
                        "tag": {
                            "description": [
                                "Set tag of the static route."
                            ],
                            "type": "str"
                        },
                        "track": {
                            "description": [
                                "Tracked item to depend on for the static route."
                            ],
                            "type": "str"
                        },
                        "vrf": {
                            "description": [
                                "VRF of the static route."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "interface": {
                    "description": [
                        "Interface of the static route."
                    ],
                    "type": "str"
                },
                "mask": {
                    "description": [
                        "Network prefix mask of the static route."
                    ],
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "description"
                    ],
                    "description": [
                        "Name of the static route"
                    ],
                    "type": "str"
                },
                "next_hop": {
                    "description": [
                        "Next hop IP of the static route."
                    ],
                    "type": "str"
                },
                "prefix": {
                    "description": [
                        "Network prefix of the static route."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "For more information please see the L(IOS Platform Options guide, ../network/user_guide/platform_ios.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "path"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the static route configuration."
                    ],
                    "type": "str"
                },
                "tag": {
                    "description": [
                        "Set tag of the static route."
                    ],
                    "type": "str"
                },
                "track": {
                    "description": [
                        "Tracked item to depend on for the static route."
                    ],
                    "type": "str"
                },
                "vrf": {
                    "description": [
                        "VRF of the static route."
                    ],
                    "type": "str"
                }
            },
            "short_description": "(deprecated, removed after 2022-06-01) Manage static IP routes on Cisco IOS network devices",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.ios"
        },
        "examples": "\n- name: configure static route\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    next_hop: 10.0.0.1\n\n- name: configure black hole in vrf blue depending on tracked item 10\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    vrf: blue\n    interface: null0\n    track: 10\n\n- name: configure ultimate route with name and tag\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    interface: GigabitEthernet1\n    name: hello world\n    tag: 100\n\n- name: remove configuration\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    next_hop: 10.0.0.1\n    state: absent\n\n- name: Add static route aggregates\n  cisco.ios.ios_static_route:\n    aggregate:\n    - {prefix: 172.16.32.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n    - {prefix: 172.16.33.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n\n- name: Remove static route aggregates\n  cisco.ios.ios_static_route:\n    aggregate:\n    - {prefix: 172.16.32.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n    - {prefix: 172.16.33.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n    state: absent\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "The list of configuration mode commands to send to the device",
                "returned": "always",
                "sample": [
                    "ip route 192.168.2.0 255.255.255.0 10.0.0.1"
                ],
                "type": "list"
            }
        }
    }
}
