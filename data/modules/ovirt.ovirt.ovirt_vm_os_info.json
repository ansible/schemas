{
    "ovirt.ovirt.ovirt_vm_os_info": {
        "doc": {
            "author": [
                "Martin Necas (@mnecas)",
                "Chris Brown (@snecklifter)"
            ],
            "collection": "ovirt.ovirt",
            "description": [
                "Retrieve information on all supported oVirt/RHV operating systems."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ovirt/ovirt/plugins/modules/ovirt_vm_os_info.py",
            "has_action": false,
            "module": "ovirt_vm_os_info",
            "notes": [
                "This module returns a variable C(ovirt_operating_systems), which contains a list of operating systems. You need to register the result with the I(register) keyword to use it.",
                "In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can create the following task: pip: name=ovirt-engine-sdk-python version=4.4.0"
            ],
            "options": {
                "auth": {
                    "description": [
                        "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
                    ],
                    "required": true,
                    "suboptions": {
                        "ca_file": {
                            "description": [
                                "A PEM file containing the trusted CA certificates.",
                                "The certificate presented by the server will be verified using these CA certificates.",
                                "If C(ca_file) parameter is not set, system wide CA certificate store is used.",
                                "Default value is set by C(OVIRT_CAFILE) environment variable."
                            ],
                            "type": "str"
                        },
                        "compress": {
                            "default": true,
                            "description": "Flag indicating if compression is used for connection.",
                            "type": "bool"
                        },
                        "headers": {
                            "description": [
                                "Dictionary of HTTP headers to be added to each API call."
                            ],
                            "type": "dict"
                        },
                        "hostname": {
                            "description": [
                                "A string containing the hostname of the server, usually something like `I(server.example.com)`.",
                                "Default value is set by C(OVIRT_HOSTNAME) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "insecure": {
                            "description": [
                                "A boolean flag that indicates if the server TLS certificate and host name should be checked."
                            ],
                            "type": "bool"
                        },
                        "kerberos": {
                            "description": [
                                "A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "description": [
                                "The password of the user.",
                                "Default value is set by C(OVIRT_PASSWORD) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "timeout": {
                            "description": "Number of seconds to wait for response.",
                            "type": "int"
                        },
                        "token": {
                            "description": [
                                "Token to be used instead of login with username/password.",
                                "Default value is set by C(OVIRT_TOKEN) environment variable."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "A string containing the API URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`.",
                                "Default value is set by C(OVIRT_URL) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "The name of the user, something like I(admin@internal).",
                                "Default value is set by C(OVIRT_USERNAME) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "fetch_nested": {
                    "description": [
                        "If I(yes) the module will fetch additional data from the API.",
                        "It will fetch only IDs of nested entity. It doesn't fetch multiple levels of nested attributes. Only the attributes of the current entity. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
                    ],
                    "type": "bool"
                },
                "filter_keys": {
                    "description": [
                        "List of attributes which should be in returned."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "name": {
                    "description": [
                        "Name of the operating system which should be returned."
                    ],
                    "type": "str"
                },
                "nested_attributes": {
                    "description": [
                        "Specifies list of the attributes which should be fetched from the API.",
                        "This parameter apply only when C(fetch_nested) is I(true)."
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "requirements": [
                "python >= 2.7",
                "ovirt-engine-sdk-python >= 4.4.0"
            ],
            "short_description": "Retrieve information on all supported oVirt/RHV operating systems",
            "version_added": "1.1.0",
            "version_added_collection": "ovirt.ovirt"
        },
        "examples": "\n# Look at ovirt_auth module to see how to reuse authentication:\n\n- ovirt.ovirt.ovirt_vm_os_info:\n    auth: \"{{ ovirt_auth }}\"\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.ovirt_operating_systems }}\"\n\n- ovirt.ovirt.ovirt_vm_os_info:\n    auth: \"{{ ovirt_auth }}\"\n    filter_keys: name,architecture\n  register: result\n- ansible.builtin.debug:\n    msg: \"{{ result.ovirt_operating_systems }}\"\n",
        "metadata": null,
        "return": {
            "ovirt_operating_systems": {
                "description": "List of dictionaries describing the operating systems. Operating system attributes are mapped to dictionary keys, all operating systems attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/operating_system_info.",
                "returned": "On success.",
                "type": "list"
            }
        }
    }
}
