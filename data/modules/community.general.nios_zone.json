{
    "community.general.nios_zone": {
        "doc": {
            "author": "Peter Sprygada (@privateip)",
            "collection": "community.general",
            "description": [
                "Adds and/or removes instances of DNS zone objects from Infoblox NIOS servers.  This module manages NIOS C(zone_auth) objects using the Infoblox WAPI interface over REST."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/nios_zone.py",
            "has_action": false,
            "module": "nios_zone",
            "notes": [
                "This module must be run locally, which can be achieved by specifying C(connection: local).",
                "Please read the :ref:`nios_guide` for more detailed information on how to use Infoblox with Ansible."
            ],
            "options": {
                "comment": {
                    "description": [
                        "Configures a text string comment to be associated with the instance of this object.  The provided text string will be configured on the object instance."
                    ],
                    "type": "str"
                },
                "extattrs": {
                    "description": [
                        "Allows for the configuration of Extensible Attributes on the instance of the object.  This argument accepts a set of key / value pairs for configuration."
                    ],
                    "type": "dict"
                },
                "fqdn": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Specifies the qualified domain name to either add or remove from the NIOS instance based on the configured C(state) value."
                    ],
                    "required": true,
                    "type": "str"
                },
                "grid_primary": {
                    "description": [
                        "Configures the grid primary servers for this zone."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "name": {
                            "description": [
                                "The name of the grid primary server"
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "grid_secondaries": {
                    "description": [
                        "Configures the grid secondary servers for this zone."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "name": {
                            "description": [
                                "The name of the grid secondary server"
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "ns_group": {
                    "description": [
                        "Configures the name server group for this zone. Name server group is mutually exclusive with grid primary and grid secondaries."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote instance of NIOS WAPI over REST",
                                "Value can also be specified using C(INFOBLOX_HOST) environment variable."
                            ],
                            "type": "str"
                        },
                        "http_pool_connections": {
                            "default": 10,
                            "description": [
                                "Number of pools to be used by the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "int"
                        },
                        "http_pool_maxsize": {
                            "default": 10,
                            "description": [
                                "Maximum number of connections per pool to be used by the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "int"
                        },
                        "http_request_timeout": {
                            "default": 10,
                            "description": [
                                "The amount of time before to wait before receiving a response",
                                "Value can also be specified using C(INFOBLOX_HTTP_REQUEST_TIMEOUT) environment variable."
                            ],
                            "type": "int"
                        },
                        "max_results": {
                            "default": 1000,
                            "description": [
                                "Specifies the maximum number of objects to be returned, if set to a negative number the appliance will return an error when the number of returned objects would exceed the setting.",
                                "Value can also be specified using C(INFOBLOX_MAX_RESULTS) environment variable."
                            ],
                            "type": "int"
                        },
                        "max_retries": {
                            "default": 3,
                            "description": [
                                "Configures the number of attempted retries before the connection is declared usable",
                                "Value can also be specified using C(INFOBLOX_MAX_RETRIES) environment variable."
                            ],
                            "type": "int"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote instance of NIOS.",
                                "Value can also be specified using C(INFOBLOX_PASSWORD) environment variable."
                            ],
                            "type": "str"
                        },
                        "silent_ssl_warnings": {
                            "default": true,
                            "description": [
                                "Disable C(urllib3) SSL warnings in the C(infoblox_client.Connector) object.",
                                "This is passed as-is to the underlying C(requests.adapters.HTTPAdapter) class."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote instance of NIOS.",
                                "Value can also be specified using C(INFOBLOX_USERNAME) environment variable."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "aliases": [
                                "ssl_verify"
                            ],
                            "default": false,
                            "description": [
                                "Boolean value to enable or disable verifying SSL certificates",
                                "Value can also be specified using C(INFOBLOX_SSL_VERIFY) environment variable."
                            ],
                            "type": "bool"
                        },
                        "wapi_version": {
                            "default": "2.1",
                            "description": [
                                "Specifies the version of WAPI to use",
                                "Value can also be specified using C(INFOBLOX_WAP_VERSION) environment variable.",
                                "Until ansible 2.8 the default WAPI was 1.4"
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "restart_if_needed": {
                    "description": [
                        "If set to true, causes the NIOS DNS service to restart and load the new zone configuration"
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Configures the intended state of the instance of the object on the NIOS server.  When this value is set to C(present), the object is configured on the device and when this value is set to C(absent) the value is removed (if necessary) from the device."
                    ],
                    "type": "str"
                },
                "view": {
                    "aliases": [
                        "dns_view"
                    ],
                    "default": "default",
                    "description": [
                        "Configures the DNS view name for the configured resource.  The specified DNS zone must already exist on the running NIOS instance prior to configuring zones."
                    ],
                    "type": "str"
                },
                "zone_format": {
                    "default": "FORWARD",
                    "description": [
                        "Create an authorative Reverse-Mapping Zone which is an area of network space for which one or more name servers-primary and secondary-have the responsibility to respond to address-to-name queries. It supports reverse-mapping zones for both IPv4 and IPv6 addresses."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "infoblox-client"
            ],
            "short_description": "Configure Infoblox NIOS DNS zones"
        },
        "examples": "\n- name: Configure a zone on the system using grid primary and secondaries\n  community.general.nios_zone:\n    name: ansible.com\n    grid_primary:\n      - name: gridprimary.grid.com\n    grid_secondaries:\n      - name: gridsecondary1.grid.com\n      - name: gridsecondary2.grid.com\n    restart_if_needed: true\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Configure a zone on the system using a name server group\n  community.general.nios_zone:\n    name: ansible.com\n    ns_group: examplensg\n    restart_if_needed: true\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Configure a reverse mapping zone on the system using IPV4 zone format\n  community.general.nios_zone:\n    name: 10.10.10.0/24\n    zone_format: IPV4\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Configure a reverse mapping zone on the system using IPV6 zone format\n  community.general.nios_zone:\n    name: 100::1/128\n    zone_format: IPV6\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Update the comment and ext attributes for an existing zone\n  community.general.nios_zone:\n    name: ansible.com\n    comment: this is an example comment\n    extattrs:\n      Site: west-dc\n    state: present\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Remove the dns zone\n  community.general.nios_zone:\n    name: ansible.com\n    state: absent\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n- name: Remove the reverse mapping dns zone from the system with IPV4 zone format\n  community.general.nios_zone:\n    name: 10.10.10.0/24\n    zone_format: IPV4\n    state: absent\n    provider:\n      host: \"{{ inventory_hostname_short }}\"\n      username: admin\n      password: admin\n  connection: local\n",
        "metadata": null,
        "return": null
    }
}
