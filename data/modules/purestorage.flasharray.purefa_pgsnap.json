{
    "purestorage.flasharray.purefa_pgsnap": {
        "doc": {
            "author": [
                "Pure Storage Ansible Team (@sdodsley) <pure-ansible-team@purestorage.com>"
            ],
            "collection": "purestorage.flasharray",
            "description": [
                "Create or delete protection group snapshots on Pure Storage FlashArray.",
                "Recovery of replicated snapshots on the replica target array is enabled.",
                "Support for ActiveCluster and Volume Group protection groups is supported."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/purestorage/flasharray/plugins/modules/purefa_pgsnap.py",
            "has_action": false,
            "module": "purefa_pgsnap",
            "notes": [
                "This module requires the C(purestorage) Python library",
                "You must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly"
            ],
            "options": {
                "api_token": {
                    "description": [
                        "FlashArray API token for admin privileged user."
                    ],
                    "type": "str"
                },
                "apply_retention": {
                    "default": false,
                    "description": [
                        "Apply retention schedule settings to the snapshot"
                    ],
                    "type": "bool"
                },
                "eradicate": {
                    "default": "no",
                    "description": [
                        "Define whether to eradicate the snapshot on delete or leave in trash."
                    ],
                    "type": "bool"
                },
                "fa_url": {
                    "description": [
                        "FlashArray management IPv4 address or Hostname."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the source protection group."
                    ],
                    "required": true,
                    "type": "str"
                },
                "now": {
                    "default": false,
                    "description": [
                        "Whether to initiate a snapshot of the protection group immeadiately"
                    ],
                    "type": "bool"
                },
                "offload": {
                    "description": [
                        "Name of offload target on which the snapshot exists.",
                        "This is only applicable for deletion and erasure of snapshots"
                    ],
                    "type": "str"
                },
                "overwrite": {
                    "default": "no",
                    "description": [
                        "Define whether to overwrite the target volume if it already exists."
                    ],
                    "type": "bool"
                },
                "remote": {
                    "default": false,
                    "description": [
                        "Force immeadiate snapshot to remote targets"
                    ],
                    "type": "bool"
                },
                "restore": {
                    "description": [
                        "Restore a specific volume from a protection group snapshot.",
                        "The protection group name is not required. Only provide the name of the volume to be restored."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present",
                        "copy"
                    ],
                    "default": "present",
                    "description": [
                        "Define whether the protection group snapshot should exist or not. Copy (added in 2.7) will create a full read/write clone of the snapshot."
                    ],
                    "type": "str"
                },
                "suffix": {
                    "description": [
                        "Suffix of snapshot name.",
                        "Special case. If I(latest) the module will select the latest snapshot created in the group"
                    ],
                    "type": "str"
                },
                "target": {
                    "description": [
                        "Volume to restore a specified volume to.",
                        "If not supplied this will default to the volume defined in I(restore)"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7",
                "purestorage >= 1.19",
                "py-pure-client >= 1.6.0",
                "netaddr",
                "requests"
            ],
            "short_description": "Manage protection group snapshots on Pure Storage FlashArrays",
            "version_added": "1.0.0",
            "version_added_collection": "purestorage.flasharray"
        },
        "examples": "\n- name: Create protection group snapshot foo.ansible\n  purefa_pgsnap:\n    name: foo\n    suffix: ansible\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Delete and eradicate protection group snapshot named foo.snap\n  purefa_pgsnap:\n    name: foo\n    suffix: snap\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Restore volume data from local protection group snapshot named foo.snap to volume data2\n  purefa_pgsnap:\n    name: foo\n    suffix: snap\n    restore: data\n    target: data2\n    overwrite: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Restore remote protection group snapshot arrayA:pgname.snap.data to local copy\n  purefa_pgsnap:\n    name: arrayA:pgname\n    suffix: snap\n    restore: data\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Restore AC pod  protection group snapshot pod1::pgname.snap.data to pdo1::data2\n  purefa_pgsnap:\n    name: pod1::pgname\n    suffix: snap\n    restore: data\n    target: pod1::data2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: copy\n\n- name: Create snapshot of existing pgroup foo with suffix and force immeadiate copy to remote targets\n  purefa_pgsnap:\n    name: pgname\n    suffix: force\n    now: True\n    apply_retention: True\n    remote: True\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete and eradicate snapshot named foo.snap on offload target bar from arrayA\n  purefa_pgsnap:\n    name: \"arrayA:foo\"\n    suffix: snap\n    offload: bar\n    eradicate: true\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
