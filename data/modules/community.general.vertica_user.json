{
    "community.general.vertica_user": {
        "doc": {
            "author": "Dariusz Owczarek (@dareko)",
            "collection": "community.general",
            "description": [
                "Adds or removes Vertica database user and, optionally, assigns roles.",
                "A user will not be removed until all the dependencies have been dropped.",
                "In such a situation, if the module tries to remove the user it will fail and only remove roles granted to the user."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/vertica_user.py",
            "has_action": false,
            "module": "vertica_user",
            "notes": [
                "The default authentication assumes that you are either logging in as or sudo'ing to the C(dbadmin) account on the host.",
                "This module uses C(pyodbc), a Python ODBC database adapter. You must ensure that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.",
                "Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so) to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini) and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16) to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini)."
            ],
            "options": {
                "cluster": {
                    "default": "localhost",
                    "description": [
                        "Name of the Vertica cluster."
                    ],
                    "type": "str"
                },
                "db": {
                    "description": [
                        "Name of the Vertica database."
                    ],
                    "type": "str"
                },
                "expired": {
                    "description": [
                        "Sets the user's password expiration."
                    ],
                    "type": "bool"
                },
                "ldap": {
                    "description": [
                        "Set to true if users are authenticated via LDAP.",
                        "The user will be created with password expired and set to I($ldap$)."
                    ],
                    "type": "bool"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate with."
                    ],
                    "type": "str"
                },
                "login_user": {
                    "default": "dbadmin",
                    "description": [
                        "The username used to authenticate with."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The user's password encrypted by the MD5 algorithm.",
                        "The password must be generated with the format C(\"md5\" + md5[password + username]), resulting in a total of 35 characters. An easy way to do this is by querying the Vertica database with select 'md5'||md5('<user_password><user_name>')."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 5433,
                    "description": [
                        "Vertica cluster port to connect to."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Sets the user's profile."
                    ],
                    "type": "str"
                },
                "resource_pool": {
                    "description": [
                        "Sets the user's resource pool."
                    ],
                    "type": "str"
                },
                "roles": {
                    "aliases": [
                        "role"
                    ],
                    "description": [
                        "Comma separated list of roles to assign to the user."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "locked"
                    ],
                    "default": "present",
                    "description": [
                        "Whether to create C(present), drop C(absent) or lock C(locked) a user."
                    ],
                    "type": "str"
                },
                "user": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "Name of the user to add or remove."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "unixODBC",
                "pyodbc"
            ],
            "short_description": "Adds or removes Vertica database users and assigns roles."
        },
        "examples": "\n- name: Creating a new vertica user with password\n  community.general.vertica_user: name=user_name password=md5<encrypted_password> db=db_name state=present\n\n- name: Creating a new vertica user authenticated via ldap with roles assigned\n  community.general.vertica_user:\n    name=user_name\n    ldap=true\n    db=db_name\n    roles=schema_name_ro\n    state=present\n",
        "metadata": null,
        "return": null
    }
}
