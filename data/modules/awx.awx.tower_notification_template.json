{
    "awx.awx.tower_notification_template": {
        "doc": {
            "author": "Samuel Carpentier (@samcarpentier)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower notifications. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_notification_template.py",
            "has_action": false,
            "module": "tower_notification_template",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "account_sid": {
                    "description": [
                        "The Twillio account SID.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "account_token": {
                    "description": [
                        "The Twillio account token.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "channels": {
                    "description": [
                        "The destination Slack channels.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "client_name": {
                    "description": [
                        "The PagerDuty client identifier.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "color": {
                    "choices": [
                        "yellow",
                        "green",
                        "red",
                        "purple",
                        "gray",
                        "random"
                    ],
                    "description": [
                        "The notification color.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "The description of the notification."
                    ],
                    "type": "str"
                },
                "from_number": {
                    "description": [
                        "The source phone number.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "headers": {
                    "description": [
                        "The HTTP headers as JSON string.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "dict"
                },
                "host": {
                    "description": [
                        "The mail server host.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "message_from": {
                    "description": [
                        "The label to be shown with the notification.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "messages": {
                    "description": [
                        "Optional custom messages for notification template."
                    ],
                    "type": "dict"
                },
                "name": {
                    "description": [
                        "The name of the notification."
                    ],
                    "required": true,
                    "type": "str"
                },
                "new_name": {
                    "description": [
                        "Setting this option will change the existing name (looked up via the name field."
                    ],
                    "type": "str"
                },
                "nickname": {
                    "description": [
                        "The IRC nickname.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "notification_configuration": {
                    "description": [
                        "The notification configuration file. Note providing this field would disable all notification-configuration-related fields."
                    ],
                    "type": "dict"
                },
                "notification_type": {
                    "choices": [
                        "email",
                        "grafana",
                        "irc",
                        "mattermost",
                        "pagerduty",
                        "rocketchat",
                        "slack",
                        "twilio",
                        "webhook"
                    ],
                    "description": [
                        "The type of notification to be sent."
                    ],
                    "type": "str"
                },
                "notify": {
                    "description": [
                        "The notify channel trigger.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "bool"
                },
                "organization": {
                    "description": [
                        "The organization the notification belongs to."
                    ],
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The mail server password.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "port": {
                    "description": [
                        "The mail server port.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "int"
                },
                "recipients": {
                    "description": [
                        "The recipients email addresses.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "sender": {
                    "description": [
                        "The sender email address.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "server": {
                    "description": [
                        "The IRC server address.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "service_key": {
                    "description": [
                        "The PagerDuty service/integration API key.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the resource."
                    ],
                    "type": "str"
                },
                "subdomain": {
                    "description": [
                        "The PagerDuty subdomain.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "targets": {
                    "description": [
                        "The destination channels or users.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "to_numbers": {
                    "description": [
                        "The destination phone numbers.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "token": {
                    "description": [
                        "The access token.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "The target URL.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "use_ssl": {
                    "description": [
                        "The SSL trigger.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "bool"
                },
                "use_tls": {
                    "description": [
                        "The TLS trigger.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "bool"
                },
                "username": {
                    "description": [
                        "The mail server username.",
                        "This parameter has been deprecated, please use 'notification_configuration' instead."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower notification."
        },
        "examples": "\n- name: Add Slack notification with custom messages\n  tower_notification_template:\n    name: slack notification\n    organization: Default\n    notification_type: slack\n    notification_configuration:\n      channels:\n        - general\n      token: cefda9e2be1f21d11cdd9452f5b7f97fda977f42\n    messages:\n       started:\n         message: \"{{ '{{ job_friendly_name }}{{ job.id }} started' }}\"\n       success:\n         message: \"{{ '{{ job_friendly_name }} completed in {{ job.elapsed }} seconds' }}\"\n       error:\n         message: \"{{ '{{ job_friendly_name }} FAILED! Please look at {{ job.url }}' }}\"\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Add webhook notification\n  tower_notification_template:\n    name: webhook notification\n    notification_type: webhook\n    notification_configuration:\n      url: http://www.example.com/hook\n      headers:\n        X-Custom-Header: value123\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Add email notification\n  tower_notification_template:\n    name: email notification\n    notification_type: email\n    notification_configuration:\n      username: user\n      password: s3cr3t\n      sender: tower@example.com\n      recipients:\n        - user1@example.com\n      host: smtp.example.com\n      port: 25\n      use_tls: no\n      use_ssl: no\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Add twilio notification\n  tower_notification_template:\n    name: twilio notification\n    notification_type: twilio\n    notification_configuration:\n      account_token: a_token\n      account_sid: a_sid\n      from_number: '+15551112222'\n      to_numbers:\n        - '+15553334444'\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Add PagerDuty notification\n  tower_notification_template:\n    name: pagerduty notification\n    notification_type: pagerduty\n    notification_configuration:\n      token: a_token\n      subdomain: sub\n      client_name: client\n      service_key: a_key\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Add IRC notification\n  tower_notification_template:\n    name: irc notification\n    notification_type: irc\n    notification_configuration:\n      nickname: tower\n      password: s3cr3t\n      targets:\n        - user1\n      port: 8080\n      server: irc.example.com\n      use_ssl: no\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Delete notification\n  tower_notification_template:\n    name: old notification\n    state: absent\n    tower_config_file: \"~/tower_cli.cfg\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
