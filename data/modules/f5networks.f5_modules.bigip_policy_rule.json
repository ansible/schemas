{
    "f5networks.f5_modules.bigip_policy_rule": {
        "doc": {
            "author": [
                "Tim Rupp (@caphrim007)",
                "Wojciech Wypior (@wojtek0806)"
            ],
            "collection": "f5networks.f5_modules",
            "description": [
                "This module will manage LTM policy rules on a BIG-IP."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/f5networks/f5_modules/plugins/modules/bigip_policy_rule.py",
            "has_action": false,
            "module": "bigip_policy_rule",
            "notes": [
                "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).",
                "Requires BIG-IP software version >= 12.",
                "The F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration."
            ],
            "options": {
                "actions": {
                    "description": [
                        "The actions you want the policy rule to perform.",
                        "The available attributes vary by the action, however, each action requires you specify a C(type).",
                        "These conditions can be specified in any order. Despite the fact they are in a list, the order in the list does not matter to the BIG-IP."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "asm_policy": {
                            "description": [
                                "ASM policy to enable.",
                                "This parameter is only valid with the C(enable) type."
                            ],
                            "type": "str"
                        },
                        "cookie_expiry": {
                            "description": [
                                "Optional argument, specifying the time for which the session will be persisted.",
                                "This parameter is only valid with the C(persist) type."
                            ],
                            "type": "int",
                            "version_added": "1.1.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "cookie_insert": {
                            "description": [
                                "Cookie name on which you want to persist.",
                                "This parameter is only valid with the C(persist) type."
                            ],
                            "type": "str",
                            "version_added": "1.1.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "disable_target": {
                            "choices": [
                                "server_ssl"
                            ],
                            "description": [
                                "Target which you want to disable.",
                                "This parameter is only valid with the C(disable) type."
                            ],
                            "type": "str",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "event": {
                            "description": [
                                "Events on which actions, such as reset, forward can be triggered.",
                                "With the C(set_variable) action, it is used for specifying an action event, such as request or response.",
                                "Valid event choices for C(forward) action type are: client_accepted, proxy_request request, ssl_client_hello and ssl_client_server_hello_send.",
                                "Valid event choices for C(reset) acton type are: client_accepted, proxy_connect proxy_request, proxy_response, request, response, server_connected, ssl_client_hello, ssl_client_server_hello_send, ssl_server_handshake, ssl_server_hello, websocket_request, websocket_response.",
                                "Valid event choices for C(disable) acton type are: client_accepted, proxy_connect proxy_request, proxy_response, request, server_connected."
                            ],
                            "type": "str"
                        },
                        "expression": {
                            "description": [
                                "A tcl expression used with the C(set_variable) action."
                            ],
                            "type": "str"
                        },
                        "http_connect": {
                            "description": [
                                "HTTP Connect header that you want to replace.",
                                "This parameter is only valid with the C(replace) type."
                            ],
                            "suboptions": {
                                "event": {
                                    "choices": [
                                        "client_accepted",
                                        "proxy_connect",
                                        "proxy_request",
                                        "proxy_response",
                                        "request",
                                        "server_connected",
                                        "ssl_client_hello"
                                    ],
                                    "description": [
                                        "Type of event when the C(http_connect) header is replaced."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "port": {
                                    "description": [
                                        "The port number.",
                                        "If port number is not provided the value is set to 0 by default.",
                                        "To avoid overriding desired port values be explicit when defining rules."
                                    ],
                                    "type": "int"
                                },
                                "value": {
                                    "description": [
                                        "The value of C(http_connect)."
                                    ],
                                    "required": true,
                                    "type": "str"
                                }
                            },
                            "type": "dict",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "http_cookie": {
                            "description": [
                                "HTTP Cookie header that you want to remove or insert.",
                                "This parameter is only valid with the C(remove) and C(insert) type."
                            ],
                            "suboptions": {
                                "event": {
                                    "choices": [
                                        "request",
                                        "proxy_connect",
                                        "proxy_request"
                                    ],
                                    "description": [
                                        "Type of event when the C(http_cookie) is removed or inserted."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "name": {
                                    "description": [
                                        "The name of C(http_cookie)."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "value": {
                                    "description": [
                                        "The value of C(http_cookie).",
                                        "Mandatory parameter when configured with C(insert) type action."
                                    ],
                                    "type": "str"
                                }
                            },
                            "type": "dict",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "http_header": {
                            "description": [
                                "HTTP Header that you want to remove or insert.",
                                "This parameter is only valid with the C(remove), C(insert) and C(replace) type."
                            ],
                            "suboptions": {
                                "event": {
                                    "choices": [
                                        "request",
                                        "response",
                                        "proxy_connect",
                                        "proxy_request",
                                        "proxy_response"
                                    ],
                                    "description": [
                                        "Type of event when the C(http_header) is removed, replaced or inserted.",
                                        "The C(request) and C(response) events are only choices with C(remove) and C(insert) type.",
                                        "All of events are valid with C(replace) type action."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "name": {
                                    "description": [
                                        "The name of C(http_header)."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "value": {
                                    "description": [
                                        "The value of C(http_header).",
                                        "Mandatory parameter when configured with C(insert) or C(replace) type."
                                    ],
                                    "type": "str"
                                }
                            },
                            "type": "dict",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "http_host": {
                            "description": [
                                "HTTP Host header that you want to replace.",
                                "This parameter is only valid with the C(replace) type."
                            ],
                            "suboptions": {
                                "event": {
                                    "choices": [
                                        "request",
                                        "proxy_connect",
                                        "proxy_request"
                                    ],
                                    "description": [
                                        "Type of event when the C(http_host) is replaced."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "value": {
                                    "description": [
                                        "The value of C(http_host)."
                                    ],
                                    "required": true,
                                    "type": "str"
                                }
                            },
                            "type": "dict",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "http_referer": {
                            "description": [
                                "HTTP Referer header that you want to remove, replace or insert.",
                                "This parameter is only valid with the C(remove), C(insert) and C(replace) type."
                            ],
                            "suboptions": {
                                "event": {
                                    "choices": [
                                        "request",
                                        "proxy_connect",
                                        "proxy_request"
                                    ],
                                    "description": [
                                        "Type of event when the c(http_referer) is removed, replaced or inserted."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "value": {
                                    "description": [
                                        "The value of C(http_referer).",
                                        "Mandatory parameter when configured with C(insert) type action.",
                                        "Parameter is ignored for C(remove) type.",
                                        "Parameter is optional for C(replace) type."
                                    ],
                                    "type": "str"
                                }
                            },
                            "type": "dict",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "http_set_cookie": {
                            "description": [
                                "HTTP Set-Cookie header that you want to remove or insert.",
                                "This parameter is only valid with the C(remove) or c(insert) type."
                            ],
                            "suboptions": {
                                "name": {
                                    "description": [
                                        "The name of C(http_set_cookie)."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "value": {
                                    "description": [
                                        "The value of C(http_set_cookie).",
                                        "Mandatory parameter when configured with C(insert) type action."
                                    ],
                                    "type": "str"
                                }
                            },
                            "type": "dict",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "http_uri": {
                            "description": [
                                "Replaces HTTP URI, path, or string.",
                                "This parameter is only valid with the C(replace) type."
                            ],
                            "suboptions": {
                                "event": {
                                    "choices": [
                                        "request",
                                        "proxy_connect",
                                        "proxy_request"
                                    ],
                                    "description": [
                                        "Type of event when the C(http_uri) is replaced."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "type": {
                                    "choices": [
                                        "path",
                                        "query_string",
                                        "full_string"
                                    ],
                                    "description": [
                                        "Specifies the part of the C(http_uri) to be replaced."
                                    ],
                                    "required": true,
                                    "type": "str"
                                },
                                "value": {
                                    "description": [
                                        "The value of C(http_uri)."
                                    ],
                                    "required": true,
                                    "type": "str"
                                }
                            },
                            "type": "dict",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "location": {
                            "description": [
                                "The new URL for which a redirect response will be sent.",
                                "A Tcl command substitution can be used for this field."
                            ],
                            "type": "str"
                        },
                        "node": {
                            "description": [
                                "Node to which you want to forward traffic.",
                                "This parameter is only valid with the C(forward) type."
                            ],
                            "type": "str",
                            "version_added": "1.2.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "pool": {
                            "description": [
                                "Pool to which you want to forward traffic.",
                                "This parameter is only valid with the C(forward) type."
                            ],
                            "type": "str"
                        },
                        "type": {
                            "choices": [
                                "forward",
                                "enable",
                                "ignore",
                                "redirect",
                                "reset",
                                "persist",
                                "set_variable",
                                "remove",
                                "insert",
                                "replace",
                                "disable"
                            ],
                            "description": [
                                "The action type. This value controls which of the following options are required.",
                                "When C(type) is C(forward), the system associates a given C(pool), or C(virtual), or C(node) with this rule.",
                                "When C(type) is C(enable), the system associates a given C(asm_policy) with this rule.",
                                "When C(type) is C(ignore), the system removes all existing actions from this rule.",
                                "When C(type) is C(redirect), the system redirects an HTTP request to a different URL.",
                                "When C(type) is C(reset), the system resets the connection upon C(event).",
                                "When C(type) is C(persist), the system associates C(cookie_insert) and C(cookie_expiry) with this rule.",
                                "When C(type) is C(set_variable), the system sets a variable based on the evaluated Tcl C(expression) based on C(event).",
                                "When C(type) is C(remove), the system removes C(http_set_cookie), C(http_referer), C(http_header) or C(http_cookie) with this rule.",
                                "When C(type) is C(insert), the system inserts C(http_set_cookie), C(http_referer), C(http_header) or C(http_cookie) with this rule.",
                                "When C(type) is C(replace), the system replaces C(http_connect), C(http_referer), C(http_header), C(http_uri) or C(http_host) with this rule.",
                                "When C(type) is C(disable), the system disables C(disable_target) with this rule."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "variable_name": {
                            "description": [
                                "Variable name used with the C(set_variable) action."
                            ],
                            "type": "str"
                        },
                        "virtual": {
                            "description": [
                                "Virtual Server to which you want to forward traffic.",
                                "This parameter is only valid with the C(forward) type."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "conditions": {
                    "description": [
                        "A list of attributes that describe the condition.",
                        "See suboptions for details on how to construct each list entry.",
                        "The ordering of this list is important, the module will ensure the order is kept when modifying the task.",
                        "The suboption options listed below are not required for all condition types, read the description for more details.",
                        "These conditions can be specified in any order. Despite the fact they are in a list, the order in the list does not matter to the BIG-IP."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "address_matches_with_any": {
                            "description": [
                                "A list of IP Subnet address strings the tcp should match.",
                                "This parameter is only valid with the C(tcp) type."
                            ],
                            "elements": "str",
                            "type": "list",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "address_matches_with_datagroup": {
                            "description": [
                                "A list of datagroup strings the tcp should match.",
                                "This parameter is only valid with the C(tcp) type."
                            ],
                            "elements": "str",
                            "type": "list",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "event": {
                            "description": [
                                "Events on which conditions such as SSL Extension can be triggered.",
                                "Valid choices for C(http_header) condition types are: C(proxy_connect), C(proxy_request), C(proxy_response), C(request) and C(response).",
                                "Valid choices for C(tcp) condition types are: C(request), C(client_accepted), C(proxy_connect), C(proxy_request), C(proxy_response), C(ssl_client_hello), and C(ssl_client_server_hello_send).",
                                "Valid choices for C(ssl_extension) are: C(ssl_client_hello), and C(ssl_client_server_hello_send)."
                            ],
                            "type": "str"
                        },
                        "header_is_any": {
                            "description": [
                                "A list of strings of characters the HTTP Header value should match.",
                                "This parameter is only valid with the C(http_header) type."
                            ],
                            "elements": "str",
                            "type": "list",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "header_name": {
                            "description": [
                                "A name of C(http_header).",
                                "This parameter is only valid with the C(http_header) type."
                            ],
                            "type": "str",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "host_begins_with_any": {
                            "description": [
                                "A list of strings of characters the HTTP Host should start with.",
                                "This parameter is only valid with the C(http_host) type."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "host_ends_with_any": {
                            "description": [
                                "A list of strings of characters the HTTP Host should end with.",
                                "This parameter is only valid with the C(http_host) type."
                            ],
                            "elements": "str",
                            "type": "list",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "host_is_any": {
                            "description": [
                                "A list of strings of characters the HTTP Host should match.",
                                "This parameter is only valid with the C(http_host) type."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "host_is_not_any": {
                            "description": [
                                "A list of strings of characters the HTTP Host should not match.",
                                "This parameter is only valid with the C(http_host) type."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "path_begins_with_any": {
                            "description": [
                                "A list of strings of characters the HTTP URI should start with.",
                                "This parameter is only valid with the C(http_uri) type."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "path_contains": {
                            "description": [
                                "A list of strings of characters the HTTP URI should contain.",
                                "This parameter is only valid with the C(http_uri) type."
                            ],
                            "elements": "str",
                            "type": "list",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "path_is_any": {
                            "description": [
                                "A list of strings of characters the HTTP URI should match.",
                                "This parameter is only valid with the C(http_uri) type."
                            ],
                            "elements": "str",
                            "type": "list",
                            "version_added": "1.8.0",
                            "version_added_collection": "f5networks.f5_modules"
                        },
                        "server_name_is_any": {
                            "description": [
                                "A list of strings of characters the SSL Extension should match.",
                                "This parameter is only valid with the C(ssl_extension) type."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "type": {
                            "choices": [
                                "http_uri",
                                "all_traffic",
                                "http_host",
                                "http_header",
                                "ssl_extension",
                                "tcp"
                            ],
                            "description": [
                                "The condition type. This value controls which of the following options are required.",
                                "When C(type) is C(http_uri), the valid choices are: C(path_begins_with_any), C(path_contains) or C(path_is_any).",
                                "When C(type) is C(http_host), the valid choices are: C(host_is_any), C(host_is_not_any), C(host_begins_with_any) or C(host_ends_with_any).",
                                "When C(type) is C(http_host), the C(header_name) parameter is mandatory and the valid choice is: C(header_is_any).",
                                "When C(type) is C(all_traffic), the system removes all existing conditions from this rule."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "description": {
                    "description": [
                        "Description of the policy rule."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the rule."
                    ],
                    "required": true,
                    "type": "str"
                },
                "partition": {
                    "default": "Common",
                    "description": [
                        "Device partition to manage resources on."
                    ],
                    "type": "str"
                },
                "policy": {
                    "description": [
                        "The name of the policy you want to associate this rule with."
                    ],
                    "required": true,
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_provider": {
                            "description": [
                                "Configures the auth provider for to obtain authentication tokens from the remote device.",
                                "This option is really used when working with BIG-IQ devices."
                            ],
                            "type": "str"
                        },
                        "no_f5_teem": {
                            "default": false,
                            "description": [
                                "If C(yes), TEEM telemetry data is not sent to F5.",
                                "You may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).",
                                "Previously used variable C(F5_TEEM) is deprecated as its name was confusing."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "aliases": [
                                "pass",
                                "pwd"
                            ],
                            "description": [
                                "The password for the user account used to connect to the BIG-IP.",
                                "You may omit this option by setting the environment variable C(F5_PASSWORD)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server": {
                            "description": [
                                "The BIG-IP host.",
                                "You may omit this option by setting the environment variable C(F5_SERVER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "server_port": {
                            "default": 443,
                            "description": [
                                "The BIG-IP server port.",
                                "You may omit this option by setting the environment variable C(F5_SERVER_PORT)."
                            ],
                            "type": "int"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "rest"
                            ],
                            "default": "rest",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device."
                            ],
                            "type": "str"
                        },
                        "user": {
                            "description": [
                                "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.",
                                "You may omit this option by setting the environment variable C(F5_USER)."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": true,
                            "description": [
                                "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.",
                                "You may omit this option by setting the environment variable C(F5_VALIDATE_CERTS)."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict",
                    "version_added": "1.0.0",
                    "version_added_collection": "f5networks.f5_modules"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "When C(present), ensures the key is uploaded to the device. When C(absent), ensures the key is removed from the device. If the key is currently in use, the module will not be able to remove the key."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "BIG-IP >= v12.1.0"
            ],
            "short_description": "Manage LTM policy rules on a BIG-IP",
            "version_added": "1.0.0",
            "version_added_collection": "f5networks.f5_modules"
        },
        "examples": "\n- name: Create policies\n  bigip_policy:\n    name: Policy-Foo\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add a rule to the new policy\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: rule3\n    conditions:\n      - type: http_uri\n        path_begins_with_any:\n          - /ABC\n    actions:\n      - type: forward\n        pool: pool-svrs\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add multiple rules to the new policy\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: \"{{ item.name }}\"\n    conditions: \"{{ item.conditions }}\"\n    actions: \"{{ item.actions }}\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n  loop:\n    - name: rule1\n      actions:\n        - type: forward\n          pool: pool-svrs\n      conditions:\n        - type: http_uri\n          path_begins_with_any:\n            - /euro\n    - name: rule2\n      actions:\n        - type: forward\n          pool: pool-svrs\n      conditions:\n        - type: http_uri\n          path_begins_with_any:\n            - /HomePage/\n    - name: rule3\n      actions:\n        - type: set_variable\n          variable_name: user-agent\n          expression: tcl:[HTTP::header User-Agent]\n          event: request\n      conditions:\n        - type: http_uri\n          path_begins_with_any:\n            - /HomePage/\n\n- name: Remove all rules and conditions from the rule\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: rule1\n    conditions:\n      - type: all_traffic\n    actions:\n      - type: ignore\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "actions": {
                "contains": {
                    "pool": {
                        "description": "Pool for forwarding to.",
                        "returned": "changed",
                        "sample": "foo-pool",
                        "type": "str"
                    },
                    "type": {
                        "description": "The action type.",
                        "returned": "changed",
                        "sample": "forward",
                        "type": "str"
                    }
                },
                "description": "The new list of actions applied to the rule.",
                "returned": "changed",
                "sample": "hash/dictionary of values",
                "type": "complex"
            },
            "conditions": {
                "contains": {
                    "path_begins_with_any": {
                        "description": "List of strings that the URI begins with.",
                        "returned": "changed",
                        "sample": [
                            "foo",
                            "bar"
                        ],
                        "type": "list"
                    },
                    "type": {
                        "description": "The condition type.",
                        "returned": "changed",
                        "sample": "http_uri",
                        "type": "str"
                    }
                },
                "description": "The new list of conditions applied to the rule.",
                "returned": "changed",
                "sample": "hash/dictionary of values",
                "type": "complex"
            },
            "description": {
                "description": "The new description of the rule.",
                "returned": "changed",
                "sample": "My rule",
                "type": "str"
            }
        }
    }
}
