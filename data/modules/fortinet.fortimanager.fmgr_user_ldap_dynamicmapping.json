{
    "fortinet.fortimanager.fmgr_user_ldap_dynamicmapping": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_user_ldap_dynamicmapping.py",
            "has_action": false,
            "module": "fmgr_user_ldap_dynamicmapping",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "ldap": {
                    "description": "the parameter (ldap) in requested url",
                    "required": true,
                    "type": "str"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "user_ldap_dynamicmapping": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "_scope": {
                            "description": "no description",
                            "suboptions": {
                                "name": {
                                    "description": "no description",
                                    "type": "str"
                                },
                                "vdom": {
                                    "description": "no description",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "account-key-filter": {
                            "description": "no description",
                            "type": "str"
                        },
                        "account-key-name": {
                            "description": "no description",
                            "type": "str"
                        },
                        "account-key-processing": {
                            "choices": [
                                "same",
                                "strip"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "ca-cert": {
                            "description": "no description",
                            "type": "str"
                        },
                        "cnid": {
                            "description": "no description",
                            "type": "str"
                        },
                        "dn": {
                            "description": "no description",
                            "type": "str"
                        },
                        "filter": {
                            "description": "no description",
                            "type": "str"
                        },
                        "group": {
                            "description": "no description",
                            "type": "str"
                        },
                        "group-filter": {
                            "description": "no description",
                            "type": "str"
                        },
                        "group-member-check": {
                            "choices": [
                                "user-attr",
                                "group-object",
                                "posix-group-object"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "group-object-filter": {
                            "description": "no description",
                            "type": "str"
                        },
                        "group-object-search-base": {
                            "description": "no description",
                            "type": "str"
                        },
                        "group-search-base": {
                            "description": "no description",
                            "type": "str"
                        },
                        "member-attr": {
                            "description": "no description",
                            "type": "str"
                        },
                        "obtain-user-info": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "password": {
                            "description": "no description",
                            "type": "str"
                        },
                        "password-expiry-warning": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "password-renewal": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "port": {
                            "description": "no description",
                            "type": "int"
                        },
                        "retrieve-protection-profile": {
                            "description": "no description",
                            "type": "str"
                        },
                        "search-type": {
                            "choices": [
                                "nested",
                                "recursive"
                            ],
                            "description": "no description",
                            "type": "list"
                        },
                        "secondary-server": {
                            "description": "no description",
                            "type": "str"
                        },
                        "secure": {
                            "choices": [
                                "disable",
                                "starttls",
                                "ldaps"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "server": {
                            "description": "no description",
                            "type": "str"
                        },
                        "server-identity-check": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "source-ip": {
                            "description": "no description",
                            "type": "str"
                        },
                        "ssl-min-proto-version": {
                            "choices": [
                                "default",
                                "TLSv1",
                                "TLSv1-1",
                                "TLSv1-2",
                                "SSLv3"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "tertiary-server": {
                            "description": "no description",
                            "type": "str"
                        },
                        "type": {
                            "choices": [
                                "simple",
                                "anonymous",
                                "regular"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "user-info-exchange-server": {
                            "description": "no description",
                            "type": "str"
                        },
                        "username": {
                            "description": "no description",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "no description",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: no description\n      fmgr_user_ldap_dynamicmapping:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         ldap: <your own value>\n         state: <value in [present, absent]>\n         user_ldap_dynamicmapping:\n            _scope:\n              -\n                  name: <value of string>\n                  vdom: <value of string>\n            account-key-filter: <value of string>\n            account-key-name: <value of string>\n            account-key-processing: <value in [same, strip]>\n            ca-cert: <value of string>\n            cnid: <value of string>\n            dn: <value of string>\n            filter: <value of string>\n            group: <value of string>\n            group-filter: <value of string>\n            group-member-check: <value in [user-attr, group-object, posix-group-object]>\n            group-object-filter: <value of string>\n            group-object-search-base: <value of string>\n            group-search-base: <value of string>\n            member-attr: <value of string>\n            obtain-user-info: <value in [disable, enable]>\n            password: <value of string>\n            password-expiry-warning: <value in [disable, enable]>\n            password-renewal: <value in [disable, enable]>\n            port: <value of integer>\n            retrieve-protection-profile: <value of string>\n            search-type:\n              - nested\n              - recursive\n            secondary-server: <value of string>\n            secure: <value in [disable, starttls, ldaps]>\n            server: <value of string>\n            server-identity-check: <value in [disable, enable]>\n            source-ip: <value of string>\n            ssl-min-proto-version: <value in [default, TLSv1, TLSv1-1, ...]>\n            tertiary-server: <value of string>\n            type: <value in [simple, anonymous, regular]>\n            user-info-exchange-server: <value of string>\n            username: <value of string>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
