{
    "cisco.nxos.nxos_vlan": {
        "doc": {
            "author": "Jason Edelman (@jedelman8)",
            "collection": "cisco.nxos",
            "deprecated": {
                "alternative": "nxos_vlans",
                "removed_at_date": "2022-06-01",
                "removed_from_collection": "cisco.nxos",
                "why": "Updated modules released with more functionality"
            },
            "description": [
                "Manages VLAN configurations on NX-OS switches."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/nxos/plugins/modules/nxos_vlan.py",
            "has_action": true,
            "module": "nxos_vlan",
            "notes": [
                "For information on using CLI and NX-API see the :ref:`NXOS Platform Options guide <nxos_platform_options>`",
                "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`",
                "For more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_."
            ],
            "options": {
                "admin_state": {
                    "choices": [
                        "up",
                        "down"
                    ],
                    "default": "up",
                    "description": [
                        "Manage the VLAN administrative state of the VLAN equivalent to shut/no shut in VLAN config mode."
                    ],
                    "type": "str"
                },
                "aggregate": {
                    "description": "List of VLANs definitions.",
                    "elements": "dict",
                    "suboptions": {
                        "admin_state": {
                            "choices": [
                                "up",
                                "down"
                            ],
                            "description": [
                                "Manage the VLAN administrative state of the VLAN equivalent to shut/no shut in VLAN config mode."
                            ],
                            "type": "str"
                        },
                        "associated_interfaces": {
                            "description": [
                                "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "delay": {
                            "description": [
                                "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state arguments."
                            ],
                            "type": "int"
                        },
                        "interfaces": {
                            "description": [
                                "List of interfaces that should be associated to the VLAN or keyword 'default'."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "mapped_vni": {
                            "description": [
                                "The Virtual Network Identifier (VNI) ID that is mapped to the VLAN. Valid values are integer and keyword 'default'. Range 4096-16773119."
                            ],
                            "type": "str"
                        },
                        "mode": {
                            "choices": [
                                "ce",
                                "fabricpath"
                            ],
                            "description": [
                                "Set VLAN mode to classical ethernet or fabricpath. This is a valid option for Nexus 5000 and 7000 series."
                            ],
                            "type": "str"
                        },
                        "name": {
                            "description": [
                                "Name of VLAN or keyword 'default'."
                            ],
                            "type": "str"
                        },
                        "state": {
                            "choices": [
                                "present",
                                "absent"
                            ],
                            "description": [
                                "Manage the state of the resource."
                            ],
                            "type": "str"
                        },
                        "vlan_id": {
                            "description": [
                                "Single VLAN ID."
                            ],
                            "required": true,
                            "type": "int"
                        },
                        "vlan_range": {
                            "description": [
                                "Range of VLANs such as 2-10 or 2,5,10-15, etc."
                            ],
                            "type": "str"
                        },
                        "vlan_state": {
                            "choices": [
                                "active",
                                "suspend"
                            ],
                            "description": [
                                "Manage the vlan operational state of the VLAN"
                            ],
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "associated_interfaces": {
                    "description": [
                        "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "delay": {
                    "default": 10,
                    "description": [
                        "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state arguments."
                    ],
                    "type": "int"
                },
                "interfaces": {
                    "description": [
                        "List of interfaces that should be associated to the VLAN or keyword 'default'."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "mapped_vni": {
                    "description": [
                        "The Virtual Network Identifier (VNI) ID that is mapped to the VLAN. Valid values are integer and keyword 'default'. Range 4096-16773119."
                    ],
                    "type": "str"
                },
                "mode": {
                    "choices": [
                        "ce",
                        "fabricpath"
                    ],
                    "default": "ce",
                    "description": [
                        "Set VLAN mode to classical ethernet or fabricpath. This is a valid option for Nexus 5000 and 7000 series."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of VLAN or keyword 'default'."
                    ],
                    "type": "str"
                },
                "provider": {
                    "description": [
                        "B(Deprecated)",
                        "Starting with Ansible 2.5 we recommend using C(connection: network_cli).",
                        "Starting with Ansible 2.6 we recommend using C(connection: httpapi) for NX-API.",
                        "This option will be removed in a release after 2022-06-01.",
                        "For more information please see the L(NXOS Platform Options guide, ../network/user_guide/platform_nxos.html).",
                        "HORIZONTALLINE",
                        "A dict object containing connection details."
                    ],
                    "suboptions": {
                        "auth_pass": {
                            "description": [
                                "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead."
                            ],
                            "type": "str"
                        },
                        "authorize": {
                            "default": false,
                            "description": [
                                "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead."
                            ],
                            "type": "bool"
                        },
                        "host": {
                            "description": [
                                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                            ],
                            "type": "str"
                        },
                        "port": {
                            "description": [
                                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                            ],
                            "type": "int"
                        },
                        "ssh_keyfile": {
                            "description": [
                                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                            ],
                            "type": "str"
                        },
                        "timeout": {
                            "description": [
                                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
                            ],
                            "type": "int"
                        },
                        "transport": {
                            "choices": [
                                "cli",
                                "nxapi"
                            ],
                            "default": "cli",
                            "description": [
                                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                            ],
                            "type": "str"
                        },
                        "use_proxy": {
                            "default": true,
                            "description": [
                                "If C(no), the environment variables C(http_proxy) and C(https_proxy) will be ignored."
                            ],
                            "type": "bool"
                        },
                        "use_ssl": {
                            "default": false,
                            "description": [
                                "Configures the I(transport) to use SSL if set to C(yes) only when the C(transport=nxapi), otherwise this value is ignored."
                            ],
                            "type": "bool"
                        },
                        "username": {
                            "description": [
                                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                            ],
                            "type": "str"
                        },
                        "validate_certs": {
                            "default": false,
                            "description": [
                                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "dict"
                },
                "purge": {
                    "default": false,
                    "description": [
                        "Purge VLANs not defined in the I(aggregate) parameter. This parameter can be used without aggregate as well.",
                        "Removal of Vlan 1 is not allowed and will be ignored by purge."
                    ],
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Manage the state of the resource."
                    ],
                    "type": "str"
                },
                "vlan_id": {
                    "description": [
                        "Single VLAN ID."
                    ],
                    "type": "int"
                },
                "vlan_range": {
                    "description": [
                        "Range of VLANs such as 2-10 or 2,5,10-15, etc."
                    ],
                    "type": "str"
                },
                "vlan_state": {
                    "choices": [
                        "active",
                        "suspend"
                    ],
                    "default": "active",
                    "description": [
                        "Manage the vlan operational state of the VLAN"
                    ],
                    "type": "str"
                }
            },
            "short_description": "(deprecated, removed after 2022-06-01) Manages VLAN resources and attributes.",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.nxos"
        },
        "examples": "\n- name: Ensure a range of VLANs are not present on the switch\n  cisco.nxos.nxos_vlan:\n    vlan_range: 2-10,20,50,55-60,100-150\n    state: absent\n\n- name: Ensure VLAN 50 exists with the name WEB and is in the shutdown state\n  cisco.nxos.nxos_vlan:\n    vlan_id: 50\n    admin_state: down\n    name: WEB\n\n- name: Ensure VLAN is NOT on the device\n  cisco.nxos.nxos_vlan:\n    vlan_id: 50\n    state: absent\n\n- name: Add interfaces to VLAN and check intent (config + intent)\n  cisco.nxos.nxos_vlan:\n    vlan_id: 100\n    interfaces:\n    - Ethernet2/1\n    - Ethernet2/5\n    associated_interfaces:\n    - Ethernet2/1\n    - Ethernet2/5\n\n- name: Check interfaces assigned to VLAN\n  cisco.nxos.nxos_vlan:\n    vlan_id: 100\n    associated_interfaces:\n    - Ethernet2/1\n    - Ethernet2/5\n\n- name: Create aggregate of vlans\n  cisco.nxos.nxos_vlan:\n    aggregate:\n    - {vlan_id: 4000, mode: ce}\n    - {vlan_id: 4001, name: vlan-4001}\n\n- name: purge vlans - removes all other vlans except the ones mentioned in aggregate)\n  cisco.nxos.nxos_vlan:\n    aggregate:\n    - vlan_id: 1\n    - vlan_id: 4001\n    purge: yes\n\n",
        "metadata": null,
        "return": {
            "commands": {
                "description": "Set of command strings to send to the remote device",
                "returned": "always",
                "sample": [
                    "vlan 20",
                    "vlan 55",
                    "vn-segment 5000"
                ],
                "type": "list"
            }
        }
    }
}
