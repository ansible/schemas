{
    "google.cloud.gcp_cloudfunctions_cloud_function": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "A Cloud Function that contains user computation executed in response to an event."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_cloudfunctions_cloud_function.py",
            "has_action": false,
            "module": "gcp_cloudfunctions_cloud_function",
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "available_memory_mb": {
                    "description": [
                        "The amount of memory in MB available for a function."
                    ],
                    "required": false,
                    "type": "int"
                },
                "description": {
                    "description": [
                        "User-provided description of a function."
                    ],
                    "required": false,
                    "type": "str"
                },
                "entry_point": {
                    "description": [
                        "The name of the function (as defined in source code) that will be executed.",
                        "Defaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use function named \"function\". For Node.js this is name of a function exported by the module specified in source_location."
                    ],
                    "required": false,
                    "type": "str"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "environment_variables": {
                    "description": [
                        "Environment variables that shall be available during function execution."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "event_trigger": {
                    "description": [
                        "An HTTPS endpoint type of source that can be triggered via URL."
                    ],
                    "required": false,
                    "suboptions": {
                        "event_type": {
                            "description": [
                                "The type of event to observe. For example: `providers/cloud.storage/eventTypes/object.change` and `providers/cloud.pubsub/eventTypes/topic.publish`."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "resource": {
                            "description": [
                                "The resource(s) from which to observe events, for example, `projects/_/buckets/myBucket.` ."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "service": {
                            "description": [
                                "The hostname of the service that should be observed."
                            ],
                            "required": false,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "https_trigger": {
                    "description": [
                        "An HTTPS endpoint type of source that can be triggered via URL."
                    ],
                    "required": false,
                    "suboptions": {},
                    "type": "dict"
                },
                "labels": {
                    "description": [
                        "A set of key/value label pairs associated with this Cloud Function."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "location": {
                    "description": [
                        "The location of this cloud function."
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`."
                    ],
                    "required": true,
                    "type": "str"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "runtime": {
                    "description": [
                        "The runtime in which the function is going to run. If empty, defaults to Node.js 6."
                    ],
                    "required": false,
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                },
                "source_archive_url": {
                    "description": [
                        "The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function."
                    ],
                    "required": false,
                    "type": "str"
                },
                "source_repository": {
                    "description": [
                        "The source repository where a function is hosted."
                    ],
                    "required": false,
                    "suboptions": {
                        "url": {
                            "description": [
                                "The URL pointing to the hosted repository where the function is defined ."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "source_upload_url": {
                    "description": [
                        "The Google Cloud Storage signed URL used for source uploading."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the given object should exist in GCP"
                    ],
                    "type": "str"
                },
                "timeout": {
                    "description": [
                        "The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds."
                    ],
                    "required": false,
                    "type": "str"
                },
                "trigger_http": {
                    "description": [
                        "Use HTTP to trigger this function."
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Creates a GCP CloudFunction"
        },
        "examples": "\n- name: create a cloud function\n  google.cloud.gcp_cloudfunctions_cloud_function:\n    name: test_object\n    location: us-central1\n    entry_point: helloGET\n    source_archive_url: gs://ansible-cloudfunctions-bucket/function.zip\n    trigger_http: 'true'\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "availableMemoryMb": {
                "description": [
                    "The amount of memory in MB available for a function."
                ],
                "returned": "success",
                "type": "int"
            },
            "description": {
                "description": [
                    "User-provided description of a function."
                ],
                "returned": "success",
                "type": "str"
            },
            "entryPoint": {
                "description": [
                    "The name of the function (as defined in source code) that will be executed.",
                    "Defaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use function named \"function\". For Node.js this is name of a function exported by the module specified in source_location."
                ],
                "returned": "success",
                "type": "str"
            },
            "environmentVariables": {
                "description": [
                    "Environment variables that shall be available during function execution."
                ],
                "returned": "success",
                "type": "dict"
            },
            "eventTrigger": {
                "contains": {
                    "eventType": {
                        "description": [
                            "The type of event to observe. For example: `providers/cloud.storage/eventTypes/object.change` and `providers/cloud.pubsub/eventTypes/topic.publish`."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "resource": {
                        "description": [
                            "The resource(s) from which to observe events, for example, `projects/_/buckets/myBucket.` ."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "service": {
                        "description": [
                            "The hostname of the service that should be observed."
                        ],
                        "returned": "success",
                        "type": "str"
                    }
                },
                "description": [
                    "An HTTPS endpoint type of source that can be triggered via URL."
                ],
                "returned": "success",
                "type": "complex"
            },
            "httpsTrigger": {
                "contains": {
                    "url": {
                        "description": [
                            "The deployed url for the function."
                        ],
                        "returned": "success",
                        "type": "str"
                    }
                },
                "description": [
                    "An HTTPS endpoint type of source that can be triggered via URL."
                ],
                "returned": "success",
                "type": "complex"
            },
            "labels": {
                "description": [
                    "A set of key/value label pairs associated with this Cloud Function."
                ],
                "returned": "success",
                "type": "dict"
            },
            "location": {
                "description": [
                    "The location of this cloud function."
                ],
                "returned": "success",
                "type": "str"
            },
            "name": {
                "description": [
                    "A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`."
                ],
                "returned": "success",
                "type": "str"
            },
            "runtime": {
                "description": [
                    "The runtime in which the function is going to run. If empty, defaults to Node.js 6."
                ],
                "returned": "success",
                "type": "str"
            },
            "serviceAccountEmail": {
                "description": [
                    "The email of the service account for this function."
                ],
                "returned": "success",
                "type": "str"
            },
            "sourceArchiveUrl": {
                "description": [
                    "The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function."
                ],
                "returned": "success",
                "type": "str"
            },
            "sourceRepository": {
                "contains": {
                    "deployedUrl": {
                        "description": [
                            "The URL pointing to the hosted repository where the function were defined at the time of deployment."
                        ],
                        "returned": "success",
                        "type": "str"
                    },
                    "url": {
                        "description": [
                            "The URL pointing to the hosted repository where the function is defined ."
                        ],
                        "returned": "success",
                        "type": "str"
                    }
                },
                "description": [
                    "The source repository where a function is hosted."
                ],
                "returned": "success",
                "type": "complex"
            },
            "sourceUploadUrl": {
                "description": [
                    "The Google Cloud Storage signed URL used for source uploading."
                ],
                "returned": "success",
                "type": "str"
            },
            "status": {
                "description": [
                    "Status of the function deployment."
                ],
                "returned": "success",
                "type": "str"
            },
            "timeout": {
                "description": [
                    "The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds."
                ],
                "returned": "success",
                "type": "str"
            },
            "trigger_http": {
                "description": [
                    "Use HTTP to trigger this function."
                ],
                "returned": "success",
                "type": "bool"
            },
            "updateTime": {
                "description": [
                    "The last update timestamp of a Cloud Function."
                ],
                "returned": "success",
                "type": "str"
            },
            "versionId": {
                "description": [
                    "The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being created."
                ],
                "returned": "success",
                "type": "str"
            }
        }
    }
}
