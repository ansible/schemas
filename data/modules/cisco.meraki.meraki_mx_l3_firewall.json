{
    "cisco.meraki.meraki_mx_l3_firewall": {
        "doc": {
            "author": [
                "Kevin Breit (@kbreit)"
            ],
            "collection": "cisco.meraki",
            "description": [
                "Allows for creation, management, and visibility into layer 3 firewalls implemented on Meraki MX firewalls."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/meraki/plugins/modules/meraki_mx_l3_firewall.py",
            "has_action": false,
            "module": "meraki_mx_l3_firewall",
            "notes": [
                "Module assumes a complete list of firewall rules are passed as a parameter.",
                "If there is interest in this module allowing manipulation of a single firewall rule, please submit an issue against this module.",
                "More information about the Meraki API can be found at U(https://dashboard.meraki.com/api_docs).",
                "Some of the options are likely only used for developers within Meraki.",
                "As of Ansible 2.9, Meraki modules output keys as snake case. To use camel case, set the C(ANSIBLE_MERAKI_FORMAT) environment variable to C(camelcase).",
                "Ansible's Meraki modules will stop supporting camel case output in Ansible 2.13. Please update your playbooks.",
                "Check Mode downloads the current configuration from the dashboard, then compares changes against this download. Check Mode will report changed if there are differences in the configurations, but does not submit changes to the API for validation of change."
            ],
            "options": {
                "auth_key": {
                    "description": [
                        "Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set."
                    ],
                    "required": true,
                    "type": "str"
                },
                "host": {
                    "default": "api.meraki.com",
                    "description": [
                        "Hostname for Meraki dashboard.",
                        "Can be used to access regional Meraki environments, such as China."
                    ],
                    "type": "str"
                },
                "internal_error_retry_time": {
                    "default": 60,
                    "description": [
                        "Number of seconds to retry if server returns an internal server error."
                    ],
                    "type": "int"
                },
                "net_id": {
                    "description": [
                        "ID of network which MX firewall is in."
                    ],
                    "type": "str"
                },
                "net_name": {
                    "description": [
                        "Name of network which MX firewall is in."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "description": [
                        "ID of organization."
                    ],
                    "type": "str"
                },
                "org_name": {
                    "aliases": [
                        "organization"
                    ],
                    "description": [
                        "Name of organization."
                    ],
                    "type": "str"
                },
                "output_format": {
                    "choices": [
                        "snakecase",
                        "camelcase"
                    ],
                    "default": "snakecase",
                    "description": [
                        "Instructs module whether response keys should be snake case (ex. C(net_id)) or camel case (ex. C(netId))."
                    ],
                    "type": "str"
                },
                "output_level": {
                    "choices": [
                        "debug",
                        "normal"
                    ],
                    "default": "normal",
                    "description": [
                        "Set amount of debug output during module execution."
                    ],
                    "type": "str"
                },
                "rate_limit_retry_time": {
                    "default": 165,
                    "description": [
                        "Number of seconds to retry if rate limiter is triggered."
                    ],
                    "type": "int"
                },
                "rules": {
                    "description": [
                        "List of firewall rules."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "comment": {
                            "description": [
                                "Optional comment to describe the firewall rule."
                            ],
                            "type": "str"
                        },
                        "dest_cidr": {
                            "description": [
                                "Comma separated list of CIDR notation destination networks.",
                                "C(Any) must be capitalized."
                            ],
                            "type": "str"
                        },
                        "dest_port": {
                            "description": [
                                "Comma separated list of destination port numbers to match against.",
                                "C(Any) must be capitalized."
                            ],
                            "type": "str"
                        },
                        "policy": {
                            "choices": [
                                "allow",
                                "deny"
                            ],
                            "description": [
                                "Policy to apply if rule is hit."
                            ],
                            "type": "str"
                        },
                        "protocol": {
                            "choices": [
                                "any",
                                "icmp",
                                "tcp",
                                "udp"
                            ],
                            "description": [
                                "Protocol to match against."
                            ],
                            "type": "str"
                        },
                        "src_cidr": {
                            "description": [
                                "Comma separated list of CIDR notation source networks.",
                                "C(Any) must be capitalized."
                            ],
                            "type": "str"
                        },
                        "src_port": {
                            "description": [
                                "Comma separated list of source port numbers to match against.",
                                "C(Any) must be capitalized."
                            ],
                            "type": "str"
                        },
                        "syslog_enabled": {
                            "default": false,
                            "description": [
                                "Whether to log hints against the firewall rule.",
                                "Only applicable if a syslog server is specified against the network."
                            ],
                            "type": "bool"
                        }
                    },
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "query"
                    ],
                    "default": "present",
                    "description": [
                        "Create or modify an organization."
                    ],
                    "type": "str"
                },
                "syslog_default_rule": {
                    "description": [
                        "Whether to log hits against the default firewall rule.",
                        "Only applicable if a syslog server is specified against the network.",
                        "This is not shown in response from Meraki. Instead, refer to the C(syslog_enabled) value in the default rule."
                    ],
                    "type": "bool"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Time to timeout for HTTP requests."
                    ],
                    "type": "int"
                },
                "use_https": {
                    "default": true,
                    "description": [
                        "If C(no), it will use HTTP. Otherwise it will use HTTPS.",
                        "Only useful for internal Meraki developers."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": false,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether to validate HTTP certificates."
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manage MX appliance layer 3 firewalls in the Meraki cloud"
        },
        "examples": "\n- name: Query firewall rules\n  meraki_mx_l3_firewall:\n    auth_key: abc123\n    org_name: YourOrg\n    net_name: YourNet\n    state: query\n  delegate_to: localhost\n\n- name: Set two firewall rules\n  meraki_mx_l3_firewall:\n    auth_key: abc123\n    org_name: YourOrg\n    net_name: YourNet\n    state: present\n    rules:\n      - comment: Block traffic to server\n        src_cidr: 192.0.1.0/24\n        src_port: any\n        dest_cidr: 192.0.2.2/32\n        dest_port: any\n        protocol: any\n        policy: deny\n      - comment: Allow traffic to group of servers\n        src_cidr: 192.0.1.0/24\n        src_port: any\n        dest_cidr: 192.0.2.0/24\n        dest_port: any\n        protocol: any\n        policy: allow\n  delegate_to: localhost\n\n- name: Set one firewall rule and enable logging of the default rule\n  meraki_mx_l3_firewall:\n    auth_key: abc123\n    org_name: YourOrg\n    net_name: YourNet\n    state: present\n    rules:\n      - comment: Block traffic to server\n        src_cidr: 192.0.1.0/24\n        src_port: any\n        dest_cidr: 192.0.2.2/32\n        dest_port: any\n        protocol: any\n        policy: deny\n    syslog_default_rule: yes\n  delegate_to: localhost\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "data": {
                "contains": {
                    "rules": {
                        "contains": {
                            "comment": {
                                "description": "Comment to describe the firewall rule.",
                                "returned": "always",
                                "sample": "Block traffic to server",
                                "type": "str"
                            },
                            "dest_cidr": {
                                "description": "Comma separated list of CIDR notation destination networks.",
                                "returned": "always",
                                "sample": "192.0.1.1/32,192.0.1.2/32",
                                "type": "str"
                            },
                            "dest_port": {
                                "description": "Comma separated list of destination ports.",
                                "returned": "always",
                                "sample": "80,443",
                                "type": "str"
                            },
                            "policy": {
                                "description": "Action to take when rule is matched.",
                                "returned": "always",
                                "type": "str"
                            },
                            "protocol": {
                                "description": "Network protocol for which to match against.",
                                "returned": "always",
                                "sample": "tcp",
                                "type": "str"
                            },
                            "src_cidr": {
                                "description": "Comma separated list of CIDR notation source networks.",
                                "returned": "always",
                                "sample": "192.0.1.1/32,192.0.1.2/32",
                                "type": "str"
                            },
                            "src_port": {
                                "description": "Comma separated list of source ports.",
                                "returned": "always",
                                "sample": "80,443",
                                "type": "str"
                            },
                            "syslog_enabled": {
                                "description": "Whether to log to syslog when rule is matched.",
                                "returned": "always",
                                "sample": true,
                                "type": "bool"
                            }
                        },
                        "description": "List of firewall rules.",
                        "returned": "success",
                        "type": "complex"
                    }
                },
                "description": "Firewall rules associated to network.",
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
