{
    "community.vmware.vmware_datastore_info": {
        "doc": {
            "author": [
                "Tim Rightnour (@garbled1)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to gather information about datastores in VMWare infrastructure.",
                "All values and VMware object names are case sensitive.",
                "This module was called C(vmware_datastore_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_datastore_info.py",
            "has_action": false,
            "module": "vmware_datastore_info",
            "notes": [
                "Tested on vSphere 5.5, 6.0 and 6.5"
            ],
            "options": {
                "cluster": {
                    "description": [
                        "Cluster to search for datastores.",
                        "If set, information of datastores belonging this clusters will be returned.",
                        "This parameter is required, if C(datacenter) is not supplied."
                    ],
                    "required": false,
                    "type": "str"
                },
                "datacenter": {
                    "aliases": [
                        "datacenter_name"
                    ],
                    "description": [
                        "Datacenter to search for datastores.",
                        "This parameter is required, if C(cluster) is not supplied."
                    ],
                    "required": false,
                    "type": "str"
                },
                "gather_nfs_mount_info": {
                    "default": false,
                    "description": [
                        "Gather mount information of NFS datastores.",
                        "Disabled per default because this slows down the execution if you have a lot of datastores.",
                        "Only valid when C(schema) is C(summary)."
                    ],
                    "type": "bool"
                },
                "gather_vmfs_mount_info": {
                    "default": false,
                    "description": [
                        "Gather mount information of VMFS datastores.",
                        "Disabled per default because this slows down the execution if you have a lot of datastores.",
                        "Only valid when C(schema) is C(summary)."
                    ],
                    "type": "bool"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the datastore to match.",
                        "If set, information of specific datastores are returned."
                    ],
                    "required": false,
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "properties": {
                    "description": [
                        "Specify the properties to retrieve.",
                        "If not specified, all properties are retrieved (deeply).",
                        "Results are returned in a structure identical to the vsphere API.",
                        "Example:",
                        "   properties: [",
                        "      \"name\",",
                        "      \"info.vmfs.ssd\",",
                        "      \"capability.vsanSparseSupported\",",
                        "      \"overallStatus\"",
                        "   ]",
                        "Only valid when C(schema) is C(vsphere)."
                    ],
                    "required": false,
                    "type": "list"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "schema": {
                    "choices": [
                        "summary",
                        "vsphere"
                    ],
                    "default": "summary",
                    "description": [
                        "Specify the output schema desired.",
                        "The 'summary' output schema is the legacy output from the module",
                        "The 'vsphere' output schema is the vSphere API class definition which requires pyvmomi>6.7.1"
                    ],
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Gather info about datastores available in given vCenter"
        },
        "examples": "\n- name: Gather info from standalone ESXi server having datacenter as 'ha-datacenter'\n  community.vmware.vmware_datastore_info:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    datacenter_name: '{{ datacenter_name }}'\n    validate_certs: no\n  delegate_to: localhost\n  register: info\n\n- name: Gather info from datacenter about specific datastore\n  community.vmware.vmware_datastore_info:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    datacenter_name: '{{ datacenter_name }}'\n    name: datastore1\n  delegate_to: localhost\n  register: info\n\n- name: Gather some info from a datastore using the vSphere API output schema\n  community.vmware.vmware_datastore_info:\n    hostname: '{{ vcenter_hostname }}'\n    username: '{{ vcenter_username }}'\n    password: '{{ vcenter_password }}'\n    datacenter_name: '{{ datacenter_name }}'\n    schema: vsphere\n    properties:\n      - name\n      - info.vmfs.ssd\n      - capability.vsanSparseSupported\n      - overallStatus\n  delegate_to: localhost\n  register: info\n",
        "metadata": null,
        "return": {
            "datastores": {
                "description": "metadata about the available datastores",
                "returned": "always",
                "sample": [
                    {
                        "accessible": false,
                        "capacity": 42681237504,
                        "datastore_cluster": "datacluster0",
                        "freeSpace": 39638269952,
                        "maintenanceMode": "normal",
                        "multipleHostAccess": false,
                        "name": "datastore2",
                        "provisioned": 12289211488,
                        "type": "VMFS",
                        "uncommitted": 9246243936,
                        "url": "ds:///vmfs/volumes/5a69b18a-c03cd88c-36ae-5254001249ce/",
                        "vmfs_blockSize": 1024,
                        "vmfs_uuid": "5a69b18a-c03cd88c-36ae-5254001249ce",
                        "vmfs_version": "6.81"
                    },
                    {
                        "accessible": true,
                        "capacity": 5497558138880,
                        "datastore_cluster": "datacluster0",
                        "freeSpace": 4279000641536,
                        "maintenanceMode": "normal",
                        "multipleHostAccess": true,
                        "name": "datastore3",
                        "nfs_path": "/vol/datastore3",
                        "nfs_server": "nfs_server1",
                        "provisioned": 1708109410304,
                        "type": "NFS",
                        "uncommitted": 489551912960,
                        "url": "ds:///vmfs/volumes/420b3e73-67070776/"
                    }
                ],
                "type": "list"
            }
        }
    }
}
