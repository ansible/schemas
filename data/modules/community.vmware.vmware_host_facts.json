{
    "community.vmware.vmware_host_facts": {
        "doc": {
            "author": [
                "Wei Gao (@woshihaoren)"
            ],
            "collection": "community.vmware",
            "description": [
                "This module can be used to gathers facts like CPU, memory, datastore, network and system etc. about ESXi host system.",
                "Please specify hostname or IP address of ESXi host system as C(hostname).",
                "If hostname or IP address of vCenter is provided as C(hostname) and C(esxi_hostname) is not specified, then the module will throw an error.",
                "VSAN facts added in 2.7 version.",
                "SYSTEM fact uuid added in 2.10 version."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_host_facts.py",
            "has_action": false,
            "module": "vmware_host_facts",
            "options": {
                "esxi_hostname": {
                    "description": [
                        "ESXi hostname.",
                        "Host facts about the specified ESXi server will be returned.",
                        "By specifying this option, you can select which ESXi hostsystem is returned if connecting to a vCenter."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "properties": {
                    "description": [
                        "Specify the properties to retrieve.",
                        "If not specified, all properties are retrieved (deeply).",
                        "Results are returned in a structure identical to the vsphere API.",
                        "Example:",
                        "   properties: [",
                        "      \"hardware.memorySize\",",
                        "      \"hardware.cpuInfo.numCpuCores\",",
                        "      \"config.product.apiVersion\",",
                        "      \"overallStatus\"",
                        "   ]",
                        "Only valid when C(schema) is C(vsphere)."
                    ],
                    "required": false,
                    "type": "list"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "schema": {
                    "choices": [
                        "summary",
                        "vsphere"
                    ],
                    "default": "summary",
                    "description": [
                        "Specify the output schema desired.",
                        "The 'summary' output schema is the legacy output from the module",
                        "The 'vsphere' output schema is the vSphere API class definition which requires pyvmomi>6.7.1"
                    ],
                    "type": "str"
                },
                "show_tag": {
                    "default": false,
                    "description": [
                        "Tags related to Host are shown if set to C(True)."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "PyVmomi"
            ],
            "short_description": "Gathers facts about remote ESXi hostsystem"
        },
        "examples": "\n- name: Gather vmware host facts\n  community.vmware.vmware_host_facts:\n    hostname: \"{{ esxi_server }}\"\n    username: \"{{ esxi_username }}\"\n    password: \"{{ esxi_password }}\"\n  register: host_facts\n  delegate_to: localhost\n\n- name: Gather vmware host facts from vCenter\n  community.vmware.vmware_host_facts:\n    hostname: \"{{ vcenter_server }}\"\n    username: \"{{ vcenter_user }}\"\n    password: \"{{ vcenter_pass }}\"\n    esxi_hostname: \"{{ esxi_hostname }}\"\n  register: host_facts\n  delegate_to: localhost\n\n- name: Gather vmware host facts from vCenter with tag information\n  community.vmware.vmware_host_facts:\n    hostname: \"{{ vcenter_server }}\"\n    username: \"{{ vcenter_user }}\"\n    password: \"{{ vcenter_pass }}\"\n    esxi_hostname: \"{{ esxi_hostname }}\"\n    show_tag: True\n  register: host_facts_tag\n  delegate_to: localhost\n\n- name: Get VSAN Cluster UUID from host facts\n  community.vmware.vmware_host_facts:\n    hostname: \"{{ esxi_server }}\"\n    username: \"{{ esxi_username }}\"\n    password: \"{{ esxi_password }}\"\n  register: host_facts\n- set_fact:\n    cluster_uuid: \"{{ host_facts['ansible_facts']['vsan_cluster_uuid'] }}\"\n\n- name: Gather some info from a host using the vSphere API output schema\n  community.vmware.vmware_host_facts:\n    hostname: \"{{ vcenter_server }}\"\n    username: \"{{ vcenter_user }}\"\n    password: \"{{ vcenter_pass }}\"\n    esxi_hostname: \"{{ esxi_hostname }}\"\n    schema: vsphere\n    properties:\n      - hardware.memorySize\n      - hardware.cpuInfo.numCpuCores\n      - config.product.apiVersion\n      - overallStatus\n  register: host_facts\n\n- name: Gather information about powerstate and connection state\n  community.vmware.vmware_host_facts:\n    hostname: \"{{ vcenter_server }}\"\n    username: \"{{ vcenter_user }}\"\n    password: \"{{ vcenter_pass }}\"\n    esxi_hostname: \"{{ esxi_hostname }}\"\n    schema: vsphere\n    properties:\n      - runtime.connectionState\n      - runtime.powerState\n\n- name: How to retrieve Product, Version, Build, Update info for ESXi from vCenter\n  block:\n    - name: Gather product version info for ESXi from vCenter\n      community.vmware.vmware_host_facts:\n        hostname: \"{{ vcenter_hostname }}\"\n        username: \"{{ vcenter_user }}\"\n        password: \"{{ vcenter_pass }}\"\n        validate_certs: no\n        esxi_hostname: \"{{ esxi_hostname }}\"\n        schema: vsphere\n        properties:\n          - config.product\n          - config.option\n      register: gather_host_facts_result\n\n    - name: Extract update level info from option properties\n      set_fact:\n        update_level_info: \"{{ item.value }}\"\n      loop: \"{{ gather_host_facts_result.ansible_facts.config.option }}\"\n      when:\n        - item.key == 'Misc.HostAgentUpdateLevel'\n\n    - name: The output of Product, Version, Build, Update info for ESXi\n      debug:\n        msg:\n          - \"Product : {{ gather_host_facts_result.ansible_facts.config.product.name }}\"\n          - \"Version : {{ gather_host_facts_result.ansible_facts.config.product.version }}\"\n          - \"Build   : {{ gather_host_facts_result.ansible_facts.config.product.build }}\"\n          - \"Update  : {{ update_level_info }}\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "ansible_facts": {
                "description": "system info about the host machine",
                "returned": "always",
                "sample": {
                    "ansible_all_ipv4_addresses": [
                        "10.76.33.200"
                    ],
                    "ansible_bios_date": "2011-01-01T00:00:00+00:00",
                    "ansible_bios_version": "0.5.1",
                    "ansible_datastore": [
                        {
                            "free": "11.63 GB",
                            "name": "datastore1",
                            "total": "12.50 GB"
                        }
                    ],
                    "ansible_distribution": "VMware ESXi",
                    "ansible_distribution_build": "4887370",
                    "ansible_distribution_version": "6.5.0",
                    "ansible_hostname": "10.76.33.100",
                    "ansible_in_maintenance_mode": true,
                    "ansible_interfaces": [
                        "vmk0"
                    ],
                    "ansible_memfree_mb": 2702,
                    "ansible_memtotal_mb": 4095,
                    "ansible_os_type": "vmnix-x86",
                    "ansible_processor": "Intel Xeon E312xx (Sandy Bridge)",
                    "ansible_processor_cores": 2,
                    "ansible_processor_count": 2,
                    "ansible_processor_vcpus": 2,
                    "ansible_product_name": "KVM",
                    "ansible_product_serial": "NA",
                    "ansible_system_vendor": "Red Hat",
                    "ansible_uptime": 1791680,
                    "ansible_uuid": "4c4c4544-0052-3410-804c-b2c04f4e3632",
                    "ansible_vmk0": {
                        "device": "vmk0",
                        "ipv4": {
                            "address": "10.76.33.100",
                            "netmask": "255.255.255.0"
                        },
                        "macaddress": "52:54:00:56:7d:59",
                        "mtu": 1500
                    },
                    "tags": [
                        {
                            "category_id": "urn:vmomi:InventoryServiceCategory:8eb81431-b20d-49f5-af7b-126853aa1189:GLOBAL",
                            "category_name": "host_category_0001",
                            "description": "",
                            "id": "urn:vmomi:InventoryServiceTag:e9398232-46fd-461a-bf84-06128e182a4a:GLOBAL",
                            "name": "host_tag_0001"
                        }
                    ],
                    "vsan_cluster_uuid": null,
                    "vsan_health": "unknown",
                    "vsan_node_uuid": null
                },
                "type": "dict"
            }
        }
    }
}
