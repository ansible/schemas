{
    "dellemc.openmanage.dellemc_configure_idrac_services": {
        "doc": {
            "author": "Felix Stephen (@felixs88)",
            "collection": "dellemc.openmanage",
            "description": [
                "This module allows to configure the iDRAC services related attributes."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/dellemc/openmanage/plugins/modules/dellemc_configure_idrac_services.py",
            "has_action": false,
            "module": "dellemc_configure_idrac_services",
            "notes": [
                "Run this module from a system that has direct access to DellEMC iDRAC.",
                "This module supports C(check_mode)."
            ],
            "options": {
                "alert_port": {
                    "default": 162,
                    "description": "The iDRAC port number that must be used for SNMP traps. The default value is 162, and the acceptable range is between 1 to 65535.",
                    "type": "int"
                },
                "community_name": {
                    "description": "SNMP community name for iDRAC. It is used by iDRAC to validate SNMP queries received from remote systems requesting SNMP data access.",
                    "type": "str"
                },
                "discovery_port": {
                    "default": 161,
                    "description": "The SNMP agent port on the iDRAC. The default value is 161, and the acceptable range is between 1 to 65535.",
                    "type": "int"
                },
                "enable_web_server": {
                    "choices": [
                        "Enabled",
                        "Disabled"
                    ],
                    "description": "Whether to Enable or Disable webserver configuration for iDRAC.",
                    "type": "str"
                },
                "http_port": {
                    "description": "HTTP access port.",
                    "type": "int"
                },
                "https_port": {
                    "description": "HTTPS access port.",
                    "type": "int"
                },
                "idrac_ip": {
                    "description": "iDRAC IP Address.",
                    "required": true,
                    "type": "str"
                },
                "idrac_password": {
                    "aliases": [
                        "idrac_pwd"
                    ],
                    "description": "iDRAC user password.",
                    "required": true,
                    "type": "str"
                },
                "idrac_port": {
                    "default": 443,
                    "description": "iDRAC port.",
                    "type": "int"
                },
                "idrac_user": {
                    "description": "iDRAC username.",
                    "required": true,
                    "type": "str"
                },
                "ipmi_lan": {
                    "description": "Community name set on iDRAC for SNMP settings.",
                    "suboptions": {
                        "community_name": {
                            "description": "This option is used by iDRAC when it sends out SNMP and IPMI traps. The community name is checked by the remote system to which the traps are sent.",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "share_mnt": {
                    "description": "Local mount path of the network share with read-write permission for ansible user. This option is mandatory for Network Share.",
                    "type": "str"
                },
                "share_name": {
                    "description": "Network share or a local path.",
                    "required": true,
                    "type": "str"
                },
                "share_password": {
                    "aliases": [
                        "share_pwd"
                    ],
                    "description": "Network share user password. This option is mandatory for CIFS Network Share.",
                    "type": "str"
                },
                "share_user": {
                    "description": "Network share user in the format 'user@domain' or 'domain\\user' if user is part of a domain else 'user'. This option is mandatory for CIFS Network Share.",
                    "type": "str"
                },
                "snmp_enable": {
                    "choices": [
                        "Enabled",
                        "Disabled"
                    ],
                    "description": "Whether to Enable or Disable SNMP protocol for iDRAC.",
                    "type": "str"
                },
                "snmp_protocol": {
                    "choices": [
                        "All",
                        "SNMPv3"
                    ],
                    "description": "Type of the SNMP protocol.",
                    "type": "str"
                },
                "ssl_encryption": {
                    "choices": [
                        "Auto_Negotiate",
                        "T_128_Bit_or_higher",
                        "T_168_Bit_or_higher",
                        "T_256_Bit_or_higher"
                    ],
                    "description": "Secure Socket Layer encryption for webserver.",
                    "type": "str"
                },
                "timeout": {
                    "description": "Timeout value.",
                    "type": "str"
                },
                "tls_protocol": {
                    "choices": [
                        "TLS_1_0_and_Higher",
                        "TLS_1_1_and_Higher",
                        "TLS_1_2_Only"
                    ],
                    "description": "Transport Layer Security for webserver.",
                    "type": "str"
                },
                "trap_format": {
                    "choices": [
                        "SNMPv1",
                        "SNMPv2",
                        "SNMPv3"
                    ],
                    "description": "SNMP trap format for iDRAC.",
                    "type": "str"
                }
            },
            "requirements": [
                "omsdk",
                "python >= 2.7.5"
            ],
            "short_description": "Configures the iDRAC services related attributes",
            "version_added": "1.0.0",
            "version_added_collection": "dellemc.openmanage"
        },
        "examples": "\n---\n- name: Configure the iDRAC services attributes\n  dellemc.openmanage.dellemc_configure_idrac_services:\n       idrac_ip:   \"192.168.0.1\"\n       idrac_user: \"user_name\"\n       idrac_password:  \"user_password\"\n       share_name: \"192.168.0.1:/share\"\n       share_mnt: \"/mnt/share\"\n       enable_web_server: \"Enabled\"\n       http_port: 80\n       https_port: 443\n       ssl_encryption: \"Auto_Negotiate\"\n       tls_protocol: \"TLS_1_2_Only\"\n       timeout: \"1800\"\n       snmp_enable: \"Enabled\"\n       snmp_protocol: \"SNMPv3\"\n       community_name: \"public\"\n       alert_port: 162\n       discovery_port: 161\n       trap_format: \"SNMPv3\"\n       ipmi_lan:\n         community_name: \"public\"\n",
        "metadata": null,
        "return": {
            "error_info": {
                "description": "Details of the HTTP Error.",
                "returned": "on HTTP error",
                "sample": {
                    "error": {
                        "@Message.ExtendedInfo": [
                            {
                                "Message": "Unable to process the request because an error occurred.",
                                "MessageArgs": [],
                                "MessageId": "GEN1234",
                                "RelatedProperties": [],
                                "Resolution": "Retry the operation. If the issue persists, contact your system administrator.",
                                "Severity": "Critical"
                            }
                        ],
                        "code": "Base.1.0.GeneralError",
                        "message": "A general error has occurred. See ExtendedInfo for more information."
                    }
                },
                "type": "dict"
            },
            "msg": {
                "description": "Overall status of iDRAC service attributes configuration.",
                "returned": "always",
                "sample": "Successfully configured the iDRAC services settings.",
                "type": "str"
            },
            "service_status": {
                "description": "Details of iDRAC services attributes configuration.",
                "returned": "success",
                "sample": {
                    "CompletionTime": "2020-04-02T02:43:28",
                    "Description": "Job Instance",
                    "EndTime": null,
                    "Id": "JID_12345123456",
                    "JobState": "Completed",
                    "JobType": "ImportConfiguration",
                    "Message": "Successfully imported and applied Server Configuration Profile.",
                    "MessageArgs": [],
                    "MessageId": "SYS053",
                    "Name": "Import Configuration",
                    "PercentComplete": 100,
                    "StartTime": "TIME_NOW",
                    "Status": "Success",
                    "TargetSettingsURI": null,
                    "retval": true
                },
                "type": "dict"
            }
        }
    }
}
