{
    "google.cloud.gcp_compute_network_endpoint_group": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "Network endpoint groups (NEGs) are zonal resources that represent collections of IP address and port combinations for GCP resources within a single subnet. Each IP address and port combination is called a network endpoint.",
                "Network endpoint groups can be used as backends in backend services for HTTP(S), TCP proxy, and SSL proxy load balancers. You cannot use NEGs as a backend with internal load balancers. Because NEG backends allow you to specify IP addresses and ports, you can distribute traffic in a granular fashion among applications or containers running within VM instances.",
                "Recreating a network endpoint group that's in use by another resource will give a `resourceInUseByAnotherResource` error. Use `lifecycle.create_before_destroy` to avoid this type of error."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_compute_network_endpoint_group.py",
            "has_action": false,
            "module": "gcp_compute_network_endpoint_group",
            "notes": [
                "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups)",
                "Official Documentation: U(https://cloud.google.com/load-balancing/docs/negs/)",
                "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.",
                "for authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.",
                "For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.",
                "For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.",
                "For authentication, you can set scopes using the C(GCP_SCOPES) env variable.",
                "Environment variables values will only be used if the playbook values are not set.",
                "The I(service_account_email) and I(service_account_file) options are mutually exclusive."
            ],
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "default_port": {
                    "description": [
                        "The default port used if the port number is not specified in the network endpoint."
                    ],
                    "required": false,
                    "type": "int"
                },
                "description": {
                    "description": [
                        "An optional description of this resource. Provide this property when you create the resource."
                    ],
                    "required": false,
                    "type": "str"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
                    ],
                    "required": true,
                    "type": "str"
                },
                "network": {
                    "description": [
                        "The network to which all network endpoints in the NEG belong.",
                        "Uses \"default\" project network if unspecified.",
                        "This field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\""
                    ],
                    "required": true,
                    "type": "dict"
                },
                "network_endpoint_type": {
                    "default": "GCE_VM_IP_PORT",
                    "description": [
                        "Type of network endpoints in this network endpoint group.",
                        "Some valid choices include: \"GCE_VM_IP_PORT\""
                    ],
                    "required": false,
                    "type": "str"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the given object should exist in GCP"
                    ],
                    "type": "str"
                },
                "subnetwork": {
                    "description": [
                        "Optional subnetwork to which all network endpoints in the NEG belong.",
                        "This field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork field to \"{{ name-of-resource }}\""
                    ],
                    "required": false,
                    "type": "dict"
                },
                "zone": {
                    "description": [
                        "Zone where the network endpoint group is located."
                    ],
                    "required": true,
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Creates a GCP NetworkEndpointGroup"
        },
        "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: \"{{ resource_name }}\"\n    auto_create_subnetworks: 'false'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a subnetwork\n  google.cloud.gcp_compute_subnetwork:\n    name: \"{{ resource_name }}\"\n    ip_cidr_range: 10.0.0.0/16\n    region: us-central1\n    network: \"{{ network }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: subnetwork\n\n- name: create a network endpoint group\n  google.cloud.gcp_compute_network_endpoint_group:\n    name: test_object\n    network: \"{{ network }}\"\n    subnetwork: \"{{ subnetwork }}\"\n    default_port: 90\n    zone: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "defaultPort": {
                "description": [
                    "The default port used if the port number is not specified in the network endpoint."
                ],
                "returned": "success",
                "type": "int"
            },
            "description": {
                "description": [
                    "An optional description of this resource. Provide this property when you create the resource."
                ],
                "returned": "success",
                "type": "str"
            },
            "id": {
                "description": [
                    "The unique identifier for the resource."
                ],
                "returned": "success",
                "type": "int"
            },
            "name": {
                "description": [
                    "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
                ],
                "returned": "success",
                "type": "str"
            },
            "network": {
                "description": [
                    "The network to which all network endpoints in the NEG belong.",
                    "Uses \"default\" project network if unspecified."
                ],
                "returned": "success",
                "type": "dict"
            },
            "networkEndpointType": {
                "description": [
                    "Type of network endpoints in this network endpoint group."
                ],
                "returned": "success",
                "type": "str"
            },
            "size": {
                "description": [
                    "Number of network endpoints in the network endpoint group."
                ],
                "returned": "success",
                "type": "int"
            },
            "subnetwork": {
                "description": [
                    "Optional subnetwork to which all network endpoints in the NEG belong."
                ],
                "returned": "success",
                "type": "dict"
            },
            "zone": {
                "description": [
                    "Zone where the network endpoint group is located."
                ],
                "returned": "success",
                "type": "str"
            }
        }
    }
}
