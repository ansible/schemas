{
    "ovirt.ovirt.ovirt_job": {
        "doc": {
            "author": "Martin Necas (@mnecas)",
            "collection": "ovirt.ovirt",
            "description": [
                "This module manage jobs in oVirt/RHV. It can also manage steps of the job."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ovirt/ovirt/plugins/modules/ovirt_job.py",
            "has_action": false,
            "module": "ovirt_job",
            "notes": [
                "In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can create the following task: I(pip: name=ovirt-engine-sdk-python version=4.4.0)"
            ],
            "options": {
                "auth": {
                    "description": [
                        "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
                    ],
                    "required": true,
                    "suboptions": {
                        "ca_file": {
                            "description": [
                                "A PEM file containing the trusted CA certificates.",
                                "The certificate presented by the server will be verified using these CA certificates.",
                                "If C(ca_file) parameter is not set, system wide CA certificate store is used.",
                                "Default value is set by C(OVIRT_CAFILE) environment variable."
                            ],
                            "type": "str"
                        },
                        "compress": {
                            "default": true,
                            "description": "Flag indicating if compression is used for connection.",
                            "type": "bool"
                        },
                        "headers": {
                            "description": [
                                "Dictionary of HTTP headers to be added to each API call."
                            ],
                            "type": "dict"
                        },
                        "hostname": {
                            "description": [
                                "A string containing the hostname of the server, usually something like `I(server.example.com)`.",
                                "Default value is set by C(OVIRT_HOSTNAME) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "insecure": {
                            "description": [
                                "A boolean flag that indicates if the server TLS certificate and host name should be checked."
                            ],
                            "type": "bool"
                        },
                        "kerberos": {
                            "description": [
                                "A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "description": [
                                "The password of the user.",
                                "Default value is set by C(OVIRT_PASSWORD) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "timeout": {
                            "description": "Number of seconds to wait for response.",
                            "type": "int"
                        },
                        "token": {
                            "description": [
                                "Token to be used instead of login with username/password.",
                                "Default value is set by C(OVIRT_TOKEN) environment variable."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "A string containing the API URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`.",
                                "Default value is set by C(OVIRT_URL) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "The name of the user, something like I(admin@internal).",
                                "Default value is set by C(OVIRT_USERNAME) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "description": {
                    "description": [
                        "Description of the job.",
                        "When task with same description has already finished and you rerun taks it will create new job."
                    ],
                    "required": true,
                    "type": "str"
                },
                "fetch_nested": {
                    "description": [
                        "If I(True) the module will fetch additional data from the API.",
                        "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
                    ],
                    "type": "bool"
                },
                "nested_attributes": {
                    "description": [
                        "Specifies list of the attributes which should be fetched from the API.",
                        "This parameter apply only when C(fetch_nested) is I(true)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "poll_interval": {
                    "default": 3,
                    "description": [
                        "Number of the seconds the module waits until another poll request on entity status is sent."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent",
                        "started",
                        "finished",
                        "failed"
                    ],
                    "default": "present",
                    "description": [
                        "Should the job be C(present)/C(absent)/C(failed).",
                        "C(started) is alias for C(present). C(finished) is alias for C(absent). Same in the steps.",
                        "Note when C(finished)/C(failed) it will finish/fail all steps."
                    ],
                    "type": "str"
                },
                "steps": {
                    "description": [
                        "The steps of the job."
                    ],
                    "elements": "dict",
                    "suboptions": {
                        "description": {
                            "description": [
                                "Description of the step."
                            ],
                            "required": true
                        },
                        "state": {
                            "choices": [
                                "present",
                                "absent",
                                "started",
                                "finished",
                                "failed"
                            ],
                            "default": "present",
                            "description": [
                                "Should the step be present/absent/failed.",
                                "Note when one step fail whole job will fail",
                                "Note when all steps are finished it will finish job."
                            ]
                        }
                    },
                    "type": "list"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "The amount of time in seconds the module should wait for the instance to get into desired state."
                    ],
                    "type": "int"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "C(yes) if the module should wait for the entity to get into desired state."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "ovirt-engine-sdk-python >= 4.4.0"
            ],
            "short_description": "Module to manage jobs in oVirt/RHV",
            "version_added": "1.0.0",
            "version_added_collection": "ovirt.ovirt"
        },
        "examples": "\n# Examples don't contain auth parameter for simplicity,\n# look at ovirt_auth module to see how to reuse authentication:\n\n- name: Create job with two steps\n  ovirt.ovirt.ovirt_job:\n    description: job_name\n    steps:\n      - description: step_name_A\n      - description: step_name_B\n\n- name: Finish one step\n  ovirt.ovirt.ovirt_job:\n    description: job_name\n    steps:\n      - description: step_name_A\n        state: finished\n\n- name: When you fail one step whole job will stop\n  ovirt.ovirt.ovirt_job:\n    description: job_name\n    steps:\n      - description: step_name_B\n        state: failed\n\n- name: Finish all steps\n  ovirt.ovirt.ovirt_job:\n    description: job_name\n    state: finished\n",
        "metadata": null,
        "return": {
            "id": {
                "description": "ID of the job which is managed",
                "returned": "On success if job is found.",
                "sample": "7de90f31-222c-436c-a1ca-7e655bd5b60c",
                "type": "str"
            },
            "job": {
                "description": "Dictionary of all the job attributes. Job attributes can be found on your oVirt/RHV instance at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/job.",
                "returned": "On success if job is found.",
                "type": "dict"
            }
        }
    }
}
