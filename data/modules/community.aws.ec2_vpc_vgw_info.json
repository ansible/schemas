{
    "community.aws.ec2_vpc_vgw_info": {
        "doc": {
            "author": "Nick Aslanidis (@naslanidis)",
            "collection": "community.aws",
            "description": [
                "Gather information about virtual gateways in AWS.",
                "This module was called C(ec2_vpc_vgw_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_vpc_vgw_info.py",
            "has_action": false,
            "module": "ec2_vpc_vgw_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "filters": {
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html) for possible filters."
                    ],
                    "type": "dict"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "vpn_gateway_ids": {
                    "description": [
                        "Get details of a specific Virtual Gateway ID. This value should be provided as a list."
                    ],
                    "elements": "str",
                    "type": "list"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Gather information about virtual gateways in AWS",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# # Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all virtual gateways for an account or profile\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n  register: vgw_info\n\n- name: Gather information about a filtered list of Virtual Gateways\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n    filters:\n        \"tag:Name\": \"main-virt-gateway\"\n  register: vgw_info\n\n- name: Gather information about a specific virtual gateway by VpnGatewayIds\n  community.aws.ec2_vpc_vgw_info:\n    region: ap-southeast-2\n    profile: production\n    vpn_gateway_ids: vgw-c432f6a7\n  register: vgw_info\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "True if listing the virtual gateways succeeds.",
                "returned": "always",
                "sample": "false",
                "type": "bool"
            },
            "virtual_gateways": {
                "description": "The virtual gateways for the account.",
                "returned": "always",
                "sample": [
                    {
                        "state": "available",
                        "tags": [
                            {
                                "key": "Name",
                                "value": "TEST-VGW"
                            }
                        ],
                        "type": "ipsec.1",
                        "vpc_attachments": [
                            {
                                "state": "attached",
                                "vpc_id": "vpc-22a93c74"
                            }
                        ],
                        "vpn_gateway_id": "vgw-23e3d64e"
                    }
                ],
                "type": "list"
            }
        }
    }
}
