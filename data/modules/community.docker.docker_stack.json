{
    "community.docker.docker_stack": {
        "doc": {
            "author": "Dario Zanzico (@dariko)",
            "collection": "community.docker",
            "description": [
                "Manage docker stacks using the 'docker stack' command on the target node (see examples)."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/docker/plugins/modules/docker_stack.py",
            "has_action": false,
            "module": "docker_stack",
            "notes": [
                "Return values I(out) and I(err) have been deprecated and will be removed in community.docker 2.0.0. Use I(stdout) and I(stderr) instead."
            ],
            "options": {
                "absent_retries": {
                    "default": 0,
                    "description": [
                        "If C(>0) and I(state) is C(absent) the module will retry up to I(absent_retries) times to delete the stack until all the resources have been effectively deleted. If the last try still reports the stack as not completely removed the module will fail."
                    ],
                    "type": "int"
                },
                "absent_retries_interval": {
                    "default": 1,
                    "description": [
                        "Interval in seconds between consecutive I(absent_retries)."
                    ],
                    "type": "int"
                },
                "compose": {
                    "default": [],
                    "description": [
                        "List of compose definitions. Any element may be a string referring to the path of the compose file on the target host or the YAML contents of a compose file nested as dictionary."
                    ],
                    "elements": "raw",
                    "type": "list"
                },
                "name": {
                    "description": [
                        "Stack name"
                    ],
                    "required": true,
                    "type": "str"
                },
                "prune": {
                    "default": false,
                    "description": [
                        "If true will add the C(--prune) option to the C(docker stack deploy) command. This will have docker remove the services not present in the current stack definition."
                    ],
                    "type": "bool"
                },
                "resolve_image": {
                    "choices": [
                        "always",
                        "changed",
                        "never"
                    ],
                    "description": [
                        "If set will add the C(--resolve-image) option to the C(docker stack deploy) command. This will have docker query the registry to resolve image digest and supported platforms. If not set, docker use \"always\" by default."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Service state."
                    ],
                    "type": "str"
                },
                "with_registry_auth": {
                    "default": false,
                    "description": [
                        "If true will add the C(--with-registry-auth) option to the C(docker stack deploy) command. This will have docker send registry authentication details to Swarm agents."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "jsondiff",
                "pyyaml"
            ],
            "short_description": "docker stack module"
        },
        "examples": "\n  - name: Deploy stack from a compose file\n    community.docker.docker_stack:\n      state: present\n      name: mystack\n      compose:\n        - /opt/docker-compose.yml\n\n  - name: Deploy stack from base compose file and override the web service\n    community.docker.docker_stack:\n      state: present\n      name: mystack\n      compose:\n        - /opt/docker-compose.yml\n        - version: '3'\n          services:\n            web:\n              image: nginx:latest\n              environment:\n                ENVVAR: envvar\n\n  - name: Remove stack\n    community.docker.docker_stack:\n      name: mystack\n      state: absent\n",
        "metadata": null,
        "return": {
            "stack_spec_diff": {
                "description": "dictionary containing the differences between the 'Spec' field\nof the stack services before and after applying the new stack\ndefinition.\n",
                "returned": "on change",
                "sample": "\"stack_spec_diff\": {'test_stack_test_service': {u'TaskTemplate': {u'ContainerSpec': {delete: [u'Env']}}}}\n",
                "type": "dict"
            }
        }
    }
}
