{
    "community.aws.elb_application_lb_info": {
        "doc": {
            "author": "Rob White (@wimnat)",
            "collection": "community.aws",
            "description": [
                "Gather information about application ELBs in AWS",
                "This module was called C(elb_application_lb_facts) before Ansible 2.9. The usage did not change."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/elb_application_lb_info.py",
            "has_action": false,
            "module": "elb_application_lb_info",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "load_balancer_arns": {
                    "description": [
                        "The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "names": {
                    "description": [
                        "The names of the load balancers."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Gather information about application ELBs in AWS",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n- name: Gather information about all target groups\n  community.aws.elb_application_lb_info:\n\n- name: Gather information about the target group attached to a particular ELB\n  community.aws.elb_application_lb_info:\n    load_balancer_arns:\n      - \"arn:aws:elasticloadbalancing:ap-southeast-2:001122334455:loadbalancer/app/my-elb/aabbccddeeff\"\n\n- name: Gather information about a target groups named 'tg1' and 'tg2'\n  community.aws.elb_application_lb_info:\n    names:\n      - elb1\n      - elb2\n\n- name: Gather information about specific ALB\n  community.aws.elb_application_lb_info:\n    names: \"alb-name\"\n    region: \"aws-region\"\n  register: alb_info\n- ansible.builtin.debug:\n    var: alb_info\n",
        "metadata": null,
        "return": {
            "load_balancers": {
                "contains": {
                    "access_logs_s3_bucket": {
                        "description": "The name of the S3 bucket for the access logs.",
                        "sample": "mys3bucket",
                        "type": "str"
                    },
                    "access_logs_s3_enabled": {
                        "description": "Indicates whether access logs stored in Amazon S3 are enabled.",
                        "sample": true,
                        "type": "str"
                    },
                    "access_logs_s3_prefix": {
                        "description": "The prefix for the location in the S3 bucket.",
                        "sample": "/my/logs",
                        "type": "str"
                    },
                    "availability_zones": {
                        "description": "The Availability Zones for the load balancer.",
                        "sample": "[{'subnet_id': 'subnet-aabbccddff', 'zone_name': 'ap-southeast-2a'}]",
                        "type": "list"
                    },
                    "canonical_hosted_zone_id": {
                        "description": "The ID of the Amazon Route 53 hosted zone associated with the load balancer.",
                        "sample": "ABCDEF12345678",
                        "type": "str"
                    },
                    "created_time": {
                        "description": "The date and time the load balancer was created.",
                        "sample": "2015-02-12T02:14:02+00:00",
                        "type": "str"
                    },
                    "deletion_protection_enabled": {
                        "description": "Indicates whether deletion protection is enabled.",
                        "sample": true,
                        "type": "str"
                    },
                    "dns_name": {
                        "description": "The public DNS name of the load balancer.",
                        "sample": "internal-my-elb-123456789.ap-southeast-2.elb.amazonaws.com",
                        "type": "str"
                    },
                    "idle_timeout_timeout_seconds": {
                        "description": "The idle timeout value, in seconds.",
                        "sample": 60,
                        "type": "str"
                    },
                    "ip_address_type": {
                        "description": "The type of IP addresses used by the subnets for the load balancer.",
                        "sample": "ipv4",
                        "type": "str"
                    },
                    "load_balancer_arn": {
                        "description": "The Amazon Resource Name (ARN) of the load balancer.",
                        "sample": "arn:aws:elasticloadbalancing:ap-southeast-2:0123456789:loadbalancer/app/my-elb/001122334455",
                        "type": "str"
                    },
                    "load_balancer_name": {
                        "description": "The name of the load balancer.",
                        "sample": "my-elb",
                        "type": "str"
                    },
                    "scheme": {
                        "description": "Internet-facing or internal load balancer.",
                        "sample": "internal",
                        "type": "str"
                    },
                    "security_groups": {
                        "description": "The IDs of the security groups for the load balancer.",
                        "sample": [
                            "sg-0011223344"
                        ],
                        "type": "list"
                    },
                    "state": {
                        "description": "The state of the load balancer.",
                        "sample": "{'code': 'active'}",
                        "type": "dict"
                    },
                    "tags": {
                        "description": "The tags attached to the load balancer.",
                        "sample": "{ 'Tag': 'Example' }",
                        "type": "dict"
                    },
                    "type": {
                        "description": "The type of load balancer.",
                        "sample": "application",
                        "type": "str"
                    },
                    "vpc_id": {
                        "description": "The ID of the VPC for the load balancer.",
                        "sample": "vpc-0011223344",
                        "type": "str"
                    }
                },
                "description": "a list of load balancers",
                "returned": "always",
                "type": "complex"
            }
        }
    }
}
