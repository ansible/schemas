{
    "ovirt.ovirt.ovirt_host_pm": {
        "doc": {
            "author": "Ondra Machacek (@machacekondra)",
            "collection": "ovirt.ovirt",
            "description": [
                "Module to manage power management of hosts in oVirt/RHV."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ovirt/ovirt/plugins/modules/ovirt_host_pm.py",
            "has_action": false,
            "module": "ovirt_host_pm",
            "notes": [
                "In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can create the following task: I(pip: name=ovirt-engine-sdk-python version=4.4.0)"
            ],
            "options": {
                "address": {
                    "description": [
                        "Address of the power management interface."
                    ],
                    "type": "str"
                },
                "auth": {
                    "description": [
                        "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
                    ],
                    "required": true,
                    "suboptions": {
                        "ca_file": {
                            "description": [
                                "A PEM file containing the trusted CA certificates.",
                                "The certificate presented by the server will be verified using these CA certificates.",
                                "If C(ca_file) parameter is not set, system wide CA certificate store is used.",
                                "Default value is set by C(OVIRT_CAFILE) environment variable."
                            ],
                            "type": "str"
                        },
                        "compress": {
                            "default": true,
                            "description": "Flag indicating if compression is used for connection.",
                            "type": "bool"
                        },
                        "headers": {
                            "description": [
                                "Dictionary of HTTP headers to be added to each API call."
                            ],
                            "type": "dict"
                        },
                        "hostname": {
                            "description": [
                                "A string containing the hostname of the server, usually something like `I(server.example.com)`.",
                                "Default value is set by C(OVIRT_HOSTNAME) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "insecure": {
                            "description": [
                                "A boolean flag that indicates if the server TLS certificate and host name should be checked."
                            ],
                            "type": "bool"
                        },
                        "kerberos": {
                            "description": [
                                "A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "description": [
                                "The password of the user.",
                                "Default value is set by C(OVIRT_PASSWORD) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "timeout": {
                            "description": "Number of seconds to wait for response.",
                            "type": "int"
                        },
                        "token": {
                            "description": [
                                "Token to be used instead of login with username/password.",
                                "Default value is set by C(OVIRT_TOKEN) environment variable."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "A string containing the API URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`.",
                                "Default value is set by C(OVIRT_URL) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "The name of the user, something like I(admin@internal).",
                                "Default value is set by C(OVIRT_USERNAME) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "encrypt_options": {
                    "aliases": [
                        "encrypt"
                    ],
                    "description": [
                        "If I(true) options will be encrypted when send to agent."
                    ],
                    "type": "bool"
                },
                "fetch_nested": {
                    "description": [
                        "If I(True) the module will fetch additional data from the API.",
                        "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
                    ],
                    "type": "bool"
                },
                "name": {
                    "aliases": [
                        "host"
                    ],
                    "description": [
                        "Name of the host to manage."
                    ],
                    "required": true,
                    "type": "str"
                },
                "nested_attributes": {
                    "description": [
                        "Specifies list of the attributes which should be fetched from the API.",
                        "This parameter apply only when C(fetch_nested) is I(true)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "options": {
                    "description": [
                        "Dictionary of additional fence agent options (including Power Management slot).",
                        "Additional information about options can be found at U(https://github.com/ClusterLabs/fence-agents/blob/master/doc/FenceAgentAPI.md)."
                    ],
                    "type": "dict"
                },
                "order": {
                    "description": [
                        "Integer value specifying, by default it's added at the end."
                    ],
                    "type": "int"
                },
                "password": {
                    "description": [
                        "Password of the user specified in C(username) parameter."
                    ],
                    "type": "str"
                },
                "poll_interval": {
                    "default": 3,
                    "description": [
                        "Number of the seconds the module waits until another poll request on entity status is sent."
                    ],
                    "type": "int"
                },
                "port": {
                    "description": [
                        "Power management interface port."
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Should the host be present/absent."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "The amount of time in seconds the module should wait for the instance to get into desired state."
                    ],
                    "type": "int"
                },
                "type": {
                    "description": [
                        "Type of the power management. oVirt/RHV predefined values are I(drac5), I(ipmilan), I(rsa), I(bladecenter), I(alom), I(apc), I(apc_snmp), I(eps), I(wti), I(rsb), I(cisco_ucs), I(drac7), I(hpblade), I(ilo), I(ilo2), I(ilo3), I(ilo4), I(ilo_ssh), but user can have defined custom type."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Username to be used to connect to power management interface."
                    ],
                    "type": "str"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "C(yes) if the module should wait for the entity to get into desired state."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "ovirt-engine-sdk-python >= 4.4.0"
            ],
            "short_description": "Module to manage power management of hosts in oVirt/RHV",
            "version_added": "1.0.0",
            "version_added_collection": "ovirt.ovirt"
        },
        "examples": "\n# Examples don't contain auth parameter for simplicity,\n# look at ovirt_auth module to see how to reuse authentication:\n\n# Add fence agent to host 'myhost'\n- ovirt.ovirt.ovirt_host_pm:\n    name: myhost\n    address: 1.2.3.4\n    options:\n      myoption1: x\n      myoption2: y\n    username: admin\n    password: admin\n    port: 3333\n    type: ipmilan\n\n# Add fence agent to host 'myhost' using 'slot' option\n- ovirt.ovirt.ovirt_host_pm:\n    name: myhost\n    address: 1.2.3.4\n    options:\n      myoption1: x\n      myoption2: y\n      slot: myslot\n    username: admin\n    password: admin\n    port: 3333\n    type: ipmilan\n\n\n# Remove ipmilan fence agent with address 1.2.3.4 on host 'myhost'\n- ovirt.ovirt.ovirt_host_pm:\n    state: absent\n    name: myhost\n    address: 1.2.3.4\n    type: ipmilan\n",
        "metadata": null,
        "return": {
            "agent": {
                "description": "Dictionary of all the agent attributes. Agent attributes can be found on your oVirt/RHV instance at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/agent.",
                "returned": "On success if agent is found.",
                "type": "dict"
            },
            "id": {
                "description": "ID of the agent which is managed",
                "returned": "On success if agent is found.",
                "sample": "7de90f31-222c-436c-a1ca-7e655bd5b60c",
                "type": "str"
            }
        }
    }
}
