{
    "purestorage.flasharray.purefa_pod": {
        "doc": {
            "author": [
                "Pure Storage Ansible Team (@sdodsley) <pure-ansible-team@purestorage.com>"
            ],
            "collection": "purestorage.flasharray",
            "description": [
                "Manage AC pods in a Pure Storage FlashArray."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/purestorage/flasharray/plugins/modules/purefa_pod.py",
            "has_action": false,
            "module": "purefa_pod",
            "notes": [
                "This module requires the C(purestorage) Python library",
                "You must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly"
            ],
            "options": {
                "api_token": {
                    "description": [
                        "FlashArray API token for admin privileged user."
                    ],
                    "type": "str"
                },
                "eradicate": {
                    "default": false,
                    "description": [
                        "Define whether to eradicate the pod on delete or leave in trash."
                    ],
                    "type": "bool"
                },
                "fa_url": {
                    "description": [
                        "FlashArray management IPv4 address or Hostname."
                    ],
                    "type": "str"
                },
                "failover": {
                    "description": [
                        "The name of the array given priority to stay online if arrays loose contact with eachother.",
                        "Oprions are either array in the cluster, or I(auto)"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "mediator": {
                    "default": "purestorage",
                    "description": [
                        "Name of the mediator to use for a pod"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the pod."
                    ],
                    "required": true,
                    "type": "str"
                },
                "promote": {
                    "description": [
                        "Promote/demote any pod not in a stretched relationship. .",
                        "Demoting a pod will render it read-only."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "quiesce": {
                    "description": [
                        "Quiesce/Skip quiesce when I(promote) is false and demoting an ActiveDR pod.",
                        "Quiesce will ensure all local data has been replicated before demotion.",
                        "Skipping quiesce looses all pending data to be replicated to the remote pod.",
                        "Can only demote the pod if it is in a Acrive DR replica link relationship.",
                        "This will default to True"
                    ],
                    "required": false,
                    "type": "bool"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Define whether the pod should exist or not."
                    ],
                    "type": "str"
                },
                "stretch": {
                    "description": [
                        "The name of the array to stretch to/unstretch from. Must be synchromously replicated.",
                        "To unstretch an array use state I(absent)",
                        "You can only specify a remote array, ie you cannot unstretch a pod from the current array and then restretch back to the current array.",
                        "To restretch a pod you must perform this from the remaining array the pod resides on."
                    ],
                    "type": "str"
                },
                "target": {
                    "description": [
                        "Name of clone target pod."
                    ],
                    "type": "str"
                },
                "undo": {
                    "description": [
                        "Use the I(undo-remote) pod when I(promote) is true and promoting an ActiveDR pod.",
                        "This will default to True"
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "purestorage >= 1.19",
                "py-pure-client >= 1.6.0",
                "netaddr",
                "requests"
            ],
            "short_description": "Manage AC pods in Pure Storage FlashArrays",
            "version_added": "1.0.0",
            "version_added_collection": "purestorage.flasharray"
        },
        "examples": "\n- name: Create new pod named foo\n  purefa_pod:\n    name: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Delete and eradicate pod named foo\n  purefa_pod:\n    name: foo\n    eradicate: yes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Set failover array for pod named foo\n  purefa_pod:\n    name: foo\n    failover:\n    - array1\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Set mediator for pod named foo\n  purefa_pod:\n    name: foo\n    mediator: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Stretch a pod named foo to array2\n  purefa_pod:\n    name: foo\n    stretch: array2\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Unstretch a pod named foo from array2\n  purefa_pod:\n    name: foo\n    stretch: array2\n    state: absent\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Create clone of pod foo named bar\n  purefa_pod:\n    name: foo\n    target: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
