{
    "community.general.hg": {
        "doc": {
            "author": "Yeukhon Wong (@yeukhon)",
            "collection": "community.general",
            "description": [
                "Manages Mercurial (hg) repositories. Supports SSH, HTTP/S and local address."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/hg.py",
            "has_action": false,
            "module": "hg",
            "notes": [
                "This module does not support push capability. See U(https://github.com/ansible/ansible/issues/31156).",
                "If the task seems to be hanging, first verify remote host is in C(known_hosts). SSH will prompt user to authorize the first contact with a remote host.  To avoid this prompt, one solution is to add the remote host public key in C(/etc/ssh/ssh_known_hosts) before calling the hg module, with the following command: ssh-keyscan remote_host.com >> /etc/ssh/ssh_known_hosts.",
                "As per 01 Dec 2018, Bitbucket has dropped support for TLSv1 and TLSv1.1 connections. As such, if the underlying system still uses a Python version below 2.7.9, you will have issues checking out bitbucket repositories. See U(https://bitbucket.org/blog/deprecating-tlsv1-tlsv1-1-2018-12-01)."
            ],
            "options": {
                "clone": {
                    "default": "yes",
                    "description": [
                        "If C(no), do not clone the repository if it does not exist locally."
                    ],
                    "type": "bool"
                },
                "dest": {
                    "description": [
                        "Absolute path of where the repository should be cloned to. This parameter is required, unless clone and update are set to no"
                    ],
                    "type": "path"
                },
                "executable": {
                    "description": [
                        "Path to hg executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."
                    ],
                    "type": "str"
                },
                "force": {
                    "default": "no",
                    "description": [
                        "Discards uncommitted changes. Runs C(hg update -C).  Prior to 1.9, the default was `yes`."
                    ],
                    "type": "bool"
                },
                "purge": {
                    "default": "no",
                    "description": [
                        "Deletes untracked files. Runs C(hg purge)."
                    ],
                    "type": "bool"
                },
                "repo": {
                    "aliases": [
                        "name"
                    ],
                    "description": [
                        "The repository address."
                    ],
                    "required": true,
                    "type": "str"
                },
                "revision": {
                    "aliases": [
                        "version"
                    ],
                    "description": [
                        "Equivalent C(-r) option in hg command which could be the changeset, revision number, branch name or even tag."
                    ],
                    "type": "str"
                },
                "update": {
                    "default": "yes",
                    "description": [
                        "If C(no), do not retrieve new revisions from the origin repository"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Manages Mercurial (hg) repositories"
        },
        "examples": "\n- name: Ensure the current working copy is inside the stable branch and deletes untracked files if any.\n  community.general.hg:\n    repo: https://bitbucket.org/user/repo1\n    dest: /home/user/repo1\n    revision: stable\n    purge: yes\n\n- name: Get information about the repository whether or not it has already been cloned locally.\n  community.general.hg:\n    repo: git://bitbucket.org/user/repo\n    dest: /srv/checkout\n    clone: no\n    update: no\n",
        "metadata": null,
        "return": null
    }
}
