{
    "community.general.ufw": {
        "doc": {
            "author": [
                "Aleksey Ovcharenko (@ovcharenko)",
                "Jarno Keskikangas (@pyykkis)",
                "Ahti Kitsik (@ahtik)"
            ],
            "collection": "community.general",
            "description": [
                "Manage firewall with UFW."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/ufw.py",
            "has_action": false,
            "module": "ufw",
            "notes": [
                "See C(man ufw) for more examples."
            ],
            "options": {
                "comment": {
                    "description": [
                        "Add a comment to the rule. Requires UFW version >=0.35."
                    ],
                    "type": "str"
                },
                "default": {
                    "aliases": [
                        "policy"
                    ],
                    "choices": [
                        "allow",
                        "deny",
                        "reject"
                    ],
                    "description": [
                        "Change the default policy for incoming or outgoing traffic."
                    ],
                    "type": "str"
                },
                "delete": {
                    "default": false,
                    "description": [
                        "Delete rule."
                    ],
                    "type": "bool"
                },
                "direction": {
                    "choices": [
                        "in",
                        "incoming",
                        "out",
                        "outgoing",
                        "routed"
                    ],
                    "description": [
                        "Select direction for a rule or default policy command.  Mutually exclusive with I(interface_in) and I(interface_out)."
                    ],
                    "type": "str"
                },
                "from_ip": {
                    "aliases": [
                        "from",
                        "src"
                    ],
                    "default": "any",
                    "description": [
                        "Source IP address."
                    ],
                    "type": "str"
                },
                "from_port": {
                    "description": [
                        "Source port."
                    ],
                    "type": "str"
                },
                "insert": {
                    "description": [
                        "Insert the corresponding rule as rule number NUM.",
                        "Note that ufw numbers rules starting with 1."
                    ],
                    "type": "int"
                },
                "insert_relative_to": {
                    "choices": [
                        "first-ipv4",
                        "first-ipv6",
                        "last-ipv4",
                        "last-ipv6",
                        "zero"
                    ],
                    "default": "zero",
                    "description": [
                        "Allows to interpret the index in I(insert) relative to a position.",
                        "C(zero) interprets the rule number as an absolute index (i.e. 1 is the first rule).",
                        "C(first-ipv4) interprets the rule number relative to the index of the first IPv4 rule, or relative to the position where the first IPv4 rule would be if there is currently none.",
                        "C(last-ipv4) interprets the rule number relative to the index of the last IPv4 rule, or relative to the position where the last IPv4 rule would be if there is currently none.",
                        "C(first-ipv6) interprets the rule number relative to the index of the first IPv6 rule, or relative to the position where the first IPv6 rule would be if there is currently none.",
                        "C(last-ipv6) interprets the rule number relative to the index of the last IPv6 rule, or relative to the position where the last IPv6 rule would be if there is currently none."
                    ],
                    "type": "str"
                },
                "interface": {
                    "aliases": [
                        "if"
                    ],
                    "description": [
                        "Specify interface for the rule.  The direction (in or out) used for the interface depends on the value of I(direction).  See I(interface_in) and I(interface_out) for routed rules that needs to supply both an input and output interface.  Mutually exclusive with I(interface_in) and I(interface_out)."
                    ],
                    "type": "str"
                },
                "interface_in": {
                    "aliases": [
                        "if_in"
                    ],
                    "description": [
                        "Specify input interface for the rule.  This is mutually exclusive with I(direction) and I(interface).  However, it is compatible with I(interface_out) for routed rules."
                    ],
                    "type": "str",
                    "version_added": "0.2.0",
                    "version_added_collection": "community.general"
                },
                "interface_out": {
                    "aliases": [
                        "if_out"
                    ],
                    "description": [
                        "Specify output interface for the rule.  This is mutually exclusive with I(direction) and I(interface).  However, it is compatible with I(interface_in) for routed rules."
                    ],
                    "type": "str",
                    "version_added": "0.2.0",
                    "version_added_collection": "community.general"
                },
                "log": {
                    "default": false,
                    "description": [
                        "Log new connections matched to this rule"
                    ],
                    "type": "bool"
                },
                "logging": {
                    "choices": [
                        "on",
                        "off",
                        "low",
                        "medium",
                        "high",
                        "full"
                    ],
                    "description": [
                        "Toggles logging. Logged packets use the LOG_KERN syslog facility."
                    ],
                    "type": "str"
                },
                "name": {
                    "aliases": [
                        "app"
                    ],
                    "description": [
                        "Use profile located in C(/etc/ufw/applications.d)."
                    ],
                    "type": "str"
                },
                "proto": {
                    "aliases": [
                        "protocol"
                    ],
                    "choices": [
                        "any",
                        "tcp",
                        "udp",
                        "ipv6",
                        "esp",
                        "ah",
                        "gre",
                        "igmp"
                    ],
                    "description": [
                        "TCP/IP protocol."
                    ],
                    "type": "str"
                },
                "route": {
                    "default": false,
                    "description": [
                        "Apply the rule to routed/forwarded packets."
                    ],
                    "type": "bool"
                },
                "rule": {
                    "choices": [
                        "allow",
                        "deny",
                        "limit",
                        "reject"
                    ],
                    "description": [
                        "Add firewall rule"
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "disabled",
                        "enabled",
                        "reloaded",
                        "reset"
                    ],
                    "description": [
                        "C(enabled) reloads firewall and enables firewall on boot.",
                        "C(disabled) unloads firewall and disables firewall on boot.",
                        "C(reloaded) reloads firewall.",
                        "C(reset) disables and resets firewall to installation defaults."
                    ],
                    "type": "str"
                },
                "to_ip": {
                    "aliases": [
                        "dest",
                        "to"
                    ],
                    "default": "any",
                    "description": [
                        "Destination IP address."
                    ],
                    "type": "str"
                },
                "to_port": {
                    "aliases": [
                        "port"
                    ],
                    "description": [
                        "Destination port."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "C(ufw) package"
            ],
            "short_description": "Manage firewall with UFW"
        },
        "examples": "\n- name: Allow everything and enable UFW\n  community.general.ufw:\n    state: enabled\n    policy: allow\n\n- name: Set logging\n  community.general.ufw:\n    logging: 'on'\n\n# Sometimes it is desirable to let the sender know when traffic is\n# being denied, rather than simply ignoring it. In these cases, use\n# reject instead of deny. In addition, log rejected connections:\n- community.general.ufw:\n    rule: reject\n    port: auth\n    log: yes\n\n# ufw supports connection rate limiting, which is useful for protecting\n# against brute-force login attacks. ufw will deny connections if an IP\n# address has attempted to initiate 6 or more connections in the last\n# 30 seconds. See  http://www.debian-administration.org/articles/187\n# for details. Typical usage is:\n- community.general.ufw:\n    rule: limit\n    port: ssh\n    proto: tcp\n\n# Allow OpenSSH. (Note that as ufw manages its own state, simply removing\n# a rule=allow task can leave those ports exposed. Either use delete=yes\n# or a separate state=reset task)\n- community.general.ufw:\n    rule: allow\n    name: OpenSSH\n\n- name: Delete OpenSSH rule\n  community.general.ufw:\n    rule: allow\n    name: OpenSSH\n    delete: yes\n\n- name: Deny all access to port 53\n  community.general.ufw:\n    rule: deny\n    port: '53'\n\n- name: Allow port range 60000-61000\n  community.general.ufw:\n    rule: allow\n    port: 60000:61000\n    proto: tcp\n\n- name: Allow all access to tcp port 80\n  community.general.ufw:\n    rule: allow\n    port: '80'\n    proto: tcp\n\n- name: Allow all access from RFC1918 networks to this host\n  community.general.ufw:\n    rule: allow\n    src: '{{ item }}'\n  loop:\n    - 10.0.0.0/8\n    - 172.16.0.0/12\n    - 192.168.0.0/16\n\n- name: Deny access to udp port 514 from host 1.2.3.4 and include a comment\n  community.general.ufw:\n    rule: deny\n    proto: udp\n    src: 1.2.3.4\n    port: '514'\n    comment: Block syslog\n\n- name: Allow incoming access to eth0 from 1.2.3.5 port 5469 to 1.2.3.4 port 5469\n  community.general.ufw:\n    rule: allow\n    interface: eth0\n    direction: in\n    proto: udp\n    src: 1.2.3.5\n    from_port: '5469'\n    dest: 1.2.3.4\n    to_port: '5469'\n\n# Note that IPv6 must be enabled in /etc/default/ufw for IPv6 firewalling to work.\n- name: Deny all traffic from the IPv6 2001:db8::/32 to tcp port 25 on this host\n  community.general.ufw:\n    rule: deny\n    proto: tcp\n    src: 2001:db8::/32\n    port: '25'\n\n- name: Deny all IPv6 traffic to tcp port 20 on this host\n  # this should be the first IPv6 rule\n  community.general.ufw:\n    rule: deny\n    proto: tcp\n    port: '20'\n    to_ip: \"::\"\n    insert: 0\n    insert_relative_to: first-ipv6\n\n- name: Deny all IPv4 traffic to tcp port 20 on this host\n  # This should be the third to last IPv4 rule\n  # (insert: -1 addresses the second to last IPv4 rule;\n  #  so the new rule will be inserted before the second\n  #  to last IPv4 rule, and will be come the third to last\n  #  IPv4 rule.)\n  community.general.ufw:\n    rule: deny\n    proto: tcp\n    port: '20'\n    to_ip: \"::\"\n    insert: -1\n    insert_relative_to: last-ipv4\n\n# Can be used to further restrict a global FORWARD policy set to allow\n- name: Deny forwarded/routed traffic from subnet 1.2.3.0/24 to subnet 4.5.6.0/24\n  community.general.ufw:\n    rule: deny\n    route: yes\n    src: 1.2.3.0/24\n    dest: 4.5.6.0/24\n",
        "metadata": null,
        "return": null
    }
}
