{
    "ansible.posix.selinux": {
        "doc": {
            "author": [
                "Derek Carter (@goozbach) <goozbach@friocorte.com>"
            ],
            "collection": "ansible.posix",
            "description": [
                "Configures the SELinux mode and policy.",
                "A reboot may be required after usage.",
                "Ansible will not issue this reboot but will let you know when it is required."
            ],
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/ansible/posix/plugins/modules/selinux.py",
            "has_action": false,
            "module": "selinux",
            "options": {
                "configfile": {
                    "aliases": [
                        "conf",
                        "file"
                    ],
                    "default": "/etc/selinux/config",
                    "description": [
                        "The path to the SELinux configuration file, if non-standard."
                    ]
                },
                "policy": {
                    "description": [
                        "The name of the SELinux policy to use (e.g. C(targeted)) will be required if state is not C(disabled)."
                    ]
                },
                "state": {
                    "choices": [
                        "disabled",
                        "enforcing",
                        "permissive"
                    ],
                    "description": [
                        "The SELinux mode."
                    ],
                    "required": true
                }
            },
            "requirements": [
                "libselinux-python"
            ],
            "short_description": "Change policy and state of SELinux",
            "version_added": "1.0.0",
            "version_added_collection": "ansible.posix"
        },
        "examples": "\n- name: Enable SELinux\n  ansible.posix.selinux:\n    policy: targeted\n    state: enforcing\n\n- name: Put SELinux in permissive mode, logging actions that would be blocked.\n  ansible.posix.selinux:\n    policy: targeted\n    state: permissive\n\n- name: Disable SELinux\n  ansible.posix.selinux:\n    state: disabled\n",
        "metadata": null,
        "return": {
            "configfile": {
                "description": "Path to SELinux configuration file.",
                "returned": "always",
                "sample": "/etc/selinux/config",
                "type": "str"
            },
            "msg": {
                "description": "Messages that describe changes that were made.",
                "returned": "always",
                "sample": "Config SELinux state changed from 'disabled' to 'permissive'",
                "type": "str"
            },
            "policy": {
                "description": "Name of the SELinux policy.",
                "returned": "always",
                "sample": "targeted",
                "type": "str"
            },
            "reboot_required": {
                "description": "Whether or not an reboot is required for the changes to take effect.",
                "returned": "always",
                "sample": true,
                "type": "bool"
            },
            "state": {
                "description": "SELinux mode.",
                "returned": "always",
                "sample": "enforcing",
                "type": "str"
            }
        }
    }
}
