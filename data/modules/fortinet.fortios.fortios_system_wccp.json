{
    "fortinet.fortios.fortios_system_wccp": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Hongbin Lu (@fgtdev-hblu)",
                "Frank Shen (@frankshen01)",
                "Miguel Angel Munoz (@mamunozgonzalez)",
                "Nicolas Thomas (@thomnico)"
            ],
            "collection": "fortinet.fortios",
            "description": [
                "This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the user to set and modify system feature and wccp category. Examples include all parameters and values need to be adjusted to datasources before usage. Tested with FOS v6.0.0"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortios/plugins/modules/fortios_system_wccp.py",
            "has_action": false,
            "module": "fortios_system_wccp",
            "notes": [
                "Legacy fortiosapi has been deprecated, httpapi is the preferred way to run playbooks"
            ],
            "options": {
                "access_token": {
                    "description": [
                        "Token-based authentication. Generated from GUI of Fortigate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Indicates whether to create or remove the object."
                    ],
                    "required": true,
                    "type": "str"
                },
                "system_wccp": {
                    "default": null,
                    "description": [
                        "Configure WCCP."
                    ],
                    "suboptions": {
                        "assignment_bucket_format": {
                            "choices": [
                                "wccp-v2",
                                "cisco-implementation"
                            ],
                            "description": [
                                "Assignment bucket format for the WCCP cache engine."
                            ],
                            "type": "str"
                        },
                        "assignment_dstaddr_mask": {
                            "description": [
                                "Assignment destination address mask."
                            ],
                            "type": "str"
                        },
                        "assignment_method": {
                            "choices": [
                                "HASH",
                                "MASK",
                                "any"
                            ],
                            "description": [
                                "Hash key assignment preference."
                            ],
                            "type": "str"
                        },
                        "assignment_srcaddr_mask": {
                            "description": [
                                "Assignment source address mask."
                            ],
                            "type": "str"
                        },
                        "assignment_weight": {
                            "description": [
                                "Assignment of hash weight/ratio for the WCCP cache engine."
                            ],
                            "type": "int"
                        },
                        "authentication": {
                            "choices": [
                                "enable",
                                "disable"
                            ],
                            "description": [
                                "Enable/disable MD5 authentication."
                            ],
                            "type": "str"
                        },
                        "cache_engine_method": {
                            "choices": [
                                "GRE",
                                "L2"
                            ],
                            "description": [
                                "Method used to forward traffic to the routers or to return to the cache engine."
                            ],
                            "type": "str"
                        },
                        "cache_id": {
                            "description": [
                                "IP address known to all routers. If the addresses are the same, use the default 0.0.0.0."
                            ],
                            "type": "str"
                        },
                        "forward_method": {
                            "choices": [
                                "GRE",
                                "L2",
                                "any"
                            ],
                            "description": [
                                "Method used to forward traffic to the cache servers."
                            ],
                            "type": "str"
                        },
                        "group_address": {
                            "description": [
                                "IP multicast address used by the cache routers. For the FortiGate to ignore multicast WCCP traffic, use the default 0.0.0.0."
                            ],
                            "type": "str"
                        },
                        "password": {
                            "description": [
                                "Password for MD5 authentication."
                            ],
                            "type": "str"
                        },
                        "ports": {
                            "description": [
                                "Service ports."
                            ],
                            "type": "str"
                        },
                        "ports_defined": {
                            "choices": [
                                "source",
                                "destination"
                            ],
                            "description": [
                                "Match method."
                            ],
                            "type": "str"
                        },
                        "primary_hash": {
                            "choices": [
                                "src-ip",
                                "dst-ip",
                                "src-port",
                                "dst-port"
                            ],
                            "description": [
                                "Hash method."
                            ],
                            "type": "str"
                        },
                        "priority": {
                            "description": [
                                "Service priority."
                            ],
                            "type": "int"
                        },
                        "protocol": {
                            "description": [
                                "Service protocol."
                            ],
                            "type": "int"
                        },
                        "return_method": {
                            "choices": [
                                "GRE",
                                "L2",
                                "any"
                            ],
                            "description": [
                                "Method used to decline a redirected packet and return it to the FortiGate."
                            ],
                            "type": "str"
                        },
                        "router_id": {
                            "description": [
                                "IP address known to all cache engines. If all cache engines connect to the same FortiGate interface, use the default 0.0.0.0."
                            ],
                            "type": "str"
                        },
                        "router_list": {
                            "description": [
                                "IP addresses of one or more WCCP routers."
                            ],
                            "type": "str"
                        },
                        "server_list": {
                            "description": [
                                "IP addresses and netmasks for up to four cache servers."
                            ],
                            "type": "str"
                        },
                        "service_id": {
                            "description": [
                                "Service ID."
                            ],
                            "type": "str"
                        },
                        "service_type": {
                            "choices": [
                                "auto",
                                "standard",
                                "dynamic"
                            ],
                            "description": [
                                "WCCP service type used by the cache server for logical interception and redirection of traffic."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "vdom": {
                    "default": "root",
                    "description": [
                        "Virtual domain, among those defined previously. A vdom is a virtual instance of the FortiGate that can be configured and used as a different unit."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "ansible>=2.9.0"
            ],
            "short_description": "Configure WCCP in Fortinet's FortiOS and FortiGate.",
            "version_added": "2.9",
            "version_added_collection": "fortinet.fortios"
        },
        "examples": "\n- hosts: fortigates\n  collections:\n    - fortinet.fortios\n  connection: httpapi\n  vars:\n   vdom: \"root\"\n   ansible_httpapi_use_ssl: yes\n   ansible_httpapi_validate_certs: no\n   ansible_httpapi_port: 443\n  tasks:\n  - name: Configure WCCP.\n    fortios_system_wccp:\n      vdom:  \"{{ vdom }}\"\n      state: \"present\"\n      access_token: \"<your_own_value>\"\n      system_wccp:\n        assignment_bucket_format: \"wccp-v2\"\n        assignment_dstaddr_mask: \"<your_own_value>\"\n        assignment_method: \"HASH\"\n        assignment_srcaddr_mask: \"<your_own_value>\"\n        assignment_weight: \"7\"\n        authentication: \"enable\"\n        cache_engine_method: \"GRE\"\n        cache_id: \"<your_own_value>\"\n        forward_method: \"GRE\"\n        group_address: \"<your_own_value>\"\n        password: \"<your_own_value>\"\n        ports: \"<your_own_value>\"\n        ports_defined: \"source\"\n        primary_hash: \"src-ip\"\n        priority: \"17\"\n        protocol: \"18\"\n        return_method: \"GRE\"\n        router_id: \"<your_own_value>\"\n        router_list: \"<your_own_value>\"\n        server_list: \"<your_own_value>\"\n        service_id: \"<your_own_value>\"\n        service_type: \"auto\"\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "build": {
                "description": "Build number of the fortigate image",
                "returned": "always",
                "sample": "1547",
                "type": "str"
            },
            "http_method": {
                "description": "Last method used to provision the content into FortiGate",
                "returned": "always",
                "sample": "PUT",
                "type": "str"
            },
            "http_status": {
                "description": "Last result given by FortiGate on last operation applied",
                "returned": "always",
                "sample": "200",
                "type": "str"
            },
            "mkey": {
                "description": "Master key (id) used in the last call to FortiGate",
                "returned": "success",
                "sample": "id",
                "type": "str"
            },
            "name": {
                "description": "Name of the table used to fulfill the request",
                "returned": "always",
                "sample": "urlfilter",
                "type": "str"
            },
            "path": {
                "description": "Path of the table used to fulfill the request",
                "returned": "always",
                "sample": "webfilter",
                "type": "str"
            },
            "revision": {
                "description": "Internal revision number",
                "returned": "always",
                "sample": "17.0.2.10658",
                "type": "str"
            },
            "serial": {
                "description": "Serial number of the unit",
                "returned": "always",
                "sample": "FGVMEVYYQT3AB5352",
                "type": "str"
            },
            "status": {
                "description": "Indication of the operation's result",
                "returned": "always",
                "sample": "success",
                "type": "str"
            },
            "vdom": {
                "description": "Virtual domain used",
                "returned": "always",
                "sample": "root",
                "type": "str"
            },
            "version": {
                "description": "Version of the FortiGate",
                "returned": "always",
                "sample": "v5.6.3",
                "type": "str"
            }
        }
    }
}
