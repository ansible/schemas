{
    "community.aws.dms_endpoint": {
        "doc": {
            "author": [
                "Rui Moreira (@ruimoreira)"
            ],
            "collection": "community.aws",
            "description": [
                "Creates or destroys a data migration services endpoint, that can be used to replicate data."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/dms_endpoint.py",
            "has_action": false,
            "module": "dms_endpoint",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "certificatearn": {
                    "description": [
                        "Amazon Resource Name (ARN) for the certificate."
                    ],
                    "type": "str"
                },
                "databasename": {
                    "description": [
                        "Name for the database on the origin or target side."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "dmstransfersettings": {
                    "description": [
                        "The settings in JSON format for the DMS transfer type of source endpoint."
                    ],
                    "type": "dict"
                },
                "dynamodbsettings": {
                    "description": [
                        "Settings in JSON format for the target Amazon DynamoDB endpoint if source or target is dynamodb."
                    ],
                    "type": "dict"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "elasticsearchsettings": {
                    "description": [
                        "Settings in JSON format for the target Elasticsearch endpoint."
                    ],
                    "type": "dict"
                },
                "endpointidentifier": {
                    "description": [
                        "An identifier name for the endpoint."
                    ],
                    "required": true,
                    "type": "str"
                },
                "endpointtype": {
                    "choices": [
                        "source",
                        "target"
                    ],
                    "description": [
                        "Type of endpoint we want to manage."
                    ],
                    "required": true,
                    "type": "str"
                },
                "enginename": {
                    "choices": [
                        "mysql",
                        "oracle",
                        "postgres",
                        "mariadb",
                        "aurora",
                        "redshift",
                        "s3",
                        "db2",
                        "azuredb",
                        "sybase",
                        "dynamodb",
                        "mongodb",
                        "sqlserver"
                    ],
                    "description": [
                        "Database engine that we want to use, please refer to the AWS DMS for more information on the supported engines and their limitations."
                    ],
                    "required": true,
                    "type": "str"
                },
                "externaltabledefinition": {
                    "description": [
                        "The external table definition."
                    ],
                    "type": "str"
                },
                "extraconnectionattributes": {
                    "description": [
                        "Extra attributes for the database connection, the AWS documentation states \" For more information about extra connection attributes, see the documentation section for your data store.\""
                    ],
                    "type": "str"
                },
                "kinesissettings": {
                    "description": [
                        "Settings in JSON format for the target Amazon Kinesis Data Streams endpoint."
                    ],
                    "type": "dict"
                },
                "kmskeyid": {
                    "description": [
                        "Encryption key to use to encrypt replication storage and connection information."
                    ],
                    "type": "str"
                },
                "mongodbsettings": {
                    "description": [
                        "Settings in JSON format for the source MongoDB endpoint."
                    ],
                    "type": "dict"
                },
                "password": {
                    "description": [
                        "Password used to connect to the database this attribute can only be written the AWS API does not return this parameter."
                    ],
                    "type": "str"
                },
                "port": {
                    "description": [
                        "TCP port for access to the database."
                    ],
                    "type": "int"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "retries": {
                    "description": [
                        "number of times we should retry when deleting a resource",
                        "Required when I(wait=true)."
                    ],
                    "type": "int"
                },
                "s3settings": {
                    "description": [
                        "S3 buckets settings for the target Amazon S3 endpoint."
                    ],
                    "type": "dict"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "servername": {
                    "description": [
                        "Servername that the endpoint will connect to."
                    ],
                    "type": "str"
                },
                "serviceaccessrolearn": {
                    "description": [
                        "Amazon Resource Name (ARN) for the service access role that you want to use to create the endpoint."
                    ],
                    "type": "str"
                },
                "sslmode": {
                    "choices": [
                        "none",
                        "require",
                        "verify-ca",
                        "verify-full"
                    ],
                    "default": "none",
                    "description": [
                        "Mode used for the SSL connection."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the endpoint."
                    ],
                    "type": "str"
                },
                "tags": {
                    "description": [
                        "A list of tags to add to the endpoint."
                    ],
                    "type": "dict"
                },
                "timeout": {
                    "description": [
                        "Time in seconds we should wait for when deleting a resource.",
                        "Required when I(wait=true)."
                    ],
                    "type": "int"
                },
                "username": {
                    "description": [
                        "Username our endpoint will use to connect to the database."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": false,
                    "description": [
                        "Whether Ansible should wait for the object to be deleted when I(state=absent)."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.6",
                "boto"
            ],
            "short_description": "Creates or destroys a data migration services endpoint",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details\n- name: Endpoint Creation\n  community.aws.dms_endpoint:\n    state: absent\n    endpointidentifier: 'testsource'\n    endpointtype: source\n    enginename: aurora\n    username: testing1\n    password: testint1234\n    servername: testing.domain.com\n    port: 3306\n    databasename: 'testdb'\n    sslmode: none\n    wait: false\n",
        "metadata": null,
        "return": null
    }
}
