{
    "ovirt.ovirt.ovirt_nic": {
        "doc": {
            "author": [
                "Ondra Machacek (@machacekondra)",
                "Martin Necas (@mnecas)"
            ],
            "collection": "ovirt.ovirt",
            "description": [
                "Module to manage network interfaces of Virtual Machines in oVirt/RHV."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ovirt/ovirt/plugins/modules/ovirt_nic.py",
            "has_action": false,
            "module": "ovirt_nic",
            "notes": [
                "In order to use this module you have to install oVirt Python SDK. To ensure it's installed with correct version you can create the following task: I(pip: name=ovirt-engine-sdk-python version=4.4.0)"
            ],
            "options": {
                "auth": {
                    "description": [
                        "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:"
                    ],
                    "required": true,
                    "suboptions": {
                        "ca_file": {
                            "description": [
                                "A PEM file containing the trusted CA certificates.",
                                "The certificate presented by the server will be verified using these CA certificates.",
                                "If C(ca_file) parameter is not set, system wide CA certificate store is used.",
                                "Default value is set by C(OVIRT_CAFILE) environment variable."
                            ],
                            "type": "str"
                        },
                        "compress": {
                            "default": true,
                            "description": "Flag indicating if compression is used for connection.",
                            "type": "bool"
                        },
                        "headers": {
                            "description": [
                                "Dictionary of HTTP headers to be added to each API call."
                            ],
                            "type": "dict"
                        },
                        "hostname": {
                            "description": [
                                "A string containing the hostname of the server, usually something like `I(server.example.com)`.",
                                "Default value is set by C(OVIRT_HOSTNAME) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "insecure": {
                            "description": [
                                "A boolean flag that indicates if the server TLS certificate and host name should be checked."
                            ],
                            "type": "bool"
                        },
                        "kerberos": {
                            "description": [
                                "A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
                            ],
                            "type": "bool"
                        },
                        "password": {
                            "description": [
                                "The password of the user.",
                                "Default value is set by C(OVIRT_PASSWORD) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "timeout": {
                            "description": "Number of seconds to wait for response.",
                            "type": "int"
                        },
                        "token": {
                            "description": [
                                "Token to be used instead of login with username/password.",
                                "Default value is set by C(OVIRT_TOKEN) environment variable."
                            ],
                            "type": "str"
                        },
                        "url": {
                            "description": [
                                "A string containing the API URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`.",
                                "Default value is set by C(OVIRT_URL) environment variable.",
                                "Either C(url) or C(hostname) is required."
                            ],
                            "type": "str"
                        },
                        "username": {
                            "description": [
                                "The name of the user, something like I(admin@internal).",
                                "Default value is set by C(OVIRT_USERNAME) environment variable."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "fetch_nested": {
                    "description": [
                        "If I(True) the module will fetch additional data from the API.",
                        "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
                    ],
                    "type": "bool"
                },
                "id": {
                    "description": [
                        "ID of the nic to manage."
                    ],
                    "type": "str"
                },
                "interface": {
                    "description": [
                        "Type of the network interface. For example e1000, pci_passthrough, rtl8139, rtl8139_virtio, spapr_vlan or virtio.",
                        "It's required parameter when creating the new NIC."
                    ],
                    "type": "str"
                },
                "linked": {
                    "description": [
                        "Defines if the NIC is linked to the virtual machine."
                    ],
                    "type": "bool"
                },
                "mac_address": {
                    "description": [
                        "Custom MAC address of the network interface, by default it's obtained from MAC pool."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the network interface to manage."
                    ],
                    "required": true,
                    "type": "str"
                },
                "nested_attributes": {
                    "description": [
                        "Specifies list of the attributes which should be fetched from the API.",
                        "This parameter apply only when C(fetch_nested) is I(true)."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "network": {
                    "description": [
                        "Logical network to which the VM network interface should use, by default Empty network is used if network is not specified."
                    ],
                    "type": "str"
                },
                "poll_interval": {
                    "default": 3,
                    "description": [
                        "Number of the seconds the module waits until another poll request on entity status is sent."
                    ],
                    "type": "int"
                },
                "profile": {
                    "description": [
                        "Virtual network interface profile to be attached to VM network interface.",
                        "When not specified and network has only single profile it will be auto-selected, otherwise you must specify profile."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "plugged",
                        "present",
                        "unplugged"
                    ],
                    "default": "present",
                    "description": [
                        "Should the Virtual Machine NIC be present/absent/plugged/unplugged."
                    ],
                    "type": "str"
                },
                "template": {
                    "description": [
                        "Name of the template to manage.",
                        "You must provide either C(vm) parameter or C(template) parameter."
                    ],
                    "type": "str"
                },
                "template_version": {
                    "description": [
                        "Version number of the template."
                    ],
                    "type": "int",
                    "version_added": "1.2.0",
                    "version_added_collection": "ovirt.ovirt"
                },
                "timeout": {
                    "default": 180,
                    "description": [
                        "The amount of time in seconds the module should wait for the instance to get into desired state."
                    ],
                    "type": "int"
                },
                "vm": {
                    "description": [
                        "Name of the Virtual Machine to manage.",
                        "You must provide either C(vm) parameter or C(template) parameter."
                    ],
                    "type": "str"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "C(yes) if the module should wait for the entity to get into desired state."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "ovirt-engine-sdk-python >= 4.4.0"
            ],
            "short_description": "Module to manage network interfaces of Virtual Machines in oVirt/RHV",
            "version_added": "1.0.0",
            "version_added_collection": "ovirt.ovirt"
        },
        "examples": "\n# Examples don't contain auth parameter for simplicity,\n# look at ovirt_auth module to see how to reuse authentication:\n\n- name: Add NIC to VM\n  ovirt.ovirt.ovirt_nic:\n    state: present\n    vm: myvm\n    name: mynic\n    interface: e1000\n    mac_address: 00:1a:4a:16:01:56\n    profile: ovirtmgmt\n    network: ovirtmgmt\n\n- name: Plug NIC to VM\n  ovirt.ovirt.ovirt_nic:\n    state: plugged\n    vm: myvm\n    name: mynic\n\n- name: Unplug NIC from VM\n  ovirt.ovirt.ovirt_nic:\n    state: unplugged\n    linked: false\n    vm: myvm\n    name: mynic\n\n- name: Add NIC to template\n  ovirt.ovirt.ovirt_nic:\n    auth: \"{{ ovirt_auth }}\"\n    state: present\n    template: my_template\n    name: nic1\n    interface: virtio\n    profile: ovirtmgmt\n    network: ovirtmgmt\n\n- name: Remove NIC from VM\n  ovirt.ovirt.ovirt_nic:\n    state: absent\n    vm: myvm\n    name: mynic\n\n# Change NIC Name\n- ovirt.ovirt.ovirt_nic:\n    id: 00000000-0000-0000-0000-000000000000\n    name: \"new_nic_name\"\n    vm: myvm\n",
        "metadata": null,
        "return": {
            "id": {
                "description": "ID of the network interface which is managed",
                "returned": "On success if network interface is found.",
                "sample": "7de90f31-222c-436c-a1ca-7e655bd5b60c",
                "type": "str"
            },
            "nic": {
                "description": "Dictionary of all the network interface attributes. Network interface attributes can be found on your oVirt/RHV instance at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/nic.",
                "returned": "On success if network interface is found.",
                "type": "dict"
            }
        }
    }
}
