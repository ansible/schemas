{
    "community.general.consul_acl": {
        "doc": {
            "author": [
                "Steve Gargan (@sgargan)",
                "Colin Nolan (@colin-nolan)"
            ],
            "collection": "community.general",
            "description": [
                "Allows the addition, modification and deletion of ACL keys and associated rules in a consul cluster via the agent. For more details on using and configuring ACLs, see https://www.consul.io/docs/guides/acl.html."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/consul_acl.py",
            "has_action": false,
            "module": "consul_acl",
            "options": {
                "host": {
                    "default": "localhost",
                    "description": [
                        "host of the consul agent defaults to localhost"
                    ],
                    "required": false,
                    "type": "str"
                },
                "mgmt_token": {
                    "description": [
                        "a management token is required to manipulate the acl lists"
                    ],
                    "required": true,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "the name that should be associated with the acl key, this is opaque to Consul"
                    ],
                    "required": false,
                    "type": "str"
                },
                "port": {
                    "default": 8500,
                    "description": [
                        "the port on which the consul agent is running"
                    ],
                    "required": false,
                    "type": "int"
                },
                "rules": {
                    "description": [
                        "rules that should be associated with a given token"
                    ],
                    "elements": "dict",
                    "required": false,
                    "type": "list"
                },
                "scheme": {
                    "default": "http",
                    "description": [
                        "the protocol scheme on which the consul agent is running"
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "whether the ACL pair should be present or absent"
                    ],
                    "required": false,
                    "type": "str"
                },
                "token": {
                    "description": [
                        "the token key identifying an ACL rule set. If generated by consul this will be a UUID"
                    ],
                    "required": false,
                    "type": "str"
                },
                "token_type": {
                    "choices": [
                        "client",
                        "management"
                    ],
                    "default": "client",
                    "description": [
                        "the type of token that should be created"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "whether to verify the tls certificate of the consul agent"
                    ],
                    "required": false,
                    "type": "bool"
                }
            },
            "requirements": [
                "python-consul",
                "pyhcl",
                "requests"
            ],
            "short_description": "Manipulate Consul ACL keys and rules"
        },
        "examples": "\n- name: Create an ACL with rules\n  community.general.consul_acl:\n    host: consul1.example.com\n    mgmt_token: some_management_acl\n    name: Foo access\n    rules:\n      - key: \"foo\"\n        policy: read\n      - key: \"private/foo\"\n        policy: deny\n\n- name: Create an ACL with a specific token\n  community.general.consul_acl:\n    host: consul1.example.com\n    mgmt_token: some_management_acl\n    name: Foo access\n    token: my-token\n    rules:\n      - key: \"foo\"\n        policy: read\n\n- name: Update the rules associated to an ACL token\n  community.general.consul_acl:\n    host: consul1.example.com\n    mgmt_token: some_management_acl\n    name: Foo access\n    token: some_client_token\n    rules:\n      - event: \"bbq\"\n        policy: write\n      - key: \"foo\"\n        policy: read\n      - key: \"private\"\n        policy: deny\n      - keyring: write\n      - node: \"hgs4\"\n        policy: write\n      - operator: read\n      - query: \"\"\n        policy: write\n      - service: \"consul\"\n        policy: write\n      - session: \"standup\"\n        policy: write\n\n- name: Remove a token\n  community.general.consul_acl:\n    host: consul1.example.com\n    mgmt_token: some_management_acl\n    token: 172bd5c8-9fe9-11e4-b1b0-3c15c2c9fd5e\n    state: absent\n",
        "metadata": null,
        "return": {
            "operation": {
                "description": "the operation performed on the ACL",
                "returned": "changed",
                "sample": "update",
                "type": "str"
            },
            "rules": {
                "description": "the HCL JSON representation of the rules associated to the ACL, in the format described in the Consul documentation (https://www.consul.io/docs/guides/acl.html#rule-specification).",
                "returned": "I(status) == \"present\"",
                "sample": {
                    "key": {
                        "bar": {
                            "policy": "deny"
                        },
                        "foo": {
                            "policy": "write"
                        }
                    }
                },
                "type": "str"
            },
            "token": {
                "description": "the token associated to the ACL (the ACL's ID)",
                "returned": "success",
                "sample": "a2ec332f-04cf-6fba-e8b8-acf62444d3da",
                "type": "str"
            }
        }
    }
}
