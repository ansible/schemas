{
    "ansible.windows.win_copy": {
        "doc": {
            "author": [
                "Jon Hawkesworth (@jhawkesworth)",
                "Jordan Borean (@jborean93)"
            ],
            "collection": "ansible.windows",
            "description": [
                "The C(win_copy) module copies a file on the local box to remote windows locations.",
                "For non-Windows targets, use the M(ansible.builtin.copy) module instead."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ansible/windows/plugins/modules/win_copy.py",
            "has_action": true,
            "module": "win_copy",
            "notes": [
                "Currently win_copy does not support copying symbolic links from both local to remote and remote to remote.",
                "It is recommended that backslashes C(\\) are used instead of C(/) when dealing with remote paths.",
                "Because win_copy runs over WinRM, it is not a very efficient transfer mechanism. If sending large files consider hosting them on a web service and using M(ansible.windows.win_get_url) instead."
            ],
            "options": {
                "backup": {
                    "default": false,
                    "description": [
                        "Determine whether a backup should be created.",
                        "When set to C(yes), create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly.",
                        "No backup is taken when C(remote_src=False) and multiple files are being copied."
                    ],
                    "type": "bool"
                },
                "content": {
                    "description": [
                        "When used instead of C(src), sets the contents of a file directly to the specified value.",
                        "This is for simple values, for anything complex or with formatting please switch to the M(ansible.windows.win_template) module."
                    ],
                    "type": "str"
                },
                "decrypt": {
                    "default": true,
                    "description": [
                        "This option controls the autodecryption of source files using vault."
                    ],
                    "type": "bool"
                },
                "dest": {
                    "description": [
                        "Remote absolute path where the file should be copied to.",
                        "If C(src) is a directory, this must be a directory too.",
                        "Use \\ for path separators or \\\\ when in \"double quotes\".",
                        "If C(dest) ends with \\ then source or the contents of source will be copied to the directory without renaming.",
                        "If C(dest) is a nonexistent path, it will only be created if C(dest) ends with \"/\" or \"\\\", or C(src) is a directory.",
                        "If C(src) and C(dest) are files and if the parent directory of C(dest) doesn't exist, then the task will fail."
                    ],
                    "required": true,
                    "type": "path"
                },
                "force": {
                    "default": true,
                    "description": [
                        "If set to C(yes), the file will only be transferred if the content is different than destination.",
                        "If set to C(no), the file will only be transferred if the destination does not exist.",
                        "If set to C(no), no checksuming of the content is performed which can help improve performance on larger files."
                    ],
                    "type": "bool"
                },
                "local_follow": {
                    "default": true,
                    "description": [
                        "This flag indicates that filesystem links in the source tree, if they exist, should be followed."
                    ],
                    "type": "bool"
                },
                "remote_src": {
                    "default": false,
                    "description": [
                        "If C(no), it will search for src at originating/controller machine.",
                        "If C(yes), it will go to the remote/target machine for the src."
                    ],
                    "type": "bool"
                },
                "src": {
                    "description": [
                        "Local path to a file to copy to the remote server; can be absolute or relative.",
                        "If path is a directory, it is copied (including the source folder name) recursively to C(dest).",
                        "If path is a directory and ends with \"/\", only the inside contents of that directory are copied to the destination. Otherwise, if it does not end with \"/\", the directory itself with all contents is copied.",
                        "If path is a file and dest ends with \"\\\", the file is copied to the folder with the same filename.",
                        "Required unless using C(content)."
                    ],
                    "type": "path"
                }
            },
            "seealso": [
                {
                    "module": "community.general.assemble"
                },
                {
                    "module": "ansible.builtin.copy"
                },
                {
                    "module": "ansible.windows.win_get_url"
                },
                {
                    "module": "community.windows.win_robocopy"
                }
            ],
            "short_description": "Copies files to remote locations on windows hosts"
        },
        "examples": "\n- name: Copy a single file\n  ansible.windows.win_copy:\n    src: /srv/myfiles/foo.conf\n    dest: C:\\Temp\\renamed-foo.conf\n\n- name: Copy a single file, but keep a backup\n  ansible.windows.win_copy:\n    src: /srv/myfiles/foo.conf\n    dest: C:\\Temp\\renamed-foo.conf\n    backup: yes\n\n- name: Copy a single file keeping the filename\n  ansible.windows.win_copy:\n    src: /src/myfiles/foo.conf\n    dest: C:\\Temp\\\n\n- name: Copy folder to C:\\Temp (results in C:\\Temp\\temp_files)\n  ansible.windows.win_copy:\n    src: files/temp_files\n    dest: C:\\Temp\n\n- name: Copy folder contents recursively\n  ansible.windows.win_copy:\n    src: files/temp_files/\n    dest: C:\\Temp\n\n- name: Copy a single file where the source is on the remote host\n  ansible.windows.win_copy:\n    src: C:\\Temp\\foo.txt\n    dest: C:\\ansible\\foo.txt\n    remote_src: yes\n\n- name: Copy a folder recursively where the source is on the remote host\n  ansible.windows.win_copy:\n    src: C:\\Temp\n    dest: C:\\ansible\n    remote_src: yes\n\n- name: Set the contents of a file\n  ansible.windows.win_copy:\n    content: abc123\n    dest: C:\\Temp\\foo.txt\n\n- name: Copy a single file as another user\n  ansible.windows.win_copy:\n    src: NuGet.config\n    dest: '%AppData%\\NuGet\\NuGet.config'\n  vars:\n    ansible_become_user: user\n    ansible_become_password: pass\n    # The tmp dir must be set when using win_copy as another user\n    # This ensures the become user will have permissions for the operation\n    # Make sure to specify a folder both the ansible_user and the become_user have access to (i.e not %TEMP% which is user specific and requires Admin)\n    ansible_remote_tmp: 'c:\\tmp'\n",
        "metadata": null,
        "return": {
            "backup_file": {
                "description": "Name of the backup file that was created.",
                "returned": "if backup=yes",
                "sample": "C:\\Path\\To\\File.txt.11540.20150212-220915.bak",
                "type": "str"
            },
            "checksum": {
                "description": "SHA1 checksum of the file after running copy.",
                "returned": "success, src is a file",
                "sample": "6e642bb8dd5c2e027bf21dd923337cbb4214f827",
                "type": "str"
            },
            "dest": {
                "description": "Destination file/path.",
                "returned": "changed",
                "sample": "C:\\Temp\\",
                "type": "str"
            },
            "operation": {
                "description": "Whether a single file copy took place or a folder copy.",
                "returned": "success",
                "sample": "file_copy",
                "type": "str"
            },
            "original_basename": {
                "description": "Basename of the copied file.",
                "returned": "changed, src is a file",
                "sample": "foo.txt",
                "type": "str"
            },
            "size": {
                "description": "Size of the target, after execution.",
                "returned": "changed, src is a file",
                "sample": 1220,
                "type": "int"
            },
            "src": {
                "description": "Source file used for the copy on the target machine.",
                "returned": "changed",
                "sample": "/home/httpd/.ansible/tmp/ansible-tmp-1423796390.97-147729857856000/source",
                "type": "str"
            }
        }
    }
}
