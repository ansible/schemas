{
    "ansible.windows.win_get_url": {
        "doc": {
            "author": [
                "Paul Durivage (@angstwad)",
                "Takeshi Kuramochi (@tksarah)"
            ],
            "collection": "ansible.windows",
            "description": [
                "Downloads files from HTTP, HTTPS, or FTP to the remote server.",
                "The remote server I(must) have direct access to the remote resource.",
                "For non-Windows targets, use the M(ansible.builtin.get_url) module instead."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/ansible/windows/plugins/modules/win_get_url.py",
            "has_action": false,
            "module": "win_get_url",
            "notes": [
                "If your URL includes an escaped slash character (%2F) this module will convert it to a real slash. This is a result of the behaviour of the System.Uri class as described in L(the documentation,https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/network/schemesettings-element-uri-settings#remarks)."
            ],
            "options": {
                "checksum": {
                    "description": [
                        "If a I(checksum) is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully.",
                        "This option cannot be set with I(checksum_url)."
                    ],
                    "type": "str"
                },
                "checksum_algorithm": {
                    "choices": [
                        "md5",
                        "sha1",
                        "sha256",
                        "sha384",
                        "sha512"
                    ],
                    "default": "sha1",
                    "description": [
                        "Specifies the hashing algorithm used when calculating the checksum of the remote and destination file."
                    ],
                    "type": "str"
                },
                "checksum_url": {
                    "description": [
                        "Specifies a URL that contains the checksum values for the resource at I(url).",
                        "Like C(checksum), this is used to verify the integrity of the remote transfer.",
                        "This option cannot be set with I(checksum)."
                    ],
                    "type": "str"
                },
                "client_cert": {
                    "description": [
                        "The path to the client certificate (.pfx) that is used for X509 authentication. This path can either be the path to the C(pfx) on the filesystem or the PowerShell certificate path C(Cert:\\CurrentUser\\My\\<thumbprint>).",
                        "The WinRM connection must be authenticated with C(CredSSP) or C(become) is used on the task if the certificate file is not password protected.",
                        "Other authentication types can set I(client_cert_password) when the cert is password protected."
                    ],
                    "type": "str"
                },
                "client_cert_password": {
                    "description": [
                        "The password for I(client_cert) if the cert is password protected."
                    ],
                    "type": "str"
                },
                "dest": {
                    "description": [
                        "The location to save the file at the URL.",
                        "Be sure to include a filename and extension as appropriate."
                    ],
                    "required": true,
                    "type": "path"
                },
                "follow_redirects": {
                    "choices": [
                        "all",
                        "none",
                        "safe"
                    ],
                    "default": "safe",
                    "description": [
                        "Whether or the module should follow redirects.",
                        "C(all) will follow all redirect.",
                        "C(none) will not follow any redirect.",
                        "C(safe) will follow only \"safe\" redirects, where \"safe\" means that the client is only doing a C(GET) or C(HEAD) on the URI to which it is being redirected.",
                        "When following a redirected URL, the C(Authorization) header and any credentials set will be dropped and not redirected."
                    ],
                    "type": "str"
                },
                "force": {
                    "default": true,
                    "description": [
                        "If C(yes), will download the file every time and replace the file if the contents change. If C(no), will only download the file if it does not exist or the remote file has been modified more recently than the local file.",
                        "This works by sending an http HEAD request to retrieve last modified time of the requested resource, so for this to work, the remote web server must support HEAD requests."
                    ],
                    "type": "bool"
                },
                "force_basic_auth": {
                    "default": false,
                    "description": [
                        "By default the authentication header is only sent when a webservice responses to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail.",
                        "This option forces the sending of the Basic authentication header upon the original request."
                    ],
                    "type": "bool"
                },
                "headers": {
                    "description": [
                        "Extra headers to set on the request.",
                        "This should be a dictionary where the key is the header name and the value is the value for that header."
                    ],
                    "type": "dict"
                },
                "http_agent": {
                    "default": "ansible-httpget",
                    "description": [
                        "Header to identify as, generally appears in web server logs.",
                        "This is set to the C(User-Agent) header on a HTTP request."
                    ],
                    "type": "str"
                },
                "maximum_redirection": {
                    "default": 50,
                    "description": [
                        "Specify how many times the module will redirect a connection to an alternative URI before the connection fails.",
                        "If set to C(0) or I(follow_redirects) is set to C(none), or C(safe) when not doing a C(GET) or C(HEAD) it prevents all redirection."
                    ],
                    "type": "int"
                },
                "proxy_password": {
                    "description": [
                        "The password for I(proxy_username)."
                    ],
                    "type": "str"
                },
                "proxy_url": {
                    "description": [
                        "An explicit proxy to use for the request.",
                        "By default, the request will use the IE defined proxy unless I(use_proxy) is set to C(no)."
                    ],
                    "type": "str"
                },
                "proxy_use_default_credential": {
                    "default": false,
                    "description": [
                        "Uses the current user's credentials when authenticating with a proxy host protected with C(NTLM), C(Kerberos), or C(Negotiate) authentication.",
                        "Proxies that use C(Basic) auth will still require explicit credentials through the I(proxy_username) and I(proxy_password) options.",
                        "The module will only have access to the user's credentials if using C(become) with a password, you are connecting with SSH using a password, or connecting with WinRM using C(CredSSP) or C(Kerberos with delegation).",
                        "If not using C(become) or a different auth method to the ones stated above, there will be no default credentials available and no proxy authentication will occur."
                    ],
                    "type": "bool"
                },
                "proxy_username": {
                    "description": [
                        "The username to use for proxy authentication."
                    ],
                    "type": "str"
                },
                "url": {
                    "description": [
                        "The full URL of a file to download."
                    ],
                    "required": true,
                    "type": "str"
                },
                "url_method": {
                    "aliases": [
                        "method"
                    ],
                    "description": [
                        "The HTTP Method of the request."
                    ],
                    "type": "str"
                },
                "url_password": {
                    "aliases": [
                        "password"
                    ],
                    "description": [
                        "The password for I(url_username).",
                        "The alias I(password) is deprecated and will be removed on the major release after C(2022-07-01)."
                    ],
                    "type": "str"
                },
                "url_timeout": {
                    "aliases": [
                        "timeout"
                    ],
                    "default": 30,
                    "description": [
                        "Specifies how long the request can be pending before it times out (in seconds).",
                        "Set to C(0) to specify an infinite timeout."
                    ],
                    "type": "int"
                },
                "url_username": {
                    "aliases": [
                        "user",
                        "username"
                    ],
                    "description": [
                        "The username to use for authentication.",
                        "The alias I(user) and I(username) is deprecated and will be removed on the major release after C(2022-07-01)."
                    ],
                    "type": "str"
                },
                "use_default_credential": {
                    "default": false,
                    "description": [
                        "Uses the current user's credentials when authenticating with a server protected with C(NTLM), C(Kerberos), or C(Negotiate) authentication.",
                        "Sites that use C(Basic) auth will still require explicit credentials through the I(url_username) and I(url_password) options.",
                        "The module will only have access to the user's credentials if using C(become) with a password, you are connecting with SSH using a password, or connecting with WinRM using C(CredSSP) or C(Kerberos with delegation).",
                        "If not using C(become) or a different auth method to the ones stated above, there will be no default credentials available and no authentication will occur."
                    ],
                    "type": "bool"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use the proxy defined in IE for the current user."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "seealso": [
                {
                    "module": "ansible.builtin.get_url"
                },
                {
                    "module": "ansible.builtin.uri"
                },
                {
                    "module": "ansible.windows.win_uri"
                },
                {
                    "module": "community.windows.win_inet_proxy"
                }
            ],
            "short_description": "Downloads file from HTTP, HTTPS, or FTP to node"
        },
        "examples": "\n- name: Download earthrise.jpg to specified path\n  ansible.windows.win_get_url:\n    url: http://www.example.com/earthrise.jpg\n    dest: C:\\Users\\RandomUser\\earthrise.jpg\n\n- name: Download earthrise.jpg to specified path only if modified\n  ansible.windows.win_get_url:\n    url: http://www.example.com/earthrise.jpg\n    dest: C:\\Users\\RandomUser\\earthrise.jpg\n    force: no\n\n- name: Download earthrise.jpg to specified path through a proxy server.\n  ansible.windows.win_get_url:\n    url: http://www.example.com/earthrise.jpg\n    dest: C:\\Users\\RandomUser\\earthrise.jpg\n    proxy_url: http://10.0.0.1:8080\n    proxy_username: username\n    proxy_password: password\n\n- name: Download file from FTP with authentication\n  ansible.windows.win_get_url:\n    url: ftp://server/file.txt\n    dest: '%TEMP%\\ftp-file.txt'\n    url_username: ftp-user\n    url_password: ftp-password\n\n- name: Download src with sha256 checksum url\n  ansible.windows.win_get_url:\n    url: http://www.example.com/earthrise.jpg\n    dest: C:\\temp\\earthrise.jpg\n    checksum_url: http://www.example.com/sha256sum.txt\n    checksum_algorithm: sha256\n    force: True\n\n- name: Download src with sha256 checksum url\n  ansible.windows.win_get_url:\n    url: http://www.example.com/earthrise.jpg\n    dest: C:\\temp\\earthrise.jpg\n    checksum: a97e6837f60cec6da4491bab387296bbcd72bdba\n    checksum_algorithm: sha1\n    force: True\n",
        "metadata": null,
        "return": {
            "checksum_dest": {
                "description": "<algorithm> checksum of the file after the download",
                "returned": "success and dest has been downloaded",
                "sample": "6e642bb8dd5c2e027bf21dd923337cbb4214f827",
                "type": "str"
            },
            "checksum_src": {
                "description": "<algorithm> checksum of the remote resource",
                "returned": "force=yes or dest did not exist",
                "sample": "6e642bb8dd5c2e027bf21dd923337cbb4214f827",
                "type": "str"
            },
            "dest": {
                "description": "destination file/path",
                "returned": "always",
                "sample": "C:\\Users\\RandomUser\\earthrise.jpg",
                "type": "str"
            },
            "elapsed": {
                "description": "The elapsed seconds between the start of poll and the end of the module.",
                "returned": "always",
                "sample": 2.1406487,
                "type": "float"
            },
            "msg": {
                "description": "Error message, or HTTP status message from web-server",
                "returned": "always",
                "sample": "OK",
                "type": "str"
            },
            "size": {
                "description": "size of the dest file",
                "returned": "success",
                "sample": 1220,
                "type": "int"
            },
            "status_code": {
                "description": "HTTP status code",
                "returned": "always",
                "sample": 200,
                "type": "int"
            },
            "url": {
                "description": "requested url",
                "returned": "always",
                "sample": "http://www.example.com/earthrise.jpg",
                "type": "str"
            }
        }
    }
}
