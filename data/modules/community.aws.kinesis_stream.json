{
    "community.aws.kinesis_stream": {
        "doc": {
            "author": "Allen Sanabria (@linuxdynasty)",
            "collection": "community.aws",
            "description": [
                "Create or Delete a Kinesis Stream.",
                "Update the retention period of a Kinesis Stream.",
                "Update Tags on a Kinesis Stream.",
                "Enable/disable server side encryption on a Kinesis Stream."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/kinesis_stream.py",
            "has_action": false,
            "module": "kinesis_stream",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "encryption_state": {
                    "choices": [
                        "enabled",
                        "disabled"
                    ],
                    "description": [
                        "Enable or Disable encryption on the Kinesis Stream."
                    ],
                    "type": "str"
                },
                "encryption_type": {
                    "choices": [
                        "KMS",
                        "NONE"
                    ],
                    "description": [
                        "The type of encryption.",
                        "Defaults to C(KMS)"
                    ],
                    "type": "str"
                },
                "key_id": {
                    "description": [
                        "The GUID or alias for the KMS key."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the Kinesis Stream you are managing."
                    ],
                    "required": true,
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "retention_period": {
                    "description": [
                        "The length of time (in hours) data records are accessible after they are added to the stream.",
                        "The default retention period is 24 hours and can not be less than 24 hours.",
                        "The maximum retention period is 168 hours.",
                        "The retention period can be modified during any point in time."
                    ],
                    "type": "int"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "shards": {
                    "description": [
                        "The number of shards you want to have with this stream.",
                        "This is required when I(state=present)"
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Create or Delete the Kinesis Stream."
                    ],
                    "type": "str"
                },
                "tags": {
                    "aliases": [
                        "resource_tags"
                    ],
                    "description": [
                        "A dictionary of resource tags of the form: C({ tag1: value1, tag2: value2 })."
                    ],
                    "type": "dict"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Wait for operation to complete before returning."
                    ],
                    "type": "bool"
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "How many seconds to wait for an operation to complete before timing out."
                    ],
                    "type": "int"
                }
            },
            "requirements": [
                "boto",
                "boto3",
                "python >= 2.6"
            ],
            "short_description": "Manage a Kinesis Stream.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n# Note: These examples do not set authentication details, see the AWS Guide for details.\n\n# Basic creation example:\n- name: Set up Kinesis Stream with 10 shards and wait for the stream to become ACTIVE\n  community.aws.kinesis_stream:\n    name: test-stream\n    shards: 10\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic creation example with tags:\n- name: Set up Kinesis Stream with 10 shards, tag the environment, and wait for the stream to become ACTIVE\n  community.aws.kinesis_stream:\n    name: test-stream\n    shards: 10\n    tags:\n      Env: development\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic creation example with tags and increase the retention period from the default 24 hours to 48 hours:\n- name: Set up Kinesis Stream with 10 shards, tag the environment, increase the retention period and wait for the stream to become ACTIVE\n  community.aws.kinesis_stream:\n    name: test-stream\n    retention_period: 48\n    shards: 10\n    tags:\n      Env: development\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic delete example:\n- name: Delete Kinesis Stream test-stream and wait for it to finish deleting.\n  community.aws.kinesis_stream:\n    name: test-stream\n    state: absent\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic enable encryption example:\n- name: Encrypt Kinesis Stream test-stream.\n  community.aws.kinesis_stream:\n    name: test-stream\n    state: present\n    shards: 1\n    encryption_state: enabled\n    encryption_type: KMS\n    key_id: alias/aws/kinesis\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n\n# Basic disable encryption example:\n- name: Encrypt Kinesis Stream test-stream.\n  community.aws.kinesis_stream:\n    name: test-stream\n    state: present\n    shards: 1\n    encryption_state: disabled\n    encryption_type: KMS\n    key_id: alias/aws/kinesis\n    wait: yes\n    wait_timeout: 600\n  register: test_stream\n",
        "metadata": null,
        "return": {
            "retention_period_hours": {
                "description": "Number of hours messages will be kept for a Kinesis Stream.",
                "returned": "when state == present.",
                "sample": 24,
                "type": "int"
            },
            "stream_arn": {
                "description": "The amazon resource identifier",
                "returned": "when state == present.",
                "sample": "arn:aws:kinesis:east-side:123456789:stream/test-stream",
                "type": "str"
            },
            "stream_name": {
                "description": "The name of the Kinesis Stream.",
                "returned": "when state == present.",
                "sample": "test-stream",
                "type": "str"
            },
            "stream_status": {
                "description": "The current state of the Kinesis Stream.",
                "returned": "when state == present.",
                "sample": "ACTIVE",
                "type": "str"
            },
            "tags": {
                "description": "Dictionary containing all the tags associated with the Kinesis stream.",
                "returned": "when state == present.",
                "sample": {
                    "Env": "development",
                    "Name": "Splunk"
                },
                "type": "dict"
            }
        }
    }
}
