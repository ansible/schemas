{
    "community.general.pkgin": {
        "doc": {
            "author": [
                "Larry Gilbert (@L2G)",
                "Shaun Zinck (@szinck)",
                "Jasper Lievisse Adriaanse (@jasperla)"
            ],
            "collection": "community.general",
            "description": [
                "The standard package manager for SmartOS, but also usable on NetBSD or any OS that uses C(pkgsrc).  (Home: U(http://pkgin.net/))"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/general/plugins/modules/pkgin.py",
            "has_action": false,
            "module": "pkgin",
            "notes": [
                "Known bug with pkgin < 0.8.0: if a package is removed and another package depends on it, the other package will be silently removed as well.  New to Ansible 1.9: check-mode support."
            ],
            "options": {
                "clean": {
                    "default": false,
                    "description": [
                        "Clean packages cache"
                    ],
                    "type": "bool"
                },
                "force": {
                    "default": false,
                    "description": [
                        "Force package reinstall"
                    ],
                    "type": "bool"
                },
                "full_upgrade": {
                    "default": false,
                    "description": [
                        "Upgrade all packages to their newer versions"
                    ],
                    "type": "bool"
                },
                "name": {
                    "aliases": [
                        "pkg"
                    ],
                    "description": [
                        "Name of package to install/remove;",
                        "multiple names may be given, separated by commas"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Intended state of the package"
                    ],
                    "type": "str"
                },
                "update_cache": {
                    "default": false,
                    "description": [
                        "Update repository database. Can be run with other steps or on it's own."
                    ],
                    "type": "bool"
                },
                "upgrade": {
                    "default": false,
                    "description": [
                        "Upgrade main packages to their newer versions"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "Package manager for SmartOS, NetBSD, et al."
        },
        "examples": "\n- name: Install package foo\n  community.general.pkgin:\n    name: foo\n    state: present\n\n- name: Install specific version of foo package\n  community.general.pkgin:\n    name: foo-2.0.1\n    state: present\n\n- name: Update cache and install foo package\n  community.general.pkgin:\n    name: foo\n    update_cache: yes\n\n- name: Remove package foo\n  community.general.pkgin:\n    name: foo\n    state: absent\n\n- name: Remove packages foo and bar\n  community.general.pkgin:\n    name: foo,bar\n    state: absent\n\n- name: Update repositories as a separate step\n  community.general.pkgin:\n    update_cache: yes\n\n- name: Upgrade main packages (equivalent to pkgin upgrade)\n  community.general.pkgin:\n    upgrade: yes\n\n- name: Upgrade all packages (equivalent to pkgin full-upgrade)\n  community.general.pkgin:\n    full_upgrade: yes\n\n- name: Force-upgrade all packages (equivalent to pkgin -F full-upgrade)\n  community.general.pkgin:\n    full_upgrade: yes\n    force: yes\n\n- name: Clean packages cache (equivalent to pkgin clean)\n  community.general.pkgin:\n    clean: yes\n",
        "metadata": null,
        "return": null
    }
}
