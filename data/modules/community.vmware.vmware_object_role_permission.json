{
    "community.vmware.vmware_object_role_permission": {
        "doc": {
            "author": [
                "Derek Rushing (@kryptsi)",
                "Joseph Andreatta (@vmwjoseph)"
            ],
            "collection": "community.vmware",
            "description": "This module can be used to manage object permissions on the given host.",
            "filename": "/Users/ssbarnea/.ansible/collections/ansible_collections/community/vmware/plugins/modules/vmware_object_role_permission.py",
            "has_action": false,
            "module": "vmware_object_role_permission",
            "notes": [
                "Tested on ESXi 6.5, vSphere 6.7",
                "The ESXi login user must have the appropriate rights to administer permissions.",
                "Permissions for a distributed switch must be defined and managed on either the datacenter or a folder containing the switch."
            ],
            "options": {
                "group": {
                    "description": [
                        "The group to be assigned permission.",
                        "Required if C(principal) is not specified."
                    ],
                    "type": "str"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_HOST) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "object_name": {
                    "description": [
                        "The object name to assigned permission."
                    ],
                    "required": true,
                    "type": "str"
                },
                "object_type": {
                    "choices": [
                        "Folder",
                        "VirtualMachine",
                        "Datacenter",
                        "ResourcePool",
                        "Datastore",
                        "Network",
                        "HostSystem",
                        "ComputeResource",
                        "ClusterComputeResource",
                        "DistributedVirtualSwitch"
                    ],
                    "default": "Folder",
                    "description": [
                        "The object type being targeted."
                    ],
                    "type": "str"
                },
                "password": {
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "description": [
                        "The password of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PASSWORD) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "port": {
                    "default": 443,
                    "description": [
                        "The port number of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PORT) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "int"
                },
                "principal": {
                    "description": [
                        "The user to be assigned permission.",
                        "Required if C(group) is not specified."
                    ],
                    "type": "str"
                },
                "proxy_host": {
                    "description": [
                        "Address of a proxy that will receive all HTTPS requests and relay them.",
                        "The format is a hostname or a IP.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_HOST) will be used instead.",
                        "This feature depends on a version of pyvmomi greater than v6.7.1.2018.12"
                    ],
                    "required": false,
                    "type": "str"
                },
                "proxy_port": {
                    "description": [
                        "Port of the HTTP proxy that will receive all HTTPS requests and relay them.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_PROXY_PORT) will be used instead."
                    ],
                    "required": false,
                    "type": "int"
                },
                "recursive": {
                    "default": true,
                    "description": [
                        "Should the permissions be recursively applied."
                    ],
                    "type": "bool"
                },
                "role": {
                    "description": [
                        "The role to be assigned permission."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Indicate desired state of the object's permission.",
                        "When C(state=present), the permission will be added if it doesn't already exist.",
                        "When C(state=absent), the permission is removed if it exists."
                    ],
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "admin",
                        "user"
                    ],
                    "description": [
                        "The username of the vSphere vCenter or ESXi server.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_USER) will be used instead.",
                        "Environment variable support added in Ansible 2.6."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to C(false) when certificates are not trusted.",
                        "If the value is not specified in the task, the value of environment variable C(VMWARE_VALIDATE_CERTS) will be used instead.",
                        "Environment variable support added in Ansible 2.6.",
                        "If set to C(yes), please make sure Python >= 2.7.9 is installed on the given machine."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "python >= 2.7",
                "PyVmomi"
            ],
            "short_description": "Manage local roles on an ESXi host"
        },
        "examples": "\n- name: Assign user to VM folder\n  community.vmware.vmware_object_role_permission:\n    role: Admin\n    principal: user_bob\n    object_name: services\n    state: present\n  delegate_to: localhost\n\n- name: Remove user from VM folder\n  community.vmware.vmware_object_role_permission:\n    role: Admin\n    principal: user_bob\n    object_name: services\n    state: absent\n  delegate_to: localhost\n\n- name: Assign finance group to VM folder\n  community.vmware.vmware_object_role_permission:\n    role: Limited Users\n    group: finance\n    object_name: Accounts\n    state: present\n  delegate_to: localhost\n\n- name: Assign view_user Read Only permission at root folder\n  community.vmware.vmware_object_role_permission:\n    role: ReadOnly\n    principal: view_user\n    object_name: rootFolder\n    state: present\n  delegate_to: localhost\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "whether or not a change was made to the object's role",
                "returned": "always",
                "type": "bool"
            }
        }
    }
}
