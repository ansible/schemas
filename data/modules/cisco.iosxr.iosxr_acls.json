{
    "cisco.iosxr.iosxr_acls": {
        "doc": {
            "author": "Nilashish Chakraborty (@NilashishC)",
            "collection": "cisco.iosxr",
            "description": [
                "This module manages Access Control Lists (ACLs) on devices running IOS-XR."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/cisco/iosxr/plugins/modules/iosxr_acls.py",
            "has_action": true,
            "module": "iosxr_acls",
            "options": {
                "config": {
                    "description": "A list of dictionaries specifying ACL configurations.",
                    "elements": "dict",
                    "suboptions": {
                        "acls": {
                            "description": [
                                "A list of Access Control Lists (ACLs)."
                            ],
                            "elements": "dict",
                            "suboptions": {
                                "aces": {
                                    "description": [
                                        "List of Access Control Entries (ACEs) for this Access Control List (ACL)."
                                    ],
                                    "elements": "dict",
                                    "suboptions": {
                                        "authen": {
                                            "description": [
                                                "Match if authentication header is present."
                                            ],
                                            "type": "bool"
                                        },
                                        "capture": {
                                            "description": [
                                                "Capture matched packet."
                                            ],
                                            "type": "bool"
                                        },
                                        "destination": {
                                            "description": [
                                                "Specifies the packet destination."
                                            ],
                                            "suboptions": {
                                                "address": {
                                                    "description": [
                                                        "The destination IP address to match."
                                                    ],
                                                    "type": "str"
                                                },
                                                "any": {
                                                    "description": [
                                                        "Match any destination address."
                                                    ],
                                                    "type": "bool"
                                                },
                                                "host": {
                                                    "description": [
                                                        "The host IP address to match."
                                                    ],
                                                    "type": "str"
                                                },
                                                "port_protocol": {
                                                    "description": [
                                                        "Specify the source port or protocol."
                                                    ],
                                                    "suboptions": {
                                                        "eq": {
                                                            "description": [
                                                                "Match only packets on a given port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "gt": {
                                                            "description": [
                                                                "Match only packets with a greater port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "lt": {
                                                            "description": [
                                                                "Match only packets with a lower port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "neq": {
                                                            "description": [
                                                                "Match only packets not on a given port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "range": {
                                                            "description": [
                                                                "Match only packets in the range of port numbers"
                                                            ],
                                                            "suboptions": {
                                                                "end": {
                                                                    "description": [
                                                                        "Specify the end of the port range"
                                                                    ],
                                                                    "type": "str"
                                                                },
                                                                "start": {
                                                                    "description": [
                                                                        "Specify the start of the port range"
                                                                    ],
                                                                    "type": "str"
                                                                }
                                                            },
                                                            "type": "dict"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "prefix": {
                                                    "description": [
                                                        "Destination network prefix."
                                                    ],
                                                    "type": "str"
                                                },
                                                "wildcard_bits": {
                                                    "description": [
                                                        "The Wildcard bits to apply to destination address."
                                                    ],
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "destopts": {
                                            "description": [
                                                "Match if destination opts header is present."
                                            ],
                                            "type": "bool"
                                        },
                                        "dscp": {
                                            "description": [
                                                "Match packets with given DSCP value."
                                            ],
                                            "suboptions": {
                                                "eq": {
                                                    "description": "Match only packets on a given dscp value",
                                                    "type": "str"
                                                },
                                                "gt": {
                                                    "description": "Match only packets with a greater dscp value",
                                                    "type": "str"
                                                },
                                                "lt": {
                                                    "description": "Match only packets with a lower dscp value",
                                                    "type": "str"
                                                },
                                                "neq": {
                                                    "description": "Match only packets not on a given dscp value",
                                                    "type": "str"
                                                },
                                                "range": {
                                                    "description": "Match only packets in the range of dscp values",
                                                    "suboptions": {
                                                        "end": {
                                                            "description": "End of the dscp range",
                                                            "type": "str"
                                                        },
                                                        "start": {
                                                            "description": "Start of the dscp range",
                                                            "type": "str"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "fragments": {
                                            "description": [
                                                "Check non-intial fragments."
                                            ],
                                            "type": "bool"
                                        },
                                        "grant": {
                                            "choices": [
                                                "permit",
                                                "deny"
                                            ],
                                            "description": [
                                                "Forward or drop packets matching the Access Control Entry (ACE)."
                                            ],
                                            "type": "str"
                                        },
                                        "hop_by_hop": {
                                            "description": [
                                                "Match if hop-by-hop opts header is present."
                                            ],
                                            "type": "bool"
                                        },
                                        "icmp_off": {
                                            "description": [
                                                "Enable/disable the ICMP message for this entry."
                                            ],
                                            "type": "bool"
                                        },
                                        "line": {
                                            "aliases": [
                                                "ace"
                                            ],
                                            "description": [
                                                "An ACE excluding the sequence number.",
                                                "This key is mutually exclusive with all the other attributes except 'sequence'.",
                                                "When used with other attributes, the value of this key will get precedence and the other keys will be ignored.",
                                                "This should only be used when an attribute doesn't exist in the argspec but is valid for the device.",
                                                "For fact gathering, any ACE that is not fully parsed, will show up as a value of this attribute, excluding the sequence number, which will be populated as value of the sequence key."
                                            ],
                                            "type": "str"
                                        },
                                        "log": {
                                            "description": [
                                                "Enable/disable log matches against this entry."
                                            ],
                                            "type": "bool"
                                        },
                                        "log_input": {
                                            "description": [
                                                "Enable/disable log matches against this entry, including input interface."
                                            ],
                                            "type": "bool"
                                        },
                                        "packet_length": {
                                            "description": [
                                                "Match packets given packet length."
                                            ],
                                            "suboptions": {
                                                "eq": {
                                                    "description": "Match only packets on a given packet length",
                                                    "type": "int"
                                                },
                                                "gt": {
                                                    "description": "Match only packets with a greater packet length",
                                                    "type": "int"
                                                },
                                                "lt": {
                                                    "description": "Match only packets with a lower packet length",
                                                    "type": "int"
                                                },
                                                "neq": {
                                                    "description": "Match only packets not on a given packet length",
                                                    "type": "int"
                                                },
                                                "range": {
                                                    "description": "Match only packets in the range of packet lengths",
                                                    "suboptions": {
                                                        "end": {
                                                            "description": "End of the packet length range",
                                                            "type": "int"
                                                        },
                                                        "start": {
                                                            "description": "Start of the packet length range",
                                                            "type": "int"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "precedence": {
                                            "description": "Match packets with given precedence value",
                                            "type": "str"
                                        },
                                        "protocol": {
                                            "description": [
                                                "Specify the protocol to match.",
                                                "Refer to vendor documentation for valid values."
                                            ],
                                            "type": "str"
                                        },
                                        "protocol_options": {
                                            "description": [
                                                "Additional suboptions for the protocol."
                                            ],
                                            "suboptions": {
                                                "icmp": {
                                                    "description": "Internet Control Message Protocol settings.",
                                                    "suboptions": {
                                                        "administratively_prohibited": {
                                                            "description": "Administratively prohibited",
                                                            "type": "bool"
                                                        },
                                                        "alternate_address": {
                                                            "description": "Alternate address",
                                                            "type": "bool"
                                                        },
                                                        "conversion_error": {
                                                            "description": "Datagram conversion",
                                                            "type": "bool"
                                                        },
                                                        "dod_host_prohibited": {
                                                            "description": "Host prohibited",
                                                            "type": "bool"
                                                        },
                                                        "dod_net_prohibited": {
                                                            "description": "Net prohibited",
                                                            "type": "bool"
                                                        },
                                                        "echo": {
                                                            "description": "Echo (ping)",
                                                            "type": "bool"
                                                        },
                                                        "echo_reply": {
                                                            "description": "Echo reply",
                                                            "type": "bool"
                                                        },
                                                        "general_parameter_problem": {
                                                            "description": "Parameter problem",
                                                            "type": "bool"
                                                        },
                                                        "host_isolated": {
                                                            "description": "Host isolated",
                                                            "type": "bool"
                                                        },
                                                        "host_precedence_unreachable": {
                                                            "description": "Host unreachable for precedence",
                                                            "type": "bool"
                                                        },
                                                        "host_redirect": {
                                                            "description": "Host redirect",
                                                            "type": "bool"
                                                        },
                                                        "host_tos_redirect": {
                                                            "description": "Host redirect for TOS",
                                                            "type": "bool"
                                                        },
                                                        "host_tos_unreachable": {
                                                            "description": "Host unreachable for TOS",
                                                            "type": "bool"
                                                        },
                                                        "host_unknown": {
                                                            "description": "Host unknown",
                                                            "type": "bool"
                                                        },
                                                        "host_unreachable": {
                                                            "description": "Host unreachable",
                                                            "type": "bool"
                                                        },
                                                        "information_reply": {
                                                            "description": "Information replies",
                                                            "type": "bool"
                                                        },
                                                        "information_request": {
                                                            "description": "Information requests",
                                                            "type": "bool"
                                                        },
                                                        "mask_reply": {
                                                            "description": "Mask replies",
                                                            "type": "bool"
                                                        },
                                                        "mask_request": {
                                                            "description": "Mask requests",
                                                            "type": "bool"
                                                        },
                                                        "mobile_redirect": {
                                                            "description": "Mobile host redirect",
                                                            "type": "bool"
                                                        },
                                                        "net_redirect": {
                                                            "description": "Network redirect",
                                                            "type": "bool"
                                                        },
                                                        "net_tos_redirect": {
                                                            "description": "Net redirect for TOS",
                                                            "type": "bool"
                                                        },
                                                        "net_tos_unreachable": {
                                                            "description": "Network unreachable for TOS",
                                                            "type": "bool"
                                                        },
                                                        "net_unreachable": {
                                                            "description": "Net unreachable",
                                                            "type": "bool"
                                                        },
                                                        "network_unknown": {
                                                            "description": "Network unknown",
                                                            "type": "bool"
                                                        },
                                                        "no_room_for_option": {
                                                            "description": "Parameter required but no room",
                                                            "type": "bool"
                                                        },
                                                        "option_missing": {
                                                            "description": "Parameter required but not present",
                                                            "type": "bool"
                                                        },
                                                        "packet_too_big": {
                                                            "description": "Fragmentation needed and DF set",
                                                            "type": "bool"
                                                        },
                                                        "parameter_problem": {
                                                            "description": "All parameter problems",
                                                            "type": "bool"
                                                        },
                                                        "port_unreachable": {
                                                            "description": "Port unreachable",
                                                            "type": "bool"
                                                        },
                                                        "precedence_unreachable": {
                                                            "description": "Precedence cutoff",
                                                            "type": "bool"
                                                        },
                                                        "protocol_unreachable": {
                                                            "description": "Protocol unreachable",
                                                            "type": "bool"
                                                        },
                                                        "reassembly_timeout": {
                                                            "description": "Reassembly timeout",
                                                            "type": "bool"
                                                        },
                                                        "redirect": {
                                                            "description": "All redirects",
                                                            "type": "bool"
                                                        },
                                                        "router_advertisement": {
                                                            "description": "Router discovery advertisements",
                                                            "type": "bool"
                                                        },
                                                        "router_solicitation": {
                                                            "description": "Router discovery solicitations",
                                                            "type": "bool"
                                                        },
                                                        "source_quench": {
                                                            "description": "Source quenches",
                                                            "type": "bool"
                                                        },
                                                        "source_route_failed": {
                                                            "description": "Source route failed",
                                                            "type": "bool"
                                                        },
                                                        "time_exceeded": {
                                                            "description": "All time exceededs",
                                                            "type": "bool"
                                                        },
                                                        "timestamp_reply": {
                                                            "description": "Timestamp replies",
                                                            "type": "bool"
                                                        },
                                                        "timestamp_request": {
                                                            "description": "Timestamp requests",
                                                            "type": "bool"
                                                        },
                                                        "traceroute": {
                                                            "description": "Traceroute",
                                                            "type": "bool"
                                                        },
                                                        "ttl_exceeded": {
                                                            "description": "TTL exceeded",
                                                            "type": "bool"
                                                        },
                                                        "unreachable": {
                                                            "description": "All unreachables",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "icmpv6": {
                                                    "description": "Internet Control Message Protocol settings for IPv6.",
                                                    "suboptions": {
                                                        "address_unreachable": {
                                                            "description": "Address Unreachable",
                                                            "type": "bool"
                                                        },
                                                        "administratively_prohibited": {
                                                            "description": "Administratively Prohibited",
                                                            "type": "bool"
                                                        },
                                                        "beyond_scope_of_source_address": {
                                                            "description": "Administratively Prohibited",
                                                            "type": "bool"
                                                        },
                                                        "destination_unreachable": {
                                                            "description": "Destination Unreachable",
                                                            "type": "bool"
                                                        },
                                                        "echo": {
                                                            "description": "Echo",
                                                            "type": "bool"
                                                        },
                                                        "echo_reply": {
                                                            "description": "Echo Reply",
                                                            "type": "bool"
                                                        },
                                                        "erroneous_header_field": {
                                                            "description": "Erroneous Header Field",
                                                            "type": "bool"
                                                        },
                                                        "group_membership_query": {
                                                            "description": "Group Membership Query",
                                                            "type": "bool"
                                                        },
                                                        "group_membership_report": {
                                                            "description": "Group Membership Report",
                                                            "type": "bool"
                                                        },
                                                        "group_membership_termination": {
                                                            "description": "Group Membership Termination",
                                                            "type": "bool"
                                                        },
                                                        "host_unreachable": {
                                                            "description": "Host Unreachable",
                                                            "type": "bool"
                                                        },
                                                        "nd_na": {
                                                            "description": "Neighbor Discovery - Neighbor Advertisement",
                                                            "type": "bool"
                                                        },
                                                        "nd_ns": {
                                                            "description": "Neighbor Discovery - Neighbor Solicitation",
                                                            "type": "bool"
                                                        },
                                                        "neighbor_redirect": {
                                                            "description": "Neighbor Redirect",
                                                            "type": "bool"
                                                        },
                                                        "no_route_to_destination": {
                                                            "description": "No Route To Destination",
                                                            "type": "bool"
                                                        },
                                                        "node_information_request_is_refused": {
                                                            "description": "Node Information Request Is Refused",
                                                            "type": "bool"
                                                        },
                                                        "node_information_successful_reply": {
                                                            "description": "Node Information Successful Reply",
                                                            "type": "bool"
                                                        },
                                                        "packet_too_big": {
                                                            "description": "Packet Too Big",
                                                            "type": "bool"
                                                        },
                                                        "parameter_problem": {
                                                            "description": "Parameter Problem",
                                                            "type": "bool"
                                                        },
                                                        "port_unreachable": {
                                                            "description": "Port Unreachable",
                                                            "type": "bool"
                                                        },
                                                        "query_subject_is_IPv4address": {
                                                            "description": "Query Subject Is IPv4 address",
                                                            "type": "bool"
                                                        },
                                                        "query_subject_is_IPv6address": {
                                                            "description": "Query Subject Is IPv6 address",
                                                            "type": "bool"
                                                        },
                                                        "query_subject_is_domainname": {
                                                            "description": "Query Subject Is Domain name",
                                                            "type": "bool"
                                                        },
                                                        "reassembly_timeout": {
                                                            "description": "Reassembly Timeout",
                                                            "type": "bool"
                                                        },
                                                        "redirect": {
                                                            "description": "Redirect",
                                                            "type": "bool"
                                                        },
                                                        "router_advertisement": {
                                                            "description": "Router Advertisement",
                                                            "type": "bool"
                                                        },
                                                        "router_renumbering": {
                                                            "description": "Router Renumbering",
                                                            "type": "bool"
                                                        },
                                                        "router_solicitation": {
                                                            "description": "Router Solicitation",
                                                            "type": "bool"
                                                        },
                                                        "rr_command": {
                                                            "description": "RR Command",
                                                            "type": "bool"
                                                        },
                                                        "rr_result": {
                                                            "description": "RR Result",
                                                            "type": "bool"
                                                        },
                                                        "rr_seqnum_reset": {
                                                            "description": "RR Seqnum Reset",
                                                            "type": "bool"
                                                        },
                                                        "time_exceeded": {
                                                            "description": "Time Exceeded",
                                                            "type": "bool"
                                                        },
                                                        "ttl_exceeded": {
                                                            "description": "TTL Exceeded",
                                                            "type": "bool"
                                                        },
                                                        "unknown_query_type": {
                                                            "description": "Unknown Query Type",
                                                            "type": "bool"
                                                        },
                                                        "unreachable": {
                                                            "description": "Unreachable",
                                                            "type": "bool"
                                                        },
                                                        "unrecognized_next_header": {
                                                            "description": "Unrecognized Next Header",
                                                            "type": "bool"
                                                        },
                                                        "unrecognized_option": {
                                                            "description": "Unrecognized Option",
                                                            "type": "bool"
                                                        },
                                                        "whoareyou_reply": {
                                                            "description": "Whoareyou Reply",
                                                            "type": "bool"
                                                        },
                                                        "whoareyou_request": {
                                                            "description": "Whoareyou Request",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "igmp": {
                                                    "description": "Internet Group Management Protocol (IGMP) settings.",
                                                    "suboptions": {
                                                        "dvmrp": {
                                                            "description": "Match Distance Vector Multicast Routing Protocol",
                                                            "type": "bool"
                                                        },
                                                        "host_query": {
                                                            "description": "Match Host Query",
                                                            "type": "bool"
                                                        },
                                                        "host_report": {
                                                            "description": "Match Host Report",
                                                            "type": "bool"
                                                        },
                                                        "mtrace": {
                                                            "description": "Match mtrace",
                                                            "type": "bool"
                                                        },
                                                        "mtrace_response": {
                                                            "description": "Match mtrace response",
                                                            "type": "bool"
                                                        },
                                                        "pim": {
                                                            "description": "Match Protocol Independent Multicast",
                                                            "type": "bool"
                                                        },
                                                        "trace": {
                                                            "description": "Multicast trace",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "tcp": {
                                                    "description": "Match TCP packet flags",
                                                    "suboptions": {
                                                        "ack": {
                                                            "description": "Match on the ACK bit",
                                                            "type": "bool"
                                                        },
                                                        "established": {
                                                            "description": "Match established connections",
                                                            "type": "bool"
                                                        },
                                                        "fin": {
                                                            "description": "Match on the FIN bit",
                                                            "type": "bool"
                                                        },
                                                        "psh": {
                                                            "description": "Match on the PSH bit",
                                                            "type": "bool"
                                                        },
                                                        "rst": {
                                                            "description": "Match on the RST bit",
                                                            "type": "bool"
                                                        },
                                                        "syn": {
                                                            "description": "Match on the SYN bit",
                                                            "type": "bool"
                                                        },
                                                        "urg": {
                                                            "description": "Match on the URG bit",
                                                            "type": "bool"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "remark": {
                                            "description": [
                                                "Comments or a description for the access list."
                                            ],
                                            "type": "str"
                                        },
                                        "routing": {
                                            "description": [
                                                "Match if routing header is present."
                                            ],
                                            "type": "bool"
                                        },
                                        "sequence": {
                                            "description": [
                                                "Sequence number for the Access Control Entry (ACE)."
                                            ],
                                            "type": "int"
                                        },
                                        "source": {
                                            "description": [
                                                "Specifies the packet source."
                                            ],
                                            "suboptions": {
                                                "address": {
                                                    "description": [
                                                        "The source IP address to match."
                                                    ],
                                                    "type": "str"
                                                },
                                                "any": {
                                                    "description": [
                                                        "Match any source address."
                                                    ],
                                                    "type": "bool"
                                                },
                                                "host": {
                                                    "description": [
                                                        "The host IP address to match."
                                                    ],
                                                    "type": "str"
                                                },
                                                "port_protocol": {
                                                    "description": [
                                                        "Specify the source port or protocol."
                                                    ],
                                                    "suboptions": {
                                                        "eq": {
                                                            "description": [
                                                                "Match only packets on a given port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "gt": {
                                                            "description": [
                                                                "Match only packets with a greater port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "lt": {
                                                            "description": [
                                                                "Match only packets with a lower port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "neq": {
                                                            "description": [
                                                                "Match only packets not on a given port number."
                                                            ],
                                                            "type": "str"
                                                        },
                                                        "range": {
                                                            "description": [
                                                                "Match only packets in the range of port numbers"
                                                            ],
                                                            "suboptions": {
                                                                "end": {
                                                                    "description": [
                                                                        "Specify the end of the port range"
                                                                    ],
                                                                    "type": "str"
                                                                },
                                                                "start": {
                                                                    "description": [
                                                                        "Specify the start of the port range"
                                                                    ],
                                                                    "type": "str"
                                                                }
                                                            },
                                                            "type": "dict"
                                                        }
                                                    },
                                                    "type": "dict"
                                                },
                                                "prefix": {
                                                    "description": [
                                                        "Source network prefix."
                                                    ],
                                                    "type": "str"
                                                },
                                                "wildcard_bits": {
                                                    "description": [
                                                        "The Wildcard bits to apply to source address."
                                                    ],
                                                    "type": "str"
                                                }
                                            },
                                            "type": "dict"
                                        },
                                        "ttl": {
                                            "description": "Match against specified TTL value.",
                                            "suboptions": {
                                                "eq": {
                                                    "description": "Match only packets with exact TTL value.",
                                                    "type": "int"
                                                },
                                                "gt": {
                                                    "description": "Match only packets with a greater TTL value.",
                                                    "type": "int"
                                                },
                                                "lt": {
                                                    "description": "Match only packets with a lower TTL value.",
                                                    "type": "int"
                                                },
                                                "neq": {
                                                    "description": "Match only packets that won't have the given TTL value.",
                                                    "type": "int"
                                                },
                                                "range": {
                                                    "description": "Match only packets in the range of given TTL values.",
                                                    "suboptions": {
                                                        "end": {
                                                            "description": "End of the TTL range.",
                                                            "type": "int"
                                                        },
                                                        "start": {
                                                            "description": "Start of the TTL range.",
                                                            "type": "int"
                                                        }
                                                    },
                                                    "type": "dict"
                                                }
                                            },
                                            "type": "dict"
                                        }
                                    },
                                    "type": "list"
                                },
                                "name": {
                                    "description": [
                                        "The name of the Access Control List (ACL)."
                                    ],
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "afi": {
                            "choices": [
                                "ipv4",
                                "ipv6"
                            ],
                            "description": [
                                "The Address Family Indicator (AFI) for the Access Control Lists (ACL)."
                            ],
                            "required": true,
                            "type": "str"
                        }
                    },
                    "type": "list"
                },
                "running_config": {
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source. There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(running_config) argument allows the implementer to pass in the configuration to use as the base config for comparison. This value of this option should be the output received from device by executing command B(show running-config router static)."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "merged",
                        "replaced",
                        "overridden",
                        "deleted",
                        "gathered",
                        "rendered",
                        "parsed"
                    ],
                    "default": "merged",
                    "description": [
                        "The state the configuration should be left in."
                    ],
                    "type": "str"
                }
            },
            "short_description": "ACLs resource module",
            "version_added": "1.0.0",
            "version_added_collection": "cisco.iosxr"
        },
        "examples": "\n# Using merged to add new ACLs\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:07:45.767 UTC\n# RP/0/RP0/CPU0:ios#\n\n- name: Merge the provided configuration with the exisiting running configuration\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv6\n      acls:\n      - name: acl6_1\n        aces:\n        - sequence: 10\n          grant: deny\n          protocol: tcp\n          source:\n            prefix: 2001:db8:1234::/48\n            port_protocol:\n              range:\n                start: ftp\n                end: telnet\n          destination:\n            any: true\n          protocol_options:\n            tcp:\n              syn: true\n          ttl:\n            range:\n              start: 180\n              end: 250\n          routing: true\n          authen: true\n          log: true\n\n        - sequence: 20\n          grant: permit\n          protocol: icmpv6\n          source:\n            any: true\n          destination:\n            any: true\n          protocol_options:\n            icmpv6:\n              router_advertisement: true\n          precedence: network\n          destopts: true\n\n    - afi: ipv4\n      acls:\n      - name: acl_1\n        aces:\n        - sequence: 16\n          remark: TEST_ACL_1_REMARK\n\n        - sequence: 21\n          grant: permit\n          protocol: tcp\n          source:\n            host: 192.0.2.10\n            port_protocol:\n              range:\n                start: pop3\n                end: 121\n          destination:\n            address: 198.51.100.0\n            wildcard_bits: 0.0.0.15\n          protocol_options:\n            tcp:\n              rst: true\n\n        - sequence: 23\n          grant: deny\n          protocol: icmp\n          source:\n            any: true\n          destination:\n            prefix: 198.51.100.0/28\n          protocol_options:\n            icmp:\n              reassembly_timeout: true\n          dscp:\n            lt: af12\n\n      - name: acl_2\n        aces:\n        - sequence: 10\n          remark: TEST_ACL_2_REMARK\n    state: merged\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using merged to update existing ACLs\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Update existing ACEs\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_1\n        aces:\n        - sequence: 21\n          source:\n            prefix: 198.51.100.32/28\n            port_protocol:\n              range:\n                start: pop3\n                end: 121\n          protocol_options:\n            tcp:\n              syn: true\n\n        - sequence: 23\n          protocol_options:\n            icmp:\n              router_advertisement: true\n          dscp:\n            eq: af23\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:47:18.711 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp 198.51.100.32 0.0.0.15 range pop3 121 198.51.100.0 0.0.0.15 syn\n#  23 deny icmp any 198.51.100.0 0.0.0.15 router-advertisement dscp eq af23\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using replaced to replace a whole ACL\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Replace device configurations of listed ACL with provided configurations\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_2\n        aces:\n        - sequence: 11\n          grant: permit\n          protocol: igmp\n          source:\n            host: 198.51.100.130\n          destination:\n            any: true\n          ttl:\n            eq: 100\n\n        - sequence: 12\n          grant: deny\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: icmp\n    state: replaced\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 06:19:51.496 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp 198.51.100.32 0.0.0.15 range pop3 121 198.51.100.0 0.0.0.15 syn\n#  23 deny icmp any 198.51.100.0 0.0.0.15 router-advertisement dscp eq af23\n# ipv4 access-list acl_2\n#  11 permit igmp host 198.51.100.130 any ttl eq 100\n#  12 deny icmp any any\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using overridden to override all ACLs in the device\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Overridde all ACLs configuration with provided configuration\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_1\n        aces:\n        - sequence: 10\n          grant: permit\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: tcp\n\n      - name: acl_2\n        aces:\n        - sequence: 20\n          grant: permit\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: igmp\n    state: overridden\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 06:31:22.178 UTC\n# ipv4 access-list acl_1\n#  10 permit tcp any any\n# ipv4 access-list acl_2\n#  20 permit igmp any any\n\n# Using deleted to delete an entire ACL\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Delete a single ACL\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv6\n      acls:\n      - name: acl6_1\n    state: deleted\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n\n# Using deleted to delete all ACLs under one AFI\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Delete all ACLs under one AFI\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n    state: deleted\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n# Using deleted to delete all ACLs from the device\n\n# Before state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:22:57.021 UTC\n# ipv4 access-list acl_1\n#  16 remark TEST_ACL_1_REMARK\n#  21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst\n#  23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12\n# ipv4 access-list acl_2\n#  10 remark TEST_ACL_2_REMARK\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network destopts\n\n- name: Delete all ACLs from the device\n  cisco.iosxr.iosxr_acls:\n    state: deleted\n\n# After state:\n# -------------\n\n# RP/0/RP0/CPU0:ios#sh access-lists afi-all\n# Thu Feb 20 05:07:45.767 UTC\n# RP/0/RP0/CPU0:ios#\n\n# Using gathered to gather ACL facts from the device\n\n- name: Gather ACL interfaces facts using gathered state\n  cisco.iosxr.iosxr_acls:\n    state: gathered\n\n# Task Output (redacted)\n# -----------------------\n#\n\n# \"gathered\": [\n#    {\n#        \"acls\": [\n#            {\n#                \"aces\": [\n#                    {\n#                        \"remark\": \"TEST_ACL_1_REMARK\",\n#                        \"sequence\": 16\n#                    },\n#                    {\n#                        \"destination\": {\n#                            \"address\": \"198.51.100.0\",\n#                            \"wildcard_bits\": \"0.0.0.15\"\n#                        },\n#                        \"grant\": \"permit\",\n#                        \"protocol\": \"tcp\",\n#                        \"protocol_options\": {\n#                            \"tcp\": {\n#                                \"rst\": true\n#                            }\n#                        },\n#                        \"sequence\": 21,\n#                        \"source\": {\n#                            \"host\": \"192.0.2.10\",\n#                            \"port_protocol\": {\n#                                \"range\": {\n#                                    \"end\": \"121\",\n#                                    \"start\": \"pop3\"\n#                                }\n#                            }\n#                        }\n#                    },\n#                    {\n#                        \"destination\": {\n#                            \"address\": \"198.51.100.0\",\n#                            \"wildcard_bits\": \"0.0.0.15\"\n#                        },\n#                        \"dscp\": {\n#                            \"lt\": \"af12\"\n#                        },\n#                        \"grant\": \"deny\",\n#                        \"protocol\": \"icmp\",\n#                        \"protocol_options\": {\n#                            \"icmp\": {\n#                                \"reassembly_timeout\": true\n#                            }\n#                        },\n#                        \"sequence\": 23,\n#                        \"source\": {\n#                            \"any\": true\n#                        }\n#                    }\n#                ],\n#                \"name\": \"acl_1\"\n#            },\n#            {\n#                \"aces\": [\n#                    {\n#                        \"remark\": \"TEST_ACL_2_REMARK\",\n#                        \"sequence\": 10\n#                    }\n#                ],\n#                \"name\": \"acl_2\"\n#            }\n#        ],\n#        \"afi\": \"ipv4\"\n#    },\n#    {\n#        \"acls\": [\n#            {\n#                \"aces\": [\n#                    {\n#                        \"authen\": true,\n#                        \"destination\": {\n#                            \"any\": true\n#                        },\n#                        \"grant\": \"deny\",\n#                        \"log\": true,\n#                        \"protocol\": \"tcp\",\n#                        \"protocol_options\": {\n#                            \"tcp\": {\n#                                \"syn\": true\n#                            }\n#                        },\n#                        \"routing\": true,\n#                        \"sequence\": 10,\n#                        \"source\": {\n#                            \"port_protocol\": {\n#                                \"range\": {\n#                                   \"end\": \"telnet\",\n#                                   \"start\": \"ftp\"\n#                                }\n#                            },\n#                            \"prefix\": \"2001:db8:1234::/48\"\n#                        },\n#                        \"ttl\": {\n#                            \"range\": {\n#                                \"end\": 250,\n#                                \"start\": 180\n#                            }\n#                        }\n#                    },\n#                    {\n#                        \"destination\": {\n#                            \"any\": true\n#                        },\n#                        \"destopts\": true,\n#                        \"grant\": \"permit\",\n#                        \"precedence\": \"network\",\n#                        \"protocol\": \"icmpv6\",\n#                        \"protocol_options\": {\n#                            \"icmpv6\": {\n#                                \"router_advertisement\": true\n#                            }\n#                        },\n#                        \"sequence\": 20,\n#                        \"source\": {\n#                            \"any\": true\n#                        }\n#                    }\n#                ],\n#                \"name\": \"acl6_1\"\n#            }\n#        ],\n#        \"afi\": \"ipv6\"\n#    }\n#  ]\n\n# Using rendered\n\n- name: Render platform specific commands (without connecting to the device)\n  cisco.iosxr.iosxr_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: acl_2\n        aces:\n        - sequence: 11\n          grant: permit\n          protocol: igmp\n          source:\n            host: 198.51.100.130\n          destination:\n            any: true\n          ttl:\n            eq: 100\n\n        - sequence: 12\n          grant: deny\n          source:\n            any: true\n          destination:\n            any: true\n          protocol: icmp\n    state: rendered\n\n# Task Output (redacted)\n# -----------------------\n\n# \"rendered\": [\n#    \"ipv4 access-list acl_2\",\n#    \"11 permit igmp host 198.51.100.130 any ttl eq 100\",\n#    \"12 deny icmp any any\"\n\n# Using parsed\n\n# parsed.cfg\n# ------------\n#\n# ipv4 access-list acl_1\n#  10 remark TEST_ACL_2_REMARK\n# ipv4 access-list acl_2\n#  11 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 authen routing log\n#  21 permit icmpv6 any any router-advertisement precedence network packet-length eq 576 destopts\n# ipv6 access-list acl6_1\n#  10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 routing authen log\n#  20 permit icmpv6 any any router-advertisement precedence network packet-length eq 576 destopts\n\n- name: Parse externally provided ACL config to agnostic model\n  cisco.iosxr.iosxr_acls:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Task Output (redacted)\n# -----------------------\n#  \"parsed\": [\n#        {\n#            \"acls\": [\n#                {\n#                    \"aces\": [\n#                      {\n#                            \"remark\": \"TEST_ACL_2_REMARK\",\n#                            \"sequence\": 10\n#                        }\n#                    ],\n#                   \"name\": \"acl_1\"\n#                },\n#                {\n#                    \"aces\": [\n#                        {\n#                            \"authen\": true,\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"grant\": \"deny\",\n#                            \"log\": true,\n#                            \"protocol\": \"tcp\",\n#                            \"protocol_options\": {\n#                                \"tcp\": {\n#                                    \"syn\": true\n#                                }\n#                            },\n#                            \"routing\": true,\n#                            \"sequence\": 11,\n#                            \"source\": {\n#                                \"port_protocol\": {\n#                                    \"range\": {\n#                                        \"end\": \"telnet\",\n#                                        \"start\": \"ftp\"\n#                                    }\n#                                },\n#                                \"prefix\": \"2001:db8:1234::/48\"\n#                            },\n#                            \"ttl\": {\n#                                \"range\": {\n#                                    \"end\": 250,\n#                                    \"start\": 180\n#                                }\n#                            }\n#                        },\n#                        {\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"destopts\": true,\n#                            \"grant\": \"permit\",\n#                            \"packet_length\": {\n#                                \"eq\": 576\n#                            },\n#                            \"precedence\": \"network\",\n#                            \"protocol\": \"icmpv6\",\n#                            \"protocol_options\": {\n#                                \"icmpv6\": {\n#                                    \"router_advertisement\": true\n#                                }\n#                            },\n#                            \"sequence\": 21,\n#                            \"source\": {\n#                                \"any\": true\n#                            }\n#                        }\n#                    ],\n#                    \"name\": \"acl_2\"\n#                }\n#            ],\n#            \"afi\": \"ipv4\"\n#        },\n#        {\n#            \"acls\": [\n#                {\n#                    \"aces\": [\n#                        {\n#                            \"authen\": true,\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"grant\": \"deny\",\n#                            \"log\": true,\n#                            \"protocol\": \"tcp\",\n#                            \"protocol_options\": {\n#                                \"tcp\": {\n#                                    \"syn\": true\n#                                }\n#                            },\n#                            \"routing\": true,\n#                            \"sequence\": 10,\n#                            \"source\": {\n#                                \"port_protocol\": {\n#                                    \"range\": {\n#                                        \"end\": \"telnet\",\n#                                        \"start\": \"ftp\"\n#                                    }\n#                                },\n#                                \"prefix\": \"2001:db8:1234::/48\"\n#                            },\n#                            \"ttl\": {\n#                                \"range\": {\n#                                    \"end\": 250,\n#                                    \"start\": 180\n#                                }\n#                            }\n#                        },\n#                        {\n#                            \"destination\": {\n#                                \"any\": true\n#                            },\n#                            \"destopts\": true,\n#                            \"grant\": \"permit\",\n#                            \"packet_length\": {\n#                                \"eq\": 576\n#                            },\n#                            \"precedence\": \"network\",\n#                            \"protocol\": \"icmpv6\",\n#                            \"protocol_options\": {\n#                                \"icmpv6\": {\n#                                    \"router_advertisement\": true\n#                                }\n#                            },\n#                            \"sequence\": 20,\n#                            \"source\": {\n#                                \"any\": true\n#                            }\n#                        }\n#                    ],\n#                    \"name\": \"acl6_1\"\n#                }\n#            ],\n#            \"afi\": \"ipv6\"\n#        }\n#    ]\n",
        "metadata": null,
        "return": {
            "after": {
                "description": "The resulting configuration model invocation.",
                "returned": "when changed",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "list"
            },
            "before": {
                "description": "The configuration prior to the model invocation.",
                "returned": "always",
                "sample": "The configuration returned will always be in the same format\n of the parameters above.\n",
                "type": "list"
            },
            "commands": {
                "description": "The set of commands pushed to the remote device.",
                "returned": "always",
                "sample": [
                    "ipv6 access-list acl6_1",
                    "10 deny tcp 2001:db8:1234::/48 range ftp telnet any syn ttl range 180 250 authen routing log",
                    "20 permit icmpv6 any any router-advertisement precedence network destopts",
                    "ipv4 access-list acl_1",
                    "16 remark TEST_ACL_1_REMARK",
                    "21 permit tcp host 192.0.2.10 range pop3 121 198.51.100.0 0.0.0.15 rst",
                    "23 deny icmp any 198.51.100.0 0.0.0.15 reassembly-timeout dscp lt af12"
                ],
                "type": "list"
            }
        }
    }
}
