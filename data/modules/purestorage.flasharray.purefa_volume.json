{
    "purestorage.flasharray.purefa_volume": {
        "doc": {
            "author": [
                "Pure Storage Ansible Team (@sdodsley) <pure-ansible-team@purestorage.com>"
            ],
            "collection": "purestorage.flasharray",
            "description": [
                "Create, delete or extend the capacity of a volume on Pure Storage FlashArray."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/purestorage/flasharray/plugins/modules/purefa_volume.py",
            "has_action": false,
            "module": "purefa_volume",
            "notes": [
                "This module requires the C(purestorage) Python library",
                "You must set C(PUREFA_URL) and C(PUREFA_API) environment variables if I(fa_url) and I(api_token) arguments are not passed to the module directly"
            ],
            "options": {
                "api_token": {
                    "description": [
                        "FlashArray API token for admin privileged user."
                    ],
                    "type": "str"
                },
                "bw_qos": {
                    "aliases": [
                        "qos"
                    ],
                    "description": [
                        "Bandwidth limit for volume in M or G units. M will set MB/s G will set GB/s To clear an existing QoS setting use 0 (zero)"
                    ],
                    "type": "str"
                },
                "count": {
                    "description": [
                        "Number of volumes to be created in a multiple volume creation",
                        "Only supported from Purity//FA v6.0.0 and higher"
                    ],
                    "type": "int"
                },
                "digits": {
                    "default": 1,
                    "description": [
                        "Number of digits to use for multiple volume count. This will pad the index number with zeros where necessary",
                        "Only supported from Purity//FA v6.0.0 and higher",
                        "Range is between 1 and 10"
                    ],
                    "type": "int"
                },
                "eradicate": {
                    "default": "no",
                    "description": [
                        "Define whether to eradicate the volume on delete or leave in trash."
                    ],
                    "type": "bool"
                },
                "fa_url": {
                    "description": [
                        "FlashArray management IPv4 address or Hostname."
                    ],
                    "type": "str"
                },
                "iops_qos": {
                    "description": [
                        "IOPs limit for volume - use value or K or M K will mean 1000 M will mean 1000000 To clear an existing IOPs setting use 0 (zero)"
                    ],
                    "type": "str"
                },
                "move": {
                    "description": [
                        "Move a volume in and out of a pod or vgroup",
                        "Provide the name of pod or vgroup to move the volume to",
                        "Pod and Vgroup names must be unique in the array",
                        "To move to the local array, specify C(local)",
                        "This is not idempotent - use C(ignore_errors) in the play"
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the volume.",
                        "Volume could be created in a POD with this syntax POD_NAME::VOLUME_NAME.",
                        "Volume could be created in a volume group with this syntax VG_NAME/VOLUME_NAME.",
                        "Multi-volume support available from Purity//FA 6.0.0 B(***NOTE***) Manual deletion or eradication of individual volumes created using multi-volume will cause idempotency to fail",
                        "Multi-volume support only exists for volume creation"
                    ],
                    "required": true,
                    "type": "str"
                },
                "overwrite": {
                    "default": "no",
                    "description": [
                        "Define whether to overwrite a target volume if it already exisits."
                    ],
                    "type": "bool"
                },
                "pgroup": {
                    "description": [
                        "Name of exisitng, not deleted, protection group to add volume to",
                        "Only application for volume(s) creation"
                    ],
                    "type": "str",
                    "version_added": "1.8.0",
                    "version_added_collection": "purestorage.flasharray"
                },
                "rename": {
                    "description": [
                        "Value to rename the specified volume to.",
                        "Rename only applies to the container the current volumes is in.",
                        "There is no requirement to specify the pod or vgroup name as this is implied."
                    ],
                    "type": "str"
                },
                "size": {
                    "description": [
                        "Volume size in M, G, T or P units."
                    ],
                    "type": "str"
                },
                "start": {
                    "default": 0,
                    "description": [
                        "Number at which to start the multiple volume creation index",
                        "Only supported from Purity//FA v6.0.0 and higher"
                    ],
                    "type": "int"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Define whether the volume should exist or not."
                    ],
                    "type": "str"
                },
                "suffix": {
                    "description": [
                        "Suffix string, if required, for multiple volume create",
                        "Volume names will be formed as I(<name>#I<suffix>), where I(#) is a placeholder for the volume index See associated descriptions",
                        "Only supported from Purity//FA v6.0.0 and higher"
                    ],
                    "type": "str"
                },
                "target": {
                    "description": [
                        "The name of the target volume, if copying."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7",
                "purestorage >= 1.19",
                "py-pure-client >= 1.6.0",
                "netaddr",
                "requests"
            ],
            "short_description": "Manage volumes on Pure Storage FlashArrays",
            "version_added": "1.0.0",
            "version_added_collection": "purestorage.flasharray"
        },
        "examples": "\n- name: Create new volume named foo with a QoS limit\n  purefa_volume:\n    name: foo\n    size: 1T\n    bw_qos: 58M\n    iops_qos: 23K\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Create new volume named foo in pod bar in protection group pg1\n  purefa_volume:\n    name: bar::foo\n    prgoup: pg1\n    size: 1T\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Create 10 volumes with index starting at 10 but padded with 3 digits\n  purefa_volume:\n    name: foo\n    size: 1T\n    suffix: bar\n    count: 10\n    start: 10\n    digits: 3\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Extend the size of an existing volume named foo\n  purefa_volume:\n    name: foo\n    size: 2T\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Delete and eradicate volume named foo\n  purefa_volume:\n    name: foo\n    eradicate: yes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Create clone of volume bar named foo\n  purefa_volume:\n    name: foo\n    target: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Overwrite volume bar with volume foo\n  purefa_volume:\n    name: foo\n    target: bar\n    overwrite: yes\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Clear volume QoS from volume foo\n  purefa_volume:\n    name: foo\n    bw_qos: 0\n    iops_qos: 0\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: present\n\n- name: Move local volume foo from local array to pod bar\n  purefa_volume:\n    name: foo\n    move: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Move volume foo in pod bar to local array\n  purefa_volume:\n    name: bar::foo\n    move: local\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Move volume foo in pod bar to vgroup fin\n  purefa_volume:\n    name: bar::foo\n    move: fin\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "volume": {
                "contains": {
                    "bandwidth_limit": {
                        "description": "Volume bandwidth limit in bytes/sec",
                        "type": "int"
                    },
                    "created": {
                        "description": "Volume creation time",
                        "sample": "2019-03-13T22:49:24Z",
                        "type": "str"
                    },
                    "iops_limit": {
                        "description": "Volume IOPs limit",
                        "type": "int"
                    },
                    "name": {
                        "description": "Volume name",
                        "type": "str"
                    },
                    "serial": {
                        "description": "Volume serial number",
                        "sample": "361019ECACE43D83000120A4",
                        "type": "str"
                    },
                    "size": {
                        "description": "Volume size in bytes",
                        "type": "int"
                    },
                    "source": {
                        "description": "Volume name of source volume used for volume copy",
                        "type": "str"
                    }
                },
                "description": "A dictionary describing the changed volume.  Only some attributes below will be returned with various actions.",
                "returned": "success",
                "type": "dict"
            }
        }
    }
}
