{
    "community.mongodb.mongodb_index": {
        "doc": {
            "author": "Rhys Campbell (@rhysmeister)",
            "collection": "community.mongodb",
            "description": [
                "Creates or drops indexes on MongoDB collections.",
                "Supports multiple index options, i.e. unique, sparse and partial.",
                "Validates existence of indexes by name only."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/mongodb/plugins/modules/mongodb_index.py",
            "has_action": false,
            "module": "mongodb_index",
            "notes": [
                "Requires the pymongo Python package on the remote host, version 2.4.2+."
            ],
            "options": {
                "auth_mechanism": {
                    "choices": [
                        "SCRAM-SHA-256",
                        "SCRAM-SHA-1",
                        "MONGODB-X509",
                        "GSSAPI",
                        "PLAIN"
                    ],
                    "description": [
                        "Authentication type."
                    ],
                    "required": false,
                    "type": "str"
                },
                "connection_options": {
                    "description": [
                        "Additional connection options.",
                        "Supply as a list of dicts or strings containing key value pairs seperated with '='."
                    ],
                    "elements": "raw",
                    "required": false,
                    "type": "list"
                },
                "indexes": {
                    "description": [
                        "List of indexes to create or drop"
                    ],
                    "elements": "raw",
                    "required": true,
                    "type": "list"
                },
                "login_database": {
                    "default": "admin",
                    "description": [
                        "The database where login credentials are stored."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_host": {
                    "default": "localhost",
                    "description": [
                        "The host running MongoDB instance to login to."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_password": {
                    "description": [
                        "The password used to authenticate with.",
                        "Required when I(login_user) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "login_port": {
                    "default": 27017,
                    "description": [
                        "The MongoDB server port to login to."
                    ],
                    "required": false,
                    "type": "int"
                },
                "login_user": {
                    "description": [
                        "The MongoDB user to login with.",
                        "Required when I(login_password) is specified."
                    ],
                    "required": false,
                    "type": "str"
                },
                "replica_set": {
                    "description": [
                        "Replica set to connect to (automatically connects to primary for writes)."
                    ],
                    "type": "str"
                },
                "ssl": {
                    "default": false,
                    "description": [
                        "Whether to use an SSL connection when connecting to the database."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "ssl_ca_certs": {
                    "description": [
                        "The ssl_ca_certs option takes a path to a CA file."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_cert_reqs": {
                    "choices": [
                        "CERT_NONE",
                        "CERT_OPTIONAL",
                        "CERT_REQUIRED"
                    ],
                    "default": "CERT_REQUIRED",
                    "description": [
                        "Specifies whether a certificate is required from the other side of the connection, and whether it will be validated if provided."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_certfile": {
                    "description": [
                        "Present a client certificate using the ssl_certfile option."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_crlfile": {
                    "description": [
                        "The ssl_crlfile option takes a path to a CRL file."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_keyfile": {
                    "description": [
                        "Private key for the client certificate."
                    ],
                    "required": false,
                    "type": "str"
                },
                "ssl_pem_passphrase": {
                    "description": [
                        "Passphrase to decrypt encrypted private keys."
                    ],
                    "required": false,
                    "type": "str"
                }
            },
            "requirements": [
                "pymongo"
            ],
            "short_description": "Creates or drops indexes on MongoDB collections.",
            "version_added": "1.0.0",
            "version_added_collection": "community.mongodb"
        },
        "examples": "\n- name: Create a single index on a collection\n  community.mongodb.mongodb_index:\n    login_user: admin\n    login_password: secret\n    indexes:\n      - database: mydb\n        collection: test\n        keys:\n          - username: 1\n            last_login: -1\n        options:\n          name: myindex\n        state: present\n\n- name: Drop an index on a collection\n  community.mongodb.mongodb_index:\n    login_user: admin\n    login_password: secret\n    indexes:\n      - database: mydb\n        collection: test\n        options:\n          name: myindex\n        state: absent\n\n- name: Create multiple indexes\n  community.mongodb.mongodb_index:\n    login_user: admin\n    login_password: secret\n    indexes:\n      - database: mydb\n        collection: test\n        keys:\n          - username: 1\n            last_login: -1\n        options:\n          name: myindex\n        state: present\n      - database: mydb\n        collection: test\n        keys:\n          - email: 1\n            last_login: -1\n        options:\n          name: myindex2\n        state: present\n\n- name: Add a unique index\n  community.mongodb.mongodb_index:\n    login_port: 27017\n    login_user: admin\n    login_password: secret\n    login_database: \"admin\"\n    indexes:\n      - database: \"test\"\n        collection: \"rhys\"\n        keys:\n          username: 1\n        options:\n          name: myuniqueindex\n          unique: true\n        state: present\n\n- name: Add a ttl index\n  community.mongodb.mongodb_index:\n    login_port: 27017\n    login_user: admin\n    login_password: secret\n    login_database: \"admin\"\n    indexes:\n      - database: \"test\"\n        collection: \"rhys\"\n        keys:\n          created: 1\n        options:\n          name: myttlindex\n          expireAfterSeconds: 3600\n        state: present\n\n- name: Add a sparse index\n  community.mongodb.mongodb_index:\n    login_port: 27017\n    login_user: admin\n    login_password: secret\n    login_database: \"admin\"\n    indexes:\n      - database: \"test\"\n        collection: \"rhys\"\n        keys:\n          last_login: -1\n        options:\n          name: mysparseindex\n          sparse: true\n        state: present\n\n- name: Add a partial index\n  community.mongodb.mongodb_index:\n    login_port: 27017\n    login_user: admin\n    login_password: secret\n    login_database: \"admin\"\n    indexes:\n      - database: \"test\"\n        collection: \"rhys\"\n        keys:\n          last_login: -1\n        options:\n          name: mypartialindex\n          partialFilterExpression:\n            rating:\n              $gt: 5\n        state: present\n\n- name: Add a index in the background (background option is deprecated from 4.2+)\n  community.mongodb.mongodb_index:\n    login_port: 27017\n    login_user: admin\n    login_password: secret\n    login_database: \"admin\"\n    indexes:\n      - database: \"test\"\n        collection: \"rhys\"\n        options:\n          name: idxbackground\n        keys:\n          username: -1\n        backgroud: true\n        state: present\n\n- name: Check creating 5 index all with multiple options specified\n  community.mongodb.mongodb_index:\n    login_port: 27017\n    login_user: admin\n    login_password: secret\n    login_database: \"admin\"\n    indexes:\n      - database: \"test\"\n        collection: \"indextest\"\n        options:\n          name: \"idx_unq_username\"\n          unique: true\n        keys:\n          username: -1\n        state: present\n      - database: \"test\"\n        collection: \"indextest\"\n        options:\n          name: \"idx_last_login\"\n          sparse: true\n        keys:\n          last_login: -1\n        state: present\n      - database: \"test\"\n        collection: \"indextest\"\n        options:\n          name: \"myindex\"\n        keys:\n          first_name: 1\n          last_name: -1\n          city: 1\n        state: present\n      - database: \"test\"\n        collection: partialtest\n        options:\n          name: \"idx_partialtest\"\n          partialFilterExpression:\n            rating:\n              $gt: 5\n        keys:\n          rating: -1\n          title: 1\n        state: present\n      - database: \"test\"\n        collection: \"wideindex\"\n        options:\n          name: \"mywideindex\"\n        keys:\n          email: -1\n          username: 1\n          first_name: 1\n          last_name: 1\n          dob: -1\n          city: 1\n          last_login: -1\n          review_count: 1\n          rating_count: 1\n          last_post: -1\n        state: present\n",
        "metadata": null,
        "return": {
            "changed": {
                "description": "Indicates the module has changed something.",
                "returned": "When the module has changed something.",
                "type": "bool"
            },
            "failed": {
                "description": "Indicates the module has failed.",
                "returned": "When the module has encountered an error.",
                "type": "bool"
            },
            "indexes_created": {
                "description": "List of indexes created.",
                "returned": "always",
                "sample": [
                    "myindex",
                    "myindex2"
                ],
                "type": "list"
            },
            "indexes_dropped": {
                "description": "List of indexes dropped.",
                "returned": "always",
                "sample": [
                    "myindex",
                    "myindex2"
                ],
                "type": "list"
            }
        }
    }
}
