{
    "community.aws.ec2_asg_lifecycle_hook": {
        "doc": {
            "author": "Igor 'Tsigankov' Eyrich (@tsiganenok) <tsiganenok@gmail.com>",
            "collection": "community.aws",
            "description": [
                "Will create a new hook when I(state=present) and no given Hook is found.",
                "Will update an existing hook when I(state=present) and a Hook is found, but current and provided parameters differ.",
                "Will delete the hook when I(state=absent) and a Hook is found."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/aws/plugins/modules/ec2_asg_lifecycle_hook.py",
            "has_action": false,
            "module": "ec2_asg_lifecycle_hook",
            "notes": [
                "If parameters are not set within the module, the following environment variables can be used in decreasing order of precedence C(AWS_URL) or C(EC2_URL), C(AWS_ACCESS_KEY_ID) or C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY), C(AWS_SECRET_ACCESS_KEY) or C(AWS_SECRET_KEY) or C(EC2_SECRET_KEY), C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN), C(AWS_REGION) or C(EC2_REGION)",
                "Ansible uses the boto configuration file (typically ~/.boto) if no credentials are provided. See https://boto.readthedocs.io/en/latest/boto_config_tut.html",
                "C(AWS_REGION) or C(EC2_REGION) can be typically be used to specify the AWS region, when required, but this can also be configured in the boto config file"
            ],
            "options": {
                "autoscaling_group_name": {
                    "description": [
                        "The name of the Auto Scaling group to which you want to assign the lifecycle hook."
                    ],
                    "required": true,
                    "type": "str"
                },
                "aws_access_key": {
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ],
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "aws_config": {
                    "description": [
                        "A dictionary to modify the botocore configuration.",
                        "Parameters can be found at U(https://botocore.amazonaws.com/v1/documentation/api/latest/reference/config.html#botocore.config.Config).",
                        "Only the 'user_agent' key is used for boto modules. See U(http://boto.cloudhackers.com/en/latest/boto_config_tut.html#boto) for more boto configuration."
                    ],
                    "type": "dict"
                },
                "aws_secret_key": {
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ],
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "type": "str"
                },
                "debug_botocore_endpoint_logs": {
                    "default": "no",
                    "description": [
                        "Use a botocore.endpoint logger to parse the unique (rather than total) \"resource:action\" API calls made during a task, outputing the set to the resource_actions key in the task results. Use the aws_resource_action callback to output to total list made during a playbook. The ANSIBLE_DEBUG_BOTOCORE_LOGS environment variable may also be used."
                    ],
                    "type": "bool"
                },
                "default_result": {
                    "choices": [
                        "ABANDON",
                        "CONTINUE"
                    ],
                    "default": "ABANDON",
                    "description": [
                        "Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs."
                    ],
                    "type": "str"
                },
                "ec2_url": {
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "type": "str"
                },
                "heartbeat_timeout": {
                    "description": [
                        "The amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling RecordLifecycleActionHeartbeat.",
                        "By default Amazon AWS will use 3600 (1 hour)"
                    ],
                    "type": "int"
                },
                "lifecycle_hook_name": {
                    "description": [
                        "The name of the lifecycle hook."
                    ],
                    "required": true,
                    "type": "str"
                },
                "notification_meta_data": {
                    "description": [
                        "Contains additional information that you want to include any time Auto Scaling sends a message to the notification target."
                    ],
                    "type": "str"
                },
                "notification_target_arn": {
                    "description": [
                        "The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook.",
                        "This target can be either an SQS queue or an SNS topic.",
                        "If you specify an empty string, this overrides the current ARN."
                    ],
                    "type": "str"
                },
                "profile": {
                    "description": [
                        "Uses a boto profile. Only works with boto >= 2.24.0."
                    ],
                    "type": "str"
                },
                "region": {
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ],
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "type": "str"
                },
                "role_arn": {
                    "description": [
                        "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target."
                    ],
                    "type": "str"
                },
                "security_token": {
                    "aliases": [
                        "access_token"
                    ],
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Create or delete Lifecycle Hook.",
                        "When I(state=present) updates existing hook or creates a new hook if not found."
                    ],
                    "type": "str"
                },
                "transition": {
                    "choices": [
                        "autoscaling:EC2_INSTANCE_TERMINATING",
                        "autoscaling:EC2_INSTANCE_LAUNCHING"
                    ],
                    "description": [
                        "The instance state to which you want to attach the lifecycle hook.",
                        "Required when I(state=present)."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "boto",
                "boto3>=1.4.4",
                "python >= 2.6"
            ],
            "short_description": "Create, delete or update AWS ASG Lifecycle Hooks.",
            "version_added": "1.0.0",
            "version_added_collection": "community.aws"
        },
        "examples": "\n- name: Create / Update lifecycle hook\n  community.aws.ec2_asg_lifecycle_hook:\n    region: eu-central-1\n    state: present\n    autoscaling_group_name: example\n    lifecycle_hook_name: example\n    transition: autoscaling:EC2_INSTANCE_LAUNCHING\n    heartbeat_timeout: 7000\n    default_result: ABANDON\n\n- name: Delete lifecycle hook\n  community.aws.ec2_asg_lifecycle_hook:\n    region: eu-central-1\n    state: absent\n    autoscaling_group_name: example\n    lifecycle_hook_name: example\n\n",
        "metadata": null,
        "return": null
    }
}
