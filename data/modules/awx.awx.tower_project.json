{
    "awx.awx.tower_project": {
        "doc": {
            "author": "Wayne Witzel III (@wwitzel3)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower projects. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_project.py",
            "has_action": false,
            "module": "tower_project",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "allow_override": {
                    "aliases": [
                        "scm_allow_override"
                    ],
                    "description": [
                        "Allow changing the SCM branch or revision in a job template that uses this project."
                    ],
                    "type": "bool"
                },
                "credential": {
                    "aliases": [
                        "scm_credential"
                    ],
                    "description": [
                        "Name of the credential to use with this SCM resource."
                    ],
                    "type": "str"
                },
                "custom_virtualenv": {
                    "default": "",
                    "description": [
                        "Local absolute file path containing a custom Python virtualenv to use"
                    ],
                    "type": "str"
                },
                "description": {
                    "description": [
                        "Description to use for the project."
                    ],
                    "type": "str"
                },
                "local_path": {
                    "description": [
                        "The server playbook directory for manual projects."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name to use for the project."
                    ],
                    "required": true,
                    "type": "str"
                },
                "notification_templates_error": {
                    "description": [
                        "list of notifications to send on error"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_started": {
                    "description": [
                        "list of notifications to send on start"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "notification_templates_success": {
                    "description": [
                        "list of notifications to send on success"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "organization": {
                    "description": [
                        "Name of organization for project."
                    ],
                    "type": "str"
                },
                "scm_branch": {
                    "default": "",
                    "description": [
                        "The branch to use for the SCM resource."
                    ],
                    "type": "str"
                },
                "scm_clean": {
                    "default": "no",
                    "description": [
                        "Remove local modifications before updating."
                    ],
                    "type": "bool"
                },
                "scm_delete_on_update": {
                    "default": "no",
                    "description": [
                        "Remove the repository completely before updating."
                    ],
                    "type": "bool"
                },
                "scm_refspec": {
                    "default": "",
                    "description": [
                        "The refspec to use for the SCM resource."
                    ],
                    "type": "str"
                },
                "scm_type": {
                    "choices": [
                        "manual",
                        "git",
                        "svn",
                        "insights"
                    ],
                    "default": "manual",
                    "description": [
                        "Type of SCM resource."
                    ],
                    "type": "str"
                },
                "scm_update_cache_timeout": {
                    "default": 0,
                    "description": [
                        "Cache Timeout to cache prior project syncs for a certain number of seconds. Only valid if scm_update_on_launch is to True, otherwise ignored."
                    ],
                    "type": "int"
                },
                "scm_update_on_launch": {
                    "default": "no",
                    "description": [
                        "Before an update to the local repository before launching a job with this project."
                    ],
                    "type": "bool"
                },
                "scm_url": {
                    "description": [
                        "URL of SCM resource."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the resource."
                    ],
                    "type": "str"
                },
                "timeout": {
                    "aliases": [
                        "job_timeout"
                    ],
                    "default": 0,
                    "description": [
                        "The amount of time (in seconds) to run before the SCM Update is canceled. A value of 0 means no timeout."
                    ],
                    "type": "int"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "wait": {
                    "default": true,
                    "description": [
                        "Provides option (True by default) to wait for completed project sync before returning",
                        "Can assure playbook files are populated so that job templates that rely on the project may be successfully created"
                    ],
                    "type": "bool"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower projects"
        },
        "examples": "\n- name: Add tower project\n  tower_project:\n    name: \"Foo\"\n    description: \"Foo bar project\"\n    organization: \"test\"\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n\n- name: Add Tower Project with cache timeout and custom virtualenv\n  tower_project:\n    name: \"Foo\"\n    description: \"Foo bar project\"\n    organization: \"test\"\n    scm_update_on_launch: True\n    scm_update_cache_timeout: 60\n    custom_virtualenv: \"/var/lib/awx/var/lib/awx/venv/ansible-2.2\"\n    state: present\n    tower_config_file: \"~/tower_cli.cfg\"\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
