{
    "fortinet.fortimanager.fmgr_system_sdnconnector": {
        "doc": {
            "author": [
                "Link Zheng (@chillancezen)",
                "Jie Xue (@JieX19)",
                "Frank Shen (@fshen01)",
                "Hongbin Lu (@fgtdev-hblu)"
            ],
            "collection": "fortinet.fortimanager",
            "description": [
                "This module is able to configure a FortiManager device.",
                "Examples include all parameters and values which need to be adjusted to data sources before usage."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/fortinet/fortimanager/plugins/modules/fmgr_system_sdnconnector.py",
            "has_action": false,
            "module": "fmgr_system_sdnconnector",
            "notes": [
                "Running in workspace locking mode is supported in this FortiManager module, the top level parameters workspace_locking_adom and workspace_locking_timeout help do the work.",
                "To create or update an object, use state present directive.",
                "To delete an object, use state absent directive.",
                "Normally, running one module can fail when a non-zero rc is returned. you can also override the conditions to fail or succeed with parameters rc_failed and rc_succeeded"
            ],
            "options": {
                "adom": {
                    "description": "the parameter (adom) in requested url",
                    "required": true,
                    "type": "str"
                },
                "bypass_validation": {
                    "default": false,
                    "description": "only set to True when module schema diffs with FortiManager API structure, module continues to execute without validating parameters",
                    "required": false,
                    "type": "bool"
                },
                "rc_failed": {
                    "description": "the rc codes list with which the conditions to fail will be overriden",
                    "required": false,
                    "type": "list"
                },
                "rc_succeeded": {
                    "description": "the rc codes list with which the conditions to succeed will be overriden",
                    "required": false,
                    "type": "list"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": "the directive to create, update or delete an object",
                    "required": true,
                    "type": "str"
                },
                "system_sdnconnector": {
                    "description": "the top level parameters set",
                    "required": false,
                    "suboptions": {
                        "_local_cert": {
                            "description": "no description",
                            "type": "str"
                        },
                        "access-key": {
                            "description": "AWS access key ID.",
                            "type": "str"
                        },
                        "azure-region": {
                            "choices": [
                                "global",
                                "china",
                                "germany",
                                "usgov",
                                "local"
                            ],
                            "description": "Azure server region.",
                            "type": "str"
                        },
                        "client-id": {
                            "description": "Azure client ID (application ID).",
                            "type": "str"
                        },
                        "client-secret": {
                            "description": "no description",
                            "type": "str"
                        },
                        "compartment-id": {
                            "description": "Compartment ID.",
                            "type": "str"
                        },
                        "external-ip": {
                            "description": "no description",
                            "suboptions": {
                                "name": {
                                    "description": "External IP name.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "gcp-project": {
                            "description": "GCP project name.",
                            "type": "str"
                        },
                        "key-passwd": {
                            "description": "no description",
                            "type": "str"
                        },
                        "login-endpoint": {
                            "description": "Azure Stack login enpoint.",
                            "type": "str"
                        },
                        "name": {
                            "description": "SDN connector name.",
                            "type": "str"
                        },
                        "nic": {
                            "description": "no description",
                            "suboptions": {
                                "ip": {
                                    "description": "no description",
                                    "suboptions": {
                                        "name": {
                                            "description": "IP configuration name.",
                                            "type": "str"
                                        },
                                        "public-ip": {
                                            "description": "Public IP name.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "list"
                                },
                                "name": {
                                    "description": "Network interface name.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "nsx-cert-fingerprint": {
                            "description": "NSX certificate fingerprint.",
                            "type": "str"
                        },
                        "oci-cert": {
                            "description": "OCI certificate.",
                            "type": "str"
                        },
                        "oci-fingerprint": {
                            "description": "no description",
                            "type": "str"
                        },
                        "oci-region": {
                            "choices": [
                                "phoenix",
                                "ashburn",
                                "frankfurt",
                                "london",
                                "toronto"
                            ],
                            "description": "OCI server region.",
                            "type": "str"
                        },
                        "password": {
                            "description": "no description",
                            "type": "str"
                        },
                        "private-key": {
                            "description": "Private key of GCP service account.",
                            "type": "str"
                        },
                        "region": {
                            "description": "AWS region name.",
                            "type": "str"
                        },
                        "resource-group": {
                            "description": "Azure resource group.",
                            "type": "str"
                        },
                        "resource-url": {
                            "description": "Azure Stack resource URL.",
                            "type": "str"
                        },
                        "rest-interface": {
                            "choices": [
                                "mgmt",
                                "sync"
                            ],
                            "description": "Interface name for REST service to listen on.",
                            "type": "str"
                        },
                        "rest-password": {
                            "description": "no description",
                            "type": "str"
                        },
                        "rest-sport": {
                            "description": "REST service access port (1 - 65535).",
                            "type": "int"
                        },
                        "rest-ssl": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "no description",
                            "type": "str"
                        },
                        "route": {
                            "description": "no description",
                            "suboptions": {
                                "name": {
                                    "description": "Route name.",
                                    "type": "str"
                                }
                            },
                            "type": "list"
                        },
                        "route-table": {
                            "description": "no description",
                            "suboptions": {
                                "name": {
                                    "description": "Route table name.",
                                    "type": "str"
                                },
                                "route": {
                                    "description": "no description",
                                    "suboptions": {
                                        "name": {
                                            "description": "Route name.",
                                            "type": "str"
                                        },
                                        "next-hop": {
                                            "description": "Next hop address.",
                                            "type": "str"
                                        }
                                    },
                                    "type": "list"
                                }
                            },
                            "type": "list"
                        },
                        "secret-key": {
                            "description": "no description",
                            "type": "str"
                        },
                        "server": {
                            "description": "Server address of the remote SDN connector.",
                            "type": "str"
                        },
                        "server-port": {
                            "description": "Port number of the remote SDN connector.",
                            "type": "int"
                        },
                        "service-account": {
                            "description": "GCP service account email.",
                            "type": "str"
                        },
                        "status": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable connection to the remote SDN connector.",
                            "type": "str"
                        },
                        "subscription-id": {
                            "description": "Azure subscription ID.",
                            "type": "str"
                        },
                        "tenant-id": {
                            "description": "Tenant ID (directory ID).",
                            "type": "str"
                        },
                        "type": {
                            "choices": [
                                "aci",
                                "aws",
                                "nsx",
                                "nuage",
                                "azure",
                                "gcp",
                                "oci",
                                "openstack",
                                "kubernetes",
                                "vmware",
                                "acs",
                                "alicloud"
                            ],
                            "description": "Type of SDN connector.",
                            "type": "str"
                        },
                        "update-interval": {
                            "description": "Dynamic object update interval (0 - 3600 sec, 0 means disabled, default = 60).",
                            "type": "int"
                        },
                        "use-metadata-iam": {
                            "choices": [
                                "disable",
                                "enable"
                            ],
                            "description": "Enable/disable using IAM role from metadata to call API.",
                            "type": "str"
                        },
                        "user-id": {
                            "description": "User ID.",
                            "type": "str"
                        },
                        "username": {
                            "description": "Username of the remote SDN connector as login credentials.",
                            "type": "str"
                        },
                        "vmx-image-url": {
                            "description": "URL of web-hosted VMX image.",
                            "type": "str"
                        },
                        "vmx-service-name": {
                            "description": "VMX Service name.",
                            "type": "str"
                        },
                        "vpc-id": {
                            "description": "AWS VPC ID.",
                            "type": "str"
                        }
                    },
                    "type": "dict"
                },
                "workspace_locking_adom": {
                    "description": "the adom to lock for FortiManager running in workspace mode, the value can be global and others including root",
                    "required": false,
                    "type": "str"
                },
                "workspace_locking_timeout": {
                    "default": 300,
                    "description": "the maximum time in seconds to wait for other user to release the workspace lock",
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "Configure connection to SDN Connector.",
            "version_added": "2.10",
            "version_added_collection": "fortinet.fortimanager"
        },
        "examples": "\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: Configure connection to SDN Connector.\n      fmgr_system_sdnconnector:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         state: <value in [present, absent]>\n         system_sdnconnector:\n            _local_cert: <value of string>\n            access-key: <value of string>\n            azure-region: <value in [global, china, germany, ...]>\n            client-id: <value of string>\n            client-secret: <value of string>\n            compartment-id: <value of string>\n            external-ip:\n              -\n                  name: <value of string>\n            gcp-project: <value of string>\n            key-passwd: <value of string>\n            login-endpoint: <value of string>\n            name: <value of string>\n            nic:\n              -\n                  ip:\n                    -\n                        name: <value of string>\n                        public-ip: <value of string>\n                  name: <value of string>\n            nsx-cert-fingerprint: <value of string>\n            oci-cert: <value of string>\n            oci-fingerprint: <value of string>\n            oci-region: <value in [phoenix, ashburn, frankfurt, ...]>\n            password: <value of string>\n            private-key: <value of string>\n            region: <value of string>\n            resource-group: <value of string>\n            resource-url: <value of string>\n            rest-interface: <value in [mgmt, sync]>\n            rest-password: <value of string>\n            rest-sport: <value of integer>\n            rest-ssl: <value in [disable, enable]>\n            route:\n              -\n                  name: <value of string>\n            route-table:\n              -\n                  name: <value of string>\n                  route:\n                    -\n                        name: <value of string>\n                        next-hop: <value of string>\n            secret-key: <value of string>\n            server: <value of string>\n            server-port: <value of integer>\n            service-account: <value of string>\n            status: <value in [disable, enable]>\n            subscription-id: <value of string>\n            tenant-id: <value of string>\n            type: <value in [aci, aws, nsx, ...]>\n            update-interval: <value of integer>\n            use-metadata-iam: <value in [disable, enable]>\n            user-id: <value of string>\n            username: <value of string>\n            vmx-image-url: <value of string>\n            vmx-service-name: <value of string>\n            vpc-id: <value of string>\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "request_url": {
                "description": "The full url requested",
                "returned": "always",
                "sample": "/sys/login/user",
                "type": "str"
            },
            "response_code": {
                "description": "The status of api request",
                "returned": "always",
                "sample": 0,
                "type": "int"
            },
            "response_message": {
                "description": "The descriptive message of the api response",
                "returned": "always",
                "sample": "OK.",
                "type": "str"
            }
        }
    }
}
