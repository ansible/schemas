{
    "awx.awx.tower_schedule": {
        "doc": {
            "author": "John Westcott IV (@john-westcott-iv)",
            "collection": "awx.awx",
            "description": [
                "Create, update, or destroy Ansible Tower schedules. See U(https://www.ansible.com/tower) for an overview."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/awx/awx/plugins/modules/tower_schedule.py",
            "has_action": false,
            "module": "tower_schedule",
            "notes": [
                "If no I(config_file) is provided we will attempt to use the tower-cli library defaults to find your Tower host information.",
                "I(config_file) should contain Tower configuration in the following format host=hostname username=username password=password"
            ],
            "options": {
                "description": {
                    "description": [
                        "Optional description of this schedule."
                    ],
                    "required": false,
                    "type": "str"
                },
                "diff_mode": {
                    "description": [
                        "Enable diff mode for the job template."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "enabled": {
                    "description": [
                        "Enables processing of this schedule."
                    ],
                    "required": false,
                    "type": "bool"
                },
                "extra_data": {
                    "default": {},
                    "description": [
                        "Specify C(extra_vars) for the template."
                    ],
                    "required": false,
                    "type": "dict"
                },
                "inventory": {
                    "description": [
                        "Inventory applied as a prompt, assuming job template prompts for inventory"
                    ],
                    "required": false,
                    "type": "str"
                },
                "job_tags": {
                    "description": [
                        "Comma separated list of the tags to use for the job template."
                    ],
                    "required": false,
                    "type": "str"
                },
                "job_type": {
                    "choices": [
                        "run",
                        "check"
                    ],
                    "description": [
                        "The job type to use for the job template."
                    ],
                    "required": false,
                    "type": "str"
                },
                "limit": {
                    "description": [
                        "A host pattern to further constrain the list of hosts managed or affected by the playbook"
                    ],
                    "required": false,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of this schedule."
                    ],
                    "required": true,
                    "type": "str"
                },
                "new_name": {
                    "description": [
                        "Setting this option will change the existing name (looked up via the name field."
                    ],
                    "required": false,
                    "type": "str"
                },
                "rrule": {
                    "description": [
                        "A value representing the schedules iCal recurrence rule.",
                        "See rrule plugin for help constructing this value"
                    ],
                    "required": false,
                    "type": "str"
                },
                "scm_branch": {
                    "description": [
                        "Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true."
                    ],
                    "required": false,
                    "type": "str"
                },
                "skip_tags": {
                    "description": [
                        "Comma separated list of the tags to skip for the job template."
                    ],
                    "required": false,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Desired state of the resource."
                    ],
                    "type": "str"
                },
                "tower_config_file": {
                    "description": [
                        "Path to the Tower or AWX config file.",
                        "If provided, the other locations for config files will not be considered."
                    ],
                    "type": "path"
                },
                "tower_host": {
                    "description": [
                        "URL to your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_HOST) and then config files",
                        "If value not specified by any means, the value of C(127.0.0.1) will be used"
                    ],
                    "type": "str"
                },
                "tower_oauthtoken": {
                    "description": [
                        "The Tower OAuth token to use.",
                        "This value can be in one of two formats.",
                        "A string which is the token itself. (i.e. bqV5txm97wqJqtkxlMkhQz0pKhRMMX)",
                        "A dictionary structure as returned by the tower_token module.",
                        "If value not set, will try environment variable C(TOWER_OAUTH_TOKEN) and then config files"
                    ],
                    "type": "raw",
                    "version_added": "3.7",
                    "version_added_collection": "awx.awx"
                },
                "tower_password": {
                    "description": [
                        "Password for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_PASSWORD) and then config files"
                    ],
                    "type": "str"
                },
                "tower_username": {
                    "description": [
                        "Username for your Tower or AWX instance.",
                        "If value not set, will try environment variable C(TOWER_USERNAME) and then config files"
                    ],
                    "type": "str"
                },
                "unified_job_template": {
                    "description": [
                        "Name of unified job template to schedule."
                    ],
                    "required": false,
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "tower_verify_ssl"
                    ],
                    "description": [
                        "Whether to allow insecure connections to Tower or AWX.",
                        "If C(no), SSL certificates will not be validated.",
                        "This should only be used on personally controlled sites using self-signed certificates.",
                        "If value not set, will try environment variable C(TOWER_VERIFY_SSL) and then config files"
                    ],
                    "type": "bool"
                },
                "verbosity": {
                    "choices": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "description": [
                        "Control the output level Ansible produces as the playbook runs. 0 - Normal, 1 - Verbose, 2 - More Verbose, 3 - Debug, 4 - Connection Debug."
                    ],
                    "required": false,
                    "type": "int"
                }
            },
            "short_description": "create, update, or destroy Ansible Tower schedules."
        },
        "examples": "\n- name: Build a schedule for Demo Job Template\n  tower_schedule:\n    name: \"{{ sched1 }}\"\n    state: present\n    unified_job_template: \"Demo Job Template\"\n    rrule: \"DTSTART:20191219T130551Z RRULE:FREQ=WEEKLY;INTERVAL=1;COUNT=1\"\n  register: result\n\n- name: Build the same schedule using the rrule plugin\n  tower_schedule:\n    name: \"{{ sched1 }}\"\n    state: present\n    unified_job_template: \"Demo Job Template\"\n    rrule: \"{{ query('awx.awx.tower_schedule_rrule', 'week', start_date='2019-12-19 13:05:51') }}\"\n  register: result\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": null
    }
}
