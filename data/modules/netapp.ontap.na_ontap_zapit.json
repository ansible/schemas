{
    "netapp.ontap.na_ontap_zapit": {
        "doc": {
            "author": "NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>",
            "collection": "netapp.ontap",
            "description": [
                "Call a ZAPI on ONTAP.",
                "Cluster ZAPIs are run using a cluster admin account.",
                "Vserver ZAPIs can be run using a vsadmin account or using vserver tunneling (cluster admin with I(vserver option)).",
                "In case of success, a json dictionary is returned as C(response).",
                "In case of a ZAPI error, C(status), C(errno), C(reason) are set to help with diagnosing the issue,",
                "and the call is reported as an error ('failed').",
                "Other errors (eg connection issues) are reported as Ansible error."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netapp/ontap/plugins/modules/na_ontap_zapit.py",
            "has_action": false,
            "module": "na_ontap_zapit",
            "notes": [
                "The modules prefixed with na\\\\_ontap are built to support the ONTAP storage platform."
            ],
            "options": {
                "cert_filepath": {
                    "description": [
                        "path to SSL client cert file (.pem).",
                        "not supported with python 2.6."
                    ],
                    "type": "str",
                    "version_added": "20.6.0",
                    "version_added_collection": "netapp.ontap"
                },
                "feature_flags": {
                    "description": [
                        "Enable or disable a new feature.",
                        "This can be used to enable an experimental feature or disable a new feature that breaks backward compatibility.",
                        "Supported keys and values are subject to change without notice.  Unknown keys are ignored."
                    ],
                    "type": "dict",
                    "version_added": "20.5.0",
                    "version_added_collection": "netapp.ontap"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the ONTAP instance."
                    ],
                    "required": true,
                    "type": "str"
                },
                "http_port": {
                    "description": [
                        "Override the default port (80 or 443) with this port"
                    ],
                    "type": "int"
                },
                "https": {
                    "default": false,
                    "description": [
                        "Enable and disable https.",
                        "Ignored when using REST as only https is supported.",
                        "Ignored when using SSL certificate authentication as it requires SSL."
                    ],
                    "type": "bool"
                },
                "key_filepath": {
                    "description": [
                        "path to SSL client key file."
                    ],
                    "type": "str",
                    "version_added": "20.6.0",
                    "version_added_collection": "netapp.ontap"
                },
                "ontapi": {
                    "description": [
                        "The ontap api version to use"
                    ],
                    "type": "int"
                },
                "password": {
                    "aliases": [
                        "pass"
                    ],
                    "description": [
                        "Password for the specified user."
                    ],
                    "type": "str"
                },
                "use_rest": {
                    "default": "auto",
                    "description": [
                        "REST API if supported by the target system for all the resources and attributes the module requires. Otherwise will revert to ZAPI.",
                        "always -- will always use the REST API",
                        "never -- will always use the ZAPI",
                        "auto -- will try to use the REST Api"
                    ],
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "user"
                    ],
                    "description": [
                        "This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.",
                        "For more information, please read the documentation U(https://mysupport.netapp.com/NOW/download/software/nmsdk/9.4/).",
                        "Two authentication methods are supported",
                        "1. basic authentication, using username and password,",
                        "2. SSL certificate authentication, using a ssl client cert file, and optionally a private key file.",
                        "To use a certificate, the certificate must have been installed in the ONTAP cluster, and cert authentication must have been enabled."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(False) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                },
                "vserver": {
                    "description": [
                        "if provided, forces vserver tunneling.  username identifies a cluster admin account."
                    ],
                    "type": "str"
                },
                "zapi": {
                    "description": [
                        "A dictionary for the zapi and arguments.",
                        "An XML tag I(<tag>value</tag>) is a dictionary with tag as the key.",
                        "Value can be another dictionary, a list of dictionaries, a string, or nothing.",
                        "eg I(<tag/>) is represented as I(tag:)",
                        "A single zapi can be called at a time.  Ansible warns if duplicate keys are found and only uses the last entry."
                    ],
                    "required": true,
                    "type": "dict"
                }
            },
            "requirements": [
                "Ansible 2.9",
                "Python3 netapp-lib (2018.11.13) or later. Install using 'pip install netapp-lib'",
                "netapp-lib 2020.3.12 is strongly recommended as it provides better error reporting for connection issues.",
                "A physical or virtual clustered Data ONTAP system. The modules support Data ONTAP 9.1 and onward.",
                "REST support requires ONTAP 9.6 or later.",
                "To enable http on the cluster you must run the following commands 'set -privilege advanced;' 'system services web modify -http-enabled true;'"
            ],
            "short_description": "NetApp ONTAP Run any ZAPI on ONTAP",
            "version_added": "20.4.0",
            "version_added_collection": "netapp.ontap"
        },
        "examples": "\n-\n  name: Ontap ZAPI\n  hosts: localhost\n  gather_facts: False\n  collections:\n    - netapp.ontap\n  vars:\n    login: &login\n      hostname: \"{{ admin_ip }}\"\n      username: \"{{ admin_username }}\"\n      password: \"{{ admin_password }}\"\n      https: true\n      validate_certs: false\n    svm_login: &svm_login\n      hostname: \"{{ svm_admin_ip }}\"\n      username: \"{{ svm_admin_username }}\"\n      password: \"{{ svm_admin_password }}\"\n      https: true\n      validate_certs: false\n\n  tasks:\n    - name: run ontap ZAPI command as cluster admin\n      na_ontap_zapit:\n        <<: *login\n        zapi:\n          system-get-version:\n      register: output\n    - debug: var=output\n\n    - name: run ontap ZAPI command as cluster admin\n      na_ontap_zapit:\n        <<: *login\n        zapi:\n          vserver-get-iter:\n      register: output\n    - debug: var=output\n\n    - name: run ontap ZAPI command as cluster admin\n      na_ontap_zapit:\n        <<: *login\n        zapi:\n          vserver-get-iter:\n            desired-attributes:\n              vserver-info:\n                - aggr-list:\n                    - aggr-name\n                - allowed-protocols:\n                    - protocols\n                - vserver-aggr-info-list:\n                    - vserser-aggr-info\n                - uuid\n            query:\n              vserver-info:\n                vserver-name: trident_svm\n      register: output\n    - debug: var=output\n\n    - name: run ontap ZAPI command as vsadmin\n      na_ontap_zapit:\n        <<: *svm_login\n        zapi:\n          vserver-get-iter:\n            desired-attributes:\n              vserver-info:\n                - uuid\n      register: output\n    - debug: var=output\n\n    - name: run ontap ZAPI command as vserver tunneling\n      na_ontap_zapit:\n        <<: *login\n        vserver: trident_svm\n        zapi:\n          vserver-get-iter:\n            desired-attributes:\n              vserver-info:\n                - uuid\n      register: output\n    - debug: var=output\n\n    - name: run ontap active-directory ZAPI command\n      na_ontap_zapit:\n        <<: *login\n        vserver: trident_svm\n        zapi:\n          active-directory-account-create:\n            account-name: testaccount\n            admin-username: testuser\n            admin-password: testpass\n            domain: testdomain\n            organizational-unit: testou\n      register: output\n      ignore_errors: True\n    - debug: var=output\n\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": {
            "errno": {
                "description": [
                    "If the ZAPI was executed but failed, the error code set by the ZAPI.",
                    "Not present if successful, or if the ZAPI call cannot be performed."
                ],
                "returned": "On error",
                "type": "str"
            },
            "reason": {
                "description": [
                    "If the ZAPI was executed but failed, the error reason set by the ZAPI.",
                    "Not present if successful, or if the ZAPI call cannot be performed."
                ],
                "returned": "On error",
                "type": "str"
            },
            "response": {
                "description": [
                    "If successful, a json dictionary representing the data returned by the ZAPI.",
                    "If the ZAPI was executed but failed, an empty dictionary.",
                    "Not present if the ZAPI call cannot be performed."
                ],
                "returned": "On success",
                "type": "dict"
            },
            "status": {
                "description": [
                    "If the ZAPI was executed but failed, the status set by the ZAPI.",
                    "Not present if successful, or if the ZAPI call cannot be performed."
                ],
                "returned": "On error",
                "type": "str"
            }
        }
    }
}
