{
    "community.kubevirt.kubevirt_template": {
        "doc": {
            "author": "KubeVirt Team (@kubevirt)",
            "collection": "community.kubevirt",
            "description": [
                "Use Openshift Python SDK to manage the state of KubeVirt templates."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/kubevirt/plugins/modules/kubevirt_template.py",
            "has_action": false,
            "module": "kubevirt_template",
            "notes": [
                "The OpenShift Python client wraps the K8s Python client, providing full access to all of the APIS and models available on both platforms. For API version details and additional information visit https://github.com/openshift/openshift-restclient-python",
                "To avoid SSL certificate validation errors when C(validate_certs) is I(True), the full certificate chain for the API server must be provided via C(ca_cert) or in the kubeconfig file."
            ],
            "options": {
                "api_key": {
                    "description": [
                        "Token used to authenticate with the API. Can also be specified via K8S_AUTH_API_KEY environment variable."
                    ],
                    "type": "str"
                },
                "ca_cert": {
                    "aliases": [
                        "ssl_ca_cert"
                    ],
                    "description": [
                        "Path to a CA certificate used to authenticate with the API. The full certificate chain must be provided to avoid certificate validation errors. Can also be specified via K8S_AUTH_SSL_CA_CERT environment variable."
                    ],
                    "type": "path"
                },
                "client_cert": {
                    "aliases": [
                        "cert_file"
                    ],
                    "description": [
                        "Path to a certificate used to authenticate with the API. Can also be specified via K8S_AUTH_CERT_FILE environment variable."
                    ],
                    "type": "path"
                },
                "client_key": {
                    "aliases": [
                        "key_file"
                    ],
                    "description": [
                        "Path to a key file used to authenticate with the API. Can also be specified via K8S_AUTH_KEY_FILE environment variable."
                    ],
                    "type": "path"
                },
                "context": {
                    "description": [
                        "The name of a context found in the config file. Can also be specified via K8S_AUTH_CONTEXT environment variable."
                    ],
                    "type": "str"
                },
                "default_disk": {
                    "description": [
                        "The goal of default disk is to define what kind of disk is supported by the OS mainly in terms of bus (ide, scsi, sata, virtio, ...)",
                        "The C(default_disk) parameter define configuration overlay for disks that will be applied on top of disks during virtual machine creation to define global compatibility and/or performance defaults defined here.",
                        "This is parameter can be used only when kubevirt addon is installed on your openshift cluster."
                    ],
                    "type": "dict"
                },
                "default_network": {
                    "description": [
                        "The goal of default network is similar to I(default_volume) and should be used as a template that specifies performance and connection parameters (L2 bridge for example)",
                        "The C(default_network) parameter define configuration overlay for networks that will be applied on top of networks during virtual machine creation to define global compatibility and/or performance defaults defined here.",
                        "This is parameter can be used only when kubevirt addon is installed on your openshift cluster."
                    ],
                    "type": "dict"
                },
                "default_nic": {
                    "description": [
                        "The goal of default network is similar to I(default_disk) and should be used as a template to ensure OS compatibility and performance.",
                        "The C(default_nic) parameter define configuration overlay for nic that will be applied on top of nics during virtual machine creation to define global compatibility and/or performance defaults defined here.",
                        "This is parameter can be used only when kubevirt addon is installed on your openshift cluster."
                    ],
                    "type": "dict"
                },
                "default_volume": {
                    "description": [
                        "The goal of default volume is to be able to configure mostly performance parameters like caches if those are exposed by the underlying volume implementation.",
                        "The C(default_volume) parameter define configuration overlay for volumes that will be applied on top of volumes during virtual machine creation to define global compatibility and/or performance defaults defined here.",
                        "This is parameter can be used only when kubevirt addon is installed on your openshift cluster."
                    ],
                    "type": "dict"
                },
                "description": {
                    "description": [
                        "A description of the template.",
                        "Include enough detail that the user will understand what is being deployed... and any caveats they need to know before deploying. It should also provide links to additional information, such as a README file.\""
                    ],
                    "type": "str"
                },
                "display_name": {
                    "description": [
                        "A brief, user-friendly name, which can be employed by user interfaces."
                    ],
                    "type": "str"
                },
                "documentation_url": {
                    "description": [
                        "A URL referencing further documentation for the template."
                    ],
                    "type": "str"
                },
                "editable": {
                    "description": [
                        "Extension for hinting at which elements should be considered editable. List of jsonpath selectors. The jsonpath root is the objects: element of the template.",
                        "This is parameter can be used only when kubevirt addon is installed on your openshift cluster."
                    ],
                    "type": "list"
                },
                "force": {
                    "default": false,
                    "description": [
                        "If set to C(yes), and I(state) is C(present), an existing object will be replaced."
                    ],
                    "type": "bool"
                },
                "host": {
                    "description": [
                        "Provide a URL for accessing the API. Can also be specified via K8S_AUTH_HOST environment variable."
                    ],
                    "type": "str"
                },
                "icon_class": {
                    "description": [
                        "An icon to be displayed with your template in the web console. Choose from our existing logo icons when possible. You can also use icons from FontAwesome. Alternatively, provide icons through CSS customizations that can be added to an OpenShift Container Platform cluster that uses your template. You must specify an icon class that exists, or it will prevent falling back to the generic icon."
                    ],
                    "type": "str"
                },
                "kubeconfig": {
                    "description": [
                        "Path to an existing Kubernetes config file. If not provided, and no other connection options are provided, the openshift client will attempt to load the default configuration file from I(~/.kube/config.json). Can also be specified via K8S_AUTH_KUBECONFIG environment variable."
                    ],
                    "type": "path"
                },
                "long_description": {
                    "description": [
                        "Additional template description. This may be displayed by the service catalog, for example."
                    ],
                    "type": "str"
                },
                "merge_type": {
                    "choices": [
                        "json",
                        "merge",
                        "strategic-merge"
                    ],
                    "description": [
                        "Whether to override the default patch merge approach with a specific type. By default, the strategic merge will typically be used."
                    ],
                    "type": "list"
                },
                "name": {
                    "description": [
                        "Name of the Template object."
                    ],
                    "required": true,
                    "type": "str"
                },
                "namespace": {
                    "description": [
                        "Namespace where the Template object exists."
                    ],
                    "required": true,
                    "type": "str"
                },
                "objects": {
                    "description": [
                        "List of any valid API objects, such as a I(DeploymentConfig), I(Service), etc. The object will be created exactly as defined here, with any parameter values substituted in prior to creation. The definition of these objects can reference parameters defined earlier.",
                        "As part of the list user can pass also I(VirtualMachine) kind. When passing I(VirtualMachine) user must use Ansible structure of the parameters not the Kubernetes API structure. For more information please take a look at M(community.kubevirt.kubevirt_vm) module and at EXAMPLES section, where you can see example."
                    ],
                    "type": "list"
                },
                "parameters": {
                    "description": [
                        "Parameters allow a value to be supplied by the user or generated when the template is instantiated. Then, that value is substituted wherever the parameter is referenced. References can be defined in any field in the objects list field. This is useful for generating random passwords or allowing the user to supply a host name or other user-specific value that is required to customize the template.",
                        "More information can be found at: U(https://docs.openshift.com/container-platform/3.6/dev_guide/templates.html#writing-parameters)"
                    ],
                    "type": "list"
                },
                "password": {
                    "description": [
                        "Provide a password for authenticating with the API. Can also be specified via K8S_AUTH_PASSWORD environment variable.",
                        "Please read the description of the C(username) option for a discussion of when this option is applicable."
                    ],
                    "type": "str"
                },
                "persist_config": {
                    "description": [
                        "Whether or not to save the kube config refresh tokens. Can also be specified via K8S_AUTH_PERSIST_CONFIG environment variable.",
                        "When the k8s context is using a user credentials with refresh tokens (like oidc or gke/gcloud auth), the token is refreshed by the k8s python client library but not saved by default. So the old refresh token can expire and the next auth might fail. Setting this flag to true will tell the k8s python client to save the new refresh token to the kube config file.",
                        "Default to false.",
                        "Please note that the current version of the k8s python client library does not support setting this flag to True yet.",
                        "The fix for this k8s python library is here: https://github.com/kubernetes-client/python-base/pull/169"
                    ],
                    "type": "bool"
                },
                "provider_display_name": {
                    "description": [
                        "The name of the person or organization providing the template."
                    ],
                    "type": "str"
                },
                "proxy": {
                    "description": [
                        "The URL of an HTTP proxy to use for the connection. Can also be specified via K8S_AUTH_PROXY environment variable.",
                        "Please note that this module does not pick up typical proxy settings from the environment (e.g. HTTP_PROXY)."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "absent",
                        "present"
                    ],
                    "default": "present",
                    "description": [
                        "Determines if an object should be created, patched, or deleted. When set to C(present), an object will be created, if it does not already exist. If set to C(absent), an existing object will be deleted. If set to C(present), an existing object will be patched, if its attributes differ from those specified using I(resource_definition) or I(src)."
                    ],
                    "type": "str"
                },
                "support_url": {
                    "description": [
                        "A URL where support can be obtained for the template."
                    ],
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Provide a username for authenticating with the API. Can also be specified via K8S_AUTH_USERNAME environment variable.",
                        "Please note that this only works with clusters configured to use HTTP Basic Auth. If your cluster has a different form of authentication (e.g. OAuth2 in OpenShift), this option will not work as expected and you should look into the C(k8s_auth) module, as that might do what you need."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "aliases": [
                        "verify_ssl"
                    ],
                    "description": [
                        "Whether or not to verify the API server's SSL certificates. Can also be specified via K8S_AUTH_VERIFY_SSL environment variable."
                    ],
                    "type": "bool"
                },
                "version": {
                    "description": [
                        "Template structure version.",
                        "This is parameter can be used only when kubevirt addon is installed on your openshift cluster."
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.7",
                "openshift >= 0.8.2"
            ],
            "short_description": "Manage KubeVirt templates"
        },
        "examples": "\n- name: Create template 'mytemplate'\n  community.kubevirt.kubevirt_template:\n    state: present\n    name: myvmtemplate\n    namespace: templates\n    display_name: Generic cirros template\n    description: Basic cirros template\n    long_description: Verbose description of cirros template\n    provider_display_name: Just Be Cool, Inc.\n    documentation_url: http://theverycoolcompany.com\n    support_url: http://support.theverycoolcompany.com\n    icon_class: icon-linux\n    default_disk:\n      disk:\n        bus: virtio\n    default_nic:\n      model: virtio\n    default_network:\n      resource:\n        resourceName: bridge.network.kubevirt.io/cnvmgmt\n    default_volume:\n      containerDisk:\n        image: kubevirt/cirros-container-disk-demo:latest\n    objects:\n      - name: ${NAME}\n        kind: VirtualMachine\n        memory: ${MEMORY_SIZE}\n        state: present\n        namespace: vms\n    parameters:\n      - name: NAME\n        description: VM name\n        generate: expression\n        from: 'vm-[A-Za-z0-9]{8}'\n      - name: MEMORY_SIZE\n        description: Memory size\n        value: 1Gi\n\n- name: Remove template 'myvmtemplate'\n  community.kubevirt.kubevirt_template:\n    state: absent\n    name: myvmtemplate\n    namespace: templates\n",
        "metadata": null,
        "return": {
            "kubevirt_template": {
                "contains": {},
                "description": [
                    "The template dictionary specification returned by the API."
                ],
                "returned": "success",
                "type": "complex"
            }
        }
    }
}
