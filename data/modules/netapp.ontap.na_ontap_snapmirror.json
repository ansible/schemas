{
    "netapp.ontap.na_ontap_snapmirror": {
        "doc": {
            "author": "NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>",
            "collection": "netapp.ontap",
            "description": [
                "Create/Delete/Update/Initialize/Break/Resync/Resume SnapMirror volume/vserver relationships for ONTAP/ONTAP",
                "This includes SVM replication, aka vserver DR",
                "Create/Delete/Update/Initialize SnapMirror volume relationship between ElementSW and ONTAP",
                "Modify schedule for a SnapMirror relationship for ONTAP/ONTAP and ElementSW/ONTAP",
                "Pre-requisite for ElementSW to ONTAP relationship or vice-versa is an established SnapMirror endpoint for ONTAP cluster with ElementSW UI",
                "Pre-requisite for ElementSW to ONTAP relationship or vice-versa is to have SnapMirror enabled in the ElementSW volume",
                "For creating a SnapMirror ElementSW/ONTAP relationship, an existing ONTAP/ElementSW relationship should be present",
                "Performs resync if the C(relationship_state=active) and the current mirror state of the snapmirror relationship is broken-off",
                "Performs resume if the C(relationship_state=active), the current snapmirror relationship status is quiesced and mirror state is snapmirrored",
                "Performs restore if the C(relationship_type=restore) and all other operations will not be performed during this task"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/netapp/ontap/plugins/modules/na_ontap_snapmirror.py",
            "has_action": false,
            "module": "na_ontap_snapmirror",
            "notes": [
                "The modules prefixed with na\\\\_ontap are built to support the ONTAP storage platform."
            ],
            "options": {
                "cert_filepath": {
                    "description": [
                        "path to SSL client cert file (.pem).",
                        "not supported with python 2.6."
                    ],
                    "type": "str",
                    "version_added": "20.6.0",
                    "version_added_collection": "netapp.ontap"
                },
                "connection_type": {
                    "choices": [
                        "ontap_ontap",
                        "elementsw_ontap",
                        "ontap_elementsw"
                    ],
                    "default": "ontap_ontap",
                    "description": [
                        "Type of SnapMirror relationship.",
                        "Pre-requisite for either elementsw_ontap or ontap_elementsw the ElementSW volume should have enableSnapmirror option set to true.",
                        "For using ontap_elementsw, elementsw_ontap snapmirror relationship should exist."
                    ],
                    "type": "str",
                    "version_added": "2.9.0",
                    "version_added_collection": "netapp.ontap"
                },
                "create_destination": {
                    "description": [
                        "Requires ONTAP 9.7 or later.",
                        "Creates the destination volume if enabled and destination_volume is present or destination_path includes a volume name.",
                        "Creates and peers the destination vserver for SVM DR."
                    ],
                    "suboptions": {
                        "enabled": {
                            "default": true,
                            "description": [
                                "Whether to create the destination volume or vserver.",
                                "This is automatically enabled if any other suboption is present."
                            ],
                            "type": "bool"
                        },
                        "storage_service": {
                            "description": "storage service associated with the destination endpoint.",
                            "suboptions": {
                                "enabled": {
                                    "description": "whether to create the destination endpoint using storage service.",
                                    "type": "bool"
                                },
                                "enforce_performance": {
                                    "description": "whether to enforce storage service performance on the destination endpoint.",
                                    "type": "bool"
                                },
                                "name": {
                                    "choices": [
                                        "value",
                                        "performance",
                                        "extreme"
                                    ],
                                    "description": "the performance service level (PSL) for this volume endpoint.",
                                    "type": "str"
                                }
                            },
                            "type": "dict"
                        },
                        "tiering": {
                            "description": [
                                "Cloud tiering policy."
                            ],
                            "suboptions": {
                                "policy": {
                                    "choices": [
                                        "all",
                                        "auto",
                                        "none",
                                        "snapshot-only"
                                    ],
                                    "description": [
                                        "Cloud tiering policy."
                                    ],
                                    "type": "str"
                                },
                                "supported": {
                                    "description": [
                                        "enable provisioning of the destination endpoint volumes on FabricPool aggregates.",
                                        "only supported for FlexVol volume, FlexGroup volume, and Consistency Group endpoints."
                                    ],
                                    "type": "bool"
                                }
                            },
                            "type": "dict"
                        }
                    },
                    "type": "dict",
                    "version_added": "21.1.0",
                    "version_added_collection": "netapp.ontap"
                },
                "destination_cluster": {
                    "description": [
                        "Requires ONTAP 9.7 or higher.",
                        "Required to create the destination vserver for SVM DR or the destination volume.",
                        "Deprecated as of 21.2.0, use destination_endpoint and cluster."
                    ],
                    "type": "str",
                    "version_added": "21.1.0",
                    "version_added_collection": "netapp.ontap"
                },
                "destination_endpoint": {
                    "description": [
                        "destination endpoint of a SnapMirror relationship."
                    ],
                    "suboptions": {
                        "cluster": {
                            "description": [
                                "Requires ONTAP 9.7 or higher.",
                                "Required to create the destination vserver for SVM DR or the destination volume."
                            ],
                            "type": "str"
                        },
                        "consistency_group_volumes": {
                            "description": [
                                "Requires ONTAP 9.8 or higher.",
                                "Mandatory property for a Consistency Group endpoint. Specifies the list of FlexVol volumes for a Consistency Group."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "ipspace": {
                            "description": [
                                "Requires ONTAP 9.8 or higher.",
                                "Optional property to specify the IPSpace of the SVM."
                            ],
                            "type": "str"
                        },
                        "path": {
                            "description": [
                                "The destination endpoint for the relationship.",
                                "format is <vserver:volume>, <vserver:>, <vserver:/cg/cg_name>"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "svm": {
                            "description": [
                                "The name of the SVM.  Not sure when this is needed."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict",
                    "version_added": "21.2.0",
                    "version_added_collection": "netapp.ontap"
                },
                "destination_path": {
                    "description": [
                        "Specifies the destination endpoint of the SnapMirror relationship.",
                        "Deprecated as of 21.2.0, use destination_endpoint and path."
                    ],
                    "type": "str"
                },
                "destination_volume": {
                    "description": [
                        "Specifies the name of the destination volume for the SnapMirror.",
                        "Deprecated as of 21.2.0, use source_endpoint and path."
                    ],
                    "type": "str"
                },
                "destination_vserver": {
                    "description": [
                        "Name of the destination vserver for the SnapMirror.",
                        "Deprecated as of 21.2.0, use destination_endpoint and path, or svm."
                    ],
                    "type": "str"
                },
                "feature_flags": {
                    "description": [
                        "Enable or disable a new feature.",
                        "This can be used to enable an experimental feature or disable a new feature that breaks backward compatibility.",
                        "Supported keys and values are subject to change without notice.  Unknown keys are ignored."
                    ],
                    "type": "dict",
                    "version_added": "20.5.0",
                    "version_added_collection": "netapp.ontap"
                },
                "hostname": {
                    "description": [
                        "The hostname or IP address of the ONTAP instance."
                    ],
                    "required": true,
                    "type": "str"
                },
                "http_port": {
                    "description": [
                        "Override the default port (80 or 443) with this port"
                    ],
                    "type": "int"
                },
                "https": {
                    "default": false,
                    "description": [
                        "Enable and disable https.",
                        "Ignored when using REST as only https is supported.",
                        "Ignored when using SSL certificate authentication as it requires SSL."
                    ],
                    "type": "bool"
                },
                "identity_preserve": {
                    "description": [
                        "Specifies whether or not the identity of the source Vserver is replicated to the destination Vserver.",
                        "If this parameter is set to true, the source Vserver's configuration will additionally be replicated to the destination.",
                        "If the parameter is set to false, then only the source Vserver's volumes and RBAC configuration are replicated to the destination."
                    ],
                    "type": "bool",
                    "version_added": "2.9.0",
                    "version_added_collection": "netapp.ontap"
                },
                "initialize": {
                    "default": true,
                    "description": [
                        "Specifies whether to initialize SnapMirror relation.",
                        "Default is True, it can be explicitly set to False to avoid initializing SnapMirror relation."
                    ],
                    "type": "bool",
                    "version_added": "19.11.0",
                    "version_added_collection": "netapp.ontap"
                },
                "key_filepath": {
                    "description": [
                        "path to SSL client key file."
                    ],
                    "type": "str",
                    "version_added": "20.6.0",
                    "version_added_collection": "netapp.ontap"
                },
                "max_transfer_rate": {
                    "description": [
                        "Specifies the upper bound, in kilobytes per second, at which data is transferred.",
                        "Default is unlimited, it can be explicitly set to 0 as unlimited."
                    ],
                    "type": "int",
                    "version_added": "2.9.0",
                    "version_added_collection": "netapp.ontap"
                },
                "ontapi": {
                    "description": [
                        "The ontap api version to use"
                    ],
                    "type": "int"
                },
                "password": {
                    "aliases": [
                        "pass"
                    ],
                    "description": [
                        "Password for the specified user."
                    ],
                    "type": "str"
                },
                "policy": {
                    "description": [
                        "Specify the name of the SnapMirror policy that applies to this relationship."
                    ],
                    "type": "str",
                    "version_added": "2.8.0",
                    "version_added_collection": "netapp.ontap"
                },
                "relationship_info_only": {
                    "default": false,
                    "description": [
                        "If relationship-info-only is set to true then only relationship information is removed."
                    ],
                    "type": "bool",
                    "version_added": "20.4.0",
                    "version_added_collection": "netapp.ontap"
                },
                "relationship_state": {
                    "choices": [
                        "active",
                        "broken"
                    ],
                    "default": "active",
                    "description": [
                        "Specifies whether to break SnapMirror relation or establish a SnapMirror relationship.",
                        "state must be present to use this option."
                    ],
                    "type": "str",
                    "version_added": "20.2.0",
                    "version_added_collection": "netapp.ontap"
                },
                "relationship_type": {
                    "choices": [
                        "data_protection",
                        "load_sharing",
                        "vault",
                        "restore",
                        "transition_data_protection",
                        "extended_data_protection"
                    ],
                    "description": [
                        "Specify the type of SnapMirror relationship.",
                        "for 'restore' unless 'source_snapshot' is specified the most recent Snapshot copy on the source volume is restored.",
                        "restore SnapMirror is not idempotent.",
                        "With REST, only 'extended_data_protection' is supported.  ('restore' is TBD)"
                    ],
                    "type": "str"
                },
                "schedule": {
                    "description": [
                        "Specify the name of the current schedule, which is used to update the SnapMirror relationship.",
                        "Optional for create, modifiable."
                    ],
                    "type": "str"
                },
                "source_cluster": {
                    "description": [
                        "Requires ONTAP 9.7 or higher.",
                        "Required to create the peering relationship between source and destination SVMs.",
                        "Deprecated as of 21.2.0, use source_endpoint and cluster."
                    ],
                    "type": "str",
                    "version_added": "21.1.0",
                    "version_added_collection": "netapp.ontap"
                },
                "source_endpoint": {
                    "description": [
                        "source endpoint of a SnapMirror relationship."
                    ],
                    "suboptions": {
                        "cluster": {
                            "description": [
                                "Requires ONTAP 9.7 or higher.",
                                "Required to create the peering relationship between source and destination SVMs."
                            ],
                            "type": "str"
                        },
                        "consistency_group_volumes": {
                            "description": [
                                "Requires ONTAP 9.8 or higher.",
                                "Mandatory property for a Consistency Group endpoint. Specifies the list of FlexVol volumes for a Consistency Group."
                            ],
                            "elements": "str",
                            "type": "list"
                        },
                        "ipspace": {
                            "description": [
                                "Requires ONTAP 9.8 or higher.",
                                "Optional property to specify the IPSpace of the SVM."
                            ],
                            "type": "str"
                        },
                        "path": {
                            "description": [
                                "The source endpoint for the relationship.",
                                "If the source is an ONTAP volume (FlexVol or FlexGroup), format should be <vserver:volume>",
                                "For SVM DR, format should be <vserver:>",
                                "For a consistency group, format should be <vserver:/cg/cg_name>",
                                "If the source is an ElementSW volume, format should be <Element_SVIP:/lun/Element_VOLUME_ID>",
                                "If the source is an ElementSW volume, the volume should have SnapMirror enabled."
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "svm": {
                            "description": [
                                "The name of the SVM.  Not sure when this is needed."
                            ],
                            "type": "str"
                        }
                    },
                    "type": "dict",
                    "version_added": "21.2.0",
                    "version_added_collection": "netapp.ontap"
                },
                "source_hostname": {
                    "description": [
                        "Source hostname or management IP address for ONTAP or ElementSW cluster.",
                        "Required for SnapMirror delete"
                    ],
                    "type": "str"
                },
                "source_password": {
                    "description": [
                        "Source password for ONTAP or ElementSW cluster.",
                        "Optional if this is same as destination password."
                    ],
                    "type": "str"
                },
                "source_path": {
                    "description": [
                        "Specifies the source endpoint of the SnapMirror relationship.",
                        "If the source is an ONTAP volume, format should be <[vserver:][volume]> or <[[cluster:]//vserver/]volume>",
                        "If the source is an ElementSW volume, format should be <[Element_SVIP]:/lun/[Element_VOLUME_ID]>",
                        "If the source is an ElementSW volume, the volume should have SnapMirror enabled.",
                        "Deprecated as of 21.2.0, use source_endpoint and path."
                    ],
                    "type": "str"
                },
                "source_snapshot": {
                    "description": [
                        "Specifies the Snapshot from the source to be restored."
                    ],
                    "type": "str",
                    "version_added": "20.6.0",
                    "version_added_collection": "netapp.ontap"
                },
                "source_username": {
                    "description": [
                        "Source username for ONTAP or ElementSW cluster.",
                        "Optional if this is same as destination username."
                    ],
                    "type": "str"
                },
                "source_volume": {
                    "description": [
                        "Specifies the name of the source volume for the SnapMirror.",
                        "Deprecated as of 21.2.0, use source_endpoint and path."
                    ],
                    "type": "str"
                },
                "source_vserver": {
                    "description": [
                        "Name of the source vserver for the SnapMirror.",
                        "Deprecated as of 21.2.0, use source_endpoint and path, or svm."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the specified relationship should exist or not."
                    ],
                    "type": "str"
                },
                "update": {
                    "default": true,
                    "description": [
                        "Specifies whether to update the destination endpoint of the SnapMirror relationship only if the relationship is already present and active.",
                        "Default is True."
                    ],
                    "type": "bool",
                    "version_added": "20.2.0",
                    "version_added_collection": "netapp.ontap"
                },
                "use_rest": {
                    "default": "auto",
                    "description": [
                        "REST API if supported by the target system for all the resources and attributes the module requires. Otherwise will revert to ZAPI.",
                        "always -- will always use the REST API",
                        "never -- will always use the ZAPI",
                        "auto -- will try to use the REST Api"
                    ],
                    "type": "str"
                },
                "username": {
                    "aliases": [
                        "user"
                    ],
                    "description": [
                        "This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.",
                        "For more information, please read the documentation U(https://mysupport.netapp.com/NOW/download/software/nmsdk/9.4/).",
                        "Two authentication methods are supported",
                        "1. basic authentication, using username and password,",
                        "2. SSL certificate authentication, using a ssl client cert file, and optionally a private key file.",
                        "To use a certificate, the certificate must have been installed in the ONTAP cluster, and cert authentication must have been enabled."
                    ],
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(False) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "Ansible 2.9",
                "Python3 netapp-lib (2018.11.13) or later. Install using 'pip install netapp-lib'",
                "netapp-lib 2020.3.12 is strongly recommended as it provides better error reporting for connection issues.",
                "A physical or virtual clustered Data ONTAP system. The modules support Data ONTAP 9.1 and onward.",
                "REST support requires ONTAP 9.6 or later.",
                "To enable http on the cluster you must run the following commands 'set -privilege advanced;' 'system services web modify -http-enabled true;'"
            ],
            "short_description": "NetApp ONTAP or ElementSW Manage SnapMirror",
            "version_added": "2.7.0",
            "version_added_collection": "netapp.ontap"
        },
        "examples": "\n\n    # creates and initializes the snapmirror\n    - name: Create ONTAP/ONTAP SnapMirror\n      na_ontap_snapmirror:\n        state: present\n        source_volume: test_src\n        destination_volume: test_dest\n        source_vserver: ansible_src\n        destination_vserver: ansible_dest\n        schedule: hourly\n        policy: MirrorAllSnapshots\n        max_transfer_rate: 1000\n        initialize: False\n        hostname: \"{{ destination_cluster_hostname }}\"\n        username: \"{{ destination_cluster_username }}\"\n        password: \"{{ destination_cluster_password }}\"\n\n    # creates and initializes the snapmirror between vservers\n    - name: Create ONTAP/ONTAP vserver SnapMirror\n      na_ontap_snapmirror:\n        state: present\n        source_vserver: ansible_src\n        destination_vserver: ansible_dest\n        identity_preserve: true\n        hostname: \"{{ destination_cluster_hostname }}\"\n        username: \"{{ destination_cluster_username }}\"\n        password: \"{{ destination_cluster_password }}\"\n\n    # existing snapmirror relation with status 'snapmirrored' will be initialized\n    - name: Inititalize ONTAP/ONTAP SnapMirror\n      na_ontap_snapmirror:\n        state: present\n        source_path: 'ansible:test'\n        destination_path: 'ansible:dest'\n        relationship_state: active\n        hostname: \"{{ destination_cluster_hostname }}\"\n        username: \"{{ destination_cluster_username }}\"\n        password: \"{{ destination_cluster_password }}\"\n\n    - name: Delete SnapMirror\n      na_ontap_snapmirror:\n        state: absent\n        destination_path: <path>\n        relationship_info_only: True\n        source_hostname: \"{{ source_hostname }}\"\n        hostname: \"{{ destination_cluster_hostname }}\"\n        username: \"{{ destination_cluster_username }}\"\n        password: \"{{ destination_cluster_password }}\"\n\n    - name: Break SnapMirror\n      na_ontap_snapmirror:\n        state: present\n        relationship_state: broken\n        destination_path: <path>\n        source_hostname: \"{{ source_hostname }}\"\n        hostname: \"{{ destination_cluster_hostname }}\"\n        username: \"{{ destination_cluster_username }}\"\n        password: \"{{ destination_cluster_password }}\"\n\n    - name: Restore SnapMirror volume using location (Idempotency)\n      na_ontap_snapmirror:\n        state: present\n        source_path: <path>\n        destination_path: <path>\n        relationship_type: restore\n        source_snapshot: \"{{ snapshot }}\"\n        hostname: \"{{ destination_cluster_hostname }}\"\n        username: \"{{ destination_cluster_username }}\"\n        password: \"{{ destination_cluster_password }}\"\n\n    - name: Set schedule to NULL\n      na_ontap_snapmirror:\n        state: present\n        destination_path: <path>\n        schedule: \"\"\n        hostname: \"{{ destination_cluster_hostname }}\"\n        username: \"{{ destination_cluster_username }}\"\n        password: \"{{ destination_cluster_password }}\"\n\n    - name: Create SnapMirror from ElementSW to ONTAP\n      na_ontap_snapmirror:\n        state: present\n        connection_type: elementsw_ontap\n        source_path: '10.10.10.10:/lun/300'\n        destination_path: 'ansible_test:ansible_dest_vol'\n        schedule: hourly\n        policy: MirrorLatest\n        hostname: \"{{ netapp_hostname }}\"\n        username: \"{{ netapp_username }}\"\n        password: \"{{ netapp_password }}\"\n        source_hostname: \" {{ Element_cluster_mvip }}\"\n        source_username: \"{{ Element_cluster_username }}\"\n        source_password: \"{{ Element_cluster_password }}\"\n\n    - name: Create SnapMirror from ONTAP to ElementSW\n      na_ontap_snapmirror:\n        state: present\n        connection_type: ontap_elementsw\n        destination_path: '10.10.10.10:/lun/300'\n        source_path: 'ansible_test:ansible_dest_vol'\n        policy: MirrorLatest\n        hostname: \"{{ Element_cluster_mvip }}\"\n        username: \"{{ Element_cluster_username }}\"\n        password: \"{{ Element_cluster_password }}\"\n        source_hostname: \" {{ netapp_hostname }}\"\n        source_username: \"{{ netapp_username }}\"\n        source_password: \"{{ netapp_password }}\"\n\n    - name: Create Snapmirror relationship (create destination volume)\n      tags: create\n      na_ontap_snapmirror:\n        state: present\n        source_endpoint:\n          cluster: \"{{ _source_cluster }}\"\n          path: \"{{ source_vserver + ':' + source_volume }}\"\n        destination_endpoint:\n          cluster: \"{{ _destination_cluster }}\"\n          path: \"{{ destination_vserver_VOLDP + ':' + destination_volume }}\"\n        create_destination:\n          enabled: true\n        hostname: \"{{ destination_hostname }}\"\n        username: \"{{ username }}\"\n        password: \"{{ password }}\"\n        https: true\n        validate_certs: false\n\n    - name: Create SnapMirror relationship - SVM DR (creating and peering destination svm)\n      tags: create_svmdr\n      na_ontap_snapmirror:\n        state: present\n        source_endpoint:\n          cluster: \"{{ _source_cluster }}\"\n          path: \"{{ source_vserver + ':' }}\"\n        destination_endpoint:\n          cluster: \"{{ _destination_cluster }}\"\n          path: \"{{ destination_vserver_SVMDR + ':' }}\"\n        create_destination:\n          enabled: true\n        hostname: \"{{ destination_hostname }}\"\n        username: \"{{ username }}\"\n        password: \"{{ password }}\"\n        https: true\n        validate_certs: false\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "certified"
        },
        "return": null
    }
}
