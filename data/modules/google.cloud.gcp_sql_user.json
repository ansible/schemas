{
    "google.cloud.gcp_sql_user": {
        "doc": {
            "author": "Google Inc. (@googlecloudplatform)",
            "collection": "google.cloud",
            "description": [
                "The Users resource represents a database user in a Cloud SQL instance."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/google/cloud/plugins/modules/gcp_sql_user.py",
            "has_action": false,
            "module": "gcp_sql_user",
            "options": {
                "auth_kind": {
                    "choices": [
                        "application",
                        "machineaccount",
                        "serviceaccount"
                    ],
                    "description": [
                        "The type of credential used."
                    ],
                    "required": true,
                    "type": "str"
                },
                "env_type": {
                    "description": [
                        "Specifies which Ansible environment you're running this module within.",
                        "This should not be set unless you know what you're doing.",
                        "This only alters the User Agent string for any API requests."
                    ],
                    "type": "str"
                },
                "host": {
                    "description": [
                        "The host name from which the user can connect. For insert operations, host defaults to an empty string. For update operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
                    ],
                    "required": true,
                    "type": "str"
                },
                "instance": {
                    "description": [
                        "The name of the Cloud SQL instance. This does not include the project ID.",
                        "This field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_sql_instance task and then set this instance field to \"{{ name-of-resource }}\""
                    ],
                    "required": true,
                    "type": "dict"
                },
                "name": {
                    "description": [
                        "The name of the user in the Cloud SQL instance."
                    ],
                    "required": true,
                    "type": "str"
                },
                "password": {
                    "description": [
                        "The password for the user."
                    ],
                    "required": false,
                    "type": "str"
                },
                "project": {
                    "description": [
                        "The Google Cloud Platform project to use."
                    ],
                    "type": "str"
                },
                "scopes": {
                    "description": [
                        "Array of scopes to be used"
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "service_account_contents": {
                    "description": [
                        "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it."
                    ],
                    "type": "jsonarg"
                },
                "service_account_email": {
                    "description": [
                        "An optional service account email address if machineaccount is selected and the user does not wish to use the default email."
                    ],
                    "type": "str"
                },
                "service_account_file": {
                    "description": [
                        "The path of a Service Account JSON file if serviceaccount is selected as type."
                    ],
                    "type": "path"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Whether the given object should exist in GCP"
                    ],
                    "type": "str"
                }
            },
            "requirements": [
                "python >= 2.6",
                "requests >= 2.18.4",
                "google-auth >= 1.3.0"
            ],
            "short_description": "Creates a GCP User"
        },
        "examples": "\n- name: create a instance\n  google.cloud.gcp_sql_instance:\n    name: \"{{resource_name}}-1\"\n    settings:\n      ip_configuration:\n        authorized_networks:\n        - name: google dns server\n          value: 8.8.8.8/32\n      tier: db-n1-standard-1\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instance\n\n- name: create a user\n  google.cloud.gcp_sql_user:\n    name: test-user\n    host: 10.1.2.3\n    password: secret-password\n    instance: \"{{ instance }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n",
        "metadata": {
            "metadata_version": "1.1",
            "status": [
                "preview"
            ],
            "supported_by": "community"
        },
        "return": {
            "host": {
                "description": [
                    "The host name from which the user can connect. For insert operations, host defaults to an empty string. For update operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
                ],
                "returned": "success",
                "type": "str"
            },
            "instance": {
                "description": [
                    "The name of the Cloud SQL instance. This does not include the project ID."
                ],
                "returned": "success",
                "type": "dict"
            },
            "name": {
                "description": [
                    "The name of the user in the Cloud SQL instance."
                ],
                "returned": "success",
                "type": "str"
            },
            "password": {
                "description": [
                    "The password for the user."
                ],
                "returned": "success",
                "type": "str"
            }
        }
    }
}
