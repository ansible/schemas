{
    "community.grafana.grafana_notification_channel": {
        "doc": {
            "author": [
                "Aliaksandr Mianzhynski (@amenzhinsky)"
            ],
            "collection": "community.grafana",
            "description": [
                "Create/Update/Delete Grafana Notification Channels via API."
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/community/grafana/plugins/modules/grafana_notification_channel.py",
            "has_action": false,
            "module": "grafana_notification_channel",
            "options": {
                "client_cert": {
                    "description": [
                        "PEM formatted certificate chain file to be used for SSL client authentication.",
                        "This file can also include the key as well, and if the key is included, I(client_key) is not required"
                    ],
                    "type": "path"
                },
                "client_key": {
                    "description": [
                        "PEM formatted file that contains your private key to be used for SSL client authentication.",
                        "If I(client_cert) contains both the certificate and key, this option is not required."
                    ],
                    "type": "path"
                },
                "dingding_message_type": {
                    "choices": [
                        "link",
                        "action_card"
                    ],
                    "description": [
                        "DingDing message type."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "dingding_url": {
                    "description": [
                        "DingDing webhook URL."
                    ],
                    "type": "str"
                },
                "disable_resolve_message": {
                    "default": "no",
                    "description": [
                        "Disable the resolve message."
                    ],
                    "type": "bool"
                },
                "discord_message_content": {
                    "description": [
                        "Overrides message content."
                    ],
                    "type": "str"
                },
                "discord_url": {
                    "description": [
                        "Discord webhook URL."
                    ],
                    "type": "str"
                },
                "email_addresses": {
                    "description": [
                        "List of recipients."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "email_single": {
                    "description": [
                        "Send single email to all recipients."
                    ],
                    "type": "bool"
                },
                "googlechat_url": {
                    "description": [
                        "Google Hangouts webhook URL."
                    ],
                    "type": "str"
                },
                "grafana_api_key": {
                    "description": [
                        "The Grafana API key.",
                        "If set, C(url_username) and C(url_password) will be ignored."
                    ],
                    "type": "str"
                },
                "hipchat_api_key": {
                    "description": [
                        "HipChat API key."
                    ],
                    "type": "str"
                },
                "hipchat_room_id": {
                    "description": [
                        "HipChat room ID."
                    ],
                    "type": "str"
                },
                "hipchat_url": {
                    "description": [
                        "HipChat webhook URL."
                    ],
                    "type": "str"
                },
                "include_image": {
                    "default": "no",
                    "description": [
                        "Capture a visualization image and attach it to notifications."
                    ],
                    "type": "bool"
                },
                "is_default": {
                    "default": "no",
                    "description": [
                        "Use this channel for all alerts."
                    ],
                    "type": "bool"
                },
                "kafka_topic": {
                    "description": [
                        "Kafka topic name."
                    ],
                    "type": "str"
                },
                "kafka_url": {
                    "description": [
                        "Kafka REST proxy URL."
                    ],
                    "type": "str"
                },
                "line_token": {
                    "description": [
                        "LINE token."
                    ],
                    "type": "str"
                },
                "name": {
                    "description": [
                        "The name of the notification channel.",
                        "Required when I(state) is C(present)."
                    ],
                    "type": "str"
                },
                "opsgenie_api_key": {
                    "description": [
                        "OpsGenie API key."
                    ],
                    "type": "str"
                },
                "opsgenie_auto_close": {
                    "description": [
                        "Automatically close alerts in OpsGenie once the alert goes back to ok."
                    ],
                    "type": "bool"
                },
                "opsgenie_override_priority": {
                    "description": [
                        "Allow the alert priority to be set using the og_priority tag."
                    ],
                    "type": "bool"
                },
                "opsgenie_url": {
                    "description": [
                        "OpsGenie webhook URL."
                    ],
                    "type": "str"
                },
                "org_id": {
                    "default": 1,
                    "description": [
                        "The Grafana Organisation ID where the dashboard will be imported / exported.",
                        "Not used when I(grafana_api_key) is set, because the grafana_api_key only belongs to one organisation.."
                    ],
                    "type": "int"
                },
                "pagerduty_auto_resolve": {
                    "description": [
                        "Resolve incidents in PagerDuty once the alert goes back to ok."
                    ],
                    "type": "bool"
                },
                "pagerduty_integration_key": {
                    "description": [
                        "PagerDuty integration key."
                    ],
                    "type": "str"
                },
                "pagerduty_message_in_details": {
                    "description": [
                        "Move the alert message from the PD summary into the custom details.",
                        "This changes the custom details object and may break event rules you have configured."
                    ],
                    "type": "bool"
                },
                "pagerduty_severity": {
                    "choices": [
                        "critical",
                        "error",
                        "warning",
                        "info"
                    ],
                    "description": [
                        "Alert severity in PagerDuty."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "prometheus_password": {
                    "description": [
                        "Prometheus password."
                    ],
                    "type": "str"
                },
                "prometheus_url": {
                    "description": [
                        "Prometheus API URL."
                    ],
                    "type": "str"
                },
                "prometheus_username": {
                    "description": [
                        "Prometheus username."
                    ],
                    "type": "str"
                },
                "pushover_alert_sound": {
                    "description": [
                        "Alert sound in Pushover.",
                        "L(https://pushover.net/api#sounds)"
                    ],
                    "type": "str"
                },
                "pushover_api_token": {
                    "description": [
                        "Pushover API token."
                    ],
                    "type": "str"
                },
                "pushover_devices": {
                    "description": [
                        "Devices list in Pushover."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "pushover_expire": {
                    "description": [
                        "Expire alert in C(n) minutes.",
                        "Only when priority is C(emergency)."
                    ],
                    "type": "int"
                },
                "pushover_ok_sound": {
                    "description": [
                        "OK sound in Pushover.",
                        "L(https://pushover.net/api#sounds)"
                    ],
                    "type": "str"
                },
                "pushover_priority": {
                    "choices": [
                        "emergency",
                        "high",
                        "normal",
                        "low",
                        "lowest"
                    ],
                    "description": [
                        "Alert priority in Pushover."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "pushover_retry": {
                    "description": [
                        "Retry in C(n) minutes.",
                        "Only when priority is C(emergency)."
                    ],
                    "type": "int"
                },
                "pushover_user_key": {
                    "description": [
                        "Pushover user key."
                    ],
                    "type": "str"
                },
                "reminder_frequency": {
                    "description": [
                        "Additional notifications interval for triggered alerts.",
                        "For example C(15m)."
                    ],
                    "type": "str"
                },
                "sensu_handler": {
                    "description": [
                        "Sensu handler name."
                    ],
                    "type": "str"
                },
                "sensu_password": {
                    "description": [
                        "Sensu password."
                    ],
                    "type": "str"
                },
                "sensu_source": {
                    "description": [
                        "Source in Sensu."
                    ],
                    "type": "str"
                },
                "sensu_url": {
                    "description": [
                        "Sensu webhook URL."
                    ],
                    "type": "str"
                },
                "sensu_username": {
                    "description": [
                        "Sensu user."
                    ],
                    "type": "str"
                },
                "slack_icon_emoji": {
                    "description": [
                        "An emoji to use for the bot's message."
                    ],
                    "type": "str"
                },
                "slack_icon_url": {
                    "description": [
                        "URL to an image to use as the icon for the bot's message"
                    ],
                    "type": "str"
                },
                "slack_mention_channel": {
                    "choices": [
                        "here",
                        "channel"
                    ],
                    "description": [
                        "Mention whole channel or just active members."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "slack_mention_groups": {
                    "description": [
                        "Mention groups list."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "slack_mention_users": {
                    "description": [
                        "Mention users list."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "slack_recipient": {
                    "description": [
                        "Override default Slack channel or user."
                    ],
                    "type": "str"
                },
                "slack_token": {
                    "description": [
                        "Slack token."
                    ],
                    "type": "str"
                },
                "slack_url": {
                    "description": [
                        "Slack webhook URL."
                    ],
                    "type": "str"
                },
                "slack_username": {
                    "description": [
                        "Set the username for the bot's message."
                    ],
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "Status of the notification channel."
                    ],
                    "type": "str"
                },
                "teams_url": {
                    "description": [
                        "Microsoft Teams webhook URL."
                    ],
                    "type": "str"
                },
                "telegram_bot_token": {
                    "description": [
                        "Telegram bot token;"
                    ],
                    "type": "str"
                },
                "telegram_chat_id": {
                    "description": [
                        "Telegram chat id."
                    ],
                    "type": "str"
                },
                "threema_api_secret": {
                    "description": [
                        "Threema Gateway API secret."
                    ],
                    "type": "str"
                },
                "threema_gateway_id": {
                    "description": [
                        "8 character Threema Gateway ID (starting with a *)."
                    ],
                    "type": "str"
                },
                "threema_recepient_id": {
                    "description": [
                        "8 character Threema ID that should receive the alerts."
                    ],
                    "type": "str"
                },
                "type": {
                    "choices": [
                        "dingding",
                        "discord",
                        "email",
                        "googlechat",
                        "hipchat",
                        "kafka",
                        "line",
                        "teams",
                        "opsgenie",
                        "pagerduty",
                        "prometheus",
                        "pushover",
                        "sensu",
                        "slack",
                        "telegram",
                        "threema",
                        "victorops",
                        "webhook"
                    ],
                    "description": [
                        "The channel notification type.",
                        "Required when I(state) is C(present)."
                    ],
                    "type": "str"
                },
                "uid": {
                    "description": [
                        "The channel unique identifier."
                    ],
                    "type": "str"
                },
                "url": {
                    "aliases": [
                        "grafana_url"
                    ],
                    "description": [
                        "The Grafana URL."
                    ],
                    "required": true,
                    "type": "str"
                },
                "url_password": {
                    "aliases": [
                        "grafana_password"
                    ],
                    "default": "admin",
                    "description": [
                        "The Grafana password for API authentication."
                    ],
                    "type": "str"
                },
                "url_username": {
                    "aliases": [
                        "grafana_user"
                    ],
                    "default": "admin",
                    "description": [
                        "The Grafana user for API authentication."
                    ],
                    "type": "str"
                },
                "use_proxy": {
                    "default": true,
                    "description": [
                        "If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "type": "bool"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "If C(no), SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates."
                    ],
                    "type": "bool"
                },
                "victorops_auto_resolve": {
                    "description": [
                        "Resolve incidents in VictorOps once the alert goes back to ok."
                    ],
                    "type": "bool"
                },
                "victorops_url": {
                    "description": [
                        "VictorOps webhook URL."
                    ],
                    "type": "str"
                },
                "webhook_http_method": {
                    "choices": [
                        "POST",
                        "PUT"
                    ],
                    "description": [
                        "Webhook HTTP verb to use."
                    ],
                    "elements": "str",
                    "type": "list"
                },
                "webhook_password": {
                    "description": [
                        "Webhook password."
                    ],
                    "type": "str"
                },
                "webhook_url": {
                    "description": [
                        "Webhook URL"
                    ],
                    "type": "str"
                },
                "webhook_username": {
                    "description": [
                        "Webhook username."
                    ],
                    "type": "str"
                }
            },
            "short_description": "Manage Grafana Notification Channels",
            "version_added": "1.1.0",
            "version_added_collection": "community.grafana"
        },
        "examples": "\n- name: Create slack notification channel\n  register: result\n  grafana_notification_channel:\n    uid: slack\n    name: slack\n    type: slack\n    slack_url: https://hooks.slack.com/services/xxx/yyy/zzz\n    grafana_url: \"{{ grafana_url }}\"\n    grafana_user: \"{{ grafana_username }}\"\n    grafana_password: \"{{ grafana_password}}\"\n\n- name: Delete slack notification channel\n  register: result\n  grafana_notification_channel:\n    state: absent\n    uid: slack\n    grafana_url: \"{{ grafana_url }}\"\n    grafana_user: \"{{ grafana_username }}\"\n    grafana_password: \"{{ grafana_password}}\"\n",
        "metadata": null,
        "return": {
            "notification_channel": {
                "description": "Notification channel created or updated by the module.",
                "returned": "changed",
                "sample": "{\n  \"created\": \"2020-11-10T21:10:19.675308051+03:00\",\n  \"disableResolveMessage\": false,\n  \"frequency\": \"\",\n  \"id\": 37,\n  \"isDefault\": false,\n  \"name\": \"Oops\",\n  \"secureFields\": {},\n  \"sendReminder\": false,\n  \"settings\": {\n      \"uploadImage\": false,\n      \"url\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\"\n  },\n  \"type\": \"slack\",\n  \"uid\": \"slack-oops\",\n  \"updated\": \"2020-11-10T21:10:19.675308112+03:00\"\n}\n",
                "type": "dict"
            }
        }
    }
}
