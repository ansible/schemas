{
    "theforeman.foreman.operatingsystem": {
        "doc": {
            "author": [
                "Matthias M Dellweg (@mdellweg) ATIX AG",
                "Bernhard Hopfenm\u00fcller (@Fobhep) ATIX AG"
            ],
            "collection": "theforeman.foreman",
            "description": [
                "Manage Operating Systems"
            ],
            "filename": "/Users/ssbarnea/.pyenv/versions/3.9.2/lib/python3.9/site-packages/ansible_collections/theforeman/foreman/plugins/modules/operatingsystem.py",
            "has_action": false,
            "module": "operatingsystem",
            "options": {
                "architectures": {
                    "description": [
                        "architectures, the operating system can be installed on"
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "description": {
                    "description": [
                        "Description of the Operating System"
                    ],
                    "required": false,
                    "type": "str"
                },
                "major": {
                    "description": [
                        "major version of the Operating System"
                    ],
                    "required": false,
                    "type": "str"
                },
                "media": {
                    "description": [
                        "list of installation media"
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "minor": {
                    "description": [
                        "minor version of the Operating System"
                    ],
                    "required": false,
                    "type": "str"
                },
                "name": {
                    "description": [
                        "Name of the Operating System"
                    ],
                    "required": true,
                    "type": "str"
                },
                "os_family": {
                    "aliases": [
                        "family"
                    ],
                    "choices": [
                        "AIX",
                        "Altlinux",
                        "Archlinux",
                        "Coreos",
                        "Debian",
                        "Freebsd",
                        "Gentoo",
                        "Junos",
                        "NXOS",
                        "Rancheros",
                        "Redhat",
                        "Solaris",
                        "Suse",
                        "Windows",
                        "Xenserver"
                    ],
                    "description": [
                        "Distribution family of the Operating System"
                    ],
                    "required": false,
                    "type": "str"
                },
                "parameters": {
                    "description": [
                        "Operating System specific host parameters"
                    ],
                    "elements": "dict",
                    "required": false,
                    "suboptions": {
                        "name": {
                            "description": [
                                "Name of the parameter"
                            ],
                            "required": true,
                            "type": "str"
                        },
                        "parameter_type": {
                            "choices": [
                                "string",
                                "boolean",
                                "integer",
                                "real",
                                "array",
                                "hash",
                                "yaml",
                                "json"
                            ],
                            "default": "string",
                            "description": [
                                "Type of the parameter"
                            ],
                            "type": "str"
                        },
                        "value": {
                            "description": [
                                "Value of the parameter"
                            ],
                            "required": true,
                            "type": "raw"
                        }
                    },
                    "type": "list"
                },
                "password": {
                    "description": [
                        "Password of the user accessing the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "password_hash": {
                    "choices": [
                        "MD5",
                        "SHA256",
                        "SHA512",
                        "Base64",
                        "Base64-Windows"
                    ],
                    "description": [
                        "hashing algorithm for passwd"
                    ],
                    "required": false,
                    "type": "str"
                },
                "provisioning_templates": {
                    "description": [
                        "List of provisioning templates that are associated with the operating system.",
                        "Specify the full list of template names you want to associate with your OS.",
                        "For example [\"Kickstart default\", \"Kickstart default finish\", \"Kickstart default iPXE\", \"custom\"].",
                        "After specifying the template associations, you can set the default association in",
                        "the M(theforeman.foreman.os_default_template) module."
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "ptables": {
                    "description": [
                        "list of partitioning tables"
                    ],
                    "elements": "str",
                    "required": false,
                    "type": "list"
                },
                "release_name": {
                    "description": [
                        "Release name of the operating system (recommended for debian)"
                    ],
                    "type": "str"
                },
                "server_url": {
                    "description": [
                        "URL of the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "state": {
                    "choices": [
                        "present",
                        "present_with_defaults",
                        "absent"
                    ],
                    "default": "present",
                    "description": [
                        "State of the entity",
                        "C(present_with_defaults) will ensure the entity exists, but won't update existing ones"
                    ],
                    "type": "str"
                },
                "updated_name": {
                    "description": "New operating system name. When this parameter is set, the module will not be idempotent.",
                    "type": "str"
                },
                "username": {
                    "description": [
                        "Username accessing the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead."
                    ],
                    "required": true,
                    "type": "str"
                },
                "validate_certs": {
                    "default": true,
                    "description": [
                        "Whether or not to verify the TLS certificates of the Foreman server.",
                        "If the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead."
                    ],
                    "type": "bool"
                }
            },
            "requirements": [
                "requests"
            ],
            "short_description": "Manage Operating Systems",
            "version_added": "1.0.0",
            "version_added_collection": "theforeman.foreman"
        },
        "examples": "\n- name: \"Create an Operating System\"\n  theforeman.foreman.operatingsystem:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: Debian\n    release_name: stretch\n    family: Debian\n    major: 9\n    parameters:\n      - name: additional-packages\n        value: python vim\n    state: present\n\n- name: \"Ensure existence of an Operating System (provide default values)\"\n  theforeman.foreman.operatingsystem:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: Centos\n    family: Redhat\n    major: 7\n    password_hash: SHA256\n    state: present_with_defaults\n\n- name: \"Delete an Operating System\"\n  theforeman.foreman.operatingsystem:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: Debian\n    family: Debian\n    major: 9\n    state: absent\n",
        "metadata": null,
        "return": {
            "entity": {
                "contains": {
                    "operatinsystems": {
                        "description": "List of operatinsystems.",
                        "elements": "dict",
                        "type": "list"
                    }
                },
                "description": "Final state of the affected entities grouped by their type.",
                "returned": "success",
                "type": "dict"
            }
        }
    }
}
